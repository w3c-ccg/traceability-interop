{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cea849a5-0f82-4894-8a1f-4f4b677d29fd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "29b2b5f3-2392-40f8-ad2a-635fb8ffd6df",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b161053d-619f-4a28-b835-c16461c9a97b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f63ae0b2-cbc2-4bb0-9a31-297b62cbe25c"
                }
              }
            ]
          },
          {
            "id": "ac937721-5077-4a0c-9751-3ae1f5dfbe53",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7b44ba85-ce50-4880-b02c-379ddcdc31b1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c31a2b7c-a10a-41b6-b8f4-6f2547b3970e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "09a248ed-f789-49bb-b491-07827e4ab579",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "27492fc6-e535-4b90-908b-2962afe1eab2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75675900-8aa8-4365-b44e-1779e36cdeb1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dab669e8-5be5-4d5f-a97a-44998e9d771a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4f2c5ca-2ac1-4123-95f0-a1456b7f950e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "275094cf-04a2-4291-a0ea-8362598b9ea4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a970501-f937-4a52-9f7d-b5375421c11a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0bc8d2a-9311-4f4e-8752-f228d58cf59e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56661b0d-b08e-48ac-a6d6-d5026fae0352"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da686e55-dba4-4d0e-8ef6-7daf94db2215",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ce0d7ba4-34b6-4705-8b98-6d184fb4d77b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9620384f-cbab-4bbd-a0ad-52105e3917c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e537a17b-7229-441d-b3cc-ca0813012775"
            }
          }
        ]
      },
      {
        "id": "d57eb46f-b7b4-4953-b3a6-323248dd11e8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "adfb535e-1180-4ff8-8c63-4ff041f476cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa4a429b-ed5c-4ef8-a712-e0dfa42ee86b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1377c90b-58cd-4899-85e0-32aeabfbc1f8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac927682-4bee-4b80-94c4-bbe687e4dc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "122aedcd-a182-41d5-ab3f-5eb007cccbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5516c66-209f-4811-85f4-d55b954f8738",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bd4865-f50d-4a01-8693-fc6106a7dd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd1d2a0a-a9ff-4ebc-839f-cbf63b5e6204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e544c9b-cc7c-4c28-9b34-1f3a90e0c9bb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f5dd9f-7926-4b9b-8eb5-24105dfb0c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2a7e005-9598-41e4-a635-907731ade3fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a8f3421-3c48-4a40-b30d-675f34013ef3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8f351cd-5ab6-44bd-bf6a-7bf248edecaf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e81561-4269-4d9e-b763-c23f6f57f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a4cf082-f8d0-429c-8951-7dc432c3f43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91467c49-0065-4a7c-a717-a83cdee58ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3623776c-ef57-4792-a0df-5299499fee02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45de7105-d2f6-4c82-b8d4-5547908f2180",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e77ce72d-b102-4c64-a610-af121c96e1f5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f2f7ebf-47f9-45e2-a130-bbf385f89615",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0c0af944-2773-4181-aafe-86ef414549e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d84b736-d4fe-495a-858e-6c5645c5db55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "22125949-0706-412a-9cce-3602ef90bb86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d89d5c7-2137-4d79-8d2a-435a9bf2c602",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "415cff3c-4cb9-40a5-bfdd-c7bfe0327cfd"
            }
          }
        ]
      },
      {
        "id": "5b6cddb5-679d-4e49-9285-d80e59ce9cf8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1b911c9c-dc9d-4ce9-9611-8200f11d7eb4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fff3073-2b44-4876-9ce8-6d1cd7b3b66f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e6258e32-b775-43fb-a539-94ddb4cad0fa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74654646-f2c1-4ded-ba8f-14937422df79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c027376-7fe4-4b61-8ce3-35c790fb9c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48416316-3b5c-4d31-bd42-056df1271d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c392767f-888f-416b-9158-8fafd7d00f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43a820d-51d6-4d71-9191-0ff4b3a63cec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92507dfe-e2fb-4b0b-bbbe-8c142c7bff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaabaa4-84eb-4458-8230-1997134cdb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8339df0-42dd-452a-9375-d3f6c0e170e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34ec4228-dafc-4ad7-a7e1-d0c0396a291b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68840098-f39e-43fa-9116-559b06307e7b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353d5288-f959-4f9c-b8f4-34729e4f1e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d199d6-21a2-4591-bbba-eaba1cf9a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f928e2-d4a9-4e5c-987c-6c0208c14272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8564dc47-1fca-4c53-af72-4abeb835b9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a297f1a-c9ac-41ea-85f7-276037b82510",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c077eaa-7adb-487c-8a89-dcf3d5768aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6efc7b2-de04-4159-9fb4-90e013605940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dbaf82-42ba-426f-905e-1e217e99916a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f24f475-83be-4edf-a673-c0e58b803234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b769b798-9163-4bad-95b8-5493d33a0444",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b825ba-4fb8-480a-93aa-b081bd6234bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c9b16e-63df-447b-98af-6ace08f723ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64ab19a-5833-4595-a7af-90c076394b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "655a7201-0bfc-474b-8374-d6972f31f79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab8ff29-9a09-42e9-a069-702c55e66a67",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d96cb05-c8b6-4401-b968-5531f2c6e8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8efc69f4-d713-449a-8c40-e7eb66650f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19271bb-5690-4f84-95fe-3c102fc40feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "340b6e2f-1812-4653-a4a1-0a4185a1619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83980093-d850-4f7d-a2c1-a867b123a113",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb113668-eae8-4b75-a0d9-4db2a5960e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff04c828-e914-40a9-bb71-9fefa15bdde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c566ee90-d1bc-4c2f-ac50-ef7f808f24b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7ab6f53-d435-4c19-8c71-7f8e1ab68449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d48e6f-002e-45a9-8198-4bc51f309d2a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb2d1e4-e8a4-470a-996c-ccb582239678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6f422e-5828-456c-8b30-6084ef1f8c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d155921-3dac-45ff-b37d-70440afdae8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35cb308c-a43a-4c8f-8065-6a27a27ce00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d928c28-156f-4b8a-b714-9ce9972d06ad",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac59328e-b549-477e-aed5-39240ce6626e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795046a3-20e2-4921-a2b3-0612020cc593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d56ff97-188d-4cf2-b531-e7cbfc1a5253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d7ab165-9bb4-4d6f-bd32-7969a55f7d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479e9f38-f8d5-4744-849e-6c539d94aeb8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7546fedd-9a44-4ccd-9bc5-17c583b30aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dc59f88-6cf0-4671-868f-a7248940f884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58925aba-beba-4082-bf7e-1d87525787f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "055a2126-dc99-4e44-a29f-93bd0874c1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3980277d-d4b3-4564-8169-9f91e127e44a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3cec96-a2ba-4336-be8d-508999615c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39184c7a-b6ed-4f56-952f-4c09205cf946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9a21ba-1886-4294-bb3c-f9dac50a6442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71bd50f7-ad33-4b51-9d86-340c4cef7951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575d7308-fe99-4fe0-a6db-916ba0e48f92",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210a57df-c885-4071-9d16-6ac5b46576ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70ae5fb-0d58-46ce-b203-c28661af9b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db937a6-4252-4d18-98c7-0126fcdeaa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd308495-1348-4c22-9952-47e478b3986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9777318-0648-43df-ba92-519720d3aafb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f895dc1-a5b8-4d84-a6c5-7a2832879058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d1cb37-9a4f-4100-8146-c7881f4b7604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c53d63-6408-48ef-a698-a7cf809d07fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e107ad2e-59e6-4470-9609-e07bb548fbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf05a8ad-bb9b-40a3-9afd-33b2eac31cfb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74f9c9-1924-41ce-8fba-bca58913a110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ee152b-fcf0-4921-80e4-f597df5ca1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e96dfd-a6ff-4b4f-aa81-bde941b08155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06b05783-1cb6-4672-af29-d365d4bfe4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d9d368-5edd-4f69-b35c-6056f81d30d1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a1bc67-4220-49c6-a796-dae52a5d915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a73f508-1fd4-48d9-adbf-1ded561b57ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dca1425-e7a1-48b6-9cbc-c3682d7521cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aa9d6da-7ea3-427b-b67e-09e9ff463491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1c74c0-4d39-4ca8-b3ac-e5caf199d05c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69963eac-a06c-49d7-9adf-9b432aa455b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adb2a64-778c-4442-be6d-964207fdc780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094a04ec-c818-48d0-9486-82f0b1f56ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "408f1dee-f2c8-4f42-a0c7-d91e903e0c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b7c019-c3ff-4ebe-ad40-440febcd1393",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c65013-a1b2-424d-bcb6-2ad7e20d32f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b668d97-f4cc-487c-b509-7b5326b9684b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4992027-3e42-47b2-8afd-88ccf00a4145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4461a9f-3b5a-43a1-8872-1aacba88df54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf53988-cf30-4f40-bb8f-7af79b0de6d0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6499249-1fe4-43bd-95d5-9b32103cbe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da149cc-746f-4939-ae25-4fe7e70507db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67600137-ddea-4f3c-8eea-9257b11ba48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "971cb04f-f91b-47f3-aa40-0bfe9b0db7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3019ec42-06af-4836-9bfe-9f43faa28222",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ca7dfe-5cc3-44d8-99dd-7215b3a8ad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249a6099-6268-4085-87e4-bb8d43917f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3516db6b-ade6-4107-b3e0-3ed2537c23ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac7db47-c4bb-4aa2-9bfa-97fe076fc87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfdb72b-ff70-4a93-9691-abf8ef9d9947",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2d7ba3-8864-4874-af2c-f199223f3479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14cc7b5-6deb-410b-8a22-6e2643beebe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4692395e-929b-4992-93ea-e810056d0c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "064065f9-6463-4cff-8ee5-66ff2a2c9f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd40369-a6e6-4245-88ce-1da91ec7c20d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0abe8f9-8566-4f3d-961f-39c58a5eeff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f3db47-b8bb-4d2b-9edd-0eddb55ccb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dc66ca-a5fb-45c9-8c21-f73b31f8e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e28f01ff-d1d1-4a3f-bbfb-e188197265e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79f6443-729d-466c-a99e-dc2aecd26dbf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6c844b-7c50-416c-9bc7-5cd5fd0fb8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70341954-045a-40c7-914c-ec6e02951b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c031ff-602b-4bd2-b63e-647d08428e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36d18bf0-3d7e-46b9-b333-708a8e5f1514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22585da0-d953-4387-94cf-63bd9c3af242",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ec3cc8-3604-49a0-98e5-e8189588c0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3368c84-91d2-412b-b64c-829bd08cb3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67be105c-e0c6-4c68-8f65-4530b375ea89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e200a5f-f1c1-4eab-8b03-668ba7468663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93989a7-d831-4164-aede-5ac704c7d743",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b1c936-b01c-4596-8720-d9c404f914ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3c9cbf-c68e-468e-a58d-b33984872675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3c942c-5b16-4fdf-8a7b-cd02150c0619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecb2f32-ebe2-4923-8a80-dbf9c58fd4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf43ca-193b-4636-a531-54c00bebbb3d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4dc254c-4678-4ef8-8adf-c59a70975309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c88e53e-6ab9-4289-85f2-1965d34d96b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb7342e-4c42-4c82-adce-d401f1820ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c718d3fa-d348-4c0b-b4be-d361112e0a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bbbf5c-ae52-48ff-a79d-418ef17541a1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cc5feb-10eb-48cb-943c-c233ab2c374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2258e7ed-be06-4079-8a48-f6785b3bad0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad410c4-1d52-498d-8f26-2df0838c1cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd379a15-ad07-4043-be78-27668de28896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6efdd7d-0d05-4d32-9868-76cbd24c78fe",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb73af9-b43d-4525-bcea-dbe837f01036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ad2a49-edfe-4490-beed-5c962c829682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f726736e-0b38-4996-8f96-4b236a602e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fde64dc-b61a-4845-9c17-cc79c7b3a114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f8787d-1b43-4491-bc21-32fc5f5979e8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc286d9-af90-450e-9432-e3b4e540068f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a76f01e-fb7e-4419-866c-ae402faa8c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60b59f-42c2-4db9-a29d-6d8dcd861f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4667e63-3ffd-468a-aa07-def232590aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487ac36f-d66f-4b8c-a062-fea35bb88554",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffe06e6-db71-47d0-9d05-484fba203601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e04d57-8298-44bf-974c-765aac48c7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915848c2-c383-4f45-8231-2a5e137052fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f241475-220a-463e-b07e-6e0bcfeb1be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a9c69f-82e5-4cee-b3ea-b9f72de4afc8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d4b5ec-916c-4401-bf1e-a9ef224dc7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fe16a0-03e1-4f8e-9de1-2c8c43f5187e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bbb932-788b-42bf-8bb2-d8642b5484ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0af3bb1-2385-4cd4-aa75-3c36c6346089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a6a067-bb30-47e4-8d0c-104c786c4fb6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0990b1b3-4b1f-4c78-875d-22f1b53e66b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8030f352-e2bc-4fcc-9d8b-9b5ed8dc8f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e8ce3f-f449-47e7-875b-fbd651d9875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d050ee-966f-4fbc-b178-bc2581f03c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1155a4-8bf9-443a-8689-90323793f78c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f614c3-74f6-4f54-93fd-5c1ccf8e3121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d6eaa4-a794-40ef-a209-88fc408b4fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0a616f-fc36-402b-a8ee-b454dde9fb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8116caac-2e3a-43db-834c-351c58a174f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b6ce7e-294a-4a55-83a4-a3e5ddb03d41",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b241b089-e884-466c-afb5-f3a6607ee086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72078f08-d57f-4401-94c3-cdf1a1d786e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432d8085-9d2a-4577-afa6-056807d85b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae2cffb-27eb-4904-9b0d-17f0f6b7a0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b87437-1290-4efc-9463-f35637a7163f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37659113-f614-4429-a4b0-67d01fdc2056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415044c6-b3d4-4015-bd0c-05bd3108fa2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65347de-eccc-4c67-8caa-38f4d10b4cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83cc33fe-8dde-43c5-97ee-5b22bb2a8ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361a96d7-62fb-48de-af81-ceec77c1b25e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c00193-16bf-4bf5-a101-230609dc9431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd3b402-eb77-4803-b825-ff55e3752291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0c56bb-01be-4217-a4a7-b11698d6c315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4437f476-dbf1-4176-ace4-a707905f896a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b927d92-08e8-45e6-af76-4af784c5dd58",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57760613-240d-49ac-933e-78d9d7ca6e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcbd5356-acce-4ecd-8297-9499b5dd8758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5468483d-d99a-486d-aaba-3ebc9297136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83b5234f-4af6-49e3-9fe4-22628724be32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f203eb96-a921-4f4f-bf17-c42f5190681c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153d87bd-9ce9-40a4-86d2-689ce1e8c0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af497d12-6c97-4faa-9043-826bab845ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d180e166-be76-4c50-9bc5-be8291ab2ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85e83087-5865-4caa-b0cb-5edb340015df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1767da5c-c576-4c09-a6c8-0d2bda874900",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af08328-5ac5-4c7a-8544-f804a5f1f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9c09ba-e53f-491d-a3e2-e4a1f34cfc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d74a72-09d3-4f6b-a23f-2ef875dd7a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "61373f00-d232-4cb2-a2d1-c9c75e87a4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7532d3-9266-43fa-88ad-6523b056265b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758e107e-9858-4bde-9fc9-1ae6afe00c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4570a9-fb71-4155-8edf-618bd53136b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3a6c02-0230-42f8-8c86-490ae7a64dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4504bd86-010c-45fb-b37b-ba252368734d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67df9d47-478e-4eaf-b929-b56693067e75",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a809b-f153-46f7-8efc-39d4110f732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992bfa61-ce7e-4c47-9e6a-037936d8c835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d3d039-25e3-46aa-a4c2-816d3063638e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7e0288-1d01-4612-8a9a-992487aedbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936bc39f-d19b-4c6a-97c3-7b3d61807a45",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02781742-9f08-4d99-ac62-6390256d4b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3f4180-b4a8-480d-94b4-97983e418a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3b5acf-829b-4e07-945a-66d049c5de80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58324952-beaf-48c3-9fca-5c75b363c741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6af5545-1b02-419b-9396-13a44730db42",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9b9707-e153-4f2f-bca3-29b8fb3d5a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f551ad56-617e-4f7b-842e-77efdc98df69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50275b1-24d6-4d48-a360-88628ab3152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5621e7b3-41c6-42e8-83cc-46da65cd6714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b627eed-0d5e-44f4-9ff2-1bb461fa42d2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e4c3f8-59d7-495f-9ff5-5ccac2b3073b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1314048-0f09-4f4b-890b-7af3efcb1f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9222c131-8b72-4225-81ec-a8b405283d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2575a3-782d-448e-9b9d-f4d5350ac3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07c3ef7-5918-4515-8aad-5d17c4199e45",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b700ff-88e0-427c-a421-5bcbc41f9ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d23e4a3-fdee-43ae-bdfa-271560abda2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68edfdbb-bc61-4d6c-b70d-1d255c235609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a19063c8-7c0d-4280-acee-dd3325aa6980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c19fb17-f7de-40bd-b6e0-55152cfb5917",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908fb91d-eb29-48f6-8b5a-ee839a28f288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1dbed0b-54cb-4f6d-b46c-a4a7cdf1fdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e368e9-78cc-4212-862a-9c5596e8997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3000b0d0-42fa-4eea-9d1f-6e5a4f4d61e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaed61f-9bb7-4b4c-b922-af6f03d69030",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd78e217-7e03-4d44-b669-a2b7ebb11773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea0718b-cf7b-44ba-93df-861eb2c68952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea7b3ac-032b-4ed9-84ed-a1d9872f7622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70bfe959-085d-4917-8c0c-c77da5f20f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b8a18-16da-4e84-8a5c-28ef11e653e9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457dcbad-ee76-4f56-a080-da009e749c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5e5116-f9e9-41bc-a17a-0f83d90b7126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb0e75e-b0d2-4c95-819c-e27a3b50a606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddb2b0e-0295-4dce-92ec-98b96f0bc78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abca3f10-e85d-48d9-8bc7-896e7660c993",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cd261a-2814-4985-932f-18ec220ebe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df96cd5-3ecc-41d8-92af-c4fbab0883d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d9cb12-3006-4929-b9d8-459564c9772d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ff0b23-55fd-4f20-8944-2efac4ff2dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1498c182-fb7c-4b45-8836-bfe4a8ce0288",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0f7f9c-5d3e-4ec1-8455-f51249994ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33945b40-8b18-4668-b58b-7d635c9128d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877397fa-2909-4670-9545-4236407eda39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fc2817-f65f-4635-a03e-d078f513a2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724ddeea-0b68-40a4-a586-18b5606e5c63",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77942cf5-3fff-43f1-8fed-51971212819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aed576f-3a15-4109-87fc-effd30cd41e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a678099-2a14-457a-8b2b-c862eddccd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ec4661-0121-4459-8a27-8ca8524835df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2119f1de-5401-4182-ac26-22e0b7dddcb6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30c89c7-1b38-4ee9-923a-b5675702772d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497f6194-5534-491e-901d-a853ba21b1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1926ca88-f3fe-4759-bd6c-6857f7bdfacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cab54f7-075d-4b60-aa43-66bf9b7859e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69338681-5545-47c3-8702-a2e1d487cb63",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacad475-aeeb-4f17-9761-a399234211d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fceb091e-6445-4d83-b752-162612fbe463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb4fe14-a922-4599-9e28-ab87eede701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bd15df-8d16-499c-9fc5-c46727df90df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ab03c4-4c6e-45e8-96ff-190073e94115",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afd9282-6445-4cf3-8e7e-82faffdc857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7469a922-3166-424b-a8fc-cc0c81d577d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09153d56-28c4-490f-87fe-a331e99e9749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2a9963-e19c-4442-bb21-00c27e9122ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bf40dc-f38f-458d-bd51-4302b9d194ee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5677dbb-d267-492e-a174-1ebe945417b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14600e72-e26f-4544-8a09-fcf9d035fce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea10d01e-c558-4e70-a544-e3c11ca1fb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9a16e1-b085-4c1c-9e64-804aad53bea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122e74ee-7c23-44aa-99f9-f6fbfd03fea7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb4f05a-9c8f-43e2-ae3e-037f5fae56cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e6edbf-b429-4558-86da-f74d4bd6d720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6d81bc-b3d5-4ba0-be47-07f9a775dcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13785d6-de12-41f3-9c6a-223c02abab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cd8cd8-51b5-4b57-b178-3e66002addf5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf94355-1925-4aba-95de-86e021546f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9de5b6-e79a-423f-9e5d-c8f2de4a6480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dc2d34-2453-4acd-8fb4-3fe506ba6847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8b886c-5302-4fcd-a136-d99854eb3af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1ade69-272a-4eb0-a9d9-ecd9320d4dab",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a483786-93bc-43ce-973b-ae2443731d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d474314-15a2-497e-9ba4-5c29532bef92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a150f5-01f4-4d52-984f-73402116efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f61a09ff-0dd7-4cbd-9db1-c86cfa282770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728fac28-f7a2-46b0-9f91-99925e9594ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7a6dc5-1333-431b-b008-24035063bc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1faf40b-e375-4b10-9e05-4bd38339c4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7568d4aa-1277-436a-86af-3807316fdee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38e50021-39af-4704-8cdb-09098afa9137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bf8b59-54ac-48fe-a838-fe8f84ef6ff3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6003ecd5-55e6-4d69-b72c-10ecd06d8388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4943728-d569-4f30-9470-c4d0e8af38a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6eee3e7-33b1-4f12-9e2e-fc0a2428471b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0efd3fe0-d8be-4090-803b-57296583a12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18a86a0-9e91-4cc7-bc72-132741b21dcb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1993f9c-7b25-4a3c-99db-103ee6ee95d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4590f826-924c-4903-ba00-fc7cd92767a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a22be59-c10c-40ba-bec9-615aef6fb0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4230d921-dc50-4f11-b27f-b1ef49739f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8dad19-1a60-4b9f-b204-fabf4d4a696f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266d848a-e5ed-4a87-b12c-c423a0dc617a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3295e1a3-20e6-4cd8-9504-ea8aab42db3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f750e9-a28e-4f70-9d8e-7b49a2990659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf45c84d-bb53-4c57-89b2-97853e9dae09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66db445d-1c51-4e8f-a9b6-12f181761c82",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81818412-5b2f-4c4e-9184-79e3e63ea057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6984aa90-c2d0-4df8-a015-ae9b36bc9bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0487fa-ce9e-4d00-a93b-e723047318dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b43f083-5d45-42d3-9233-e29ce34e50b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e26ced-1ed1-435f-bea3-f682bb87bc59",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78dd031-8773-47fc-aa85-65b9f570d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e794e3f-874a-46b0-a14c-c0cbdd6ec711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abfe9be-ff05-4fdb-873a-29c34eacbc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "885c347c-8614-4920-96be-a8f8adefc6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55581ce-314e-4d22-a40d-f2804ab90f46",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b493e2-be1e-4ec6-86fb-e8579c4e1ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9fe1ec-2933-4c85-a15d-7958fba086fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41ead59-f339-402b-b8a7-a1f67713f891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c74395b2-dd98-45ab-9810-e1eb9b2a608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97941449-bef3-4912-9014-6ba6c1ae98e8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9677285a-ae03-4ffb-9c83-08f6ccc58f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab12577-0806-43c7-a64f-dfddd2c6c240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d6ad60-19da-4f1c-8c32-b4db98af0421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6a1d3e-4d12-4775-a9ca-2dbe702d9fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de5c7ea-6877-4b99-a684-cb6889d337b0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be006458-b8c0-455c-9093-c0a4d0c3eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0784c8-cf89-452d-bd29-68d13bf871a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b7cb14-5590-4dd6-8a00-cc146a8f25da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a19d38a-1bc1-40dc-8876-5521c6dd9893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4ef1e8-63e4-43a6-b99d-d8d07b79b687",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f5a811-1dab-4d20-8cb9-77dd10ec57ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e7d937-a095-44d7-9848-f1f1ee61d2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800e2e9d-0489-4357-8eb5-3eab0656a19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "063ebeee-2105-4e7b-a6ca-d34298626c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7357922c-e83c-4331-8b2a-1b8986133799",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437d3c37-4dfa-4c89-a39e-329efc47c48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b29f05d-83f4-4c1a-8ae3-787452047889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942383b7-4c5a-4d31-908c-77c27b7f6b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0845789-afc3-4603-98e7-54ed070d75e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6f5730-d68b-448b-b39f-b287bc3bdfd2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42667262-77ac-4132-87f4-542eb13a2c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ece82b7-fce1-4dba-a006-78c30eccc2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598d6e72-82d7-4a20-be58-b9c6b1750605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f78b91f-6dbd-4882-88d5-e534713ba4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452d4e6c-258c-4f4e-9486-0afd7d2d91e3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcc6304-b432-4ff6-bc44-382da221714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1f17db-29c8-4303-a80e-5ed8f03ef6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594233c-8f1e-46b0-b089-ccec060df2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed3bc86-275e-47c4-b833-436778d96f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de0052f-c7c6-4d85-bb30-e2587c535edd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74581278-4769-4889-8405-3194afd031d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94c7a4a-137a-4a70-a04c-cfb31844a9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809e2640-a6fc-4090-a545-34df7469caef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4415e652-6b20-450d-bf54-e4249bd6b9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eaf923-802f-4f94-a490-445145e38b24",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec536db-5222-42e6-897e-f5b6bbbf43ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3cbd8a-e868-4bdd-9517-340e752542ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058d22f3-c798-4d49-adce-169e90d1542e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "862bb982-d4d2-4dbf-a75f-5eba51b85872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4d25f2-aea2-468f-8ad0-a3fd308f89b9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ababe6c-9979-4b98-a352-9acc7bb713ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a581eb2-5413-4078-b233-7072621add0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d60f8a-a3ad-45f7-9ac6-25a593662e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd448ef4-9e59-43f0-8ca5-0179c1c1d431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462fc1c6-5eac-42a7-be45-64e8baba0fdd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d969ad6b-80d6-404e-a58e-09ca303f4c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebc1539-ed51-4771-b4c0-2150e0da6ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a7a8d-b0d4-4dec-9b99-1967ebb6d504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "635652d5-2a29-4aa0-8716-69431172a900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abf848e-462b-4470-ac5d-85fce93f30a0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544b7b10-ffa5-4f0c-a502-501549081088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d6a5fd-024c-4618-85e0-820f63453974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93aa146-0dfa-44c4-b838-5c80ebe015fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c11bcdf-ec8f-49b8-8950-362e0c3cded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2e3a9b-413f-4ee8-92fd-fdee2e076237",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfadea26-1b30-4db7-bccb-9a880735f503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94573115-6e44-476b-97bc-ef2e4b411730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c3ba45-edb8-465b-883b-7ec9355258ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66f99285-c748-4854-8bed-49ed2b67f76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd07d55-b595-4802-9d3e-6ef3bdcbe095",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d451d6-ca18-49c9-8e4d-061864fe2fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5552e0f4-da46-46d6-ab2a-75c461b2b90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae99a377-502b-49b9-b710-197a650ff292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e79aba3f-30dd-4cfe-8a88-f102d6a85ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc444ac-e526-42d5-ba5a-334a58586581",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d312cac6-c6a6-4c62-beb0-3d5d88566c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c204a5-6488-4686-8028-db378b8be2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5040d3eb-97f5-49ea-9762-10d4913c9ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ca07f3-8482-4acd-b08c-7d4217fcce79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2cc4b3-dc60-494b-a1b5-9b80559a5a6f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa3c531-d5d8-4dc6-abb6-7608b0f3ab62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612ac785-3c6e-4b72-ba25-3651d71139ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6238a44-0089-4235-aa35-2761fc538cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92dc9aa-3caf-4f7d-9fed-aa6cfac8c74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70152ddf-505c-4d09-b5c3-633edf069bb7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a70737-9207-4826-8190-32a323fe3b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60567c4c-65c0-4089-ab63-27612bf8d5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da9b6a8-883a-42e0-a795-924fea75f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c02be88a-ecd8-4d5e-a791-c2b36ed0f44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411cb8a3-df37-4490-89d7-b1136b8fa919",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3798d5-6f1a-4bfb-b1a5-f5cd71fc5403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac621fe1-d1fd-44c4-9aa3-66c624521aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9372b709-ced1-43a3-9fe0-31bae5ae88a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5b5b6b-08d7-4cdc-8532-0f5bd14cb9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425ea98-4c20-49a3-adec-1f587a0460b6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f7ce96-3a34-4d4a-b501-7bf307908e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac7c041-bac6-4b4f-8d6d-6a2f614bdd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6e2a81-bdfd-4574-bf3c-52859df89fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a887205-a965-4a3f-a6f1-394cff4c3f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086db3ba-3224-46c8-98c9-0e60c4602675",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e7ad12-058b-4239-8889-9a8bd462f990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26041d76-a7a7-4247-ab37-effc212201e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cb72c6-e24d-49b7-a9b0-fa1c080407e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4def6fd-eb93-4ee4-9459-69446a2fdf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448eef35-757b-422d-876b-06f436e072e6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95f82f9-7264-48ca-82a3-d42de764e104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcc6183-4cb2-42e7-ab2c-daf6909e5a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ad3fe3-fac2-495c-8eb1-fbcb8221a6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "003a52ea-d7d3-4d67-8560-4cbf62400301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543e8bf3-2439-4095-bba8-9fb8d59aaa31",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d9d671f-0fe3-493d-a2ec-73e6ba0457ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7ff076-e41e-4be8-818a-215ea58818bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ed411-9204-4026-bfd9-2995ddd5dd11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd5542e-4ca0-4e79-a038-eb3cc2e17c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c7d310-8842-494b-8a6f-e190f9a79a87",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c707798-b624-4128-ad2a-5d3f86e5c94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd934fa5-5c26-45b5-8c73-96e11c2a83d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451042a7-6765-40f8-8202-c6cbc90036f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f0d923-6454-405e-8a7d-9c28b4b18fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cf08e6-7ef8-45b8-9821-da24178fca7c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdcb516-8290-4c9d-b2f8-450ba5945493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cf1871-ead2-42f7-a791-433ef0e67daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ec8979-6300-4776-aa3e-f035acd20aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c93ca51a-5cf6-47b8-abb6-aa12f3b29392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddf4ec3-8cff-428e-b94c-eff6b32fd1e1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695f8b8b-a2a4-44e8-82af-121153a1105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71470559-a69f-4531-90ad-b4b33c29d9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9166d3c-ebfa-4db6-957a-626366e72b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a62cf85-85c0-4dac-abb2-1ecabb7500a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9583bb49-418c-46a0-b138-30ad12f23eb6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9823c12d-cc27-49e8-ae86-0d5ff9cccbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a31fc80-95f6-4517-910a-b1547a69d5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3e2a6f-f5cc-4b83-bee3-432e8bb45e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f26d9f8c-79f6-4a30-afdf-d5a24b7087e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ade8b-625f-424c-8655-f926ce16f7fe",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2994b4-47d7-4c16-ad0d-1adb4149966d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6986aba-add5-497a-93cd-5e2bb010acde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16426bd5-26b1-450f-9830-066d95f4d1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2bf0e9e-90af-434f-8c04-aefdac16167e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec29759e-ff54-415e-93a5-9d9fbd4046f4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10378150-13be-4cbc-befc-66625dfe4634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488ddaec-c85c-444c-811f-347b2dc915f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4530b20-aa57-4aa0-9836-b4b144aa8153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a87a66-42be-47bd-a6f3-920ed8f6e489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba432a7-3136-4b97-be92-8e01ddef07cc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c80bd6-2fd9-44b2-864f-29f5499c7421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ece16083-59b3-4bf0-bc8b-682e6e9dac65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9754a3b-299f-4605-a0b7-bbf013b4872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9caf8489-fd34-4989-bd94-af6151503524"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aaa1e641-b0da-4863-b601-18df60c01857",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ea2e041-da7b-4c5a-bf08-a46aba35f5b2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa928b5-7b3e-43fd-a0f1-32e7631aeb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a02bc80-5783-4101-b5ed-e97e729ea321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c604ec67-c27e-4c6f-b386-2ba55e1ec83e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5c4392a-2590-4b2a-9016-f2415fab5b2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f7145cf-837b-4522-8deb-a288ae34c749",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5872470b-8892-488e-aac1-b82b216bc863"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc8c3fee-d5e3-42ae-a58e-e47df5c8a00c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01271014-4c2d-4f93-85ef-2b9aa39cd2e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba6311ff-dc62-4eb8-8fde-8b73dd798940",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf5bba70-0e95-46c1-9cdd-8a20bcc5340a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75b8022c-8ae1-4529-95b3-4f44250d7952",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8a6668e-992f-4029-8e87-e17b779611e0"
                }
              }
            ]
          },
          {
            "id": "5cbd363b-5e74-4222-9d7f-38e7f637a246",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb2d6931-2159-4a29-a450-f9f99fb166a4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fa99f77c-6f3b-4a47-b1ca-6ab9b5b0c316",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1b0441-a4ca-489e-8673-a2d47c31859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c628731b-592b-4ba6-9aff-735a13fa2cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d9cc7a-cbef-44ba-8acf-97acaf0295db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf765616-ceec-4cf9-8ee1-df62da7be357"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "beb5b320-c736-4190-adef-1b8f72531219",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ceab9f1-6864-40fb-afd3-8473abc3899d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5de84362-33dc-40ab-a468-9b725b1d5492"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c7a3adf-3a94-492e-ae6b-79b224402608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0e71f56-00d9-411e-93e1-e37dcbdde4a8"
                    }
                  }
                ]
              },
              {
                "id": "1b2af55b-2271-41a5-a82a-613a5b9d3e7d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89c10809-8a0e-4f40-9c21-46e3263d53c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "518af2c7-4e6a-455d-a431-5f16cf859237"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98d1949b-0625-4b52-8985-31ffac066c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37f0c45b-c74e-4e40-8fa1-ec94d639ac28"
                    }
                  }
                ]
              },
              {
                "id": "150200e7-b7c9-471c-90b8-f9bb76507e5e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "957d0241-6090-451f-b045-29e6562b8327",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c528513-7c28-4be7-b373-310449b86e77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bd5f85a-a2b3-479a-ad26-f8a93aff036b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc172558-81b2-489d-98e6-e5ae2646f887"
                    }
                  }
                ]
              },
              {
                "id": "3c88e5d0-1218-48dc-893f-8403a36a0b43",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d33f50a3-052a-4a45-bb79-7e36afe4eeca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfd1f314-4596-4539-834a-005d5a6bf698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2bda5ad-ca89-4cab-8a05-4aeacf145fd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e49dc8cf-a947-4329-8bfa-f69c8c52b1f2"
                    }
                  }
                ]
              },
              {
                "id": "a79e6d7a-e956-467d-9562-3707989ec5d0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "186df3f0-db41-479a-a393-fe074c7b8235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa84d127-2d9a-4f65-a988-116a172d47d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53ad53a3-6b00-49bb-97c8-7a589848d811",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9e07b164-2faa-4675-a675-86cc53643e97"
                    }
                  }
                ]
              },
              {
                "id": "66b23f81-6cd9-46cb-baba-c05844c3a74f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30a05637-0e3b-43fa-94d1-aff673754f63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "baa87255-09d5-4fa9-a60e-e5f0f5061b5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15db136d-f3cd-47c7-80da-3d1ef28f07fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "017a9abf-1832-4655-9b60-21b75fe5e27a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d82adf8-02d9-4a65-902d-549ec8a8f1a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce1861ba-54d8-430f-aeee-4293968af301"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bbb89a91-33bb-456a-98ba-30fcb0b6f99d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a793b68e-70a6-4a41-a9d4-4b0f75b0e1f5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d89641b6-f178-4cf2-ba6f-cee5ad2c9157",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c3bff38b-12cd-4eab-b84d-d758f7f8670f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f77801c-0211-48eb-b25d-b63bdda095a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d3a00e4-fd91-4ecd-8446-48d5f1a2e681"
            }
          }
        ]
      },
      {
        "id": "64f4104e-58c1-48f5-ac96-7959909c750f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "99771fa4-59de-4df2-b7b9-43bdb5a4a686",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e61e5bd4-2afa-42b1-a0df-0ae2c8a374ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63dc91ec-47cf-4ab0-ac06-c1875e267203",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e1e6e8-f1e0-4814-af4f-2b852575d67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3323bf-d1b0-4e67-958f-5d5c845208ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a280a2-cfc2-4fb7-8591-568845c7f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf5513a-01e9-4286-a506-e8e0d5440091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b121e54-6354-4e7b-92b8-d0e53b5345ad",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9617c19-b4dd-4f74-9352-ed14050f3b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2256aac3-e7c3-49da-98ae-9fae90b09077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479ab7cd-6a61-4e59-823a-bde650ea2aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f86c41-5758-4938-9a3f-d5b29556a7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719b1156-c66e-4ab3-ac2c-52e452748324",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7709f10-9a40-4b59-9f64-305ebfe96e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2d6196-8fc4-458d-b869-40eec7f146e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f602879-b124-42b4-b4d6-1e72e81a3526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7111f23c-bc42-41a1-b3cf-14c32ef3ff28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5b92c2-4c9b-46bb-b473-1c1fa9b08df8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f7275c-f5b0-4013-9771-9c2395f6123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da16eaa-1ee7-49fd-b8fd-c757a7333e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314e1fb8-44ad-47a3-9bf4-184b6b5481c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a93bd0-5c8a-434a-b2b6-348c68d2ae1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ef98fa-a798-40f4-8928-bd5a27cae9bf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d80b9e-a104-4516-ba9d-be3c8d8e9237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e39b18-a5ac-48b9-9556-ffd78a9c77b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f6747d-b082-40f4-abfc-04b4857593b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff23c844-8225-4236-a565-3f6b2248703b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c76bc68-379e-47e8-8060-263035a754d8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2b7448-0521-4d8f-bf94-ba46796284cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038701f5-a1e5-450d-bb77-b874da0752c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e33509-6694-4569-a965-21d2335b95a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a05561-25f5-4b18-87c8-6d26587979d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5974a5e9-18c1-42a5-a0af-52208b3c931e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a894417-bf1c-411c-8b6a-d7302b94f814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1e70ee-1504-4544-917c-01c942dec1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df320a2-8779-42d3-96cd-e823fee4c089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e919ed32-278a-4451-8216-55bf42144d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d133413a-7c4a-4799-adef-b3da144fd81c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b7009d-1eab-4c05-b17e-43e1a8cca75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aacb510-00c7-4ab9-adf2-5002975e7cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f5cb24-aa62-4809-90c2-3aa770ec5dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6f6d53-dffc-4cfd-a760-fba128555f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61367e11-d965-4005-a6ac-c7b171520e33",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1209e7dc-dea0-42fe-88ce-50fac2afdead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4566c8fe-7f21-4abb-bfc5-f108cc90e030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d321e6ca-3b73-4083-8900-be8b761ab860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8dab2b3-f6ac-4e7c-862b-d60eda8120a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177e874-a324-4492-b489-d402e28207ae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c35bdd-c5af-410e-b16f-3b7253767ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4748c16-0635-46b4-ab6b-cd9ddc5bb32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44599596-5595-4976-b2f7-ad7be0a211c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba038124-0897-40f9-b0b2-fda0a5e39840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae95e47-3a09-4e8f-9960-4f8244239e81",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e178bf9a-60c6-4486-9991-9a41069e12d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ddbdd9-d460-4aad-b42c-01871cf4da4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c30098-6d33-4e0f-b8fd-ea6222bd4fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dd33e739-feea-4cb5-90ee-1dd90a435efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc39cfdb-97e5-44a6-abd8-c66b27d2c835",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c026287d-3cbb-4188-9318-cf44e447ed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e8d50a-1be8-47ac-9600-76c6d1a1b44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7924553a-3af2-4d40-a726-dfd54a5366ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bb506c-a0db-4c51-8c8a-8f6f280202f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2aeb7f3-7d0c-422a-b3b5-bec15e9867c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5d31bf-056a-4f26-b3ee-994b27f39e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbd624d-639b-4dce-a32b-ff2b1bc1e88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4c23f2-b7e5-4b17-924d-b0c630909c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b648c4d0-179f-4547-a250-846ea6f08847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c32dd06-b1a4-4b75-beec-23bfb03b59d0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adbabd8-1467-4bab-b9ec-b652841cde13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ddb8fa-2ee9-40f5-b614-5029d5db4b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082c58e1-c3ab-45f8-a976-08b536e651dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2c93bb-1dc2-4f34-8ec7-6a8b3bc5e185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb19f7c-e7e3-48c5-893c-0a38de97d66e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2733b803-da1d-4774-bc8c-197c303208ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e970cf72-04a8-4b1b-9986-dd6ed9254308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de8df6b-fc7a-4272-8b9b-08a7a803fd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b920d67-8a29-4e3c-8b79-3baa39b2d368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aea48ab-60d6-4208-9fb7-9d46bb1c5f8a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c3e546-4659-4dba-b9de-01b801c0d73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b543d7-568f-4e53-abe8-6ccbe61e57e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc384cf-9054-4113-a46a-d4ad33d48f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "054026f3-1524-4e0f-91ea-c2414978ee51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b845a10f-14a5-4241-b2d9-1b88b6d9f68c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffe9483-94c1-4317-9dc5-ab962ae2c04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567b96ea-bff3-4f73-bc89-d754a1f9120d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d33f6b1-bb18-47cc-bf53-4293bdff743b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e869a1-cd03-490c-b04b-4a8c92458a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2893956d-ad26-4b8c-8d3f-5151e3095bae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5797e84e-5bbf-4d43-8fb5-a2e05ec86063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b898e8-f385-481a-a09c-bfb39e6328c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e629e173-6786-43e4-bc41-313c1c893869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ce5af4-3ae1-4fcc-8d36-04cea99d6ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1742893f-3b05-4e05-8056-002dc2f3923c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca2d3df-01f9-4911-8bc9-997865defa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14af4c61-7fc5-4b25-a186-ac9126e7f290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4637355b-c544-43ea-a0b1-79a1a81f61af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09c9aa5-4bc7-43b8-82a3-76216a91545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3fb9b5-177b-4af9-8af1-c425cdb188d7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6bb198-e35e-46db-8eef-af0c3cf9d35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42690c0-cf12-4e2f-a837-337cf67c81b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c754dc2b-f810-4f33-a31d-2ebfb8cad6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5acd493b-d6d8-4c3c-975d-caebffbf59ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde736e3-34ae-4925-874a-5090c739b74c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ecba78-77ab-48e4-a22f-7f2b83d75619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded3264b-d5f0-4f23-a3a0-2b0ea178fa52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a49323-9770-4f50-8f43-7a1954a0ebef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "132e45c8-88f4-49bb-b87b-b321cac0afbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b4e6d9-904e-413a-a287-13c094551e1c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90c12d6-6e04-4d9c-9cd5-84d6a2fa55d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d3d028-6bd9-4411-9bd7-9f407e0ee964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a910f7-0f80-4bf6-baea-cc8f5ac61827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bed3309-eecd-4d7b-b199-a8f41eb912ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cf0625-39a9-4204-8a5c-88cd05c12ff0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a83aa87-699b-45a7-8798-4f074f613f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e2e472-3f33-40af-a5da-e013288f32be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff535702-e0d9-4eea-bf82-4f9ce8b95980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf5f57e-29ea-4fd5-bc4c-c27f26ee09b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075f3401-633a-4d39-9c44-67498e64b051",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a12af-32e4-47ec-956b-ba2b644b9864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05e0a18-cd40-451f-a1b0-7e51b349e1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a98488-95ac-41dd-9d19-9a3eba71c02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b695fa18-4b0f-42cd-859b-0790a2e2a6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fb60d3-8fb1-4c26-8faf-1c4588caf3a6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0570befb-5478-4c52-b458-0467ff479188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250aa6a4-1369-49d7-94fd-7ec28ed71b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271bc555-a895-44b4-ac1d-a33fee1e6512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b45f068-3b95-4b11-91e1-f106dfc3f96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f174e8b1-9776-4b57-a545-a92d478aecb1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8b8dab-18e9-432e-be5d-7f5c77ae4f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a52c8e-e0ab-40f0-8454-f8c1316d6011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feccbf38-5a49-4c3a-9b73-ceb4b2b299c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece0d634-d8ce-4a6f-a048-5695c4fc5445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b260ba7-a701-4954-9aa7-295fe0ec15ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af81796c-794e-49bb-a650-195b453c1b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84092502-7186-4c1e-8f51-d49e42992588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8bdb88-1234-406a-bb18-80b3ee7c78fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a0a4d1-fd61-4289-a28c-b573ca312174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a1c7f6-1868-4d89-9cfb-f010792bccb1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdd8043-4711-4ab9-8986-3e51742619d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067d7461-76a5-4992-9d78-c444953aaae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8808b583-a8dc-4d88-8752-3c9a92620934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6099741d-2c95-42c4-94ad-8abd9b8e66b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411ec178-5a05-42da-b673-5671797542be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07a34a8-ca79-4b09-96b3-6c45bda72255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b05e954-b2b2-49e6-9ef0-2b94031ac54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84db751d-de4f-472d-9058-d2e221d4d62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d5620f-f2ad-440d-9b7d-5a908cf2aad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eda6fc4-f21e-446c-adf8-78767213cbfb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5407a7d-ec2e-4acd-9053-6b621458af29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c898ab-b982-46f2-ac3a-3ddf2a685ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62f7954-7428-4d02-928e-bd54582946da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5828be54-03ef-42ce-b936-d4bdacb0edb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127920b8-9816-4c9d-b780-c6b936cd46da",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9de21a-b031-4522-bf01-f25b9d26ad38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e2176a-705c-424b-8843-2de8c461a36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebbabe2-22b6-43ef-84c3-72557a9cb848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "136ca8b7-8136-48b4-9605-6092766e2b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3460bf-03c6-4ac5-b30c-e61ae0c28eeb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2155297a-e2fc-4e61-be1a-1362b3493234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d03ed9b-9c69-401a-bb4a-bbb92ea49370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6518354-cb89-43d3-88e1-635ccee00b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba1e36a-8376-43b9-a2fe-cf1d60c86a03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97e9f569-006f-4992-84aa-6c1c37e939fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa9bc643-4153-410b-a57c-85ddc058a384",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1eca190-d4de-410b-8ca7-113566b8ce07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "15f674e8-12a4-4ced-bed5-850a75682af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc708f0-8d97-4174-94e5-f7a781322d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "430f5f6a-7cac-4ff0-9368-f4f3c424cd84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1da71bf-a01d-4ce4-9a43-c64bd286c9df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f190723b-1750-4b80-90c0-3cce7faefa9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9da4ebae-a304-46a1-85cf-7d6e664188a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c60863bb-6d00-44e8-bc0b-6d2b31b5680a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9507470f-653d-45e9-b1e7-44899e51bd68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "360540d8-3bc3-42b4-8530-eda948bf956f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef52b225-7a7d-4252-a61f-2bac2ff6d4a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1edbc05a-b296-4788-8e2a-fc5df65022a7"
            }
          }
        ]
      },
      {
        "id": "646e1320-8776-491c-94bc-d36a747211bf",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d7bb98e1-5e26-4bba-8c55-41ec0a6f46f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a898b16-6763-42d7-a95f-4038dcacbaf7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fdf90ab-e1b5-4f05-9e9a-412900e14cd4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c9acac-ad7a-4f41-ae53-7c3d21f53c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bfc18a-3b0a-4943-8a4d-bb187bcfc81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad774ed-5bd9-4be8-96b4-cbee005a3983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "636c0146-ad96-4f0d-b0a9-ce9561ec8242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b4b816-aca4-4e8f-beca-615054f92110",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2865d82b-bc3f-4794-be6a-234e0fb4f3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f357f1b-b317-484e-b840-9747c6fa7ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23be6d15-c39e-4aa9-aec1-fd83ccec378c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d29d9f-4e1a-4a68-87b9-7c04fbede554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdc5105-6549-40ea-a283-0cedd54f4d8f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc2c987-bd67-4e96-ac34-15d4dc6becc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6986939-1f13-49f1-a4f3-4bc63ccff2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65aecdd-54e8-457c-b701-93223ff82803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fc3fbe-f9c0-4797-a572-180a313caf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb459479-5197-4358-af54-d9757e0cdb6f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c196012-7775-4a70-8931-6506553d5309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7f07ce-8638-4019-bf79-8fbe365b5381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b737d97-87f6-42fa-a742-43bd4f309228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05717098-e649-4270-802f-cc89f508c268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01458436-c5a2-487b-b160-402ac2eba680",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d318a7-23aa-4dac-8efc-208908fff218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9934fcd-6fba-4c95-9273-c44b5e9dea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2c5b78-eaa2-4b96-86ba-438f1a087964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e85de81a-b49d-4acd-813a-eed609ec4c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb8c66c-afd5-4f21-b8b5-d55c785a7fab",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056f823c-a632-486c-a832-02446e0f00ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883fadf2-cf7a-42a3-9015-232a53fe2061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f63701f-176b-458e-8204-fef79b2db4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6b7b56-e196-4698-81e9-6b42f2bd5cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d3ca3d-6821-46ae-8ea4-ef726aed62df",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9269b4c2-3da6-468d-9603-d220d6f13af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b918466-6c0d-4d23-b0a7-87d3a907b629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d38f315-4243-4db5-be11-ce59be940568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb38f220-0933-4cba-b319-09adb2afbfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98da7f3-6330-4df3-b702-52d5bc038d0d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1422c0a7-6a96-4fde-ad57-e734773bca3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfa66e0-ddc6-4e60-b3f2-a2482fe519ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127ae3ef-25dc-4878-83c1-91831a19fca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab88947d-b287-40eb-befc-88c08cd1c412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fb9eac-64c7-412a-85e3-720b8cbc2ef1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebba9f14-f777-4137-971f-db61f9dd4e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0922ca73-e00b-4c37-85a4-37994dcda39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8fbbf1-a8ab-4da4-8aff-2a7ae0988a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f81184-cd04-4b80-ad2d-cb38b4530dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b3f472-4196-4cae-8733-7a33545b08de",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8ce0e8-9552-4884-afe8-952100ab3f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a99c69-972b-4b19-a604-1a28f9df50ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fc2c20-0583-4757-b04a-314cb7b8296e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a6dafb-fbf3-43d4-8327-0fb2e53d0576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaad4a1a-33c4-48a7-b7dc-954e5f70684d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc582285-73d8-4942-af3d-1b7a5be07621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517484bd-8be7-4a5b-8e5e-cad8168bb228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f28a95-536f-43b1-949e-2aab0a140556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "71e66c99-4099-4352-872b-ca9830e693b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b7e9f6-ba5b-481f-8c42-a6a2010a0e0b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859f67be-cfea-4dc3-be71-5875369ab2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbdd611-028c-4f3d-9f8b-7d5b565ebedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59f1f54-d98b-4d8e-94da-ebfe74331b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "adede098-7931-4fde-9999-6bbabe4a17a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e1e3e3-ce47-4d85-b620-6f2bd8901439",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336db805-3d3e-47ee-8760-b1615eaba4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af77e280-9df3-450d-b942-bb3c2d829bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106bdabb-a0b9-42e4-84f7-706f9503c1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e85572-65b5-4f1b-90a2-deef99f8c538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e1e72-a692-4905-835e-8649d79fce5c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ae7170-48c0-4d4b-9732-6bcd8deb420c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b43767-22dc-45c9-adc7-a76b67aee077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806a9936-5136-40e6-839f-15e259e5b491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59d5988-c385-400e-ae68-63fc55374ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa79215-9e34-4eb2-b8d0-4ad420a5e4a8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2fde67-b85d-4438-bf95-ea93a0dcfca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab0bb95-c85a-42a6-bb11-3bf254c3ffce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088a2017-530a-4382-8a4c-62bf0a3b583f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abe56e7-5220-454a-975b-043b65520111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43742d17-bc00-46d9-b644-e142a4b91775",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3f99b6-c69f-4812-9f50-9453e1d37d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6be9e05-2cf9-4640-8f29-d58b0cb091a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca93aa6-1f92-4ee0-a836-4e56bd73efcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fa77fd-740b-42e6-95be-3c07c506132b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb72f08-b05c-4d65-bfe8-6309b3fc1912",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b9d5f1-b0cc-4520-9f20-09088cbb6f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addb5dc7-86fa-4de9-9c46-2546cc54a765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c612fe0-859b-48f4-961c-e1c0ae4371a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "23320321-76c8-45e4-81dc-6ddfcec463ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e3925a-8064-407e-8f55-07b14d0b8cf5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4477fc0b-0a4e-48ac-a6f8-cde18851d929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0261ae54-c104-4a3b-b4cb-5fd756efed86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e9b8e6-09c5-494a-bbaf-d3b5a68bc5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0cb574-ab38-4f01-b244-3b60deae932e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3785278-6125-49b3-a07b-174ea9f892c2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bf9316-e94d-4ef6-87a6-6780f1aefc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b120b7-9778-40cf-9f64-1f314cee05e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eeb15d6-de19-4087-b082-33b5bdff29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a685c0-1ed3-4c6e-ab51-30b02383d5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54251221-bd5f-4576-8cb5-81329f466d82",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce52cea-72b4-4950-a523-79c2a01598e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0bf96a-faf5-48ec-9601-44876f0a33fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ec57b8-d559-4847-a070-0ec589341b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad42661-44a3-4b6a-9ffc-75489aa63b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2a5e0b-3a46-4f39-b168-7921aa46c6e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fa2e4a-f16d-4cd1-b1fe-11965b6a9eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4411f5-1cc2-462d-a6d6-2216a85c4464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2548d7ba-4910-4ab2-a844-cc7f2c7815b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "844ca08e-d62d-481f-83e0-48bf905b5954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec90fa86-709a-4d64-9f5b-bfb55f0fce43",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a020267-adc0-4b2e-b1ad-53a91e04fa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201f8673-ad5f-4dbf-a6c5-161056c5caec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d9edad-3c00-4af6-b9f8-1be760f573b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da8cc6c-a7e1-4de3-95fa-6ab2a925e1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe3fc23-3574-4bc0-aa7a-36cb857c0825",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f267c65-b875-4254-a4b3-aee29c462083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6177b255-3fe7-4716-a144-7899dc341a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be0604c-4087-4095-b3fb-5e0a3e5d2933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e18eea-c26e-4958-a27c-25d8e9859014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec66229b-4ec2-460f-9237-0f64eae9c878",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01feb49c-bcd3-4e93-8e9d-958ee466c190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c341136f-c3d8-4c79-9ac5-58c70ff70e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ddfd08-0fde-4c72-9ff0-e23126e293d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3bea6c-951f-4058-bab7-fa366a6ceecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fa08d9-aaca-494c-b6dc-89cf023ffdd8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94474c52-c144-4965-91c4-9777a08fdc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fba3696-5f6e-47c9-aaf8-058ee0d5ddc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b4b4fe-50d3-45c8-a858-3909e757377c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6ca0b6-5096-445f-b461-0142723c91c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7185fd60-4fa4-403a-a45a-d05cd41ae79a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1b618c-9284-4ef3-807f-54d21a081cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0034ea4-1f41-4136-b82a-feda77511b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f695fdf-8e24-4eaf-91a2-beca88670b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3336ad-c64e-4aad-84ed-035e31ef1cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eebfda1-4547-4474-9e6c-68fe89e76737",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a92c243-323e-4837-a2e4-ce2811ac3dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c464416a-160b-4772-9180-56f628ecbced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4e9fdf-6fe5-4c54-a8f1-8338e051f216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b142b175-759c-4364-84c1-976bdce7fb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2967b9fc-a86e-405b-9e0e-b6825f4a1ff2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fe34aa-5eef-4b30-be07-827fff4120dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8c483d-1e0c-487d-baa9-9a03b91cffe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fce9490-7545-4ee4-b936-99fa7ce062dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a843bb-0f5b-484a-bfb1-a331ce8c12d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a8fd42-d4c4-4599-bb58-90a598b1c4cf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4a24cd-5b4f-4044-8a80-4394f2ffed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e12569-88b4-40ff-9242-72096f5432c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8937f9-ec2e-4812-9a7a-c2f19ece4904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e72a92-6d13-43b1-9085-0fbfd5622ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb015de3-b38e-4e70-b875-74a407618920",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da203ed-58e7-4bda-bff6-3cecfeb89382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d2eece-f1a7-48af-bb5f-01ccd1c13651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aaa233-e2e4-4b8f-b9e4-1a85e46bdb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "861b7a3f-1331-42c8-bf7b-35098ffd2398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec11755-30ee-49aa-adcb-10e6f2c0227e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527a1671-9db2-44b9-8e5c-71ae29e303e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ecad87-528a-4b92-91ce-edf9aa3b447e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d485949-0b66-47ca-9c94-013e87142002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ec77ec-ba73-44ab-b950-21cca441d479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948c490f-1514-4eff-858f-5c30a51b4416",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efadab4-01c3-4129-bd6a-e94e2ffd7a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5555739-30b4-46b8-81e2-9e5f4a83755a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf7a78e-7fb3-4ab4-8fcb-0dabe6fcb6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef81afc-451e-4b7b-9484-ea7082e92184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9c8c64-4d6b-46fd-9419-cab09cc19e7b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8350d1c8-0451-477e-a9fb-1972b0774e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775c2ea4-efd9-4906-83e2-659dc48a159d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0722e9-e62d-458f-b009-c20f06e21f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e935b4-0ff5-4788-a308-493e63c926fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1a071b-1b3f-42e9-9609-29ba948fabe3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9368848-d0a2-45f8-99ee-b929b822006b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ab52c-7778-43ee-b9a2-2dde19b5e006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e375c4-74b9-4295-9c28-73b65dd2d1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0ff635-dad9-45bc-822a-7c50aca29a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b42a9a1-daf9-476e-8991-291b861f3e30",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e94a68-c64d-4193-bcb4-7a92eded38b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc26156-75c8-4f2d-bd6a-5dace6f4bbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d0bbbb-4e50-453c-bc0b-55da48461767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ad5191-198b-44bd-a5dd-bb537043c514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f7571f-2bf9-4bdf-ac69-f779b2536888",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2ab7f3-e348-455d-9ff6-50b19b2f059a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9978ce-7bf9-4891-ba55-b46200edc227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086b9259-6c98-4730-921f-b00a6a6b0e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7ff9f7-184f-4f6c-99db-065dc2cf726f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a0cc35-0ab2-4767-8ee3-eda6f71625ba",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4737133c-b76c-4548-9a64-3ee21fb1ec45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d157cbd-c868-461f-a0b8-931ed7eaa603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28040c0b-c30b-452b-899c-40fb95dfb4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb065ed-036a-4f5f-8a7b-80f3230a0eea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "615f7bc6-6c5d-45d2-a988-b4955b5b97b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cc09111-d8c1-4ea0-ae18-53ea45f4ad98",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e43345-2be6-456d-899d-74c196ca24e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "427d6fe2-49e8-49c9-82ef-ee23b99f7393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac7bff4-e067-44f6-8f6f-d6ff4e4e44bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27aefbe5-6d1f-45d3-9452-15a892cf9377"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43022def-7eca-484c-ba65-aeac2caa0f6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eb71909-40ed-4076-a6c2-f0d6f6b01097"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b30b3ba1-0dd8-41cf-9b1d-4b1f7e2544b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "079653b3-6bb9-4791-a5dd-a686bf83a01f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29b0441e-542d-47b0-86fc-33467ec47010",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2439b13-fdfd-441e-8d10-98af9be3c399"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1002c5cb-208a-48e6-9009-201b42a69122",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39d01bf7-dcfc-48c6-9c44-8f5169e0d8a2"
            }
          }
        ]
      },
      {
        "id": "8d4b8bae-d41f-491e-9329-c27351d273e8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "96af7fee-dc52-4ac6-bcb2-27b954ef1e13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "270e1cdd-eb7d-4af9-8bd1-2eb576de6c4d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "45d2874e-e102-4ad2-99b8-1069f926a73a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8e4fea-5e66-4bc2-bdc4-1a7484da4ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f788c1-9e01-41b1-b96f-25e9c617cf75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af490e4-2326-45e2-946e-b3e57f216ced",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cb2b87-41df-45d6-adae-79e644422bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e5b03d-f19e-4af9-bef1-4e70ececf698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e1a4b1-8176-4fc1-8c3c-f8e1c64033e6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f538586-6901-4e04-ba0c-a890075f09ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f3b18b-a0ce-4dbe-a012-56cd80af41d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9597b1-1d2c-4e73-902d-fea4573973f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e7d27c-84e5-4b64-9828-5d9f912dba4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902680aa-dc53-45f0-9efb-c55baf3eb285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6236ce0-ed0e-435c-a20b-9fd18a32a37e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4dbb76-78e7-4bed-8698-689e4feb9beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548273fe-9a4d-4d53-be1a-7d2c7ae70030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2832e4-aa3d-4b5b-867d-85c1d6102ef1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2240b8c7-b3ef-419a-a378-1a227ccaa042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d1d371-6771-4aee-b18f-56d7c2aa4c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1c781c-39c4-4f51-8894-caefe00968c8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e718172c-34f1-4c8a-bd91-6e5dc45edc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be84ba8-e548-48a1-bfaa-27cfc90396a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed250d1-3934-4cef-940f-7570082434f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1c0659-9a11-4886-afaa-d9bbea25aee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f965c4c-49ec-48ae-8be2-6d3159a9752e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd44e02-4bdd-4dee-8698-52047ed53647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02c0dc0-55a2-41c0-a36b-ff3d8a565ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43ce44c-357c-4b26-b98f-3df5976bcfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98911bcc-02e5-4ee2-8b9f-f688f2a107a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b8c3c5-224b-4df4-8d34-e7130feffa0e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09864ea7-93d7-4aa8-bdd3-07aeec8db898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e466b0-c754-4849-8470-3c6d1104489b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60beb4f0-3769-4637-9b48-f3eeeed8cdc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "449b7c1d-d96b-455c-b382-2f6ecf0274b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1b71a8-7585-4fe4-b4f4-119739fb9ef6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13620467-8f62-4804-84bf-25cbd5c32f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca756164-dcbb-436e-ae80-e8205814eaca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc10d39a-8615-4189-8ee0-17a8cdd15d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98608ee8-309e-4b4e-a901-a384a14e6ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce966399-5bc8-446c-b0ae-539fe94cd258",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5915665f-321b-41c7-bc73-c8e417ad74a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c75b7a7-73d9-4fbc-acb2-7775908294d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aced62ae-82c8-4735-b762-e575752f22a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d248e7d-1b07-419c-a6d7-e44292d8132f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6ac65b-0a0b-4f1e-9ff3-344cd562b764",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206a1672-ffbb-46db-8e8d-23ed1a4582d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992005ee-8214-4815-a0b9-5aafc887d63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb3e2a6-6f3f-4b48-bf12-6734503a9b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09984220-7a2b-4ffb-a62f-7e8e6a0fec7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df36f16-fd34-4e35-96e5-bb6bf7129833",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abdc743-8744-44e0-a0c6-88f9f1c27f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0929037b-2981-4367-ac44-b7235b4c4c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fe3d38-8dfc-427b-a839-22f594fb9346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd62b32-3348-4572-b591-7ce2b3e9f389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8f3c90-c8ca-4daf-af3d-1847a3537915",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237aabec-9e5e-45ec-866b-a422df44f022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d52a18-7583-4fcc-88b9-a1fa010174d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6427fa79-ff1e-4834-99d8-345fca42705c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a21c82d-0705-48b4-bf72-d52b2032a3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30f357d-2aec-4fb1-8324-0055bc1c4fd7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee646f8a-6044-49f8-b7db-47c7d56aad5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15cc06da-8950-46f5-8b70-301a8274320f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d18629-ac37-466e-b02d-1f1184cd4934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db61ef6-01de-4b0a-92f5-2fe45cb05d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92a76ee-04f9-45de-92e3-8f880e90d8dc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70d76c3-4b54-418d-8b90-b4ae6d08514e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3167faa7-4549-4194-86be-e072bbbd0125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c303bb22-5c03-46fd-9ef9-cf4f96c2640f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbfe5ff-c8bf-4149-858d-b4da1495f5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db1f31e-75b4-444b-9e89-ab180b549771",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb4a382-e518-446c-9ff9-c6cd86d0a4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997f9db8-761f-4e0c-9b4e-7c704d4c3b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e08f6d-7e59-4047-a45e-e8160951a856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f397b020-0356-418b-ba5d-174be34014cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd68bb4-bf11-4332-8ae7-ef6632aafefa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad6212e-1cbd-48af-a218-0f3397413c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79b11a6-7ccf-4713-ac05-ca7869c67935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6a4999-10da-47d6-b902-3938d114e6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e83c67-5832-4f42-9347-66d89b1c8d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7148613e-fa4e-4d3e-a2e2-673b6c3f6a50",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee094adb-3e10-4353-bcfa-19b46c8ddb2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deea6b5d-912a-4b80-8c11-adba8c36fd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028fadeb-82b3-4c2c-9eb4-02a9bec4f435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8001549b-1559-450e-bd44-c68e5cba3525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68076d3-422f-4b65-ac04-c4db68c496f9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a42167-92cb-45a6-b706-0c6b5e259659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffc0c7c-8241-4f6f-bcd1-d3ca52fc19c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7843cbd4-43fc-43c2-ad38-5b5f2629e102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8686f4b8-6e3c-4e28-8bd1-70ab692abc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2217b06a-6a45-4602-b056-7346afeddb1b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5421c5d5-1dcf-47cc-9884-b24793de365b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3c9923-3c74-4479-83b1-fba137ff0cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aaa661-95da-4c97-a8ff-ee636a9cdffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c834d335-0d4d-47f5-b9a7-984ac019ae63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6db6981-edfd-45e4-9bb0-6d50a8d95e88",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99dbd67-bd58-4e21-81ca-e621a0719292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202ff8ed-37b1-4243-9bf1-69373d86bad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cb68aa-53f9-4d50-a1f6-af475ca07972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27988c5a-1f36-4338-80c9-5d9f6b25c82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dea15d-5117-4fdc-9d9d-adbb3b8b5a83",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b551fdc8-c061-4e10-a5cc-015b8c917020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcb1076-40a9-41b0-9e99-2256a628de1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb33f3c3-7a5c-4350-a7fb-8016396a5883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375d0576-a419-46e1-86f9-2dae2422900d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdfdee0-f6d9-41e4-b8a4-ef9706640bcf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07655c4a-8764-441c-b9bd-b37457dde7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b01d40e4-94dc-4fd5-a397-7260d26c9a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c7b540-d431-49a1-94db-10b1adc463ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5c8400-de0c-42d0-ae0c-3236569fcd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeaf58f-bc72-4bcb-bb52-0e9b09d7073d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da37fb4-4aaa-4dd6-84ec-40fd1a0e6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0849b18-e486-4ddc-b9bd-3c3f3dc07ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54612432-6c1e-4033-b350-0c7f67cdce4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f620b9e0-d4c1-4488-9ea9-1c1532d17f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c65c958-7ad5-4e85-8033-51c4b9fa00a6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77580f92-f8c7-4828-9c4b-41ff90d72a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0dd5940-31d3-42e5-932c-942fac27cbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ec3c10-ac17-444d-af09-18880a4b1d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff61faa-1f3a-498e-b3fe-d66148821e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7976ecc-1e4a-4245-9293-fbd04c0fc6df",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b109dbe5-d30a-4a61-a142-504ea65d65ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "511f4528-d578-485b-8f1b-1cb69b5791c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e14e81c-756b-49fd-a1c2-90655fc6a1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b097efd7-f450-4820-84d2-0e79f1cf8d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90227d03-2ff2-4436-8c7b-02ca960f9425",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43651762-6653-46c6-9b8f-1adef9d8a8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c577b669-00b2-4181-8551-fcc7e826cdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bc5ff0-22cf-4a9e-ad53-5cf050e74063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82035913-76ed-4523-b74a-9fbfe23527a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948fe289-097c-4145-aad8-c69679fb3f5d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0a7a30-b3bc-4912-80e6-7c1fb3e6450f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ae2e7f-6a58-407f-9a15-2828321fac7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a6bb0c-9aff-4598-98fe-b8d62e2d4a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54921a8b-18d3-423a-88e9-62c78628f1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f57365-c5c4-46c1-ab3e-fcecb7d6442e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecb7529-a1e6-4863-9157-c46e7851a86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2771e02-40ac-4511-8448-68798276cec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0483b4-da6a-4557-8ead-8a97c207a356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5ddd36-2791-4260-8693-7792c4a699bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4751e1d6-26a3-44d2-8d5c-cbc59d4081fc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e14aec-bb9e-48fe-863c-cab8e2aeae0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74fc59f-17b2-473a-85c8-5146453ec0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74bcdc5-3a33-49ad-bb24-e8d37628749d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e529e0-3bb7-4b40-b3d1-cb07c754405b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f218b7-93ec-4e5d-9a8f-106d748178f6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da5144d-9ac1-4d70-9889-df07328dde46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be77789-4094-4426-b6ee-0f53a6664cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3086e776-faef-4a48-b2a5-478774d7bed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d82380f-154a-4bdb-93cc-82ff0e5413df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6980c0e2-1f44-4124-b849-b1cec927e940",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ab444b-7658-4ebf-88f6-3998290b229b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "570c61d4-ecaf-466d-ac62-9c7d590a483b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb624ec7-81eb-4c24-a676-b68318ff42a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd0c7c4-32f4-44ec-bd39-47cfb0cad3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12468c67-ff63-4cf1-a4bf-3706c49d011b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6cbb9e-9fba-4bd8-89af-c133f7e67c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778404f3-c57e-49bd-a580-35eaae9c319a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9288381c-90f4-4926-95e9-2f65648df165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f7b3e0-b9e9-432a-a1a6-d55c35c0e27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d779d366-38fa-4f27-8ad0-85b864d3800b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e7d4cd-efe2-4680-9123-14ad80f44223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7085648-e6f3-4596-a6b3-89b3cf34e374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcff43c-a3a3-40ee-9f46-220ab1949f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3875bf3b-e6e5-44a2-8d76-b3dc796080e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fb25a4-a5cf-4ba6-85b7-628f8f0e9c38",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa520f8-69db-44a1-a93f-a4093b915759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b580ac33-b9f1-4a5d-805a-4a5fe579d9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822e0937-f8eb-4263-8c16-d130ff68ed4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30844c81-dd3a-42d3-9e7e-8173f7547357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2df185-50c3-4da2-89cb-f22a58d5d448",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9131830b-5d96-47b9-8891-a43ccbd6f33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eaf087-4ff2-4c09-a30a-71579d2f6c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9d0678-2168-42aa-9d34-ac2657c1d21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90e9bc3-baee-48b5-b66f-94fb3cea7cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de5d302-cfee-4e86-870c-dc2ca279e8be",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5478fe12-5e64-439f-a406-92bf03b347bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc4c9a75-c025-4e9f-bb1a-8a5dafe8c238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62e30a8-69a5-433a-8b19-c927841fb47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4352b5b1-a3ad-4947-a9f7-a36582ba073c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e03e1e8-ce76-4976-a739-de5251415c5b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd135ce-7622-4da6-a04a-e6af8b6a09e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14aeb026-a1e5-4d4c-b84f-eac9c505d8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9161d309-dde6-4a4d-8b33-f5334346e805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f51486-2815-4bd0-98ab-2e1773fad617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23291232-9990-46ed-b324-e32cfacf52c3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f4075a-8293-4ce8-8f3e-186fab62a64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16402977-2b76-480c-a6b0-e31a7b35a5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553d41fb-c0ea-4a6d-a723-ea587f3da666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e12336-590a-4ecb-af74-7fef4d86357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a37cad3-7e91-4a85-9dc6-2c420b71b5b4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477e9fc7-fccb-4bc9-893e-419194276bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312553e4-1f02-4969-ae86-aeaf89634ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d6585f-38fd-4758-bd68-a41d97aa7f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9853e37a-8f3c-46f4-86e1-1145a63a2e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f86f7f-0a4b-48a9-95bb-671dd98d3951",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3b3d54-b68c-48cb-af87-44fb2b6517e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f94eaff-ad1b-4db5-8945-7b1ca5a90a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3a70a9-6abc-46b7-a535-dd4c8c08064a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b25d073-70bc-4730-9076-d1890d271daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697e6307-39ac-4266-81ef-855344ce632c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a898176-4b62-4c84-9440-fc38fad20b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e63bdb5-875a-4518-8c65-8ecfc3c6a308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0a951f-aa05-4898-b000-2fa762c9e2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234d7f9b-abfb-4021-9ca5-eb2a2acee80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293809dd-c92e-4978-aacf-3e370ae80ff9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f089152d-1d78-4e5f-8c5f-06431e6c9a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f8731c-13bc-4cd1-bc56-f08cd10a5810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c568602e-2ea6-435d-97e0-23266dc46d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462b9204-b111-4bb8-a9f9-0f91e5080140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8429e5e-2c1c-46ee-9955-eb0f18a25236",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ef27c5-48ca-4d9b-8551-39e2eecd69ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa79132-a123-42e7-be1a-8b8a9cc06039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "998a94d4-0a76-4b76-a864-6df269638dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aed4e54-988c-4804-94a8-d351c1aa9bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82e00c2-23e4-455c-93b6-f2a8c793d018",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6d57c3-e3c7-444b-95a6-6e763f7c7075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5062b9c6-afa7-4510-a49e-c8999da40592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355e3ba8-4977-4962-98f6-f77a79e21d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a4f355-ed8a-42a5-bb85-e471c52b8fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b026605-262e-4c74-8211-ac0c594bdcc4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee1f28b-749e-46be-9421-4487d34c7c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2005c46d-006a-4e0d-a49a-e4adb5fad05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6579b22e-936c-47f0-8600-18cd5b2a13a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a824db3-ed50-43cf-a0a9-879f364ce74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c86d446-ec15-41dd-bd5e-6fd4c9101a4e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae1a814-358e-4c7b-8a59-0e0e76c1408d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72452ccf-0bee-43e4-aa6f-7f99dab3fe27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177352f4-b7bb-4cb3-bb86-505d62b20453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b2ce50-4681-452a-abcf-a6e12d0a2d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb1320d-ddf2-4325-8083-6bb6346edeed",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44aa4bb-764c-4004-8536-aa18bfc868e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e484f929-ee15-49e8-9cfa-b284522fd5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21548de7-e1c2-465f-a61d-83c8b326bdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da59fe5b-789b-4863-a0d3-893892cc4ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c82e2e9-80fa-4516-b19e-02764732945e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5234d34b-22a7-4bd5-b125-5eb38eb42fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42ea597-3eca-48c8-acda-235158e7a3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9f995a-64f0-4e20-a3f7-5a93b4a28a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5389a87b-6c9d-4ea1-9228-81350f2bcf11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfb1713-2c93-487b-94f4-1f67d1026c24",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469befb0-e5d7-41a2-8570-973368d16e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af3f7f0-3727-4057-92da-7de2687270c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131e2a73-2198-49d7-a3ef-9bef586e4d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0162ef22-f995-408d-aeaa-6f1ddbdc9f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403c2f35-12e5-4b69-a9a2-a93b614c2053",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9712972-15c9-4e58-87a4-dd0567f2ccba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e341eb-23cb-46a8-9049-cbf01131d45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974a6b2d-52e1-4e80-ae2e-69357cf66568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c052d963-45d6-4b33-864a-b6b94c169ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b23fc4-f1ed-4116-912f-80b487734c11",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0858c973-f9c4-4746-b40f-1666b03a3465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f05e4ca-a2f6-4db3-9642-fbea906cb2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098eac5b-822d-45da-87eb-c3fb5c1e1fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47acfde-4099-4171-ba90-849728dc37c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90562f3-92c6-4fe0-b32c-b932e76f2cd5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ada75-4f76-4085-9c5a-a496eb0d118b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc6d119-7a84-4ac2-95b7-0fe8cb92abb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0838a785-c1c2-4244-9b0b-d5f9e63c7ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6a7c05-02cf-4ec9-95ed-841cf114faa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabaeb50-e99e-4265-abac-17a9840b1a07",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680367e4-1f96-406f-985f-6ea2b14057f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6151ed2e-bb8b-4f59-ba8e-952dde3edadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a33fb1-06ec-466a-ab9c-40a77fdaedd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c3926b-8d6a-4fe0-a69b-37050d434d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07a3163-6564-4713-a9dd-69346b1109df",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2229b8e7-7b25-41d9-a3f5-bc9594478f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0dca24-bb23-46c9-9075-7de1a44d5dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de583285-9df6-412e-832f-de16e05948b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b777dc5a-9e41-47ac-b904-fb26acb8ffae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280e9ee1-ed43-48e6-9ecb-d94fcd86d425",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b35da2c-4be8-4636-b2a7-94f3118d2bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0aaa10-8152-4bb7-8b42-bf515079976a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba4abdd-d414-4421-bac4-8f0a858a15ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49af0ff8-66e8-4a4a-a4b2-e3223a36776a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b67f376-fe8f-4026-b9b4-3aa412416cf0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08da1d39-6b2b-4823-936c-50371d595772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0d0993-6d63-4be1-9d90-5e1981945201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d489aef1-d6a4-41d8-a3b8-ca51fd3f67c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693ae0b9-b0fb-4953-bdae-fb2ea8728608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6e4f8d-0809-4ec7-a606-cf602fc7d66a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3bf02a-b4ba-47dc-9897-4455e077a0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245e716e-7002-43a6-95d2-1ad0738acb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b51220-6f2a-45c9-9728-7b4b73979211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf5fd4e-106f-45ee-becc-e889985e9b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00413ca-7be7-41ee-b6d1-4db91f2323f1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1326a1-1aea-4a1c-a518-3fa8cf5fe988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b09813-82c4-45ff-b7df-524fe28af6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddbd701-0770-42a7-bce3-34ae86abbaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a87e201-4c9b-45e3-a218-32fdb0fbf699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d7b125-e19e-47c7-b2af-5dabeea9f41d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f19130-73cb-4641-b8a8-4500b7e03d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c12ac61-dc60-42f8-88d2-169c27244669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ac896a-8818-48fb-969d-766598f11b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa67e710-847c-4646-9e48-adc4d9c2fc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8518604-0b3b-419b-9ea9-27ecbe17943f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efeac326-12f9-4fa7-8d45-18ef603a486a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bc1b92-44d9-443a-81ff-a2d518c5a3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc01f54-f4b7-434b-b61d-79f1ba35e80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01e8607-0163-438d-84f6-9ef0cb6456f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b653fe1-4335-46fa-9f14-fddea64cdd4d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a4023c-e248-4f6e-a990-7910b92d84b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19887d3c-b4be-4120-a500-94d9b8705226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34ef5ca-e03d-4425-8208-fc56c9d0b70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad2820c-4af4-4656-aacb-7e6fb312c6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0d21b6-c9e4-4922-9ece-34e9039436c0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703d8307-649d-488e-a369-23d0c4f4ca11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0cf9cb-ee7e-4b52-9fb8-909951541db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59521242-3d81-4dce-85db-03c59963713d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab78975-bbce-485f-ae4b-7c6ef57d985f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766a5706-0454-41de-9fee-02cf7cc87f11",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0b16d6-9f74-4116-b98a-d5064e13434d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c1039d-828f-4eeb-a8c8-f9ac77b4fe6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82414d8-e1dd-4743-96a4-cac770da8cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e8a2b0-de45-4291-a9c8-5627aa16f344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c3f8fe-bc41-482d-8d68-89b3cea51ea0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e44ce0-3511-4008-8be1-05844fa70415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ecc4551-45f5-48f9-9f24-368aa4d00045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a88188-b6f5-4940-8529-decdde70aaab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ef0cf3-16b8-4a22-a06c-b1cf3795a2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d698ceb7-46e2-4606-9c4b-b9a08eb3306d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984f929a-b652-4250-8e89-818770104e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22077589-7046-4cfc-a5f4-87f158b316a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365802d0-c9dd-4bd3-b23c-289ddb851f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d966204-f845-4d8b-9b0a-43152f383859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825c8f55-6ed3-4aca-8f51-7d6afa8cc917",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24f46b6-cb78-4d8e-bc80-b424478927ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3395ebec-74b9-4252-b158-2e142c85f963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba68100-8bf5-4505-8d04-9cf799d7d3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf0dec1-a6b6-4de8-9ac6-0091c6cfa416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a320787-61fa-4296-bf04-a7cb7309d471",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df0dc61-b977-4c17-8c3f-d644bcbda520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4177869c-76e8-41f0-a02a-6caab4088e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ce9efb-d970-4579-b91f-496d7042c3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28b9d83-4356-4170-8804-a996465c89a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a102728-db1c-4ba6-a1ac-b3b449516609",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5756792b-9115-4f1b-9214-43bf774f1725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da25b72-b480-47ec-ab1b-56a0badaf099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb83442-75b6-499f-839c-5a530a64a780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a84e5b4-7bdb-4c8e-a584-e2c32bb62e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecce5fa1-e33c-4a24-9f84-79c6b52df7c7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcc57eb-47c4-408b-bc38-b6c26f1ee1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5188b8c-9366-430f-a29d-6d83b5dfa49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80ab32b-4da6-4d65-a23e-1eac8e2ba41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fcbb8b-a9b3-4f93-b1bf-d46b4d5d1946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11491da5-e00e-4f31-89ab-21cfc61e7018",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b244ba-ca11-41fb-a433-edae144517ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cd347e-f868-4cef-b475-f2bf4d64fa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5981e26-4090-40ae-aa54-e4280c673f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae4b7d9-4abb-4046-aedb-f51c8f98319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7288d98-d6fc-44ec-b484-42437b4bb8c0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bd2644-751b-4a1a-babc-cc260025792c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5cc18f1-3811-482c-9fdd-a4b0ce0e9707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49c696b-a1a6-451e-824a-6b9fd8e9170b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc21c639-6e4f-4e8e-a7a7-32836067eb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4936c93-967c-4088-a45b-ae4ae631059c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d848dc-0c08-4412-91da-f417690a61e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd216737-f4d1-41e0-887c-0740f187a211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f47e17-38c3-4f3a-ac36-1f0c639a49de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afeb59f-9f52-4d23-a05e-5830f69cb9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbd4eb6-2b2b-400b-8a12-95bcee7b329b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9af07f1-f5ce-41b3-8760-bb2031682a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e573e10d-f84f-46d8-81ca-2c4280a614c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f7ba4c-6d2a-47ad-946c-483c60bd0b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7169be-5745-41e4-838a-a9b3e476c782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f091ab1f-865d-4ffa-93ed-6d8b5a37e8b9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14532e13-ba1c-4f56-9671-922e5185f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599a375e-cede-4f94-af6b-93fd4100ee3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba8c2d0-b20b-459a-b79c-779fdcd0001e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7332575f-285a-445d-a0c4-319408ab863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f15151c-37a6-4208-b268-e23c4c3c7f3d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32083afb-3b8f-4bb6-b663-bd442dceceac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5563fe-387f-4f7c-8e3c-e147cdcd7e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d81761-28c8-4426-a6b2-2df0a6095884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d534ce76-2d87-463e-a60f-95505a6f99b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050411b4-dc02-4464-94a2-c2c92de85b9e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e501f-2cb1-4e21-88cb-014452c2b2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e76728-31df-421c-b012-a8a46cce59c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13b54af-b390-497d-95b6-77cd69328cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db7c4ba-e99e-4cc1-8c3b-50292cd2c529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e154dc-d7a5-4950-a794-b9418c7ab810",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cd7d85-cb1c-4de9-8d8c-48a9efebfe97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65a3e21-2a82-49ff-ab96-d4de90eafe7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88166f60-c4e8-4c87-bdff-9dafdda4495d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261232b4-ef6e-47e6-8729-55b609545ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586415c4-696f-465a-bd5a-a83a6085a231",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396daa51-4aad-43f3-a56a-25dae7772aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec87a37c-7cd3-41f9-b229-07d2dd5188ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27c84b7-7e25-4a04-a376-d02454ba7dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11561e3-7816-487a-9151-f756d4f7ae13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d44a94-db11-400d-8431-d2093085f753",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c6c3a-871f-4717-893d-479f69376830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbf79ae-c40c-4c13-8f98-bac9d004b0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536c93e6-57c5-47b5-99d5-b18e568f3577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceab984f-891a-47d0-97fc-48e88bfdd57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce98a83e-8fd6-4116-8730-e987b5495560",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09391700-f814-4318-95fa-31168e455b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66386067-ef95-4010-a90b-f45161087ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b9b0b4-cbf4-442e-aa63-d707edfc202c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ba7ac3-57dc-4a45-b1fe-5cbd50a9d6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e39b9ef-1d37-4818-a5b3-abf4acc9d9fe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5220b339-0fd1-4277-b930-7c971d2ade4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c3010e1-97f9-4486-a3bd-c0d229a2062f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a45149-585c-4a1c-86d7-7f22ae997d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4467ed2-298c-4f1c-bfa3-7fada724a69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0b2a5a-6c4f-4d9c-af3c-6c4518829914",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ea7e7c-2a54-46c7-8c8c-79fc2fa8cd6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7892bd85-6520-45ce-905a-f9d8898eefef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9f27fe-9c28-4949-bb6a-a4f5d094c013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d79c322-1dbd-46aa-a161-008b3909df2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1481f5-d0f9-4325-bec4-9add6e204b4f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa1513b-2db3-43f5-be98-b714c7ad30f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28be5ad-f123-4af3-94ab-95e0ebb0d20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804df285-bafa-4767-846d-869b4701492c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae6a83f6-94a1-43c6-9a07-3ef5eb7802dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4ad3bf-a676-4506-aa6f-a3e3d52671b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede89e18-5824-44cd-afc6-99590e85ef4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e829c3-36c5-4e1e-a591-eeb827a7d6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abacf4ca-b535-40f1-87a8-0c8308e556ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b48595-59fd-46bc-a527-934c70b260fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f69b23-7118-4a44-b5bb-8f91c04bac5f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9902b113-3779-4c9e-8516-88da8d5f78d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70acbc7b-3c09-4873-bc45-49e45c4a627b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016de936-0f88-4830-89f6-7e323faa8476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be42c61-fb3d-4995-b2c2-fe6181d548fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1cad2a-c977-43e9-afc8-205c9dedbcbf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da05d155-58fe-4558-ada4-c64623128548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab81821-eca0-43a2-ac27-137b5026ba6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cd223e-0a90-4f1b-855b-6bf153a4cca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861eab7f-3445-4ac2-963e-f2cc19354bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75feaf3-f5b3-4078-b94e-d6d0d36b8556",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739445f9-ff81-4a85-9f77-aff0104c6942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac85c8fb-95cd-4719-9268-adee0bb0f246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3737aeb1-37b3-42d8-9bf1-e8ae65d478d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a509be5-012a-4c74-8488-37bd9c1f4078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbff58f6-42f9-47ba-9057-4dc9a6f99259",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d192688b-f7ae-46bb-be6b-64dda44807c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283c791c-74b3-4a29-baf5-d3832ee0e783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacb6c09-077c-474a-877b-9b7e8de23568",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0822be7-5a8a-4ef6-b922-87ff07e3e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb1f9db-f858-4419-b4c0-4ee4a30d4ab3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84845f9-4fe8-42ec-866c-98ef7228a58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "640108ca-3406-4077-ab01-150cad4d97fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28a01b0-42dd-4eae-9da5-42f6c37f2205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a1a709-03ed-4d4c-af34-150590977d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a196c262-6207-4d69-91fa-a902bfbab4a6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2c8b6a-1cbd-4c17-a02f-5fa0057284ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05fc4ae4-3045-441e-af34-9d0f3624f6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5573641-0bd7-45c3-866f-5c4b5eb3db6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a018982e-d89a-4ad8-b842-f4c3bedf74df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba298f09-cd44-46fa-be85-1f780edd2427",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1e560a-ac5b-4718-9aea-4bfa2e28804c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e56a78-f9f2-4a6c-8ca2-4ec43ecd9a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd5a0c6-b4be-4a1c-b39e-9c80a8b0b14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8526b2-dcf4-414e-b23a-b6a91611b9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089f19d9-a610-45c8-a279-f013c1f82437",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3296267d-1aaf-46d2-b631-3c7d33fc2980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b664ef-b97a-4d37-9314-598c05281fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427f0914-a954-4107-b940-932335b7df3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede0a425-696f-4289-bf95-1aae1552658c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7323d65-3ed5-4b83-8a8e-bae870796c24",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f16c872-998b-4971-923e-d36aa646ba04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec05df5-d5c2-433c-a08f-1597058ee9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd461640-82be-49d9-887a-27a06d6cbd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ca5dea-3ab4-4d8e-a3de-d139398ccfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf96b2a-3bb7-43b8-8ecc-e31029385d9a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0058b36-92a1-4a1b-924e-756c7850ab17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6974ba02-5239-4ded-b3e1-4f1df2e71463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dde1d2-f0f8-445b-a65f-6d1fa64247c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7fb3a08-4ef1-46f8-a456-4a9f5e9f6807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272686f6-9cb9-497c-8526-1e0fde0df973",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918a45da-affb-4425-9922-edb7e12c8dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc94ac4-d59e-4ddd-84f1-5fd049491600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd8d572-7f50-441a-a41b-601cd542bae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d540a5da-d421-4920-8cc3-b73e044765da"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4c83ccc-a485-4402-b149-86904a8e3e0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "886ca6bc-3f57-4fdc-9e5c-3a4af28cbdb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50c828b1-4011-402a-bad2-c1e9aea7121a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91b27ca9-5886-4f62-9039-3e9b399cd740"
                    }
                  }
                ]
              },
              {
                "id": "7670b746-a1b2-473b-9546-5c3adf71d631",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99c6947a-6894-42c4-83db-fc10fa02d4d7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f34e83-7741-465a-8aca-6e2f4aea7808",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5adb973e-c538-4aaf-9aa4-19cf064f7f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d46f01-61ba-4da2-a80b-e3cc9bdbc513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffef3e7a-d9f2-409d-b2ca-1444186aef8f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd2a549f-f49c-445c-84a0-12cc68062b99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "158187db-7e93-4bfc-bd30-8d3dea5fc621"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4881f5b3-fc18-4862-98f0-74a55bc34325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db068950-0b05-4d6b-a6b8-e666c9a6ea16"
                    }
                  }
                ]
              },
              {
                "id": "ce50e3c6-80b1-4b0a-a5fc-cc1820830eb5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d88a4fb-6835-4e35-8eab-1d8c50e9c29e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3266c8be-ca50-4d3f-87f4-15d11baddd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1a13c14e-2b1e-44a1-accf-cb0547d2f4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee33d7a-c57d-4a83-8b60-91a16360799c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bf0904-5f1d-40b5-a678-94bb29c0907b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "54696b1b-6bcf-47bc-8d63-8faa42a47042",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbd7cec9-49aa-4ba9-b84e-a27ec5ddb411",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29360ea8-c6e3-40f4-9271-112428d35821",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a821e015-e2d2-44d7-a5aa-74090478684e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93d3b38b-7f08-4211-aa0d-be8374eadf35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bcc89db-a3c2-40c3-8cd7-f0cd06933597"
                    }
                  }
                ]
              },
              {
                "id": "ebb1287a-8ea2-4027-a2c1-80c6dc2e798c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37754d4b-6be1-43ad-8c72-798f38e913d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3949aab4-8220-462e-8004-14956df985d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d016f6d5-7aef-4498-ad30-2c63716f330e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7267ac5-4570-49fc-be90-5ddd51c771c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07e5d145-f814-4c0c-811d-4935e628842a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bbc5db5f-8a4f-415f-bde2-b62ec586d9ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f3464f7-0cad-4b60-af4b-8b1b02463500",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "462d9406-5471-433a-9025-941cbb4e833c"
            }
          }
        ]
      },
      {
        "id": "a0c971f1-166a-4ba9-a21e-05e20a20c586",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0d9325fd-0729-4363-9390-f0d4388325c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4424522e-29b8-451f-9026-d05ca97337e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1df71c9a-4009-4626-a48f-4ffd1152cef4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dceaaec-4af4-412e-996d-8221234e3291",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9cb1511e-8f81-4b3f-a3e9-d5d269253774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c850cda3-a803-40a2-a1d0-20df9b0cf869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95370d41-8ad2-4039-bed7-3048f433701c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c135f0f-6cbd-48e9-b7a5-cf691933ad4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81451def-351c-4edb-acdd-1d01389f4c39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c3e7999-1f9f-498f-b29a-0f1bfd07e834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c72a826-042e-43e8-9c3c-a052d8d917c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "687d66ea-b6d8-4910-bd3e-8d26809f09dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6109f62f-f140-4292-9a14-855161ba9dd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "403edcb9-5c4c-4366-b49b-37e1a2e0f6a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "400397c4-cc2e-47fc-89dd-99b1a46270ac"
            }
          }
        ]
      },
      {
        "id": "166e1910-e063-45f5-b822-7276b19b76c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2214b089-b567-4c54-a088-2aa6aeb5e89c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2bd0949-eb05-4441-bba8-aad164cec337",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22ea207c-9dcf-4331-89bd-8ab2e62d371c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f709ef2-7daa-45f2-9941-14e1e3bf57e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dabfe988-37d4-4c3a-abad-2fc0a995994d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b80147a-4126-4add-b3e3-f6ee30e25d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5aadd2f-f84c-4f3f-b3fb-eff1a9227aa4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac5cb4aa-b6e9-4185-9e04-e6a254c673a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ad0071a-a8d8-4615-b156-b74a25876cef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f78764d-27d5-4a58-9ebf-c768f78d795d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ec17fc4-7abc-49d5-bfa3-68555fcc2e7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f75bc1f6-9df3-4976-ae2e-0eeb6d1f822a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77ca19d8-b6e1-411e-996a-1e7ec32a6669"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0aa19d0f-19a1-4675-a322-1bb69f8ca32d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "274e0ed5-e040-49b0-bcf7-948b15917e04"
            }
          }
        ]
      },
      {
        "id": "96f45884-a018-4795-8db5-678cad997245",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "76f591f8-d271-4eb7-a0ad-1cfd4451bfd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07b080bf-6a10-4e13-8916-cd2b85214e0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16dd8618-a166-4c40-bf36-e69d6d67e59d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dcb199-aa5d-43f5-8c5c-37e013dce6ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebbfc5ba-182a-4e29-848a-7452ff03a958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e55a81f-0f49-480d-82fd-706739498cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1265cc8a-e79e-40a4-9019-ce7c12b66250"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aef6a87-ba56-4694-a40c-f117780d4017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43b30c13-7cc6-4660-8555-12034924e78f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11042980-abb5-41fb-9f72-b338e3f7f024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f737f3e-c483-4714-83f5-a96dbb66c131"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f970fe2-6f33-4386-9a00-1693d8a67277",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "330d4165-628f-4ccc-bff2-b7730a6a1a98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48a01b8a-69e2-4ca1-a318-b80a4308ce1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "927653bc-9425-469f-a9f8-38106c66b1c5"
            }
          }
        ]
      },
      {
        "id": "3a1e74ee-4d3b-4119-b977-6776de1ca4b3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07f1dd14-b649-4562-a2ca-7916e95a1815",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e73e691d-1a83-46d0-8299-f9a5ecdc2f5f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bc081906-d0cc-43f6-ba87-ddd8e1637521",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08f53845-9f2b-4e98-8a4d-fa9a5f96aeb7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f426639-0a0a-492a-a816-aab59b0ed219",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 101.06315789473683,
      "responseMin": 6,
      "responseMax": 8459,
      "responseSd": 553.8239154680967,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708994019556,
      "completed": 1708994057615
    },
    "executions": [
      {
        "id": "29b2b5f3-2392-40f8-ad2a-635fb8ffd6df",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80f2efee-a375-4fe9-939b-d53878a0dc4e",
          "httpRequestId": "aa970c06-ece6-4c98-a446-b6c4636ccfd7"
        },
        "item": {
          "id": "29b2b5f3-2392-40f8-ad2a-635fb8ffd6df",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e40795b5-21c0-4280-8bf9-4687ab3cae12",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "ac937721-5077-4a0c-9751-3ae1f5dfbe53",
        "cursor": {
          "ref": "73bdb307-504b-4485-9733-f8f378f3761d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "739507ad-ec02-4365-b875-83d48b66b855"
        },
        "item": {
          "id": "ac937721-5077-4a0c-9751-3ae1f5dfbe53",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "102804df-b850-47c6-909b-fd75c3181018",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "75675900-8aa8-4365-b44e-1779e36cdeb1",
        "cursor": {
          "ref": "9d7e39b4-a5fd-4312-8f16-cebad5ba8c76",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5a067865-6234-4fd0-828f-9858564e9b44"
        },
        "item": {
          "id": "75675900-8aa8-4365-b44e-1779e36cdeb1",
          "name": "did_json"
        },
        "response": {
          "id": "47c63efa-a32e-4cd9-9092-0d981f599acf",
          "status": "OK",
          "code": 200,
          "responseTime": 345,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1377c90b-58cd-4899-85e0-32aeabfbc1f8",
        "cursor": {
          "ref": "ee4023db-b9f9-4d20-9443-4e63f8fdd42c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "faf8b1ca-5cd6-4932-88f9-33a2bb8bebca"
        },
        "item": {
          "id": "1377c90b-58cd-4899-85e0-32aeabfbc1f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "994ab622-8ae2-4eb6-bc0c-d8aeed977b13",
          "status": "Not Found",
          "code": 404,
          "responseTime": 828,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1377c90b-58cd-4899-85e0-32aeabfbc1f8",
        "cursor": {
          "ref": "ee4023db-b9f9-4d20-9443-4e63f8fdd42c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "faf8b1ca-5cd6-4932-88f9-33a2bb8bebca"
        },
        "item": {
          "id": "1377c90b-58cd-4899-85e0-32aeabfbc1f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "994ab622-8ae2-4eb6-bc0c-d8aeed977b13",
          "status": "Not Found",
          "code": 404,
          "responseTime": 828,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5516c66-209f-4811-85f4-d55b954f8738",
        "cursor": {
          "ref": "ae0a8626-203d-4c80-9ee0-10050e76473d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9232ac28-1618-44b4-93fc-3afffaec3c1d"
        },
        "item": {
          "id": "a5516c66-209f-4811-85f4-d55b954f8738",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a0820a5a-d5e7-414a-85f5-363a3d9fe47b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e544c9b-cc7c-4c28-9b34-1f3a90e0c9bb",
        "cursor": {
          "ref": "c6631308-883b-4f4f-bd0e-637f075a0721",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "221034aa-be11-4378-94f1-8075c396550d"
        },
        "item": {
          "id": "2e544c9b-cc7c-4c28-9b34-1f3a90e0c9bb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "27fa0b75-7171-4455-9eec-d3e4d78e151e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f351cd-5ab6-44bd-bf6a-7bf248edecaf",
        "cursor": {
          "ref": "40d14c25-a3ae-4db6-abc2-16a7dd4fd3c7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "42361c26-413c-4bc5-baec-03bfc6a03708"
        },
        "item": {
          "id": "e8f351cd-5ab6-44bd-bf6a-7bf248edecaf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "459ed414-c1bd-4051-bc34-4a9a3eef295f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77ce72d-b102-4c64-a610-af121c96e1f5",
        "cursor": {
          "ref": "672578d6-67d9-482f-b7ff-baad84f048d2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "37b63bdb-f90a-4160-8771-f795ba80b226"
        },
        "item": {
          "id": "e77ce72d-b102-4c64-a610-af121c96e1f5",
          "name": "identifiers"
        },
        "response": {
          "id": "f03f7d16-79e3-47ef-9a95-c9162940e38c",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6258e32-b775-43fb-a539-94ddb4cad0fa",
        "cursor": {
          "ref": "dd57ac67-4049-48e9-9996-d27e307d36da",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "189c0ab1-9633-4b0b-98d6-372ec35bfcf1"
        },
        "item": {
          "id": "e6258e32-b775-43fb-a539-94ddb4cad0fa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bcf3693e-3405-42fe-a5ae-934ff814b490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43a820d-51d6-4d71-9191-0ff4b3a63cec",
        "cursor": {
          "ref": "c7e0dd0c-cb26-4692-8f45-0b765795a990",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "30b1bddf-0324-4b33-83ec-420f7df4145b"
        },
        "item": {
          "id": "f43a820d-51d6-4d71-9191-0ff4b3a63cec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e933b0d5-d041-42e9-81ef-7eb1be4ca0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68840098-f39e-43fa-9116-559b06307e7b",
        "cursor": {
          "ref": "032d74ba-2649-4f67-b558-aeb13ff5b597",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b4bbbd1a-b0ac-4c5c-8134-9ded7b28099e"
        },
        "item": {
          "id": "68840098-f39e-43fa-9116-559b06307e7b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e01e3ea1-da6f-4bb3-bf36-bb1eaf00f780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a297f1a-c9ac-41ea-85f7-276037b82510",
        "cursor": {
          "ref": "6e6ce30d-5c69-4432-86cd-8f989bdec00d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7d0ed902-dff5-4cca-85e5-bf1398c864af"
        },
        "item": {
          "id": "4a297f1a-c9ac-41ea-85f7-276037b82510",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f3b745e9-cf70-4c24-9e0e-49d15348685b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b769b798-9163-4bad-95b8-5493d33a0444",
        "cursor": {
          "ref": "b35ef8b4-63f7-4b05-b1e7-a766f577eec3",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "92378f91-e8d2-480a-86b3-2bfb68380a17"
        },
        "item": {
          "id": "b769b798-9163-4bad-95b8-5493d33a0444",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "408f5d69-00c7-4dc7-93ed-61dd79c1b0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab8ff29-9a09-42e9-a069-702c55e66a67",
        "cursor": {
          "ref": "8d26789a-4872-4494-975c-149028c47e8c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "87b5e360-0f03-4bd2-a61f-03246219aa0d"
        },
        "item": {
          "id": "bab8ff29-9a09-42e9-a069-702c55e66a67",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "335035a8-71f1-4f56-87a7-26377cc8e04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83980093-d850-4f7d-a2c1-a867b123a113",
        "cursor": {
          "ref": "6c4b6028-7516-49a5-8b4c-5243bb0d0f81",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2c8e0f86-4444-4be9-be0f-41e66fe1ce92"
        },
        "item": {
          "id": "83980093-d850-4f7d-a2c1-a867b123a113",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fca4454d-92e0-47db-92e5-237e4d9c521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d48e6f-002e-45a9-8198-4bc51f309d2a",
        "cursor": {
          "ref": "afe4c6fe-506e-424d-be9d-7498fb8681ef",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f1096126-e1e7-42c6-8c13-e4b24e6e9a8d"
        },
        "item": {
          "id": "90d48e6f-002e-45a9-8198-4bc51f309d2a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b99c45a0-7357-4d96-a55b-b3e68c31611b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d928c28-156f-4b8a-b714-9ce9972d06ad",
        "cursor": {
          "ref": "3570ba05-a24d-416f-9912-aba12d91d4cc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b90bc88b-56d6-41e5-ab6e-d77666f4dbf2"
        },
        "item": {
          "id": "2d928c28-156f-4b8a-b714-9ce9972d06ad",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a7fd9256-e62d-4024-af60-71bda07daf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479e9f38-f8d5-4744-849e-6c539d94aeb8",
        "cursor": {
          "ref": "b831ca9e-8a8d-4dd1-900a-843e2cefa4f7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e52cbbec-5db3-486c-b5fe-3a0fbad7017c"
        },
        "item": {
          "id": "479e9f38-f8d5-4744-849e-6c539d94aeb8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1639cc7-2d02-41e5-a929-fc642dde903f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980277d-d4b3-4564-8169-9f91e127e44a",
        "cursor": {
          "ref": "7bf40a43-0865-4d8e-9729-ed85ac350a39",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "20a7a733-952d-4b26-a6d2-3825bf583453"
        },
        "item": {
          "id": "3980277d-d4b3-4564-8169-9f91e127e44a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "327b4a07-dc75-49d5-a1b6-e7da61e10f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575d7308-fe99-4fe0-a6db-916ba0e48f92",
        "cursor": {
          "ref": "2eedaddc-647d-4ff4-a46f-76820cb4850b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4f969b27-88f1-4755-ad28-4cbabbffb2f9"
        },
        "item": {
          "id": "575d7308-fe99-4fe0-a6db-916ba0e48f92",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "38bb37a0-e1a6-4c92-a13c-ef5cb00d1028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9777318-0648-43df-ba92-519720d3aafb",
        "cursor": {
          "ref": "5410fd4a-b3c9-47be-aebb-809fc4cecf8e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "086926d6-9a60-4e47-97ce-480285fbb2f7"
        },
        "item": {
          "id": "d9777318-0648-43df-ba92-519720d3aafb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0d68ca50-4ef3-4c57-af9f-f9a4418fe5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf05a8ad-bb9b-40a3-9afd-33b2eac31cfb",
        "cursor": {
          "ref": "5c28f84a-895e-4262-997e-c15d05ed0122",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3e996d5b-3cbb-4ecc-85a0-2fa295f3b866"
        },
        "item": {
          "id": "bf05a8ad-bb9b-40a3-9afd-33b2eac31cfb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f0553fa8-0001-421a-a091-2d97f34b24f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d9d368-5edd-4f69-b35c-6056f81d30d1",
        "cursor": {
          "ref": "6cbbda35-a10c-4deb-a354-b985201fdab9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ee03953b-91d9-4d3b-82ec-e630d4e2a6bc"
        },
        "item": {
          "id": "d2d9d368-5edd-4f69-b35c-6056f81d30d1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b8b6f062-2af9-4977-a73f-c20c598864ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1c74c0-4d39-4ca8-b3ac-e5caf199d05c",
        "cursor": {
          "ref": "0bf32e9d-8a27-4158-a14a-ee2e54d3ece5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "731c264b-af71-4363-a7d4-39d4407819da"
        },
        "item": {
          "id": "bf1c74c0-4d39-4ca8-b3ac-e5caf199d05c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bea099ca-743d-46f1-93c9-6f9f645d90db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b7c019-c3ff-4ebe-ad40-440febcd1393",
        "cursor": {
          "ref": "086c7368-213e-4bf0-a7f8-14203478ec3b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "efdfe0a2-71c8-40cf-8f26-fc6b096ffc9b"
        },
        "item": {
          "id": "c5b7c019-c3ff-4ebe-ad40-440febcd1393",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ba751a2d-0077-4b19-bb45-ae8cb9e11c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf53988-cf30-4f40-bb8f-7af79b0de6d0",
        "cursor": {
          "ref": "053e7032-43a2-416b-9984-c1ef9a9e5124",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "20cc3b84-676b-4a4b-8d89-1e04ef071993"
        },
        "item": {
          "id": "8cf53988-cf30-4f40-bb8f-7af79b0de6d0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "eaebce0b-2b37-4ac9-8337-9f83dda28581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3019ec42-06af-4836-9bfe-9f43faa28222",
        "cursor": {
          "ref": "cfc9f969-4376-4ad6-ae21-1e08e6b7fd67",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8470c923-6cd0-41f8-92e0-f8912f54b7ed"
        },
        "item": {
          "id": "3019ec42-06af-4836-9bfe-9f43faa28222",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b1ba5aad-5619-4be6-8c19-68124a0459ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfdb72b-ff70-4a93-9691-abf8ef9d9947",
        "cursor": {
          "ref": "caf34a80-650c-46b2-b21a-65cd3712f746",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e89b466e-256d-4569-b859-aee9f276d134"
        },
        "item": {
          "id": "ebfdb72b-ff70-4a93-9691-abf8ef9d9947",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f69bb5c7-40d1-43b1-9936-b74b1f99df03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd40369-a6e6-4245-88ce-1da91ec7c20d",
        "cursor": {
          "ref": "4db9c952-b24c-4796-b8cc-16bc96d5310c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1cbe9968-0eb7-4a7d-a7df-b6800d05b1ba"
        },
        "item": {
          "id": "fcd40369-a6e6-4245-88ce-1da91ec7c20d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "749d7936-7ea9-4e6e-a446-a3f9f613335d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79f6443-729d-466c-a99e-dc2aecd26dbf",
        "cursor": {
          "ref": "6bf7b1e6-54cc-48e7-b853-8d498aba7f4f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fe4c48b3-16e1-4525-a5c2-49e56d17ad46"
        },
        "item": {
          "id": "c79f6443-729d-466c-a99e-dc2aecd26dbf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5beebfc7-852e-4c05-8299-8d07977649db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22585da0-d953-4387-94cf-63bd9c3af242",
        "cursor": {
          "ref": "75e91206-30bd-4ac5-9af3-60c265a58736",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6376cc5f-3e9e-45d3-8d69-fc5029ceb7df"
        },
        "item": {
          "id": "22585da0-d953-4387-94cf-63bd9c3af242",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f3a88dc1-1b4e-4946-941c-57b9e3d66a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93989a7-d831-4164-aede-5ac704c7d743",
        "cursor": {
          "ref": "9311a192-c063-49ad-b651-d2adbe6e36a7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8a653135-0dfa-43a6-b419-d3d34629fdab"
        },
        "item": {
          "id": "c93989a7-d831-4164-aede-5ac704c7d743",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ce189e0c-13f2-4a6f-9f78-b0a93a52ce51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf43ca-193b-4636-a531-54c00bebbb3d",
        "cursor": {
          "ref": "912821b7-f77d-459e-bd02-2d0cb57f879e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f1bc06f3-fdda-47b8-8596-97e31fcf635c"
        },
        "item": {
          "id": "a9bf43ca-193b-4636-a531-54c00bebbb3d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "787cb5bc-bc7f-4daa-91ee-4940233f5a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bbbf5c-ae52-48ff-a79d-418ef17541a1",
        "cursor": {
          "ref": "b208a346-839e-412b-bd6b-55f8ef5ab0f0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6a6a4daf-4ecf-4e29-b4cf-bb4724cc3601"
        },
        "item": {
          "id": "84bbbf5c-ae52-48ff-a79d-418ef17541a1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "29718021-a600-4924-9284-7578ce49159c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6efdd7d-0d05-4d32-9868-76cbd24c78fe",
        "cursor": {
          "ref": "06d2ac27-cbd9-49fb-b937-f9d1e271aa83",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7568b762-aad9-4242-b248-1d416d29ccc9"
        },
        "item": {
          "id": "f6efdd7d-0d05-4d32-9868-76cbd24c78fe",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "be8a907b-5d52-4bcb-a5f0-ca04a0f3c347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f8787d-1b43-4491-bc21-32fc5f5979e8",
        "cursor": {
          "ref": "5b25ace1-505b-4f87-bdb6-e267da33ca2d",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "16f8e8fc-ca48-46e3-a1c6-d8991073fa0d"
        },
        "item": {
          "id": "a5f8787d-1b43-4491-bc21-32fc5f5979e8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bbe4fab7-d70d-417d-9a43-5c68a5b3be15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487ac36f-d66f-4b8c-a062-fea35bb88554",
        "cursor": {
          "ref": "5cbbe85c-79c2-4666-a8bd-579bc3173334",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "69b1da44-8562-463c-8424-3843c0b7bc2b"
        },
        "item": {
          "id": "487ac36f-d66f-4b8c-a062-fea35bb88554",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0c9b2de4-afec-435b-b6bb-90c0227bd36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a9c69f-82e5-4cee-b3ea-b9f72de4afc8",
        "cursor": {
          "ref": "acce21b2-7e17-410e-95c2-c73d40664e05",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "68a4ce47-33dd-4b2e-952f-b6cb87ea1bcf"
        },
        "item": {
          "id": "22a9c69f-82e5-4cee-b3ea-b9f72de4afc8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7ed13caf-466c-47a1-a3a9-5cf44bb83143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a6a067-bb30-47e4-8d0c-104c786c4fb6",
        "cursor": {
          "ref": "988a3275-2b04-4c2f-bd2a-8e588706e5f5",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ab8a280-6037-4b37-9fc1-69b56d3902e2"
        },
        "item": {
          "id": "96a6a067-bb30-47e4-8d0c-104c786c4fb6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f3179b50-f332-43b9-95c2-feb8d1faebf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1155a4-8bf9-443a-8689-90323793f78c",
        "cursor": {
          "ref": "1e8c2b43-28ec-44b5-87a7-56295fad8cfb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "915debbb-edee-40fa-a66d-bd9a7707cbb5"
        },
        "item": {
          "id": "4e1155a4-8bf9-443a-8689-90323793f78c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "85680ff7-0d0f-4c7b-bd50-a850d256b5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b6ce7e-294a-4a55-83a4-a3e5ddb03d41",
        "cursor": {
          "ref": "158b3083-cd10-4c7b-b07a-c3595f92d357",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ff531138-ea4b-475b-a8b2-5bc7d1c94974"
        },
        "item": {
          "id": "e2b6ce7e-294a-4a55-83a4-a3e5ddb03d41",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0804bf13-b7b1-477a-ae08-baeb7d71ef56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b87437-1290-4efc-9463-f35637a7163f",
        "cursor": {
          "ref": "12e2ea78-5518-4b24-a00a-de10f163ca7e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bd944d72-6f26-4546-ac49-428a8331bf8d"
        },
        "item": {
          "id": "15b87437-1290-4efc-9463-f35637a7163f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de2203a2-0d4f-4bf5-b71c-c7e434faabfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361a96d7-62fb-48de-af81-ceec77c1b25e",
        "cursor": {
          "ref": "f0a5947e-cf7d-41be-afda-759de8502134",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8546f6e5-e81f-4388-8901-ec7708a3b549"
        },
        "item": {
          "id": "361a96d7-62fb-48de-af81-ceec77c1b25e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "04e667a5-a0f7-415e-8b2e-db3dc294c43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b927d92-08e8-45e6-af76-4af784c5dd58",
        "cursor": {
          "ref": "0ac9c5bd-998d-4475-964f-02ae74ace28f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1dc35bb4-9b4a-44ee-9e58-a3b1ca9cb0a9"
        },
        "item": {
          "id": "9b927d92-08e8-45e6-af76-4af784c5dd58",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e3e1573c-aab6-4567-9603-b8f2588b4d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f203eb96-a921-4f4f-bf17-c42f5190681c",
        "cursor": {
          "ref": "3a064c4e-8c68-4cbc-bb76-4757f79932ad",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b7a7fb0f-5ce5-4251-a6c3-aeb3e6455993"
        },
        "item": {
          "id": "f203eb96-a921-4f4f-bf17-c42f5190681c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "92c838c8-8362-4e02-86fe-7f7df675dfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1767da5c-c576-4c09-a6c8-0d2bda874900",
        "cursor": {
          "ref": "c6e5f8fc-0b33-447c-a998-92aa1ee5e55d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "26618e48-5042-4484-8f5c-97d11087c542"
        },
        "item": {
          "id": "1767da5c-c576-4c09-a6c8-0d2bda874900",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ac085a8-c1be-44cc-8743-c769758a794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7532d3-9266-43fa-88ad-6523b056265b",
        "cursor": {
          "ref": "739b46fe-341e-4bd6-bb5a-0cc1791c6938",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8a7680c6-893f-4c2d-894c-16a243f2825a"
        },
        "item": {
          "id": "2a7532d3-9266-43fa-88ad-6523b056265b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9546e0c3-bf7f-4d29-88b9-301151a0d471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67df9d47-478e-4eaf-b929-b56693067e75",
        "cursor": {
          "ref": "fe6966c9-268a-4ee4-8749-cf9d896440d1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "83993a38-eb39-480c-b755-629200fc85e3"
        },
        "item": {
          "id": "67df9d47-478e-4eaf-b929-b56693067e75",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "19acaf29-612b-4e43-89c5-3623c3387b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936bc39f-d19b-4c6a-97c3-7b3d61807a45",
        "cursor": {
          "ref": "53d6b135-c794-4657-b115-3a56365e1b9b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8adc9300-c45f-4946-81b3-21f48a34def5"
        },
        "item": {
          "id": "936bc39f-d19b-4c6a-97c3-7b3d61807a45",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e745baa3-8c13-4fd2-a4a1-de90c5f40efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6af5545-1b02-419b-9396-13a44730db42",
        "cursor": {
          "ref": "d27fcb3c-4ad3-48f3-b652-8d889e5f0835",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f857f300-88d1-4d31-a11d-1aa2e6042517"
        },
        "item": {
          "id": "e6af5545-1b02-419b-9396-13a44730db42",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "da98219d-0cb4-4b23-bc66-a7548439d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b627eed-0d5e-44f4-9ff2-1bb461fa42d2",
        "cursor": {
          "ref": "1724bee3-286a-4f90-a688-663777cf6203",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "107acaea-9e48-4383-890d-20aea6d103eb"
        },
        "item": {
          "id": "6b627eed-0d5e-44f4-9ff2-1bb461fa42d2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e0bb44cc-2318-4103-9e47-061680c1406e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07c3ef7-5918-4515-8aad-5d17c4199e45",
        "cursor": {
          "ref": "d51cb52d-b137-4966-a195-d1227bb2994f",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "503de446-fddd-4cc8-bccf-872180198b38"
        },
        "item": {
          "id": "f07c3ef7-5918-4515-8aad-5d17c4199e45",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "80d17376-d15e-4b71-990d-cf1323d042f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c19fb17-f7de-40bd-b6e0-55152cfb5917",
        "cursor": {
          "ref": "794b0f51-9d90-4283-a9e3-45cf3652ae2f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6bed205f-d75e-4507-8cd2-19b86c541980"
        },
        "item": {
          "id": "3c19fb17-f7de-40bd-b6e0-55152cfb5917",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "672a2c67-1c60-44ad-a841-30594cea2eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaed61f-9bb7-4b4c-b922-af6f03d69030",
        "cursor": {
          "ref": "a08fbf18-f8ff-48cd-9e5f-9428a8098a6f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "54a02819-a72e-41f4-8a5b-8038cd04c693"
        },
        "item": {
          "id": "5eaed61f-9bb7-4b4c-b922-af6f03d69030",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "86497e9f-6606-4214-82d4-b3ec965c8e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7b8a18-16da-4e84-8a5c-28ef11e653e9",
        "cursor": {
          "ref": "790a6e27-d0c2-423d-8ad9-90c4d568e198",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0eb8f704-5b55-430c-b62c-c11b519d6135"
        },
        "item": {
          "id": "fa7b8a18-16da-4e84-8a5c-28ef11e653e9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f868ed4-fbe8-44d1-924e-57076a231c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abca3f10-e85d-48d9-8bc7-896e7660c993",
        "cursor": {
          "ref": "ffbc6759-5e79-410c-99af-f3abce62b39c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "34f8f5ad-39cd-43b0-90c9-9461dddd5f81"
        },
        "item": {
          "id": "abca3f10-e85d-48d9-8bc7-896e7660c993",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "69094138-b93a-423d-9173-bb050a508615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1498c182-fb7c-4b45-8836-bfe4a8ce0288",
        "cursor": {
          "ref": "91a471b5-484c-4efe-b93f-018194d8c810",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cac508ac-f304-4053-80a7-c34767a8fb35"
        },
        "item": {
          "id": "1498c182-fb7c-4b45-8836-bfe4a8ce0288",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f016eb28-081f-4b59-bdfb-5b1a20d56b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724ddeea-0b68-40a4-a586-18b5606e5c63",
        "cursor": {
          "ref": "5c907885-9a43-4220-a6b3-d5346440270f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4ddc3a97-db4e-4758-bc49-93433fcba3cc"
        },
        "item": {
          "id": "724ddeea-0b68-40a4-a586-18b5606e5c63",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7ca307dc-dd07-4ebc-beab-65f73d9a330f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2119f1de-5401-4182-ac26-22e0b7dddcb6",
        "cursor": {
          "ref": "49e52e5b-ee33-4b34-96f4-281407cd9105",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8e843b54-f0c7-403b-891c-238cd91db4af"
        },
        "item": {
          "id": "2119f1de-5401-4182-ac26-22e0b7dddcb6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "abdf972b-3ad1-4e71-b02e-050d38cda239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69338681-5545-47c3-8702-a2e1d487cb63",
        "cursor": {
          "ref": "065b7318-684c-44b4-9f55-d821593e9f72",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d1164510-1e7d-484f-a7d3-624894083fd9"
        },
        "item": {
          "id": "69338681-5545-47c3-8702-a2e1d487cb63",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e5bb6974-64b2-4a81-993d-cf1c4fb10e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ab03c4-4c6e-45e8-96ff-190073e94115",
        "cursor": {
          "ref": "ffc6867d-4dfa-405d-b8d1-bbb89064e1d4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e4d8af57-7729-4db6-8ef7-0d0a3cd318b3"
        },
        "item": {
          "id": "30ab03c4-4c6e-45e8-96ff-190073e94115",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1dff0732-6a9b-4293-a5ee-7425815e6a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bf40dc-f38f-458d-bd51-4302b9d194ee",
        "cursor": {
          "ref": "ee411ae4-4dfa-4d18-9def-bd26b54888fe",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "23aaea31-05f1-4cc5-ad66-aa195b67aab4"
        },
        "item": {
          "id": "48bf40dc-f38f-458d-bd51-4302b9d194ee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "875b8dae-e3cd-4636-8282-e857c818fa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122e74ee-7c23-44aa-99f9-f6fbfd03fea7",
        "cursor": {
          "ref": "6e706bf5-99f6-4e03-b759-4db112a4d9a2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ed35c590-19aa-4b6f-aae1-63d4f160d4fc"
        },
        "item": {
          "id": "122e74ee-7c23-44aa-99f9-f6fbfd03fea7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8781aa1a-0ddf-4d55-866d-2114df09440d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cd8cd8-51b5-4b57-b178-3e66002addf5",
        "cursor": {
          "ref": "d7c18d8a-bc6d-45f9-bef9-bd4b27fddc2e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "03198036-62d6-4976-a373-00c33d677070"
        },
        "item": {
          "id": "b4cd8cd8-51b5-4b57-b178-3e66002addf5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c296e065-c3c3-406c-8ab4-f7fa42b58e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1ade69-272a-4eb0-a9d9-ecd9320d4dab",
        "cursor": {
          "ref": "4d5d97b0-9ac4-405b-9027-f57ffc741c8b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bb560365-4f44-4127-8ea0-c50098ad526a"
        },
        "item": {
          "id": "df1ade69-272a-4eb0-a9d9-ecd9320d4dab",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fb16fc91-ba93-4618-a21a-9e8a5b1f0dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728fac28-f7a2-46b0-9f91-99925e9594ba",
        "cursor": {
          "ref": "6c442983-10d7-4a36-a050-fb1ced81b70b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cb4e9e97-9825-4a9c-8403-a7602613484c"
        },
        "item": {
          "id": "728fac28-f7a2-46b0-9f91-99925e9594ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ff684827-333c-41b6-a480-0ed45796dfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bf8b59-54ac-48fe-a838-fe8f84ef6ff3",
        "cursor": {
          "ref": "7d51c844-948b-437b-8710-aba183355393",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fb61a808-080c-4737-8927-e1b04489b79a"
        },
        "item": {
          "id": "e1bf8b59-54ac-48fe-a838-fe8f84ef6ff3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d3ecab0e-42c3-4bf8-830a-1abc4af6ed76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18a86a0-9e91-4cc7-bc72-132741b21dcb",
        "cursor": {
          "ref": "52fc13ef-6802-4a16-b9de-58fadf63dfe1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2dda2552-e537-42d2-b339-01587bb9ebfa"
        },
        "item": {
          "id": "f18a86a0-9e91-4cc7-bc72-132741b21dcb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd2de47b-e6ad-42c3-8a8e-09348821959c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8dad19-1a60-4b9f-b204-fabf4d4a696f",
        "cursor": {
          "ref": "a1717a9a-a32e-407f-8489-a28bd50d9b86",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "61a5a4d3-fc4c-49ae-b44c-d9608063e643"
        },
        "item": {
          "id": "9c8dad19-1a60-4b9f-b204-fabf4d4a696f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ad7e64e9-7aa5-4bd2-a422-c16056ce1d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66db445d-1c51-4e8f-a9b6-12f181761c82",
        "cursor": {
          "ref": "64cf4864-2666-4191-a444-fa8571a89222",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3f67a3ff-9432-425b-97ae-ca215b1e8e49"
        },
        "item": {
          "id": "66db445d-1c51-4e8f-a9b6-12f181761c82",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b4ef6191-1a66-4b24-8ede-19ff56cccad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e26ced-1ed1-435f-bea3-f682bb87bc59",
        "cursor": {
          "ref": "f097f08d-f15e-4bc7-859a-3bc83228f313",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0996d90d-07e7-4795-8f98-7b05a2a270e6"
        },
        "item": {
          "id": "e6e26ced-1ed1-435f-bea3-f682bb87bc59",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1c2f6b18-2361-4b4f-b196-7d09fa8cd89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55581ce-314e-4d22-a40d-f2804ab90f46",
        "cursor": {
          "ref": "8b6904eb-8421-4f31-a76b-f91925d64711",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e2090659-0039-429b-8be4-7b3193e25738"
        },
        "item": {
          "id": "e55581ce-314e-4d22-a40d-f2804ab90f46",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3024af45-5b4f-4c46-89bb-154c622507c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97941449-bef3-4912-9014-6ba6c1ae98e8",
        "cursor": {
          "ref": "a6f9fe53-ab95-4495-96f2-cef64aee3fff",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6570bc37-1456-43f4-95ce-b3ba52664665"
        },
        "item": {
          "id": "97941449-bef3-4912-9014-6ba6c1ae98e8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7eefafc8-af52-4709-9ae0-9d7f1bd7a6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de5c7ea-6877-4b99-a684-cb6889d337b0",
        "cursor": {
          "ref": "2e72ecc8-aa3d-4ac6-92d7-31bf0b0a166e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3b6b97c4-29bd-454f-bab6-77c265836b66"
        },
        "item": {
          "id": "1de5c7ea-6877-4b99-a684-cb6889d337b0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "155f3ec9-a12d-49be-a1a2-624e7c2abd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4ef1e8-63e4-43a6-b99d-d8d07b79b687",
        "cursor": {
          "ref": "cf21329c-7bd6-48aa-827d-4fe5ec279fae",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "af050227-5e97-4119-8e5d-f4a0fa981db5"
        },
        "item": {
          "id": "fb4ef1e8-63e4-43a6-b99d-d8d07b79b687",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "305bdf00-bc3b-4a56-9a2d-a6bc8ce1eb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7357922c-e83c-4331-8b2a-1b8986133799",
        "cursor": {
          "ref": "1cfae9ea-a3be-4491-9000-78b6761778b4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "17741567-2498-456c-b119-510bd85aad02"
        },
        "item": {
          "id": "7357922c-e83c-4331-8b2a-1b8986133799",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dde60305-08a0-477c-9b7c-6ff6535c0140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6f5730-d68b-448b-b39f-b287bc3bdfd2",
        "cursor": {
          "ref": "09f49530-b694-40b6-8683-e2feaaf95a6c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b8ce1e16-acb0-4172-a3f7-4c05134d6d55"
        },
        "item": {
          "id": "8b6f5730-d68b-448b-b39f-b287bc3bdfd2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "11debc15-73e7-449f-a50c-abc796da8a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452d4e6c-258c-4f4e-9486-0afd7d2d91e3",
        "cursor": {
          "ref": "084339bb-c8fa-4a20-9c4d-42ba473d14b6",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5fc124cc-2bdd-4182-8f42-3217e5957e2f"
        },
        "item": {
          "id": "452d4e6c-258c-4f4e-9486-0afd7d2d91e3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f14a344a-9800-4653-9ea6-2891cf5bb573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de0052f-c7c6-4d85-bb30-e2587c535edd",
        "cursor": {
          "ref": "ba7d1558-ab86-4dcf-bc22-171f2140c16b",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "465b01eb-01fc-4aa1-acf5-a0319780bfb0"
        },
        "item": {
          "id": "5de0052f-c7c6-4d85-bb30-e2587c535edd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1d49794b-2950-4b7a-82b7-84f5faf31938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eaf923-802f-4f94-a490-445145e38b24",
        "cursor": {
          "ref": "2371d708-0b16-418e-af5c-c47e879a7687",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dafdff2a-e276-4178-8bae-f4e37d4a494e"
        },
        "item": {
          "id": "07eaf923-802f-4f94-a490-445145e38b24",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0cc99337-2a11-479f-9aa1-9672372f519b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4d25f2-aea2-468f-8ad0-a3fd308f89b9",
        "cursor": {
          "ref": "fd6e0441-0e5f-4797-8f30-32d6137f930d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "afb5c837-23db-43e6-a457-d8cd38901264"
        },
        "item": {
          "id": "5b4d25f2-aea2-468f-8ad0-a3fd308f89b9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "187a3ed8-24f8-44da-b050-48dad2594481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462fc1c6-5eac-42a7-be45-64e8baba0fdd",
        "cursor": {
          "ref": "78e501d5-7914-43b4-a409-1a1b346668aa",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "301a4e06-88be-4155-9900-242f015bce79"
        },
        "item": {
          "id": "462fc1c6-5eac-42a7-be45-64e8baba0fdd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "87344b0f-6d39-4825-b672-7d6a921c8caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abf848e-462b-4470-ac5d-85fce93f30a0",
        "cursor": {
          "ref": "0e0771a1-3da3-45a7-8733-031165addffb",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7ff15d48-0bde-4c5c-9d10-2f14e7b0ee9f"
        },
        "item": {
          "id": "9abf848e-462b-4470-ac5d-85fce93f30a0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cc915ceb-bf80-495a-8378-8c1820dce934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2e3a9b-413f-4ee8-92fd-fdee2e076237",
        "cursor": {
          "ref": "c2eb3e18-989d-40ce-991f-563f9095bf3d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "210ec757-1a36-4776-be34-d1cfd1a3daf2"
        },
        "item": {
          "id": "cd2e3a9b-413f-4ee8-92fd-fdee2e076237",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b3e98e88-3ae4-4eb5-9468-15172d45faa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd07d55-b595-4802-9d3e-6ef3bdcbe095",
        "cursor": {
          "ref": "9824c5bc-7ce6-4d11-9585-1e8f4e21dad4",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6116265d-f97d-4f9a-a665-3db3cdb92535"
        },
        "item": {
          "id": "edd07d55-b595-4802-9d3e-6ef3bdcbe095",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5eace4ab-c8ec-481f-a1fe-d184b672f13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc444ac-e526-42d5-ba5a-334a58586581",
        "cursor": {
          "ref": "848e86c2-29f6-4f14-871a-8f9d8989fe20",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6d8f1025-d2ea-4b59-8f46-d322d945a2f7"
        },
        "item": {
          "id": "fdc444ac-e526-42d5-ba5a-334a58586581",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ffe32193-bb74-4ca5-8124-c4831562d4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2cc4b3-dc60-494b-a1b5-9b80559a5a6f",
        "cursor": {
          "ref": "3a4787c8-1449-43ca-a515-44f898670cff",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "25a55e60-01f7-4be8-bece-294db4ce6dec"
        },
        "item": {
          "id": "7b2cc4b3-dc60-494b-a1b5-9b80559a5a6f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "53f572ce-2820-4f17-8078-233a0f15e0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70152ddf-505c-4d09-b5c3-633edf069bb7",
        "cursor": {
          "ref": "e485dda6-99f6-4649-b10e-0786f665db71",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab90b860-b2b9-45a3-8a16-d3398a0e9c9a"
        },
        "item": {
          "id": "70152ddf-505c-4d09-b5c3-633edf069bb7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c888f3ad-b09a-4a16-b693-9a9c09786550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411cb8a3-df37-4490-89d7-b1136b8fa919",
        "cursor": {
          "ref": "4d9384ad-8ea4-4061-9a93-a6e37fe5aa9b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ada09a9d-c386-4344-861c-db873cba5b4a"
        },
        "item": {
          "id": "411cb8a3-df37-4490-89d7-b1136b8fa919",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c69cdad5-ac7b-4010-9fd1-1c0408425c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425ea98-4c20-49a3-adec-1f587a0460b6",
        "cursor": {
          "ref": "38ba0f4b-f25c-4d00-9be7-d1054ad45586",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b15856da-7aad-4c31-bfe6-2a1ba3ff1dd2"
        },
        "item": {
          "id": "a425ea98-4c20-49a3-adec-1f587a0460b6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "94130150-5e4e-4aa9-94bc-aa9375709b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086db3ba-3224-46c8-98c9-0e60c4602675",
        "cursor": {
          "ref": "31740986-9109-43a6-9885-72e22731eaf8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2bccfa84-d636-40ca-b19e-43b34b18ed31"
        },
        "item": {
          "id": "086db3ba-3224-46c8-98c9-0e60c4602675",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "13743a10-48a3-45e4-a4f9-fd27a515b0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448eef35-757b-422d-876b-06f436e072e6",
        "cursor": {
          "ref": "876fd3e3-c331-486f-acc9-1a6cbe52cf5c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "66d6f166-e06d-46b7-9c76-8aee3acf217a"
        },
        "item": {
          "id": "448eef35-757b-422d-876b-06f436e072e6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6e419de7-1e10-4888-92b3-8832e064668f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543e8bf3-2439-4095-bba8-9fb8d59aaa31",
        "cursor": {
          "ref": "6f4d99ee-413e-407e-801e-551a2b0ac58a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be352917-6d08-4226-a0c2-ba2f32546843"
        },
        "item": {
          "id": "543e8bf3-2439-4095-bba8-9fb8d59aaa31",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9087e84e-4725-4d14-8528-2995d96ecf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c7d310-8842-494b-8a6f-e190f9a79a87",
        "cursor": {
          "ref": "a0a17800-adf4-4e14-8890-abd6c1a2fedc",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1bc049a7-38bb-4977-b748-4a9d39bdbc2b"
        },
        "item": {
          "id": "f2c7d310-8842-494b-8a6f-e190f9a79a87",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a6db917-af04-4945-a612-210727c443e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cf08e6-7ef8-45b8-9821-da24178fca7c",
        "cursor": {
          "ref": "2415dfb7-dc52-4ef3-bbb9-401d5ccff54a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "47f50c02-5270-4423-844d-fbf9d2e94806"
        },
        "item": {
          "id": "02cf08e6-7ef8-45b8-9821-da24178fca7c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2a66f14c-b561-4933-b68d-e0ab5483b3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddf4ec3-8cff-428e-b94c-eff6b32fd1e1",
        "cursor": {
          "ref": "c8946e86-dd8a-4f2e-95ba-a57514ca85c4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a409c009-2d57-417e-a605-369623e800e7"
        },
        "item": {
          "id": "1ddf4ec3-8cff-428e-b94c-eff6b32fd1e1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a415db96-7da0-40fb-978e-c4b9b64d0827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9583bb49-418c-46a0-b138-30ad12f23eb6",
        "cursor": {
          "ref": "b1f66cb0-c260-4897-b27b-3c66b63de7a5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9c2085f3-d225-42d2-8a11-67eb84f6ebbd"
        },
        "item": {
          "id": "9583bb49-418c-46a0-b138-30ad12f23eb6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2e31c355-5f7e-460e-bfb8-bed08865893e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ade8b-625f-424c-8655-f926ce16f7fe",
        "cursor": {
          "ref": "d49fe165-faa8-45e2-8c1d-be6713643237",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "61663684-648f-4a8f-a235-c1988d316330"
        },
        "item": {
          "id": "266ade8b-625f-424c-8655-f926ce16f7fe",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "28d876fd-f05b-4fd5-a5cf-c6f28c1e3954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec29759e-ff54-415e-93a5-9d9fbd4046f4",
        "cursor": {
          "ref": "890c0289-84d8-4e02-95b5-bace4af6ce98",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "90ae6ebb-f80f-4776-8d00-ba6d2d48fa86"
        },
        "item": {
          "id": "ec29759e-ff54-415e-93a5-9d9fbd4046f4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f6dc650d-fa23-433e-b1f5-96f2fd0d58e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba432a7-3136-4b97-be92-8e01ddef07cc",
        "cursor": {
          "ref": "89f9fbe5-d1b9-4c03-b6c2-907a71e1d904",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0413f4c3-5afb-4ee3-ab51-f0ad9414c419"
        },
        "item": {
          "id": "2ba432a7-3136-4b97-be92-8e01ddef07cc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0623057a-2007-4a4f-81c0-574a94dc14cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea2e041-da7b-4c5a-bf08-a46aba35f5b2",
        "cursor": {
          "ref": "f926bb23-06df-45a1-b351-082e82e5e889",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3ca0defa-0d5c-4f59-9b08-ae15df278ed3"
        },
        "item": {
          "id": "3ea2e041-da7b-4c5a-bf08-a46aba35f5b2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cc9223ee-d74b-49b7-99ea-e2a05ad56347",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa99f77c-6f3b-4a47-b1ca-6ab9b5b0c316",
        "cursor": {
          "ref": "541018a1-3e03-4e18-97e4-1691db7ed922",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c4300f9d-94eb-4fc9-bbed-67c8d676ecd3"
        },
        "item": {
          "id": "fa99f77c-6f3b-4a47-b1ca-6ab9b5b0c316",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "de0e255d-2cca-48c4-b6aa-e94ded13378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "beb5b320-c736-4190-adef-1b8f72531219",
        "cursor": {
          "ref": "ccc60617-d6f6-4ce6-b2f0-c789553bf517",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ad63512d-a9aa-4a87-ab04-6b8410785440"
        },
        "item": {
          "id": "beb5b320-c736-4190-adef-1b8f72531219",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8333116b-0f34-4a49-906c-d36c7705dbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1b2af55b-2271-41a5-a82a-613a5b9d3e7d",
        "cursor": {
          "ref": "b96fa20d-3705-491c-8074-e2e1f64adb3b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aca84adf-e725-4640-a5a6-91501182eefb"
        },
        "item": {
          "id": "1b2af55b-2271-41a5-a82a-613a5b9d3e7d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e14e0c06-e2e2-4754-ae1e-6b8b1578ed0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "150200e7-b7c9-471c-90b8-f9bb76507e5e",
        "cursor": {
          "ref": "b026eaab-1e09-46c4-98fc-288be4f72a41",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5540426b-0f0d-491d-b038-074e7e3f2082"
        },
        "item": {
          "id": "150200e7-b7c9-471c-90b8-f9bb76507e5e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "19b6717e-7dee-4e9c-b82b-66365caf385f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3c88e5d0-1218-48dc-893f-8403a36a0b43",
        "cursor": {
          "ref": "9556d7db-68c7-4ace-ae2b-8386672f2277",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e6e70b54-4079-4888-9721-3969787c859f"
        },
        "item": {
          "id": "3c88e5d0-1218-48dc-893f-8403a36a0b43",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dd535701-9b60-4415-a686-dd16a3734dc2",
          "status": "Created",
          "code": 201,
          "responseTime": 8459,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79e6d7a-e956-467d-9562-3707989ec5d0",
        "cursor": {
          "ref": "9e808f93-21bf-40ab-9b6e-fae80dd49854",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "10494166-87bd-4f5b-aade-3174b2966058"
        },
        "item": {
          "id": "a79e6d7a-e956-467d-9562-3707989ec5d0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b186f41b-bafd-4e0e-9196-7d51eafbddcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "66b23f81-6cd9-46cb-baba-c05844c3a74f",
        "cursor": {
          "ref": "80b7a7c7-afc1-47be-80c0-434353ffb6a9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "92bc0eff-8a9c-44de-addc-5d43d3916bc4"
        },
        "item": {
          "id": "66b23f81-6cd9-46cb-baba-c05844c3a74f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3e2c105a-ead8-407f-9c4e-856b471c786b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "63dc91ec-47cf-4ab0-ac06-c1875e267203",
        "cursor": {
          "ref": "2c61933d-3f76-4ceb-912e-bf7a2e849b8c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a19a719a-a2da-4072-abb1-7be5af2e0d5a"
        },
        "item": {
          "id": "63dc91ec-47cf-4ab0-ac06-c1875e267203",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4d6e8e72-ec01-4299-8f47-f2b2aa1c5cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b121e54-6354-4e7b-92b8-d0e53b5345ad",
        "cursor": {
          "ref": "0044f1f8-4c12-4740-817f-5685b2f38896",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "760ba376-65b5-493b-9312-54ef0ec3b0d9"
        },
        "item": {
          "id": "5b121e54-6354-4e7b-92b8-d0e53b5345ad",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ca403cd4-e516-4bba-b6ed-5ee366d68555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719b1156-c66e-4ab3-ac2c-52e452748324",
        "cursor": {
          "ref": "49cfc257-677f-4eae-8f25-ca42572345d4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a434a238-57e0-4677-9a75-97de530d9c7f"
        },
        "item": {
          "id": "719b1156-c66e-4ab3-ac2c-52e452748324",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d504dcd1-e5b8-41e3-8049-e36a8aa71f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5b92c2-4c9b-46bb-b473-1c1fa9b08df8",
        "cursor": {
          "ref": "3fe3460f-bd54-4df7-b9bb-cd050b9525a1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3f1f1da9-d249-4e3a-a0f2-6b7a43faf70b"
        },
        "item": {
          "id": "ff5b92c2-4c9b-46bb-b473-1c1fa9b08df8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ea0cda4-9382-49b9-bca7-b1ba9ad46397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ef98fa-a798-40f4-8928-bd5a27cae9bf",
        "cursor": {
          "ref": "65b908f0-8813-4e0f-bfbb-f3dcb54c94cd",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d74e23db-29cc-4e8e-8201-66600049e342"
        },
        "item": {
          "id": "c6ef98fa-a798-40f4-8928-bd5a27cae9bf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7905ee3e-61e9-4f4c-bfdc-901b33b5ffd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c76bc68-379e-47e8-8060-263035a754d8",
        "cursor": {
          "ref": "159e60fa-8905-4509-8393-72a42502ca42",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "76eec8e6-1f55-4799-b02c-61b26942fe60"
        },
        "item": {
          "id": "7c76bc68-379e-47e8-8060-263035a754d8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3bbac949-0619-4a4f-bf07-f1e48037e781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5974a5e9-18c1-42a5-a0af-52208b3c931e",
        "cursor": {
          "ref": "9542844e-b8f8-4c6e-93ba-3700b67c46fe",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "36de373b-94ce-4691-92c8-af1686823755"
        },
        "item": {
          "id": "5974a5e9-18c1-42a5-a0af-52208b3c931e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb9a07b7-bc3b-437f-95db-ad67361a4b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d133413a-7c4a-4799-adef-b3da144fd81c",
        "cursor": {
          "ref": "cde30f8b-6e79-413b-bafb-5d4ba412d9f1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7088d182-0ab6-41e5-b5bb-2e79a20afa2a"
        },
        "item": {
          "id": "d133413a-7c4a-4799-adef-b3da144fd81c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9089d059-fd58-44b3-a972-43eb79683641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61367e11-d965-4005-a6ac-c7b171520e33",
        "cursor": {
          "ref": "a63c1c0a-acdc-49f1-98aa-7b8dec78195b",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "868e708d-ec29-4100-9efb-b9ae9c4b9e61"
        },
        "item": {
          "id": "61367e11-d965-4005-a6ac-c7b171520e33",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "575efbdc-e5d0-48b9-b933-bc739d67acf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177e874-a324-4492-b489-d402e28207ae",
        "cursor": {
          "ref": "41ca97bd-f7ca-4ebb-a261-5b4dccfa48f5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "19f95352-2afe-4403-abc9-61af82c993fc"
        },
        "item": {
          "id": "4177e874-a324-4492-b489-d402e28207ae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "682d6ea4-a559-4bab-af71-0ff6c8f6c2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae95e47-3a09-4e8f-9960-4f8244239e81",
        "cursor": {
          "ref": "917da773-363b-4e2d-af82-3ebe7558dfa0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3dd0ec10-a775-4d20-807e-0b397008dfc8"
        },
        "item": {
          "id": "8ae95e47-3a09-4e8f-9960-4f8244239e81",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a2a559ed-45c5-4d1a-ba08-ab705bb70cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc39cfdb-97e5-44a6-abd8-c66b27d2c835",
        "cursor": {
          "ref": "c37c24f6-2aed-45d3-9797-ef3b13bae33b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "352651b3-e4aa-4e06-8329-159e2a9cf544"
        },
        "item": {
          "id": "dc39cfdb-97e5-44a6-abd8-c66b27d2c835",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "969c0ae3-8130-419e-994c-983e49191649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2aeb7f3-7d0c-422a-b3b5-bec15e9867c5",
        "cursor": {
          "ref": "aef26505-0958-4461-9d23-7c1b41d5853a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a2b10226-dc99-47a5-8c9e-182d2dcb31ca"
        },
        "item": {
          "id": "f2aeb7f3-7d0c-422a-b3b5-bec15e9867c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0197ca5c-74c8-45dd-8c90-eddd536ac64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c32dd06-b1a4-4b75-beec-23bfb03b59d0",
        "cursor": {
          "ref": "e1dc1aad-162f-4ae5-847a-2eeb2bbc049d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a07e509a-e35a-4501-9335-0f633444d03d"
        },
        "item": {
          "id": "8c32dd06-b1a4-4b75-beec-23bfb03b59d0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "60e397ce-6964-42cb-85b7-0f80cacf3456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb19f7c-e7e3-48c5-893c-0a38de97d66e",
        "cursor": {
          "ref": "7a8bfb0a-5b06-415f-91bd-6b80f7ae2a8b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5e329628-7459-4e61-80c4-d09d4584fa60"
        },
        "item": {
          "id": "3fb19f7c-e7e3-48c5-893c-0a38de97d66e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7972574c-9fe8-4b65-b0d9-8e331beeb23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aea48ab-60d6-4208-9fb7-9d46bb1c5f8a",
        "cursor": {
          "ref": "df1cb516-d184-448a-bae1-ac25c3c87d5f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "566bf076-ac19-4765-a27b-6a703251c4fd"
        },
        "item": {
          "id": "2aea48ab-60d6-4208-9fb7-9d46bb1c5f8a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5e81df09-77e7-4c9e-8d0c-ec38f3ada81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b845a10f-14a5-4241-b2d9-1b88b6d9f68c",
        "cursor": {
          "ref": "e12399f8-7a2a-4625-a9cf-6745e3a04e3c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6bc5b6b3-6fbb-44f2-b51d-83213efd75ee"
        },
        "item": {
          "id": "b845a10f-14a5-4241-b2d9-1b88b6d9f68c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0bc62205-8d95-4fa1-98ff-f38e50f6b1b7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 191,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "2893956d-ad26-4b8c-8d3f-5151e3095bae",
        "cursor": {
          "ref": "40da0129-d4a7-412b-9e7a-856968785a03",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a2239317-ab95-4fec-9e88-f4b9352eb07c"
        },
        "item": {
          "id": "2893956d-ad26-4b8c-8d3f-5151e3095bae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a3c15af7-47a9-4226-b196-9127714d39f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1742893f-3b05-4e05-8056-002dc2f3923c",
        "cursor": {
          "ref": "13a80c6a-db18-4a49-914a-976c809849b6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "09cfd212-f97c-4cf1-a0b8-b1090a28a42a"
        },
        "item": {
          "id": "1742893f-3b05-4e05-8056-002dc2f3923c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc42937b-760d-46f9-a8d2-d9b78c96d761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3fb9b5-177b-4af9-8af1-c425cdb188d7",
        "cursor": {
          "ref": "86ac9f38-a38c-4175-8508-59cbd0c9e53c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "13cb5da9-bfe4-4a1c-86f8-2cd04fe890e9"
        },
        "item": {
          "id": "3f3fb9b5-177b-4af9-8af1-c425cdb188d7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d85e7959-786b-403f-ab24-cc53ca3a257c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde736e3-34ae-4925-874a-5090c739b74c",
        "cursor": {
          "ref": "8b848f37-6cae-4dc4-a389-073eb6f65e48",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ff1105de-a96c-47ae-94bf-5465b2fb772b"
        },
        "item": {
          "id": "dde736e3-34ae-4925-874a-5090c739b74c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d10ad491-e323-4b0e-a5ba-492edf9c35c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b4e6d9-904e-413a-a287-13c094551e1c",
        "cursor": {
          "ref": "a5bc0df1-c6be-4c8f-a130-6648071f951b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0276f89b-8fa0-4439-91ef-7784895ecfd9"
        },
        "item": {
          "id": "83b4e6d9-904e-413a-a287-13c094551e1c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5442f348-3fa1-4b79-b60e-0d129478c990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cf0625-39a9-4204-8a5c-88cd05c12ff0",
        "cursor": {
          "ref": "2a0709f8-cc66-4883-9585-590ae1d43631",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "333996d3-08cc-4414-977a-902fcddaaf7d"
        },
        "item": {
          "id": "f8cf0625-39a9-4204-8a5c-88cd05c12ff0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "271c8ba5-3423-44f6-9575-abbfa1033128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075f3401-633a-4d39-9c44-67498e64b051",
        "cursor": {
          "ref": "b7ab57dd-98cb-4fec-bc9b-e2929b7bb923",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bb4f375d-6c67-471e-99f6-2736c97d1b22"
        },
        "item": {
          "id": "075f3401-633a-4d39-9c44-67498e64b051",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d6feae8b-6786-4510-907b-d7d9ba4914c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fb60d3-8fb1-4c26-8faf-1c4588caf3a6",
        "cursor": {
          "ref": "e353c34d-0975-4e47-b444-82e6967adbe1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "000f2d5d-6386-4f11-8c8e-2cb8adb2ef63"
        },
        "item": {
          "id": "83fb60d3-8fb1-4c26-8faf-1c4588caf3a6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1f3af875-93d6-4ff3-8eee-f4c0073293c6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "f174e8b1-9776-4b57-a545-a92d478aecb1",
        "cursor": {
          "ref": "cb8a6ab8-6c99-434f-9460-ce140293b312",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "051de06c-ae6e-4055-8ace-4297888a2b7d"
        },
        "item": {
          "id": "f174e8b1-9776-4b57-a545-a92d478aecb1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "188f7355-5007-4519-bbdc-cc2eb953c2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b260ba7-a701-4954-9aa7-295fe0ec15ad",
        "cursor": {
          "ref": "3722a883-f345-4e81-a962-eb8f11c755d3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1021f386-c2a3-4a0d-9b5f-bd8fd017882b"
        },
        "item": {
          "id": "6b260ba7-a701-4954-9aa7-295fe0ec15ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5cc859d0-6cc2-44e5-84cf-4aaf3dd3deef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a1c7f6-1868-4d89-9cfb-f010792bccb1",
        "cursor": {
          "ref": "de26d7cf-ac41-4b89-b406-15850f5e068d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d6aa6689-3d96-4dde-a12e-34d8c41a6a25"
        },
        "item": {
          "id": "58a1c7f6-1868-4d89-9cfb-f010792bccb1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ca449ba-b737-40e6-b355-70ee2f64d844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411ec178-5a05-42da-b673-5671797542be",
        "cursor": {
          "ref": "744710f3-6cf5-4101-8c76-5cea17564aa9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3fe15248-2ed1-45dd-805b-826a748ab529"
        },
        "item": {
          "id": "411ec178-5a05-42da-b673-5671797542be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ac84826c-8437-41db-94c7-d9ca76a673a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eda6fc4-f21e-446c-adf8-78767213cbfb",
        "cursor": {
          "ref": "fbc5776a-cf3c-4abf-ad59-e0502525b31c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5878f0e9-efe1-403b-860c-b540dd534bb7"
        },
        "item": {
          "id": "0eda6fc4-f21e-446c-adf8-78767213cbfb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "96a611c7-2447-4dc5-8152-32c148512cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127920b8-9816-4c9d-b780-c6b936cd46da",
        "cursor": {
          "ref": "f6b44b14-ac2f-45f0-b79b-f1e73a063c8f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a21216d7-28b1-403b-bdba-d8ef09d9f7fb"
        },
        "item": {
          "id": "127920b8-9816-4c9d-b780-c6b936cd46da",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a3b38927-7046-4ddc-9c8b-3bc7c66e7dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3460bf-03c6-4ac5-b30c-e61ae0c28eeb",
        "cursor": {
          "ref": "8d377a25-f88a-4aec-b3c6-31be389487a5",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "442eb9eb-024a-4fe9-ab7d-c07f30c32341"
        },
        "item": {
          "id": "7d3460bf-03c6-4ac5-b30c-e61ae0c28eeb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "eb139d04-4a4d-4bbc-b230-86bda1e22680",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 100,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "aa9bc643-4153-410b-a57c-85ddc058a384",
        "cursor": {
          "ref": "24199c3f-ce1a-4c12-8034-498114d310be",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0944e4db-b15f-49c9-9e3e-36bd08744c15"
        },
        "item": {
          "id": "aa9bc643-4153-410b-a57c-85ddc058a384",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0b0ca76-a1e6-491e-ac12-e935ac7cf6a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdf90ab-e1b5-4f05-9e9a-412900e14cd4",
        "cursor": {
          "ref": "a11329d0-4197-4118-a558-889031c7fc1b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "66d97349-92d6-432a-8256-5760bcb67f15"
        },
        "item": {
          "id": "6fdf90ab-e1b5-4f05-9e9a-412900e14cd4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "843b09d8-e64c-469d-a96c-64aadf60fc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b4b816-aca4-4e8f-beca-615054f92110",
        "cursor": {
          "ref": "45d7be4c-7e20-406f-8e01-bd6f9f6df282",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d932d95f-0f98-455c-b26f-1572ebda5bae"
        },
        "item": {
          "id": "66b4b816-aca4-4e8f-beca-615054f92110",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a974584f-073b-413d-a032-55dc2bec0814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdc5105-6549-40ea-a283-0cedd54f4d8f",
        "cursor": {
          "ref": "80a21276-fc68-4893-9f4c-679fc878bd8c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c7c617ef-8170-4f6b-a4f2-fd091795fe67"
        },
        "item": {
          "id": "ebdc5105-6549-40ea-a283-0cedd54f4d8f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "74eacd21-6f65-45d4-bd7c-6954f5b7af99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb459479-5197-4358-af54-d9757e0cdb6f",
        "cursor": {
          "ref": "e658d39e-a7ad-4817-af2b-fd61d33602f4",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ce257686-a8e5-4854-91fd-5248899c6d22"
        },
        "item": {
          "id": "fb459479-5197-4358-af54-d9757e0cdb6f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c2c31d7f-c221-473e-9f4f-5064164055d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01458436-c5a2-487b-b160-402ac2eba680",
        "cursor": {
          "ref": "649ddee2-9e1d-4d43-9dba-dba9201f5103",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d1d1f605-86a8-4bbc-b832-1ed68edf0eab"
        },
        "item": {
          "id": "01458436-c5a2-487b-b160-402ac2eba680",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44739376-c27a-4a90-a3f7-67d7e9bbc6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb8c66c-afd5-4f21-b8b5-d55c785a7fab",
        "cursor": {
          "ref": "5851eaab-2dbf-4c1c-b513-09628f677ed8",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "092e732c-99bd-4559-930c-e5991a4015eb"
        },
        "item": {
          "id": "ebb8c66c-afd5-4f21-b8b5-d55c785a7fab",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7120ca23-2590-4f99-ac38-9a5c84139790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d3ca3d-6821-46ae-8ea4-ef726aed62df",
        "cursor": {
          "ref": "4e1e9ed2-851f-4737-ac7b-5cf975a8b7ea",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "624f2a91-d188-473d-8b0e-f648406351f1"
        },
        "item": {
          "id": "d6d3ca3d-6821-46ae-8ea4-ef726aed62df",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1e33fae9-be06-49a6-963e-f9e28c924c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98da7f3-6330-4df3-b702-52d5bc038d0d",
        "cursor": {
          "ref": "af566700-0c1b-43f8-9253-e411d5a15888",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c42d8db0-ce43-4c93-b9aa-280f3a794f80"
        },
        "item": {
          "id": "c98da7f3-6330-4df3-b702-52d5bc038d0d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "37575064-a7a7-4a18-876e-c94e2f394557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fb9eac-64c7-412a-85e3-720b8cbc2ef1",
        "cursor": {
          "ref": "e53c1b46-985b-459b-86f6-3cb5be71f7c1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "354f5df2-1ffc-483e-a82f-d9a3bbe5ff1c"
        },
        "item": {
          "id": "c5fb9eac-64c7-412a-85e3-720b8cbc2ef1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dda6bef2-10a0-49f0-bdd6-294a81227044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b3f472-4196-4cae-8733-7a33545b08de",
        "cursor": {
          "ref": "f4224b52-406c-440f-8ee9-aa629ccfe202",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "192ed331-e23f-4e56-b0ab-02d0de911c4a"
        },
        "item": {
          "id": "f6b3f472-4196-4cae-8733-7a33545b08de",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c39f360a-5e26-4f06-98bd-741566b9fb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaad4a1a-33c4-48a7-b7dc-954e5f70684d",
        "cursor": {
          "ref": "b4a1665d-a165-4006-b432-89dc873b8548",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f7d78382-743a-43f9-a2ee-69c2bb050742"
        },
        "item": {
          "id": "eaad4a1a-33c4-48a7-b7dc-954e5f70684d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "34134a21-39a1-4db1-aa96-d864f451bf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b7e9f6-ba5b-481f-8c42-a6a2010a0e0b",
        "cursor": {
          "ref": "3bb7c711-a8c7-45d2-8c66-3d9f7c8ae4b9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0b80f3a8-b97a-4a71-ab66-e7c54f0bf9d0"
        },
        "item": {
          "id": "94b7e9f6-ba5b-481f-8c42-a6a2010a0e0b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a93016bf-8263-4bf6-9f3d-521861a92a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e1e3e3-ce47-4d85-b620-6f2bd8901439",
        "cursor": {
          "ref": "5951510b-c076-4a7f-9b5d-b3da854e3a87",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "043103a5-8dcb-41d1-8227-4f56f8230b77"
        },
        "item": {
          "id": "98e1e3e3-ce47-4d85-b620-6f2bd8901439",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "53dd5c7a-3280-4412-b663-c29a84fa4dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e1e72-a692-4905-835e-8649d79fce5c",
        "cursor": {
          "ref": "84dc3274-47ac-4d7e-ab8b-e875232f3a90",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8dee95b6-c7b1-4887-8df6-5bb81aeebf35"
        },
        "item": {
          "id": "905e1e72-a692-4905-835e-8649d79fce5c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "48448028-a090-4eca-b40e-3d8390e98139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa79215-9e34-4eb2-b8d0-4ad420a5e4a8",
        "cursor": {
          "ref": "d748bca3-b8b3-450d-9e08-be1169bd14ac",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f3358da-e256-4073-b3ef-3238326b02a3"
        },
        "item": {
          "id": "7fa79215-9e34-4eb2-b8d0-4ad420a5e4a8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c4236588-c9b2-4d31-997e-fdfd18a03c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43742d17-bc00-46d9-b644-e142a4b91775",
        "cursor": {
          "ref": "95e9920a-f315-483e-8bb7-37983739dc35",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ec63957c-8ddf-4dc1-ad88-ccab85069d86"
        },
        "item": {
          "id": "43742d17-bc00-46d9-b644-e142a4b91775",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e235a28f-3020-45fb-920d-a1e50e272a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb72f08-b05c-4d65-bfe8-6309b3fc1912",
        "cursor": {
          "ref": "080219cc-df30-496f-a36a-6b24030a0ef4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "35d75383-5be8-4a53-8d6c-6f8890e3d007"
        },
        "item": {
          "id": "2bb72f08-b05c-4d65-bfe8-6309b3fc1912",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8676ee84-e72f-4a88-80fe-cacefe6b128b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "57e3925a-8064-407e-8f55-07b14d0b8cf5",
        "cursor": {
          "ref": "12f586bc-305b-4c19-b971-da5bcce39d11",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3d92748b-99fd-4edb-803c-40a165843457"
        },
        "item": {
          "id": "57e3925a-8064-407e-8f55-07b14d0b8cf5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d1e632de-c764-4a2f-8948-40b7fdcd1f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3785278-6125-49b3-a07b-174ea9f892c2",
        "cursor": {
          "ref": "b2f26c90-34e5-41a5-a659-c900bc66cbcf",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ff065193-4515-45c8-a9a6-4f35409f078e"
        },
        "item": {
          "id": "d3785278-6125-49b3-a07b-174ea9f892c2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "594a9208-327d-406a-a4e7-8219a8c21e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54251221-bd5f-4576-8cb5-81329f466d82",
        "cursor": {
          "ref": "71787e1e-6e74-44f5-96ce-b509619476de",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "18871f14-41e9-46f4-a2bf-e63a32b81331"
        },
        "item": {
          "id": "54251221-bd5f-4576-8cb5-81329f466d82",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6345753f-b2b7-43c8-88d5-985f9792c430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2a5e0b-3a46-4f39-b168-7921aa46c6e2",
        "cursor": {
          "ref": "ed68f09b-ce39-4461-b2ee-079ffa06e231",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e1179270-9877-4a7a-90e4-edb2a00a9c81"
        },
        "item": {
          "id": "7b2a5e0b-3a46-4f39-b168-7921aa46c6e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a901c45c-0362-428c-8d67-a2ced7f5a5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec90fa86-709a-4d64-9f5b-bfb55f0fce43",
        "cursor": {
          "ref": "e4be2676-5418-4588-878f-b48ff8981dda",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "77cf65f1-ed1e-4e96-906a-67c172adadc7"
        },
        "item": {
          "id": "ec90fa86-709a-4d64-9f5b-bfb55f0fce43",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a7f42220-21a0-4f9a-89a4-785e00ed0192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe3fc23-3574-4bc0-aa7a-36cb857c0825",
        "cursor": {
          "ref": "743e3b52-3ab2-488d-b519-96b464f4e802",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c49df977-627e-4a37-900c-a8650a09cbf9"
        },
        "item": {
          "id": "efe3fc23-3574-4bc0-aa7a-36cb857c0825",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2a4c7a41-b5fa-42bd-86dd-9a205b6e4f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec66229b-4ec2-460f-9237-0f64eae9c878",
        "cursor": {
          "ref": "1256f442-3310-46ad-9766-dc371aa61941",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65a97481-f350-42b7-83fe-1b14d7c961f4"
        },
        "item": {
          "id": "ec66229b-4ec2-460f-9237-0f64eae9c878",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9f47b899-2686-4dd9-9fdb-39436de611f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fa08d9-aaca-494c-b6dc-89cf023ffdd8",
        "cursor": {
          "ref": "6ebe022e-0fae-404d-b667-62826eac68cc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f48a78f4-893a-44f2-8a51-649bbd3f839c"
        },
        "item": {
          "id": "11fa08d9-aaca-494c-b6dc-89cf023ffdd8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2167c7cd-6375-45b3-86b4-d0b4bc09fc1e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "7185fd60-4fa4-403a-a45a-d05cd41ae79a",
        "cursor": {
          "ref": "67b3b1c2-77dd-49bd-89c2-1cdb37fb1fdd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a356247b-8fb2-4f05-8e7c-4fdfc6f3addf"
        },
        "item": {
          "id": "7185fd60-4fa4-403a-a45a-d05cd41ae79a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "57ef9c2c-84b5-4864-80e4-8783e21e9906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eebfda1-4547-4474-9e6c-68fe89e76737",
        "cursor": {
          "ref": "7d5f8db2-0eb0-4b8d-bde8-2465ce30a18e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "643e5659-11a8-4fa1-a0bd-8695611e02e2"
        },
        "item": {
          "id": "5eebfda1-4547-4474-9e6c-68fe89e76737",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96b9fd71-7296-4319-a72e-c00ebec802a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2967b9fc-a86e-405b-9e0e-b6825f4a1ff2",
        "cursor": {
          "ref": "3cb7e0d4-167a-4327-9eb5-2ae13de0a411",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "790ab389-2a65-4e31-99de-e7c72c099ead"
        },
        "item": {
          "id": "2967b9fc-a86e-405b-9e0e-b6825f4a1ff2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "177fcb98-db2c-4ab7-9821-a305744b34f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a8fd42-d4c4-4599-bb58-90a598b1c4cf",
        "cursor": {
          "ref": "4366acef-b600-436e-bcd9-0c6f1c71f6d1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2584e57c-b1f3-4765-b058-71c80c71e0cf"
        },
        "item": {
          "id": "b5a8fd42-d4c4-4599-bb58-90a598b1c4cf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7812a2b4-fa78-40d0-942d-d5047318b160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb015de3-b38e-4e70-b875-74a407618920",
        "cursor": {
          "ref": "90f047c7-1e73-4d81-b564-3675e5dfb8e9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d72d69f-765c-491c-b442-9b760e907f17"
        },
        "item": {
          "id": "fb015de3-b38e-4e70-b875-74a407618920",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "519cdde5-6704-4939-b5a2-152c961f052a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec11755-30ee-49aa-adcb-10e6f2c0227e",
        "cursor": {
          "ref": "70f58307-bef3-465d-91fa-5b1a5819e0d9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3633ffed-7496-4d73-b36e-53cc7654fba0"
        },
        "item": {
          "id": "4ec11755-30ee-49aa-adcb-10e6f2c0227e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8f12bce9-dda2-4f53-a998-8b299ae152d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948c490f-1514-4eff-858f-5c30a51b4416",
        "cursor": {
          "ref": "8ec1c8c4-0c8d-4f22-92bb-4ec0d4df310b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aef30072-4790-464d-9031-9d795d49dcec"
        },
        "item": {
          "id": "948c490f-1514-4eff-858f-5c30a51b4416",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ad898c47-b4bd-4653-991c-31a3dfc08837",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "dd9c8c64-4d6b-46fd-9419-cab09cc19e7b",
        "cursor": {
          "ref": "68172230-e60c-45d0-9438-bb50ab38f371",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1e2168d4-cd22-4b7e-88b7-aade38f4fbbe"
        },
        "item": {
          "id": "dd9c8c64-4d6b-46fd-9419-cab09cc19e7b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "93410fd0-5802-4247-9a9a-d39818726cfb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "9b1a071b-1b3f-42e9-9609-29ba948fabe3",
        "cursor": {
          "ref": "7580e00f-98d8-44e7-b788-7af81b3eb710",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "62186ff5-2762-4591-9024-1d53972ffad5"
        },
        "item": {
          "id": "9b1a071b-1b3f-42e9-9609-29ba948fabe3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "39a83410-dbaf-4ff1-8a02-8f693f318107",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "6b42a9a1-daf9-476e-8991-291b861f3e30",
        "cursor": {
          "ref": "d44f68e8-198e-42e0-84e6-c0f18c9de8a9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bcc5f504-6aef-4c34-b0fc-9af9fbb10f42"
        },
        "item": {
          "id": "6b42a9a1-daf9-476e-8991-291b861f3e30",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0692aabc-65e7-44de-80f9-35bd5a52f781",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "b9f7571f-2bf9-4bdf-ac69-f779b2536888",
        "cursor": {
          "ref": "364b2fb7-4d48-457a-a569-6a8bcb04dae6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cac4b058-f669-405e-825a-1b1a2c1e37cb"
        },
        "item": {
          "id": "b9f7571f-2bf9-4bdf-ac69-f779b2536888",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "23fed31f-159c-4d4c-83fe-4931f82fe7c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 126,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "f9a0cc35-0ab2-4767-8ee3-eda6f71625ba",
        "cursor": {
          "ref": "f416b4fc-1b90-40e9-bb8b-2f1f334988de",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "04c95a09-467a-43c3-b585-d389502cdc6d"
        },
        "item": {
          "id": "f9a0cc35-0ab2-4767-8ee3-eda6f71625ba",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "51a07f91-206a-470b-8d2f-c3941a1787ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "9cc09111-d8c1-4ea0-ae18-53ea45f4ad98",
        "cursor": {
          "ref": "e61107ce-f3d8-43ea-aa21-aa87df1a0d07",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dcc396bf-7e53-4c60-b123-45106cc3afb2"
        },
        "item": {
          "id": "9cc09111-d8c1-4ea0-ae18-53ea45f4ad98",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7924c15b-2dd9-4468-9d14-49b8c65c453a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d2874e-e102-4ad2-99b8-1069f926a73a",
        "cursor": {
          "ref": "6fc87fc3-bd28-4827-bfa2-43efb8ec9a53",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cd8c0f84-6c58-4765-bed3-c3b4559acd36"
        },
        "item": {
          "id": "45d2874e-e102-4ad2-99b8-1069f926a73a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e1195c55-a6d4-4f88-9fd3-adf0f24a0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af490e4-2326-45e2-946e-b3e57f216ced",
        "cursor": {
          "ref": "a5c6d43f-4e53-456d-9b7f-c369f20f2f72",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1b5ccc72-490f-4083-998d-0d60a1fb6125"
        },
        "item": {
          "id": "6af490e4-2326-45e2-946e-b3e57f216ced",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9ebf248b-5cac-428e-8a32-aef22a1f4d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e1a4b1-8176-4fc1-8c3c-f8e1c64033e6",
        "cursor": {
          "ref": "66d2f0a0-b55d-429d-8a61-b5fdf5f78819",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "05f06548-e452-4412-a3ad-0bcbbfd236bb"
        },
        "item": {
          "id": "d0e1a4b1-8176-4fc1-8c3c-f8e1c64033e6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d27ca22-de53-4b58-9066-3640a45b5053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9597b1-1d2c-4e73-902d-fea4573973f3",
        "cursor": {
          "ref": "f96237dd-40bb-48dc-859b-b7260a9cee9a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "802daf78-815b-43d2-b912-8df81272134a"
        },
        "item": {
          "id": "0e9597b1-1d2c-4e73-902d-fea4573973f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9bd7cbd3-d76a-4f5f-80ad-cc08a82deba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6236ce0-ed0e-435c-a20b-9fd18a32a37e",
        "cursor": {
          "ref": "29a81b5f-f9fe-48da-b996-22c7fc8f9917",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "15df5954-b009-4086-988f-f635c933cff8"
        },
        "item": {
          "id": "c6236ce0-ed0e-435c-a20b-9fd18a32a37e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "71b5688b-67af-4920-b308-f6de820a07b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2832e4-aa3d-4b5b-867d-85c1d6102ef1",
        "cursor": {
          "ref": "49d105e6-c1d3-4d09-a3d7-96803b3cacc5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f8688305-2ec3-441c-88ab-5d2d82194430"
        },
        "item": {
          "id": "1b2832e4-aa3d-4b5b-867d-85c1d6102ef1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "116cb4a0-d59e-4a7d-8ecb-73104bc8b42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1c781c-39c4-4f51-8894-caefe00968c8",
        "cursor": {
          "ref": "7193fdd4-9588-430e-bbcb-aa5f3c3bd6e6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b0eb2e2f-ab1f-4b3e-b2fd-7f61f1ae97ea"
        },
        "item": {
          "id": "7d1c781c-39c4-4f51-8894-caefe00968c8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "054a3a9e-c49f-4b69-a3e4-77247a5f3088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f965c4c-49ec-48ae-8be2-6d3159a9752e",
        "cursor": {
          "ref": "691a2c09-3e53-4730-b3c2-749645cd9ce7",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a829f802-6f45-43ca-b217-7671b5112ef6"
        },
        "item": {
          "id": "9f965c4c-49ec-48ae-8be2-6d3159a9752e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "35ff1813-7fcc-4568-a3c7-a8cbedfcf22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b8c3c5-224b-4df4-8d34-e7130feffa0e",
        "cursor": {
          "ref": "a7a9d380-2b1c-4cd1-8757-5a2fe4605bd0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "69273dcb-4e5f-49b0-8bab-d554062f0763"
        },
        "item": {
          "id": "02b8c3c5-224b-4df4-8d34-e7130feffa0e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "05edd863-09cd-4671-bea2-5d30157b1fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1b71a8-7585-4fe4-b4f4-119739fb9ef6",
        "cursor": {
          "ref": "f5a8969b-bdfe-4574-b3b0-d3d8fe9dd802",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "30831435-57ea-47d8-8c8e-59a0a31a975e"
        },
        "item": {
          "id": "ad1b71a8-7585-4fe4-b4f4-119739fb9ef6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f911726f-e8a7-4b40-89b7-fcb6e27c9ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce966399-5bc8-446c-b0ae-539fe94cd258",
        "cursor": {
          "ref": "1ae1cca7-7552-4bcd-9aac-625c6ff662d6",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b214c411-c619-488c-b7e4-246feea8dd3f"
        },
        "item": {
          "id": "ce966399-5bc8-446c-b0ae-539fe94cd258",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "84504d42-6517-489b-954d-9be9e31e15b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6ac65b-0a0b-4f1e-9ff3-344cd562b764",
        "cursor": {
          "ref": "2d072c5f-335a-4cf5-b18d-aea3cc14c782",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0dce3104-d2d2-48e6-961c-0e73693a45b3"
        },
        "item": {
          "id": "ae6ac65b-0a0b-4f1e-9ff3-344cd562b764",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bbba0fed-1e81-44ba-9a12-3ec0b10c10e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df36f16-fd34-4e35-96e5-bb6bf7129833",
        "cursor": {
          "ref": "e7c31128-2346-4301-997c-fb163725f742",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "08a0caf9-1cb7-431a-ae4a-b0ba8bbf0d3b"
        },
        "item": {
          "id": "8df36f16-fd34-4e35-96e5-bb6bf7129833",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6117b2df-d00b-4a91-8d34-1cb5127a1ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8f3c90-c8ca-4daf-af3d-1847a3537915",
        "cursor": {
          "ref": "7fabe6ce-3456-4812-915f-5a22d263fc28",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f7077503-b49f-46ac-8c4c-871c0b472ef8"
        },
        "item": {
          "id": "9b8f3c90-c8ca-4daf-af3d-1847a3537915",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c389b814-9eb5-4849-a830-8124ccfdfca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30f357d-2aec-4fb1-8324-0055bc1c4fd7",
        "cursor": {
          "ref": "3b44194f-931e-429b-852e-ed7760fbb239",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8d984987-ecf8-46fb-b288-448b31cd9e0e"
        },
        "item": {
          "id": "f30f357d-2aec-4fb1-8324-0055bc1c4fd7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "22768267-46d5-4394-ab08-dfed7bb6719e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92a76ee-04f9-45de-92e3-8f880e90d8dc",
        "cursor": {
          "ref": "6b0f96db-0eb1-40f1-b30a-0ffb472a50bd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1aba27fa-f91f-44a4-8ebd-cb721f2d8e66"
        },
        "item": {
          "id": "a92a76ee-04f9-45de-92e3-8f880e90d8dc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9556a673-7729-4b1a-9392-bc0fa0cd9590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db1f31e-75b4-444b-9e89-ab180b549771",
        "cursor": {
          "ref": "7bcf78e0-b0ab-4ae0-93dc-3610b7918bc9",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a8ab170a-0e7d-40d9-9275-12507d54c34e"
        },
        "item": {
          "id": "0db1f31e-75b4-444b-9e89-ab180b549771",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "799823cb-655f-40b9-902f-1ddacdd398e1",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "6dd68bb4-bf11-4332-8ae7-ef6632aafefa",
        "cursor": {
          "ref": "3c0cfddf-795b-4229-84e8-e4afa2825c86",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9670acf4-b7b1-482a-81c3-de2cda9f92df"
        },
        "item": {
          "id": "6dd68bb4-bf11-4332-8ae7-ef6632aafefa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4c25d647-e7cb-49fb-8c52-3b64465d4db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7148613e-fa4e-4d3e-a2e2-673b6c3f6a50",
        "cursor": {
          "ref": "f6cd4922-0b2a-4c7e-8241-b2f3e37f7d87",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e16dbd3e-ef25-4ce2-a1da-94dabd4a7fae"
        },
        "item": {
          "id": "7148613e-fa4e-4d3e-a2e2-673b6c3f6a50",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b6c3bb94-d131-4063-bac1-8c5400a831ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68076d3-422f-4b65-ac04-c4db68c496f9",
        "cursor": {
          "ref": "c52984ec-a5b6-4936-8d41-9ceb4610d3a0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "aa202e72-efe5-404f-9578-745bddead018"
        },
        "item": {
          "id": "a68076d3-422f-4b65-ac04-c4db68c496f9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "14792c8f-a114-4c5e-aaa9-94debbdac92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2217b06a-6a45-4602-b056-7346afeddb1b",
        "cursor": {
          "ref": "64e0e952-3c6e-4251-b96a-38d2eafc8fb3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b996226b-61aa-4117-96f4-4c953320621f"
        },
        "item": {
          "id": "2217b06a-6a45-4602-b056-7346afeddb1b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "188e1488-fdc2-4549-9f40-170292708928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6db6981-edfd-45e4-9bb0-6d50a8d95e88",
        "cursor": {
          "ref": "4c01c85c-33b6-48e9-ae5f-ea41bff6e5cc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e6be6c6b-8bae-4a73-9b7a-909756921433"
        },
        "item": {
          "id": "d6db6981-edfd-45e4-9bb0-6d50a8d95e88",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bea3e650-a21f-4cd8-a66d-8c5d84f04137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dea15d-5117-4fdc-9d9d-adbb3b8b5a83",
        "cursor": {
          "ref": "1e299b64-41ca-4faf-a034-8b17711d8a4d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "39c57f43-db70-4d5e-b6a3-43c77cb24342"
        },
        "item": {
          "id": "d2dea15d-5117-4fdc-9d9d-adbb3b8b5a83",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "aae26f0f-3f1e-40c9-a216-2c874b776036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdfdee0-f6d9-41e4-b8a4-ef9706640bcf",
        "cursor": {
          "ref": "44454b37-9c9e-4dbc-b1e1-ec47c688804d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f58f3880-4f11-48fd-9ba7-7c7976193027"
        },
        "item": {
          "id": "3cdfdee0-f6d9-41e4-b8a4-ef9706640bcf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "85c5d368-86f3-4516-8f6c-9ee74ea205ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeaf58f-bc72-4bcb-bb52-0e9b09d7073d",
        "cursor": {
          "ref": "62e5abe6-f91a-4e07-83df-db16fd778e06",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "16717eeb-61c0-4c1c-9cc1-661dfe5dd872"
        },
        "item": {
          "id": "ebeaf58f-bc72-4bcb-bb52-0e9b09d7073d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0bad6643-bc6f-49a1-b204-bf2f7c26ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c65c958-7ad5-4e85-8033-51c4b9fa00a6",
        "cursor": {
          "ref": "ac211d7c-2c4f-4308-8b13-1dd40f1ab2ff",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "87a1c73e-4f52-496a-8e20-e214ed853abe"
        },
        "item": {
          "id": "6c65c958-7ad5-4e85-8033-51c4b9fa00a6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "185cffe1-eaca-42bc-b86b-5b4d42f1776f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7976ecc-1e4a-4245-9293-fbd04c0fc6df",
        "cursor": {
          "ref": "b3082541-2f64-4fd9-b6fa-a73f59ae2ab7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "493ba34a-056e-40d4-ace1-36854dea5605"
        },
        "item": {
          "id": "d7976ecc-1e4a-4245-9293-fbd04c0fc6df",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a70aad83-4e3d-4ecc-bdad-bb948a782429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90227d03-2ff2-4436-8c7b-02ca960f9425",
        "cursor": {
          "ref": "0fd7cfe9-c6e3-4fe4-97f9-c27a576749ab",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "40ecd400-e119-447a-a841-fd3165929f9e"
        },
        "item": {
          "id": "90227d03-2ff2-4436-8c7b-02ca960f9425",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dd275de2-ba7c-4b69-8a51-b9a437ccc2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948fe289-097c-4145-aad8-c69679fb3f5d",
        "cursor": {
          "ref": "67adf78c-86aa-42cc-b595-25a82d52544b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c42b7371-475e-40c8-b3bd-eb0f81f20a96"
        },
        "item": {
          "id": "948fe289-097c-4145-aad8-c69679fb3f5d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b8007e3a-0d13-4fa2-958f-4d2c3f5ad57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f57365-c5c4-46c1-ab3e-fcecb7d6442e",
        "cursor": {
          "ref": "80989564-42cb-4e1f-b00a-852fae97238c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "75e93f94-a06a-4026-97d6-56873efc30bf"
        },
        "item": {
          "id": "29f57365-c5c4-46c1-ab3e-fcecb7d6442e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1f09f4a5-2e78-4c22-bb5e-236dd8cb9d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4751e1d6-26a3-44d2-8d5c-cbc59d4081fc",
        "cursor": {
          "ref": "3a3605d5-7657-4e49-82b3-0ac265965b0e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "41295d70-33d2-4b77-bb8b-b97d9f6d2675"
        },
        "item": {
          "id": "4751e1d6-26a3-44d2-8d5c-cbc59d4081fc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6feb770b-09a8-4d24-ad84-0da0e664b416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f218b7-93ec-4e5d-9a8f-106d748178f6",
        "cursor": {
          "ref": "82b4d67a-3a14-4d9d-bbc5-04beaaf97026",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e5a5e7ac-1ba1-4bc5-a8fa-50291997e3a1"
        },
        "item": {
          "id": "57f218b7-93ec-4e5d-9a8f-106d748178f6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "51faeb86-a290-4532-8e52-5b2cf0013f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6980c0e2-1f44-4124-b849-b1cec927e940",
        "cursor": {
          "ref": "43672dae-c1ac-4bf4-9ba6-35aa8b0c6646",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "435cfc75-b0cf-474b-aae0-144f358a018a"
        },
        "item": {
          "id": "6980c0e2-1f44-4124-b849-b1cec927e940",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c6ac00bc-398e-4de7-90a9-d8f3b2c14a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12468c67-ff63-4cf1-a4bf-3706c49d011b",
        "cursor": {
          "ref": "c5d43edc-f4b6-46dd-99e0-5aecf4e9c666",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "64a2f388-adf1-49cc-8299-3779840902ce"
        },
        "item": {
          "id": "12468c67-ff63-4cf1-a4bf-3706c49d011b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dc5b114a-b7b3-4778-bf2a-bca2260f6cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d779d366-38fa-4f27-8ad0-85b864d3800b",
        "cursor": {
          "ref": "0c2d2b61-1825-43b6-a09f-73741fa578fb",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b949f691-9210-4c8b-aafa-e62672b0eb1a"
        },
        "item": {
          "id": "d779d366-38fa-4f27-8ad0-85b864d3800b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3b613555-527f-4221-bacc-d1580d3dc937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fb25a4-a5cf-4ba6-85b7-628f8f0e9c38",
        "cursor": {
          "ref": "b1dd9803-298d-4a83-a1e4-cf9551c18a0c",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ce0d7d77-3fbb-49d7-8bc7-ab934e9b3059"
        },
        "item": {
          "id": "28fb25a4-a5cf-4ba6-85b7-628f8f0e9c38",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1ea9171e-4d5f-408a-8ac8-1c74f8cf3a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2df185-50c3-4da2-89cb-f22a58d5d448",
        "cursor": {
          "ref": "a6654b57-3d91-4290-b864-3b8c735b6d80",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dfe8b846-caf8-4141-9e11-cb9e66dccfd2"
        },
        "item": {
          "id": "3d2df185-50c3-4da2-89cb-f22a58d5d448",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "59cd1c7a-8420-4f89-bb6c-818ecb147ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de5d302-cfee-4e86-870c-dc2ca279e8be",
        "cursor": {
          "ref": "024612f3-1e6f-4531-92ef-41f8319fb4eb",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e14b330c-ae85-4345-b8ce-9a531fe63159"
        },
        "item": {
          "id": "8de5d302-cfee-4e86-870c-dc2ca279e8be",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24b52d23-fccb-4740-80f5-cd2a24ef4345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e03e1e8-ce76-4976-a739-de5251415c5b",
        "cursor": {
          "ref": "893248bf-70fa-42ed-b8bc-d728462d97e3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f14aa6da-507c-4c30-86c3-fb3097ec089b"
        },
        "item": {
          "id": "9e03e1e8-ce76-4976-a739-de5251415c5b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a873ae2c-d501-4c3c-a43f-5ef118a6a797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23291232-9990-46ed-b324-e32cfacf52c3",
        "cursor": {
          "ref": "58764286-bbe3-4f79-9cd4-24c05acb56cc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "30f1e90d-0e1f-42ee-849d-8daa938f9804"
        },
        "item": {
          "id": "23291232-9990-46ed-b324-e32cfacf52c3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cc800d39-c2d4-4b04-96ac-f148a8031bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a37cad3-7e91-4a85-9dc6-2c420b71b5b4",
        "cursor": {
          "ref": "46cad96c-0171-49a7-8556-db7c8529f87f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c41138c3-d741-4e27-bb3b-7b03645d62e2"
        },
        "item": {
          "id": "6a37cad3-7e91-4a85-9dc6-2c420b71b5b4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee46a1f2-7467-4fb4-894a-d7610d5307e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f86f7f-0a4b-48a9-95bb-671dd98d3951",
        "cursor": {
          "ref": "e975679e-cc08-4b3e-b80e-f0f089334d82",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "139d9332-a333-479b-a9b9-83f43b8a05a7"
        },
        "item": {
          "id": "21f86f7f-0a4b-48a9-95bb-671dd98d3951",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "264ee1d0-018e-4c24-8949-e7dda8cd7188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697e6307-39ac-4266-81ef-855344ce632c",
        "cursor": {
          "ref": "301b31f2-06e0-458b-9998-9de91e35d38c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2e19fb7a-231e-4d46-bdd2-ed5e1060d4bc"
        },
        "item": {
          "id": "697e6307-39ac-4266-81ef-855344ce632c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0f9d28b0-e542-436f-9501-40221fb25d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293809dd-c92e-4978-aacf-3e370ae80ff9",
        "cursor": {
          "ref": "bf3790f9-6ba6-4165-9e04-bd14db0d66a3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e4bb5173-5260-4305-8a08-e2c324905b60"
        },
        "item": {
          "id": "293809dd-c92e-4978-aacf-3e370ae80ff9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5d6ee31a-3d58-4f6d-b0e2-cc267e319de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8429e5e-2c1c-46ee-9955-eb0f18a25236",
        "cursor": {
          "ref": "23ff8825-f8d8-4cdf-97ae-59344b7ad868",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "703cece1-84f3-401a-bd80-5350af771803"
        },
        "item": {
          "id": "e8429e5e-2c1c-46ee-9955-eb0f18a25236",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ae8ec925-9fe9-4a08-b83f-da1245bc8b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82e00c2-23e4-455c-93b6-f2a8c793d018",
        "cursor": {
          "ref": "2c7f02c0-6eda-4829-a9eb-450f9b21b2a9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f695e758-d408-4967-ae2a-a81bddbced25"
        },
        "item": {
          "id": "b82e00c2-23e4-455c-93b6-f2a8c793d018",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c9149a3e-74c7-411e-98ca-ba74b83a013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b026605-262e-4c74-8211-ac0c594bdcc4",
        "cursor": {
          "ref": "1052d53c-239f-4585-89f0-2d1e9ee929e9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7e46027e-d9f4-4822-8120-8058707702a9"
        },
        "item": {
          "id": "3b026605-262e-4c74-8211-ac0c594bdcc4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7d950f6f-3c41-42d7-9d05-d78e8f519014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c86d446-ec15-41dd-bd5e-6fd4c9101a4e",
        "cursor": {
          "ref": "7ca0f097-fb9e-45ab-beb3-cd4bed146329",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3a134bcb-897f-47e6-b6c7-b34e81875082"
        },
        "item": {
          "id": "6c86d446-ec15-41dd-bd5e-6fd4c9101a4e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3c4c2d2b-34dc-4999-97ba-74bfc7a15b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb1320d-ddf2-4325-8083-6bb6346edeed",
        "cursor": {
          "ref": "56a7f507-7f8c-4d4d-8c88-6a2dcb7ff7a1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4b42e4f6-f153-4d03-8977-46cf492a01e6"
        },
        "item": {
          "id": "eeb1320d-ddf2-4325-8083-6bb6346edeed",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b66bef05-ccbc-4a14-a0ca-9558a5ea241f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c82e2e9-80fa-4516-b19e-02764732945e",
        "cursor": {
          "ref": "68f27eaf-1c7f-455c-a14b-a5c4c9e68258",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "492807b8-0a12-436f-853c-18825e6d30cf"
        },
        "item": {
          "id": "5c82e2e9-80fa-4516-b19e-02764732945e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dd86123d-b0ea-4a7e-9242-145d6596c096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfb1713-2c93-487b-94f4-1f67d1026c24",
        "cursor": {
          "ref": "0b22e35a-81d2-493c-80e5-b6f50fe2fe20",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1e8d0a1b-dcaf-4ea5-b006-45b06840ad43"
        },
        "item": {
          "id": "bcfb1713-2c93-487b-94f4-1f67d1026c24",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "56d74acd-b358-45ce-afe4-80c37c749091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403c2f35-12e5-4b69-a9a2-a93b614c2053",
        "cursor": {
          "ref": "4fa2db51-d10c-4561-8b43-4f5d4a5b5fb9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f06517f4-2cb2-4cc7-9e46-2b00012dbd60"
        },
        "item": {
          "id": "403c2f35-12e5-4b69-a9a2-a93b614c2053",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "112bff7d-7281-4f8d-8198-32b1ee6c3d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b23fc4-f1ed-4116-912f-80b487734c11",
        "cursor": {
          "ref": "cdedec96-b1d4-47cc-93c1-5474aaf8324d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d2f5ef74-ad96-4bd9-bf6e-601abfa763a8"
        },
        "item": {
          "id": "76b23fc4-f1ed-4116-912f-80b487734c11",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3c1bc333-2733-4543-9ff2-37d63768969f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90562f3-92c6-4fe0-b32c-b932e76f2cd5",
        "cursor": {
          "ref": "e947728e-ea45-4476-9969-da60f5021e9b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fa0a56b7-7c45-461a-a2f4-36e926fd0cea"
        },
        "item": {
          "id": "a90562f3-92c6-4fe0-b32c-b932e76f2cd5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9a526e5-131b-42ad-b977-243e94fa7545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabaeb50-e99e-4265-abac-17a9840b1a07",
        "cursor": {
          "ref": "fd04cc9c-e945-4072-acdc-3098217d2423",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2c242ace-ec3d-4875-b37e-d3e87b687d20"
        },
        "item": {
          "id": "aabaeb50-e99e-4265-abac-17a9840b1a07",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b41c069-cc91-4956-9b22-5609e8ea653f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07a3163-6564-4713-a9dd-69346b1109df",
        "cursor": {
          "ref": "b9cf74c4-305a-4b4d-8395-fd9fc227bf15",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bad580bf-e4d7-41bb-b84f-47b7952d28d1"
        },
        "item": {
          "id": "d07a3163-6564-4713-a9dd-69346b1109df",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8dd08df-6c87-433d-8911-d66cbd53cd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280e9ee1-ed43-48e6-9ecb-d94fcd86d425",
        "cursor": {
          "ref": "7a906e61-ed62-4fce-ab47-b40ab65588c1",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "89fcc2f8-8465-489e-9c96-4b6ef6492008"
        },
        "item": {
          "id": "280e9ee1-ed43-48e6-9ecb-d94fcd86d425",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4cc1b02e-1d5c-43a6-bd91-b3225aebe4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b67f376-fe8f-4026-b9b4-3aa412416cf0",
        "cursor": {
          "ref": "3972ea7f-c504-425f-92f9-9a8acd56c629",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fe76010a-014b-45cb-9084-48d27688e573"
        },
        "item": {
          "id": "1b67f376-fe8f-4026-b9b4-3aa412416cf0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3e218f3d-011d-4a31-a097-3547bcd513cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6e4f8d-0809-4ec7-a606-cf602fc7d66a",
        "cursor": {
          "ref": "01e68abc-d705-4bcc-87ea-3cf6021406ef",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a1c1930c-b2e3-4d2e-9184-c1c1857560b9"
        },
        "item": {
          "id": "7c6e4f8d-0809-4ec7-a606-cf602fc7d66a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "25809762-cad5-4e5e-aa6e-c4cad902cf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00413ca-7be7-41ee-b6d1-4db91f2323f1",
        "cursor": {
          "ref": "570b17a4-370b-422a-a11b-9b49ba9fdd3c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1b04fda4-4b0a-4ca1-b739-7ba58e34aad1"
        },
        "item": {
          "id": "a00413ca-7be7-41ee-b6d1-4db91f2323f1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7873804b-a34a-454b-b176-23ff3d700bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d7b125-e19e-47c7-b2af-5dabeea9f41d",
        "cursor": {
          "ref": "94283ae1-516c-4313-9cb5-812de3138ed2",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3f024cd7-b964-475d-94d3-26b84d5500dc"
        },
        "item": {
          "id": "f3d7b125-e19e-47c7-b2af-5dabeea9f41d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0994623e-4cfa-4438-b3a9-fc77cc44fb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8518604-0b3b-419b-9ea9-27ecbe17943f",
        "cursor": {
          "ref": "f39b151c-1e42-45ba-99d1-718ea389a411",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f5bf6060-86a9-49b0-8740-6bdab2a28e4d"
        },
        "item": {
          "id": "a8518604-0b3b-419b-9ea9-27ecbe17943f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0254bbc8-656d-42c9-9347-93e02db5cc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b653fe1-4335-46fa-9f14-fddea64cdd4d",
        "cursor": {
          "ref": "34de7e4b-88fb-4c23-ac96-4523aefeb91c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ad1c6c40-be87-4270-a409-a6c0ba82d9c1"
        },
        "item": {
          "id": "9b653fe1-4335-46fa-9f14-fddea64cdd4d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7365e57b-0b32-450a-9b48-b617d766c9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0d21b6-c9e4-4922-9ece-34e9039436c0",
        "cursor": {
          "ref": "5c43ddc3-055a-404e-9e84-e4a313b841f9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8c363d14-cf3d-44c6-9268-2e0f6a51cb15"
        },
        "item": {
          "id": "dd0d21b6-c9e4-4922-9ece-34e9039436c0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3b2d5d5a-b8c3-4a63-a1ac-68c9f2f61400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766a5706-0454-41de-9fee-02cf7cc87f11",
        "cursor": {
          "ref": "2349eec1-f4b5-4862-85a7-99cc27158a69",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fda96217-d194-47f6-8d6b-dad0cab65b12"
        },
        "item": {
          "id": "766a5706-0454-41de-9fee-02cf7cc87f11",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fc005175-65b9-40f7-965f-d630248383e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c3f8fe-bc41-482d-8d68-89b3cea51ea0",
        "cursor": {
          "ref": "23c60deb-8934-477a-a2c9-1a86b647db13",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8251f2ed-88ac-44d6-93bb-7ab7c4be5e55"
        },
        "item": {
          "id": "f9c3f8fe-bc41-482d-8d68-89b3cea51ea0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4e3a5a56-85d8-416e-9c0b-67fe96e9200a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d698ceb7-46e2-4606-9c4b-b9a08eb3306d",
        "cursor": {
          "ref": "b83408d2-3dff-43ce-a56a-509514447674",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "16f62df3-3fe4-4d3c-8386-c4af5a64f956"
        },
        "item": {
          "id": "d698ceb7-46e2-4606-9c4b-b9a08eb3306d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "594aa5ea-1026-4cb2-9632-0246c53ed8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825c8f55-6ed3-4aca-8f51-7d6afa8cc917",
        "cursor": {
          "ref": "75fa3b06-2781-47d3-ade2-708849d12faf",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fe9da990-461d-4647-ac52-6ec5aeb2e57f"
        },
        "item": {
          "id": "825c8f55-6ed3-4aca-8f51-7d6afa8cc917",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8953748f-9f61-4621-90f8-57759aee1417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a320787-61fa-4296-bf04-a7cb7309d471",
        "cursor": {
          "ref": "d98e409a-bfbd-431f-b5bf-ee5a56f8b0c4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d882ffbe-60ac-4c1d-a92e-b820dd5e2f37"
        },
        "item": {
          "id": "8a320787-61fa-4296-bf04-a7cb7309d471",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "43fd61df-6f31-411b-ba76-cdacda8b1a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a102728-db1c-4ba6-a1ac-b3b449516609",
        "cursor": {
          "ref": "73e9d278-e924-4235-a834-ef32c64135cc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e946c375-992b-4437-9c01-38ff1f53b6e6"
        },
        "item": {
          "id": "9a102728-db1c-4ba6-a1ac-b3b449516609",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "71757610-555c-4b62-a99d-3707b3ea17b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecce5fa1-e33c-4a24-9f84-79c6b52df7c7",
        "cursor": {
          "ref": "6e573bd4-1219-4b06-b036-8bdffdaabcfa",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d67f806a-9b07-48f1-b4ed-ce5ab7c377c1"
        },
        "item": {
          "id": "ecce5fa1-e33c-4a24-9f84-79c6b52df7c7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "516359df-b536-4ce3-82df-18f07f11412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11491da5-e00e-4f31-89ab-21cfc61e7018",
        "cursor": {
          "ref": "06d45353-74a7-46b5-b01b-a634f01c084e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "63dc37c8-2777-471e-a757-b0cf6a2c5648"
        },
        "item": {
          "id": "11491da5-e00e-4f31-89ab-21cfc61e7018",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7d742005-1b67-408c-9559-bdd87178400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7288d98-d6fc-44ec-b484-42437b4bb8c0",
        "cursor": {
          "ref": "53dab345-2cc3-469c-a9f0-64bf8feeed99",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "456d6a86-631d-4456-8dfc-4f95e9cbc86d"
        },
        "item": {
          "id": "b7288d98-d6fc-44ec-b484-42437b4bb8c0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19c01e32-1fec-4d7a-9ea5-dd3ece2f03c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4936c93-967c-4088-a45b-ae4ae631059c",
        "cursor": {
          "ref": "f3c86174-fcd3-4118-975b-c6337cd3ddc2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0fa8616d-baaa-4fc8-a8a5-e856285a1ca0"
        },
        "item": {
          "id": "d4936c93-967c-4088-a45b-ae4ae631059c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b4d4f7c0-ffcc-4463-8c51-4408f9f30b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbd4eb6-2b2b-400b-8a12-95bcee7b329b",
        "cursor": {
          "ref": "e545c821-71a4-4ee8-90d0-b7abb53bae22",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "98fb5abd-8e2f-4315-8cfc-967855598588"
        },
        "item": {
          "id": "5bbd4eb6-2b2b-400b-8a12-95bcee7b329b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c3a6e25e-251d-4241-a847-79b354be4d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f091ab1f-865d-4ffa-93ed-6d8b5a37e8b9",
        "cursor": {
          "ref": "00c972d8-a688-444d-bea4-fb43bd679ef5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b4f4ee87-78ed-4d7e-a0bb-a5383b36ec1a"
        },
        "item": {
          "id": "f091ab1f-865d-4ffa-93ed-6d8b5a37e8b9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "20966308-275c-4ce4-a451-0a264ed8365f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f15151c-37a6-4208-b268-e23c4c3c7f3d",
        "cursor": {
          "ref": "abdcef4b-6237-4f3c-a92b-93efac930533",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "38aa9f0c-3b76-493c-8df8-f697d6f39768"
        },
        "item": {
          "id": "1f15151c-37a6-4208-b268-e23c4c3c7f3d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "07d07799-40b3-48cb-a7a8-99ec5d191cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050411b4-dc02-4464-94a2-c2c92de85b9e",
        "cursor": {
          "ref": "208892b2-d31f-42b7-81f4-dcbcef7c4079",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "47124ac8-c4ee-4c43-b3a1-490946d4a2cd"
        },
        "item": {
          "id": "050411b4-dc02-4464-94a2-c2c92de85b9e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aa487812-8fc6-45e0-916c-089b2d5191b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e154dc-d7a5-4950-a794-b9418c7ab810",
        "cursor": {
          "ref": "62e26cef-d6f9-4491-bcbb-9194a4e1f1ff",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "58e67c0e-06f8-4937-93b1-15d0f036fed8"
        },
        "item": {
          "id": "25e154dc-d7a5-4950-a794-b9418c7ab810",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a7efd190-8eef-4bff-8588-07d4eda13d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586415c4-696f-465a-bd5a-a83a6085a231",
        "cursor": {
          "ref": "348dca5c-7992-4dd7-99c3-e06eb31734ba",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "42aa5f7e-0790-4685-8649-23c59fa2b3e6"
        },
        "item": {
          "id": "586415c4-696f-465a-bd5a-a83a6085a231",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9b558975-0e0b-41e4-a5a1-535121e5ed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d44a94-db11-400d-8431-d2093085f753",
        "cursor": {
          "ref": "e9903453-54c0-4199-9263-93245d405620",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ae7b4cc7-fde3-4b2a-95d1-e0e6254ce7b1"
        },
        "item": {
          "id": "73d44a94-db11-400d-8431-d2093085f753",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8ddb0f02-703f-483d-be30-3ce881e145f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce98a83e-8fd6-4116-8730-e987b5495560",
        "cursor": {
          "ref": "221d1f3c-269e-46a6-9273-549b35bf6c95",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "749082b6-436e-4d5e-94ea-dde337b56e2f"
        },
        "item": {
          "id": "ce98a83e-8fd6-4116-8730-e987b5495560",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ad0a19cf-a789-420c-b10d-1f9abc6762bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e39b9ef-1d37-4818-a5b3-abf4acc9d9fe",
        "cursor": {
          "ref": "b7b3ca93-24e9-4df6-9b3e-9399a9bc7ee7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9e1a100b-4c97-49e6-a82f-eec4aaf4713e"
        },
        "item": {
          "id": "9e39b9ef-1d37-4818-a5b3-abf4acc9d9fe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2e06333a-af02-4dc9-9c9b-d0079c26de2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0b2a5a-6c4f-4d9c-af3c-6c4518829914",
        "cursor": {
          "ref": "68926a80-71a0-4fbb-93dc-0d473770ea5a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1bb5b9f6-f56d-484a-83cd-14abfcb447cc"
        },
        "item": {
          "id": "9d0b2a5a-6c4f-4d9c-af3c-6c4518829914",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3dc14999-1505-4d73-bdf7-0a3813096631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1481f5-d0f9-4325-bec4-9add6e204b4f",
        "cursor": {
          "ref": "058afaf3-ad8b-4062-8dcd-8b4a7c1c28f7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "355fb71c-1e2c-4bf0-9223-bcbf870988ee"
        },
        "item": {
          "id": "6b1481f5-d0f9-4325-bec4-9add6e204b4f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2dc4f191-9a1e-482f-a05a-2fe9a642d9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4ad3bf-a676-4506-aa6f-a3e3d52671b7",
        "cursor": {
          "ref": "fbe2bbb7-c28d-4813-b800-fee1500595f5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "747383d8-c781-484f-9af6-e089c8aafed7"
        },
        "item": {
          "id": "5e4ad3bf-a676-4506-aa6f-a3e3d52671b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4e4eb0fc-fe77-487e-a96f-21717ba32377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f69b23-7118-4a44-b5bb-8f91c04bac5f",
        "cursor": {
          "ref": "d57d3be3-e53e-4672-aa2f-7475be4ce5a6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1d4b90b3-3523-408a-bef9-678595a95b20"
        },
        "item": {
          "id": "35f69b23-7118-4a44-b5bb-8f91c04bac5f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "650aa087-64a2-4f0a-96f0-826e3b19a596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1cad2a-c977-43e9-afc8-205c9dedbcbf",
        "cursor": {
          "ref": "e4e52045-9960-4228-9a4c-b6c2d443ad7b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "aa7bfd6c-b0e9-4c1b-afe3-984487a83625"
        },
        "item": {
          "id": "5a1cad2a-c977-43e9-afc8-205c9dedbcbf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "db124008-a68f-4a2e-998f-dfc16a3d42e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75feaf3-f5b3-4078-b94e-d6d0d36b8556",
        "cursor": {
          "ref": "39ff5a54-b97a-450e-9e2e-ae1597969e8b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7d85151f-059d-4a04-ab52-5b47f92420f8"
        },
        "item": {
          "id": "d75feaf3-f5b3-4078-b94e-d6d0d36b8556",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c92e1ac9-cf90-49df-90a6-1a0390a18e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbff58f6-42f9-47ba-9057-4dc9a6f99259",
        "cursor": {
          "ref": "15a44654-fe3a-4f13-95a4-8b8bb0f35814",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "780d9ed6-97de-4367-8c0c-fda63a923964"
        },
        "item": {
          "id": "fbff58f6-42f9-47ba-9057-4dc9a6f99259",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0b680a23-3f88-4354-bf7f-dca417b234dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb1f9db-f858-4419-b4c0-4ee4a30d4ab3",
        "cursor": {
          "ref": "df61075d-fee7-42cd-82ec-a3bb55214350",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "24683f41-11b4-4270-b912-18471d0400f8"
        },
        "item": {
          "id": "ccb1f9db-f858-4419-b4c0-4ee4a30d4ab3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "14835472-5e79-4834-b9c0-6014dc64b1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a196c262-6207-4d69-91fa-a902bfbab4a6",
        "cursor": {
          "ref": "eb7491c7-cd6e-4ab6-8787-e65a70d3d3da",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "83b8142a-93ad-46d3-9a4c-08768be76cc3"
        },
        "item": {
          "id": "a196c262-6207-4d69-91fa-a902bfbab4a6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c8d9589a-72da-41c9-a0a9-d19d2a7b6b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba298f09-cd44-46fa-be85-1f780edd2427",
        "cursor": {
          "ref": "1893e0e9-c0d4-41a0-9434-6285514f7bf7",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "82ca2fca-76c7-4be5-a3a0-7b00164910f7"
        },
        "item": {
          "id": "ba298f09-cd44-46fa-be85-1f780edd2427",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9f758da0-94b8-45bc-8e00-7d36d716dede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089f19d9-a610-45c8-a279-f013c1f82437",
        "cursor": {
          "ref": "4e75cbc4-faf2-4c85-a3b9-064c6d54bd52",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c8819da4-c535-4018-a8e0-2f9ac5ae33dc"
        },
        "item": {
          "id": "089f19d9-a610-45c8-a279-f013c1f82437",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "44b9f97e-334d-49be-8ab4-0674a3747b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7323d65-3ed5-4b83-8a8e-bae870796c24",
        "cursor": {
          "ref": "1c7d04c1-23a3-4b4d-8a1c-c1db8ac6cf49",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "66ac8a97-3f7a-4670-bd4b-1c3d42417bf8"
        },
        "item": {
          "id": "e7323d65-3ed5-4b83-8a8e-bae870796c24",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "218044c4-7abd-4042-b7bc-91192aaa2461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf96b2a-3bb7-43b8-8ecc-e31029385d9a",
        "cursor": {
          "ref": "60d5fba6-e014-48bb-97b7-eb46f2d038a0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ef28834c-c140-4697-b09b-fd1f67d128b8"
        },
        "item": {
          "id": "ecf96b2a-3bb7-43b8-8ecc-e31029385d9a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a79eeb33-3c17-484b-a60a-17afa8bfa64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272686f6-9cb9-497c-8526-1e0fde0df973",
        "cursor": {
          "ref": "98657356-8ea8-4293-9f27-6ea4e8df3a91",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "477f8b01-886b-46a4-8157-e43e11bf8cef"
        },
        "item": {
          "id": "272686f6-9cb9-497c-8526-1e0fde0df973",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1391c25a-cebc-4cdf-a4dd-85200dddf851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c6947a-6894-42c4-83db-fc10fa02d4d7",
        "cursor": {
          "ref": "bced559a-56e8-421f-b5cc-b6fde1952998",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8339e89d-55f6-4ee6-8bf7-18d54651f3c2"
        },
        "item": {
          "id": "99c6947a-6894-42c4-83db-fc10fa02d4d7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4886732d-905f-43d5-a221-18578bbfa7c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d88a4fb-6835-4e35-8eab-1d8c50e9c29e",
        "cursor": {
          "ref": "84e40f7c-c66a-4163-b266-11669203776d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "55170517-90d5-4dab-aaef-f43aca141f72"
        },
        "item": {
          "id": "6d88a4fb-6835-4e35-8eab-1d8c50e9c29e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "42bc8038-98e1-434e-8f3d-bea5818c4547",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd7cec9-49aa-4ba9-b84e-a27ec5ddb411",
        "cursor": {
          "ref": "d8055b5b-decc-42e6-9c8d-3f1653558700",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5c245946-009f-4c43-8889-0ee7591595e8"
        },
        "item": {
          "id": "fbd7cec9-49aa-4ba9-b84e-a27ec5ddb411",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7973520e-8430-4a6c-b900-e9bb03895414",
          "status": "OK",
          "code": 200,
          "responseTime": 2643,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb1287a-8ea2-4027-a2c1-80c6dc2e798c",
        "cursor": {
          "ref": "91ec66d9-a4ea-480c-af62-85545313af6e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5ed8b318-0198-4fbc-9c28-6a23f74b977d"
        },
        "item": {
          "id": "ebb1287a-8ea2-4027-a2c1-80c6dc2e798c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ab0d696c-0c05-41e7-9b2b-4c70f955b27e",
          "status": "OK",
          "code": 200,
          "responseTime": 2693,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df71c9a-4009-4626-a48f-4ffd1152cef4",
        "cursor": {
          "ref": "887b17a5-354c-4c03-b81d-8a5bb8f68de8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f5a42788-2d3b-4cf4-9ca2-7bb0aa0de00f"
        },
        "item": {
          "id": "1df71c9a-4009-4626-a48f-4ffd1152cef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63f83186-7351-4ad8-96e8-46fcdfc20f62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df71c9a-4009-4626-a48f-4ffd1152cef4",
        "cursor": {
          "ref": "887b17a5-354c-4c03-b81d-8a5bb8f68de8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f5a42788-2d3b-4cf4-9ca2-7bb0aa0de00f"
        },
        "item": {
          "id": "1df71c9a-4009-4626-a48f-4ffd1152cef4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63f83186-7351-4ad8-96e8-46fcdfc20f62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ea207c-9dcf-4331-89bd-8ab2e62d371c",
        "cursor": {
          "ref": "d0e067e9-f72a-46d6-b32d-c15c9a53e848",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "914d456b-96c9-4572-83d3-f581c83e8b48"
        },
        "item": {
          "id": "22ea207c-9dcf-4331-89bd-8ab2e62d371c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4f03b75b-b9cc-4a65-ab09-c32262f1f7e7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dd8618-a166-4c40-bf36-e69d6d67e59d",
        "cursor": {
          "ref": "b912073a-959f-43fe-9991-dd88961ec13c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a864279a-2898-4be3-9524-2ff7edc7c88e"
        },
        "item": {
          "id": "16dd8618-a166-4c40-bf36-e69d6d67e59d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c0cd8298-d254-4f50-a1ba-e54a27bcc47c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}