{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f470a693-92c3-42a9-be3a-2db9ca240118",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e8dca050-c647-448d-bf57-cc5b96c05c8b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcff082f-45db-4390-b5eb-d8aadc252d66",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2486e8d0-b7bc-44e1-b00c-638ac5681273"
                }
              }
            ]
          },
          {
            "id": "19c95e51-3c07-4b16-890a-ec01cb0517c1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6aef106c-4f8a-4c46-8dc8-46ea30418dc2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4ef20ec-2ddf-46b8-b87f-bbc1e4bb61f3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5efb5d89-5fbd-4c6d-ad00-4745c8dceb60",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d0bed911-b182-4075-985b-e9b5192947fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a84b5ee-7aef-49aa-8959-6d2c24a880b5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f58c14c-78e1-47bd-b771-aac070a8b9d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a930bf0-dbb4-4903-9f94-af92434f7a06"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99b5d7ef-9dde-4e07-b3e5-856dd19a34b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05551cc2-8c0f-42df-8c59-86c4381368f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a2cfde3b-6d96-40ec-a404-1b9d8025344f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0395514-d482-4f49-bad8-cc196955bf61"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b44b0516-0b6a-4a23-b2fb-a34ed29c1285",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fc0275d2-d449-4aa4-874e-386e35209012"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a46a16d-ac2f-4ce8-87fe-7ce64bd81210",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ea1d716-78b4-43fa-8959-fc50d829c3f3"
            }
          }
        ]
      },
      {
        "id": "1333988e-38fb-479d-a49a-1db2dcf226b3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bdc84108-faa2-421f-a316-0445b24ef595",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20e11ad6-d8fd-4519-9c21-23f237dbf2b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46c4aa28-e862-4e53-9ed9-2a479729e5bb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8047d2fc-cf58-4e32-a461-3f1aeedda01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86a8f950-0332-4dd0-9141-232ac8eaff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a89520-8aef-4dbb-8646-3f17e078f867",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff961bd-d903-44fb-868b-84096e8deda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ef2572a-189f-405b-a1eb-bc0901bf1399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd825115-56bf-48b0-b7b1-c6a697cceccc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f274c3-6f5e-4520-b66e-dbce4f7b3654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53707209-c818-4f3c-b8fb-261bdc4a7331"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11cec1a1-061a-4298-ad03-429effbc702c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0597a7a3-6b56-4692-ab20-74a6355c0212",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5386fc-ea3b-4e59-80ee-6dfbeb336b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4affd94-da9e-4a4b-a382-3b13c25e52ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dcafa9-8dbc-49ed-b796-abc277776f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9eaeb6-e872-48ec-8908-b380c00621f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa8ed66-9fa3-4601-8c65-70a006642f76",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59d486c-4bd5-48f2-bb45-61cb96f9f38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e24b5a30-18ef-47c9-934d-585dc3426634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f18935d-7f66-4e1e-9782-273087453ddd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "21221ed1-304d-4322-ad3a-8d1f13836ccb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eef760ba-c4a5-4fd1-93b7-77ced550d2b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a72f64b-0d5f-47fd-a155-f031cfdc7430",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15888485-6c5a-4e63-8a51-bf2169ab3fc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cdba224a-50de-41d4-895f-8d1902ff340a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbcfcfd8-ba54-4599-acbe-9401d50a6093",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ae1efbf8-df90-4416-86f4-c7bf6aa8a0b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d77ed15f-2c94-4a27-9cf4-b3989c8e8a6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2a37f11-5c2f-42de-acf3-7bdd07ec62df"
            }
          }
        ]
      },
      {
        "id": "ce1383cf-2f5a-43c4-a2b1-1820fc179985",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b69990f4-f18c-4920-a89d-b2ac9ed8c5c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbc411f6-b1f4-41c8-9cba-ba349c4b847f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e235109d-584c-40f7-b231-dc0155b6ab11",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e65326-0021-4f0b-a40a-327fad71fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369fb18a-478a-4296-9ed1-b2cfeff02225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d106553-54c3-4d0b-ac60-83ea6cb1ea84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb0f5ed8-bb69-479e-831c-9f2d243c5e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951fc028-947f-435b-968c-d2e08b5d17b3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999cac4b-1773-406b-ba0e-c5f89c9196fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327f6518-7832-483b-9d46-ada5262b86bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c018acd-0bae-477b-93f6-a118215fc183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a60d92f5-c300-4d42-803e-843acdc5651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48544a1b-4f75-4c10-8e6e-796d1e46e241",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824135b0-b368-47c7-b328-e26d56675cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48529537-e1b3-42d1-b12d-d83345936cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec0dff7-1f8e-4843-af5c-68564465f4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c90e2226-f6b9-4f3c-a46b-e9e51bb32b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3262d08-21e1-4320-ad49-b41dd6b7d7fe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f6ac0f-1e71-4ed9-9f5b-7d09dd14a06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6992ee-36e7-4e6b-8429-ffc56a54c41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b576fcc-8ca8-4158-b9ad-e96402525817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42007459-a743-469a-b078-885e85a212a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d22f26-9ea6-47e4-b4b5-845a0bc357b1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353462ee-408e-41ae-8b9b-ecc8a5f3be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f78692f-5d26-4b62-ae76-744b33580d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dfddf6-76ed-459b-90d7-6f0341b2a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f09d57a-187e-4d02-9d33-7a954e77e40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eee2110-5b78-4c59-8e16-57bab0f80bdf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d120057-6571-4c05-b0e7-cfbe2bce728c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e94b556-3fc1-4a11-b7e4-2faf980ba9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b3b61e-2641-4483-a4ca-6350abcc23ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7a6eb8a-2ea7-4ff7-a683-301625da70a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6dbdc0-8476-460f-a553-600b414f800a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadc8bb3-21e7-4205-8e77-1a64e185ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3681f8-8913-4d71-8eb7-edad0cbed5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4884aaf4-1e02-44de-83a0-155ee47be9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f36e1573-816b-4194-9fb7-cf47ecfa56fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176e3b7d-6884-4121-9961-8c727e9682bc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831e665f-bbe2-4dda-99ea-851b16712039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd30ab4-825c-401e-bc52-c82f64818da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a38860-b48b-45d7-b59c-bf56cd4480e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a65c08c0-815b-4a85-8329-0ffd7305d09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b010e5e-45e8-4dd3-9712-99d69730d03c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690567a7-f9aa-450d-be8c-bd9b47f08571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4df4970-6339-43a5-8cdb-d2c6702c20c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d73d50-8c6b-4424-8980-bfd225cbbe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a74b4a2-115d-4a1a-b028-5902f66cb6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe0fd81-4da7-4708-a7f1-1dfd02399dad",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf59c7d-8388-48ee-8b8d-6e9384904c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f8c262-8130-49a9-a002-ddf0f8dcdc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3de301-e512-4a96-87ba-268c9fcdf768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13c30c5b-f1f9-4228-aa4b-38406780e45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bd2bf0-0973-4f7e-b644-c1dde5a75a88",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505ad6f9-0e7e-4876-ad7c-2dd8b7c3dc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdf8315-165e-4f19-b30d-959b4033d5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afe436e-a43f-458f-9296-9f6a77d54313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2658c62c-c4a4-4553-a640-ba525bc63440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381caa62-d283-4446-b18d-fbf8fba07573",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336b72e0-991b-458c-bca5-a59c0ff5d8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3219c2d2-1bc6-4699-892b-8119c2a76585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843189c6-6dfb-4eb4-9216-759485c71d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca1b7e98-4e89-4108-8b57-fb5008bcef28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d214d9b-8fd1-47e3-bb5e-2b66644f3dff",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0854b00-30a3-4f7d-a356-1a2a97184117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dc8e72-be2d-43e6-b359-87afb062c4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af54e37-a20e-4c30-8ed6-11a7228c9fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc50ca6d-3064-4866-9622-4d21872a3798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be5758a-d352-40af-925e-66799a2aed79",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802084ae-d362-4bd7-9b0e-3c712a9b856b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dee4d54-146a-4a2d-bc28-9691a62bd632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42f8328-48de-4a41-8682-be1ca636c796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e6c69f7-c1a1-489f-88d7-33ec46578f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d90dbb-ee44-4408-b16d-b6f35417d0dd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f938376-b05e-4223-ade8-c945bec0a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4778bdd-d28d-4263-87af-a4b017323182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad38c05f-c8d3-478c-9ced-7314ed69e05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b223bfa-acab-43f3-9778-57da3c59dd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98344fb0-d374-4149-88c7-b47d49aeffd2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87909348-bddc-419b-9754-8a3c3be5130b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c70739-1e1c-48be-af1c-5912bc4520f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea6f99d-93c2-422d-ad12-4c2ca3423898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bd804f2-c9e9-48ca-ae0f-06b09143d590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4ab0e1-e921-4af8-bd23-1667dc73a770",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db5fcbf-3ca5-4fc1-a95e-da0bf82daf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ec5aa1-7ed3-42f4-83da-0fe366fee671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef4abeb-080b-4270-96f4-4ceb1b4731ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a567f2d-3059-4803-a534-af9056c2aa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824cfe2c-7130-4226-a2e8-226d06e45b80",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f21741-512e-4690-bebb-71e0ee682678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a4403f-2dd1-4b76-95cf-d574540a7978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeace542-871d-4325-a203-de3fb8e8b11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7a5f90-d1a6-4059-855f-95dbde976197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c427b7ed-1109-460e-8819-c2d3a1b6477e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9009b5c9-6c2c-4484-9d3e-1b4c9323c9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4d67de-d15d-4ce1-b954-f09f58cda05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6887b-2fbd-4288-93d9-86618a5c0555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3ff2e8-f159-428c-8e7d-41a1225af960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d1948a-0a3c-4ecd-9855-115f29a021c6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd28c28f-c0a7-437d-95a9-17101d30ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eff337-e67c-45c0-b19f-b4bb52649531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9a147e-17cd-40cd-b5ac-66df2a5a1f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9743b9c9-095d-4ddb-9e12-45906ecde7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca1e731-8ea6-4b9b-97eb-5609652c2fa1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13b1444-3f79-4eca-a301-a37a4d9d84af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9a2bc6-7f4d-449e-ab77-3060242fb7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2438b30e-667b-45d0-85af-968f0259db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "641c113a-ad65-41a5-a79c-9fa7d5711344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30763c8e-f833-4ffa-b462-ff6514eda7f9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11378449-78e0-44bd-8866-266bdcd5be1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5c73be-e511-4f69-a1ee-e6621218225f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388afc38-b987-4866-b1e7-749ee0dd98d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecf7c24-e45e-4561-870a-db8c73a38ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c22c9f-3efd-442d-a062-6a24ded0ef64",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dac7d8c-05fd-4292-9ae4-111816b79caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e74883-0dde-43d6-9a93-5682e57a6e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00b2ad4-ea33-45e5-99f0-6000ccdc77ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b649262b-ae8c-4f2d-99a1-1eb4757df173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ea7b2a-7d90-430b-b038-7566c532b7f3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43471776-62e1-4067-a95f-c28fb54919b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d9038c-071c-4c62-93e5-e3c36c5413a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c5ddb7-b2ad-446c-9206-56a1367b4af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b995cf-379d-478e-ad84-b14ee5dc47c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783c60cc-9614-4c92-891c-bd70f52d11c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd919025-2128-4047-bc38-33f917563990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da70b86d-e8e7-4bbd-8a63-e5579cb7096a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf28bc10-2b31-4145-8462-9a6ebed40a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfcd234-f805-4ca1-a4e6-e5015f0f5d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e591e7df-1c65-4f31-a11b-6efab3128237",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4e01d2-8579-4bf1-b427-acd803654359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59683ee5-1aac-4e36-ad6b-91df4273b196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510e0508-256f-4b4a-b178-212c099b9fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8973ee7d-4767-4996-9a0e-906d7cdaa90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a384d48a-13b6-4fd5-9816-f696a29ac9f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331bd7d3-3085-4eed-b4f8-ebe15ea02317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf93c25-33ca-42ef-990c-247b6122e663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17955b9a-4cc7-4a13-ba0a-4ceb5a2d3636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7800043-136f-4c5f-98c1-52320f1b495e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30759e5f-49c2-4d14-acda-adbbf9b8bf64",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e01bad-2831-4cd7-8768-04d8ef905fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3333a4-fa3c-46b8-9bed-f0cdcce8c7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adbfb6e-2ae1-4fba-9e1b-4d51a2303fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "deda372a-0ef0-49fb-a503-848ff1883521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8391565a-1696-4f9b-af1b-aa810351456c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e145afda-9009-4794-b9cd-7b4a33b27bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f645f8d-b067-4f58-b16f-cdef859ec622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be13631-959c-4e99-9db2-9b34f4ee2110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "285798e6-a371-4e23-834d-7e2ac045b006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601d77d4-70c4-4324-99e4-c88e9ab1e8e5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13697f8f-fb98-4d41-a919-05f8c5a203eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9d61bc-3143-446e-b404-7efb4292109c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf2b5b8-ed0f-44e9-acbb-dcc17ff6b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "916b07c9-106a-43a6-845e-89d096242161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1b0dfd-b3a6-48d1-8706-34aa7eb80acd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af102aaf-5227-47f3-b463-5516e660a348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63b70f8-534b-4737-a0ad-647f0ad12552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46477c4f-e420-41a7-be16-ba810be7087a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ac98dd-d965-44b2-91c2-bb9a5a30befe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18ad9c3-6127-4be7-a1fb-59044127b54b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2e2c19-2162-476b-904d-a5864543d78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7572b3d7-03c3-4221-ac76-94a77083969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae13ac84-e3ef-4ad2-94f9-3b214033bb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7991fbfd-c854-4c44-969e-1b6a935f5ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15290962-a191-4365-9b14-e6b999d095e9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff0d36e-fa5e-484e-9a42-b493d1368cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56fd79d-e8ed-4415-8f0b-31bfa82c63dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fc889f-659c-4dbf-b625-53fdf32395af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff17ab1c-35fd-4647-9dc8-17372492f116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d486e671-1fdc-4ef5-9775-ea3dd921ecc9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cd696d-3ee1-4b11-b681-4eaa381d2037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4ff1ca-f3f0-4fee-95f9-79f244d4f4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18930d92-2424-4d1a-a666-67e93bdc97eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c6525b-ac44-4475-9d1f-98d6bcc311e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c29065f-1892-4558-81af-545ffcbb5e14",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c0d52b-8eb8-4436-90a7-f7e81182993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a780c98e-2cb2-410a-9c87-4946c751ece4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9598592-f403-4ee6-9e01-bd1c7ff90a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "25ab37f5-8b54-4759-88df-8649cc6c3d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb665e0a-48d1-4f0b-9632-be86a65887f6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbfb60a-f417-4ca5-beac-8bc7f24ee21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aee1b124-6219-44e9-8259-a53a3df5eec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6048a1-5ac2-4276-bb9c-a2e52789113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "723d200b-7e3a-4f73-bc3d-5f4c197bdebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734142c9-73ce-4c32-b594-77f580876409",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bce19ef-0780-4f5d-85a1-a3d7d7954a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d20e48c-a40d-4caa-82ee-34a5deb28e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537dd948-b17b-45fb-bc9f-bccfe5b85eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92ca841c-f063-43bb-bacb-280fd5c7b5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c375222-05f4-4571-9b57-8a81b8344c55",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34025e1e-d363-40f2-984a-5a23fefe8361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d0206f-d7c8-4d86-b73c-fb45eef49f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922da491-3d44-4082-b6d7-39b51a712af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac046ffc-be65-4da7-8efc-b37d5128e23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f5043e-c5bc-42b5-94a6-d1dea1404f76",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a43830-c1a8-4512-b54c-89f07c2727c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcfbeac-a3c6-4a31-a70b-63dd6ca6e963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae56789c-875d-471e-b7f6-8aa899d866b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "34818c40-a552-4392-820b-f6a0cff9f686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d6cb0d-6acc-47a2-b710-3595ce2c3355",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1a145f-baab-4c2f-8999-04118268e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceeace90-10ce-4a14-b1f8-7d8bae2c5d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521faab6-9ee6-4076-8e4e-a8a0cbd7b87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dac6502-7e7b-4249-81d6-6682080595b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559a79fc-6a63-431b-a8ef-74b36ecca12b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df39bf7-8f5e-4de0-b1e2-53aae151b850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6202524-1c63-4d25-a738-05a08bb9dca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b5cc47-327e-4b32-8e8d-4be06c318e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "149029e7-f2b5-4abe-8097-ad96ab68a132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dd14ec-a94a-407e-b410-1a0e44d4aaf7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0420b6-64be-4dd5-8f55-20216eb888a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3effa03e-75f8-4fc5-88a4-ccfe1dab0f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12657861-3517-41ed-8661-3ee76502c410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1d0630-ed2f-439d-a20c-e3dde5ecf709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f3f32c-93e0-412e-9b13-632afdd31028",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4cd489-b5e1-4c77-a8b6-49b8c1b8fc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e82c26b-0322-40d1-99ed-0399c8899633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e306068f-1645-4a6f-8fd7-8be0a6e7257c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eedd2a5a-e8b1-46aa-9f9d-749eb48489ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29480084-b713-424b-a6d5-662b18e15bce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98de387-be58-456b-8776-5b8115a05f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3be6c56-168c-4d8e-9111-0e3db69265de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e82312d-b5cc-4741-bc7a-1160b0257b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "526a870c-857a-47d6-85a2-0ed84dcfcc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d68dbb-159a-4100-a621-c5474cd090f3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a729c47-dbdf-485a-a4fb-5281cbb5d5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c9b717-ac05-4a6e-b384-bf096a42d2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b6a582-cd37-4261-857c-229ef801f45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e620f7c-2f57-46e5-b452-7bd69e5d1a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8036326b-c6c4-4e59-a444-bd77690564fe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5d7645-31ef-4560-9a34-6b9064043686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c976189-94bc-4914-bbda-1f22eec4ba24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10cb24c-0cfc-451f-8c74-b2d003f87046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "164fc5f0-1ad4-4a8a-accc-0ee88cce2f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d2dd1a-0f76-4886-8d6c-cf6b5d3ad05e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f48ad1-c376-4108-a684-f758f6368c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbcb7a3-2ebf-47f7-b287-73685499f287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0525db-f138-4105-be27-49dc39b61bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e206f92-5ea4-486b-87e1-8e297a79bda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3e57b4-b339-4588-b159-360f4d835607",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0fa659-815a-4ff0-bc43-2db173969d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9e87dc-1f3a-4e7c-82e8-8e74dd1a44c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682a6346-0aa8-49b7-815e-d87016a23f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30f54ef-ac86-4a84-ba40-383a0116b36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61c119b-11da-42d6-8f20-8b8c614531e8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f774195e-0581-4cb0-9e6e-373020ee107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732a91a7-48c2-4bc4-97f4-6c267531374c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497fffc7-edb9-43ef-ab30-14f7a1b8e89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4e0647-48fa-4a27-b5e3-090fe95f610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc781a93-5b45-44c3-a98e-e331b26b9d99",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db91590-655d-4bd5-91b8-d4a2d84bb67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c123f2a-1989-4b48-9bcf-e17386a2acb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a06a88f-425c-4d5d-8969-5ed86e7b2dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57fbb98e-314f-4cb5-a47b-cdaa4ac674ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e283b470-ef89-4a3f-8db0-46251b91cebb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cac2833-0c15-416e-b6a5-24ab3a931468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a754400-a0cc-4929-a0f4-f2e096236539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2378724a-974a-4385-8a3e-0901e7263aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b216a6d-f38a-4308-a6f3-36c6b581733d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a440e3-9315-4cee-b921-c38915c71d37",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da18ea3-5ee7-4dc6-82ba-67f421d3955e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1cf9a8-7447-4afe-bd48-05cfaf350f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240d1d3c-84e7-4163-bfc6-0c4dd4d36fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af1c38d-1fb3-4152-b722-9b4ac48f78ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7ad49f-e3e5-4067-a2ef-57224d1bacb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a78cc52-9fa4-469c-92e6-a003278469ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d36a90-e8ad-48ef-b2f6-fd3b42793488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc7058f-a5dd-4af2-a1fa-cbd351d86d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ef2b37-d2e4-4f3f-aeef-12904995f13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7785fd0-f9d3-41e4-b69f-c7590b682506",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de592f88-ae78-4ef5-a9c6-758b1ffc70fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9c3304-e3de-4a4e-b9b9-8ad4fe8eb182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f20ccdb-fe37-44fd-af74-7c8323965242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32337c85-ab5b-4229-bdf5-cc17af539732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716d2dca-84a9-4b2c-9a6c-f41a4f85195e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb845c1a-8631-42a9-9b1d-aa25883e04c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227ce1dd-c630-4f08-a040-786711ed102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31eebfce-aca2-4034-bf67-fa8d05c46600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae65590-f351-4d4e-81fb-7797d823207d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4921e725-1c8f-4e79-9019-699e7094281e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ca49fc-56da-4b8c-a20b-1a832684d282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaf02aa-10f2-4211-b19c-b6c631b29d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbe2a53-abdb-4ed8-8692-fcd2815d729a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f974587f-6cbf-47fd-9731-c430af87d4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45607ea2-7fdb-43bb-aadf-09563eb5ddf9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cc0198-622f-462b-a0df-e78b6626933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40da4165-8f55-4572-be8b-2bd3527809d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77432216-b81e-4ba5-b879-ced859655b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f92da1-cb46-459a-8100-94291665c229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286495ee-bb6e-4aeb-8b29-3d1ecef6f266",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf00e18-56b3-4c23-bb4c-a1f0ba4d6cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d56fea-a5ba-4885-85c8-e8e8888c689d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196707f5-d23d-4084-891f-e1928c11fd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2237852-3700-45de-911a-622de22da88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d77c23e-36c2-4cbb-ba4c-272786a4d6cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b56be9-0ade-4125-a99e-fa98636b6594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76266997-91f4-42ff-8a8c-6c0cf1838d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3179e75a-6ca2-43da-915f-982076162c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad9363c-f9bc-4936-87c1-b10f02d69acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6985170-9840-458c-aa26-9a13954039a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7389aac9-fd94-48bb-8239-1476f4e894ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7198fb4a-a271-49e9-aa61-50b2a84bc80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62df2d0b-25ef-440f-86ca-72c4cec79818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "47fd76f9-6331-41c8-96f4-f590c546e189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc9f24-1314-4efe-81d0-de7bce086c4b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb72bcd-79e9-41db-8c7f-c740f7e11cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef724922-c7b3-410c-ada9-481a8d5d89ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ca6441-3254-470d-8d14-9030c8f835df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee60c5cd-082d-41cd-a032-3a9702d05c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29378d8d-947b-46dc-8ae3-72dfec43937d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddebb342-1c6a-4002-993f-e71e89f90188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cbff63-62c3-4610-be60-190ce0ffde48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f9cfb3-d778-45c8-b497-cad1d5607b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a69e276-5759-48bf-aecc-53b51ba14be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d775436b-4441-4607-a3dd-c29f238ac7c7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331a510d-1491-4ada-9e76-25351140986c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3c1734-821c-4287-a7f6-7068cb7916b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc8bc89-cfe1-4320-a508-dca51c1e8433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "48e8be14-2a8f-4ab8-bb6c-7c7df0302c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8237283-c960-498f-9552-e82b1604523e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f9eff5-0cd0-432a-b2d0-09b5a291609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cd901f-34cc-4664-a139-9ba4140f6e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5141f4b0-10da-4de8-ab53-d9a9c64cf4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d528dc-d831-4a6a-8430-a5f0b15fdefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a079b080-48d5-43ba-8fae-6be5d6460e31",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec89d09-ade9-4c12-87b9-8998f227f6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17cba1a-3c58-47f5-963b-e98b9b703300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c7543f-ce3f-4e97-b206-4abb91b7f054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1144b8ef-4a24-40c9-8b26-db7a9ea29908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198f0f49-9e35-479c-94a1-f9da75f77179",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881d78bf-ff33-45e2-acdb-d46973d8d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21064a4-7046-4560-aff6-1070b0742b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10195d9-7e5b-45a4-9a30-258e6268e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68baf55e-dfc2-447d-aa1d-9112e179760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd76ea1-4e14-4294-a931-9e81443e7c31",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0966d80-4f04-49ec-a417-368d0447b7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fadb848-83c0-4281-ab27-2bf3b4bffe16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39851889-371c-4fde-8051-6f14924b7a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d437b0e-df17-45f2-9dce-5c83706a8fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef43dd4d-6884-4844-b489-2054f95e36c9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f53c533-61b6-4218-94f7-4cd764e4d411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e20b78-19dc-4d5b-8e9d-37604d3908ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4238860e-1c89-4205-9723-d83a56ff3589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a850a5-e770-4ef0-8b8e-8e6560aa5ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9c55ca-b652-49df-b855-bdf3362f12ec",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583c89be-e218-4fa1-bb15-df26c1a6223c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffd381b-3970-4e8f-a8c3-e233f83ef68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31294b0-1a0b-4a0a-a3fb-51ba084a39b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e8a277-81d0-4d35-9c46-3efe6bc2ee26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc9789b-e3d8-443b-b235-e622de2f5ffc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adee5ddc-689f-44eb-af44-dd2e754a04e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2bda6e-e595-45fa-a8ee-3df973bfe7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8454c41c-1863-4361-a373-85ca9a0bb355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "169dba76-575b-48fa-858a-e8805cf6f52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc96654-cc59-4ce1-9028-27c2b57bef44",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6001df87-7b65-44fc-b747-e8b6926c5911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f115a07-4d50-4f72-95c3-e5c31e20be56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6808ddc9-5744-4539-a29c-6ebac6d696aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8118ff-4f47-4f8f-ab71-7febe93620c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213b39ab-d032-4ca5-849f-222b990bece7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a195965-a7c8-468f-9041-6dd9953f5a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9af9c0f-a225-4dd8-a87f-21bd8f467925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c334de-421b-4c1f-88df-e3d307a28bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d3e16e-9259-4cc2-bce2-bd467209cb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bffbcd-094c-4b81-b558-07dafd602177",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2881f865-b936-472c-93a9-6993d673583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f25936-30ff-4cdf-845e-8d6f93cebe23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a91f680-3ffa-492f-a51f-072658ade81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad0b9c5-ddca-47d2-9fb1-4a7758f17c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c59447-da72-4e1a-8c12-ee73f46d5d5b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f107c3-ee18-4295-a827-f7af793c7101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b80ec81-f9be-4aab-bef2-bba398f53ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9454a1-a512-469a-a907-1f96e48511c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "091bab40-5e89-414e-968a-cf00bfcb492d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30e2f60-557f-4ff1-ba72-ebb89930fba4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3ba38c-4471-43a3-a63a-e2c47da1fbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8719cd2-770b-4380-9936-3771f4c2e7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c6ca26-932e-4a32-948e-fb03c6d7b0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c963cf2-e3be-4d05-99ee-8823e1cf7dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc51413-8211-43c2-819b-31435c37ada7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1378954d-c150-4891-aaf1-475ba97dc1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dee65f1-e11c-4abc-86d2-3ddabcaa25bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18595248-adc0-45c8-9527-90f159e3056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "812e9763-93a9-4b90-a30c-5138db99390a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f58619e-5cf4-4355-876d-9fcb1bea0690",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c89677-4d5b-4b42-b0e4-6204e2b52312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b286a1e-0f2f-4110-bb5c-0f896ab52955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef72c9eb-e186-4a29-a0a3-dc9b75278ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76ae4179-4a2d-4334-a756-db2679bc1ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe9c2dd-4e74-4710-a507-896bda0f3862",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a73c80f-6157-4e3e-9438-a988fcd9426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76fd0c3-c856-4bcc-a2af-0a4adc7f0d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bdd90b-f782-4b56-8bd4-7f51b70d0966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b2037e-0173-46b0-b210-02afb3dc83e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b733735-8226-4ce4-b392-64a6346ff54a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfaf6ea-6125-4fc4-8594-02578c793aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81471229-a963-4397-ac27-87babbc26586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e317639d-53b4-4fbb-b821-e8dbd927f77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d33d215d-f243-4c8e-bed9-8674c3e72569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e869d5-9432-4ca9-8816-cf3e86fee47f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbc6e13-d069-45b9-932a-8aac923e4ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938e5f26-479b-4cf3-b0d7-99dab52097d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff86fc61-ccda-4af9-b5ab-abe695d84007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e161a1-e783-4a17-b238-b308b73ce0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a458d8-1cba-418c-8ade-f0da1c61c0c0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820a28b4-fbc9-4524-b452-52976519da68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d761e788-daf7-4d11-bb2b-fcdd85351b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10207026-88bf-49aa-b8eb-c3ce64bb1fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7282f2-a26c-42cd-8bb1-8e278c1893ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3dfdaf-9ac2-486c-8f8a-3ccb65568b9a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761cda60-6c36-4db9-be32-5e2cfeda43fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24f775b-e501-4392-9502-b077f5b65a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5cf92b-0efe-4ad4-9498-8c1c0e927f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9845a16c-6620-497d-92ee-c169ff6a6932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48359b5-cbc4-4f5f-89d0-7fc271456731",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58c0397-bec8-4187-bad0-82297185b9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddb75ed-641b-4ebe-9211-8002bbd8673f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f08567b-51f4-4e63-88b1-907ea4db2e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f7ab3c-f941-4664-a8f0-20f172ee70ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b28b2-7ec3-4668-a87f-f7f82182d640",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1224e042-53e2-49c1-9459-b05b790d3a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585cd738-4949-4d4f-99c7-36a3d7ce3177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f28c005-32aa-4272-9364-925f2d803f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf715a55-8287-4940-9588-33c0346a4e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe25f2ae-306c-44b7-bede-c0a16d245d6f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae706bad-cabf-475e-9e7f-b7594ab28a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01f8f7e-2670-4f4e-b092-fbed1130a83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78819396-2491-4213-ab5a-70c04db9d3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e03cf2-ce83-498a-965d-795287beef89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecfdcf4-a516-4525-b2ea-a0dc22ca6b52",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ec4e78-b3c5-4b30-8055-fc156d15635b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d2d182-f7d2-4cb9-b162-0778f0bf8618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fd5aea-30bc-491d-a169-64325cd8bd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c45c6685-d806-42d4-abcc-cf4deb264e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94332d2-7869-4473-9040-4c5bfb6124e4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6104cd6f-267c-46b5-93a1-cc0f278814f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c299b2f5-36e8-4214-9fc4-0a356a2f1424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9653acad-4352-4c54-8bce-8708793ff9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "98a3441b-35a8-4f28-8e3d-0856fb164df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f881b3d-9cc5-467b-b955-b9ef12e39f2d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954faaeb-4f0c-4f41-92f8-405f0c100442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfedb38-eae3-4f96-a424-527228e32a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397595d7-116d-4f88-800b-2fc31fa26dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2065383a-3ad7-4d24-9b0f-430b7e5e19fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ada86a-dd0d-403c-bb65-2bc9c60a4200",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994749c-b61d-4323-8e60-6892b82cddf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ce4801-9db4-42e6-a920-548b76583e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3179d20f-5b35-4cb8-a5ff-7e1f760b0901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4d3b14-b674-4aa2-bea2-4496cda9c485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f18ba4-3153-42ba-9eee-f104a9f2dc92",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa889ba-1445-4115-b28c-23aa358ccc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733b0c46-d2aa-422b-91c3-dc5e1b4c0e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db2a402-0d39-4d31-9626-6f7f997ce6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92880d36-3de6-4929-a648-476219864336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaf9de1-d8f4-4b21-bcd9-18d7acd24eca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcf2d96-92c4-4d1b-8c9d-589b73dcbc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af6e55b-0959-466a-80b1-a144ac3f57db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb2b0ca-675d-4091-9b65-10c9d423967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "af4950be-a4c4-4230-88b0-1f8c34ac02e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c06f8f-456d-49e5-9bfd-17f4d40f2111",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8289fb1-1e9f-4a86-aaaf-beb14b2f95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cbac2301-f790-46e0-8b17-558cd49cee23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab5dad5-6685-4f03-85fe-19bd7b03f8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4c2911-22c9-4022-8ead-838fcbce5440"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a99935e-7afc-463c-9f63-7c2e04d6be98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2672d776-d1ea-488d-bd6e-5d65fb135701",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82e35e0-dd38-439c-8054-ce80b9e65a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcc29c5a-afa1-4f89-a02b-1a5858edcae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f737d39-290a-4114-bbc3-8988a0ef9910",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9cf58a6-d332-4595-9663-bf9bda427a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98be8c4a-8a04-4a1d-9338-95992ac35b38",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976358e2-b444-4e96-ab44-f154f25af635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c3186a6-c477-4780-8e6a-925ccb6ff3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ee0965-85b9-45fe-8dc0-d2205babc814",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1ff2c6f-41d4-4fe4-8f85-4d0244498aff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a0c4820-4b5d-4b66-96fc-fbbf1709efb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "383f0a86-84e6-4797-88e2-0e5b8b0bfb9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7707e4b7-5c6e-4b10-9bd2-6855ca929fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec6031c6-cfe5-40f7-a772-3ff92a5581a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "782e9cb3-dc11-4418-a06f-59aa9ea5e279",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d88e840a-59de-4d73-8802-376686e0c283"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f4aaa2b-f3fc-4099-8c8e-1dfe5af280f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40993da2-eb60-4879-bed3-e0d13693ee42"
                }
              }
            ]
          },
          {
            "id": "4a87644a-60d6-494c-a3fb-103f9c428525",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34a2b062-9fb9-4e81-b05c-c96aec57b0fd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f62538f-0b0b-461f-a328-957e7e2d26d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b852762e-dcf8-4865-b216-2e092dd0d4ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb659957-8af8-4d79-b206-192d565906d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14680df9-6e79-496b-b8fd-65c5bf27416b"
                    }
                  }
                ]
              },
              {
                "id": "f7d27fe3-e2ed-458c-ad36-ada28c0da461",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfbc150f-6231-43c9-9455-fdab11c23417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b65cf790-cea8-4685-bb11-61dd4f17a13e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cb004d5-ea58-4b80-8fe3-d57db9ba2ee6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3396721c-84ba-4b1a-aea4-42e09ba2e13e"
                    }
                  }
                ]
              },
              {
                "id": "e92898fc-f1b9-491f-ae84-130d1fabdd3e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6386e93d-c54f-41e5-9106-59253333ef98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a300a40-364e-4027-9a61-c18987f39d41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfdcee6f-3bfb-48f2-870f-9446cfc999be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41d25a2b-0893-4553-b45f-782726194f3f"
                    }
                  }
                ]
              },
              {
                "id": "2b5689aa-60cc-41bc-a7df-4eab637fb338",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "640ba109-955d-448c-a191-72414d94876e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c00a8e4f-365d-456e-9699-d2cb2d279d05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9c35a32-180f-4773-9ad1-8957ab314958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "001515af-49b9-4640-9026-87f899c3aa4f"
                    }
                  }
                ]
              },
              {
                "id": "6cc80534-1b37-4395-b19c-98645a914cdc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1afb032-8e70-426f-8816-6385804ac533",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4352907b-9e91-4b01-81fe-87c8063cfd82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "540df373-edf1-4c4c-90e9-47956952c68b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0039e4c5-5170-44c8-82de-10a5cb97138a"
                    }
                  }
                ]
              },
              {
                "id": "6fea4726-8a6c-47f7-9ff3-869573b7054b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6f1ce55-14b2-405a-a5cc-4c7576f16854",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ac68d24-974f-48d0-987c-76edf1250823"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd57204a-91ad-4dcd-a292-7f6477c7fbf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c07ec5b-7665-4ab5-85e1-30035ed872dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee336785-01a2-47b2-b708-b8294c6d26ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "327a4a59-7d61-4a90-ae9c-ef62f1475a28"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8d8e03c-efa9-4dc1-8bff-4d746366fab5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba8ec8da-a9a2-4348-8838-589e2c3d8ea2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "497d89f3-3f73-41c6-ad11-d8b6249a4855",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2379c44b-5195-47f9-8ecc-8c8839096ecc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90914c8b-6cf4-47ce-ad6b-3674e581c056",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfc426f8-1887-429a-944d-ab30e228a2ba"
            }
          }
        ]
      },
      {
        "id": "47e7b785-8c87-4820-a29a-153808423490",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6f721d73-34f3-42d1-b72d-8db942cda9a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91d1e0d9-a8af-427a-8f35-27b45f91c307",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef483741-415b-462c-ae8c-aaba0c15b7c3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4479d22-0bfe-46ca-97e0-ec412123171e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14ab389-e74e-4030-8016-4708ee5d8fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03359f8b-0901-4791-ba7e-f2a9798c41f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "52320912-e836-4414-9cd9-7d44c4e4b7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5320f8a-a22e-4818-b8ac-e7b64b35d11b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c4151c-f49f-478f-b3ff-f181d2865352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec82281-f93d-44a8-b3dc-2bb6c446a245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee71525-ca97-4da1-a92a-3e3ed59849b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09644693-af10-40f3-a529-8b12c08e2307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98b5769-b126-4b3f-9fe7-550a08221c35",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc3ed99-97ae-48de-a4e7-2ee3eed16a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6c3fb5-6968-44b6-b4a9-c3d0a53b2fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7885f946-d45f-4e8e-8654-19c6556db368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf97d12d-f682-48c0-8f06-f83e43f562f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7418c0-83ed-43d2-b386-90a017aba0b8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f8d5bc-ceb2-4893-897d-5892d2ee14ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30baef43-94c2-4589-9bb3-313c112fe986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7b3586-f4aa-4aeb-bc52-f3ffb18462fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "507a2235-000b-4e77-8364-badb38ca8b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b853cb-0416-4aed-94a5-29cc39360db6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962f6542-70ab-4d69-b7b0-80105ebe5278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1de2ccc-64a2-4ab4-bbb3-5542d4a6e92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56a0983-a362-4426-aa8a-3654aaf68358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83594900-aed1-4392-a4a7-3f53acf70316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45e151c-3c94-43d2-a00e-0f4c1daf1f37",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931f197-9e9d-4043-8e68-5d307345ef81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27477e2-5807-42d0-91f2-cbcd36190071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47388758-99e2-4330-b6df-31267e5bf8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13909c20-8cfd-4896-a3fc-b95732cdf41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0839bf-b421-4d31-9a69-8c2b8b970b3c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad97c693-ff49-4169-97c6-5771eb4ea44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f5007b-9352-4e06-b900-4b89cba7d426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22028bfe-7aa1-4c59-b5bc-85a5ef006a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bff32adf-c490-4f5e-a395-9dacff021df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd05915b-4627-4a57-892b-35341b2ee739",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea1f8d8-bf35-444f-8996-f6230c179762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0304203f-da6f-4e0b-ba59-fb0d01861401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851fe7e1-3317-432f-b40a-77e2b38ad351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9acd40ae-1d76-4970-8ca9-ffe687f318d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c6b564-fcf0-439c-9316-e42d0c89d8b7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e111f8-d8ab-40c2-b994-d7861489515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a08385-8bd7-429d-85ff-afa92dfe0bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f01bd59-2700-47b8-8f11-ec50f3bc0de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2f9e73-d5c0-45eb-a3b8-8adc4b7b0452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6538515-7c28-4d58-ba3c-7ff8b7089fdb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7566d7-d69b-4711-9602-e2d58bca563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e765e9c1-da2e-4a56-bb34-93cfbfe4b573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf5fb60-5876-45a1-b70c-d098aa43960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1bfcd7-5532-4470-8c3e-d3308c804b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9e2df2-4f31-40c4-8e66-64397d897bbe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ddcc3f-cc96-4dc8-8346-45d8a207a5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd775dab-8bd8-475a-92bf-bd6601010a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1928136f-56b1-4e32-8c80-7181198ac015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7f91322d-15af-473d-8932-d6bc97ddcf33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db88fb2d-0ae8-4fde-abd0-4d3eec8330c1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7a0d28-0364-4975-9a25-7477a50ca5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8404a2-f3f5-4f0d-9c1f-d370ff2ebab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b717e6-3103-4aaa-8de6-43e2664b88ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c39e5443-e814-43cb-b9e0-1c4e7f55f292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd718b7-b9dd-464f-ae34-8e32e7b35994",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe3e88d-5615-4bc7-9ced-44c296499ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcf222f-1c62-40a8-91dd-c03ef6515f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544f75d5-5bcb-430e-8db4-6ef74d7e4f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af0339bb-faa5-4102-8716-ab9db628afce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24e0f0-0afe-4ee3-9457-d299b7ad22d4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057dbfe2-40e4-4b65-bfec-4b4bb3f40ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cab5418-003d-4ab7-93de-40aa78ef3a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8312ccad-f160-45ea-9b11-0a2cb69e6093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7362ebdf-d204-4f12-ab55-81b3880576f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb4f3b4-0d22-49fc-beb3-f4f30c111264",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a3e2cf-d291-4308-8249-62f491789732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6663e813-4786-4315-ab81-6b93441a5796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd847d8-6081-4647-94da-c5d757315514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "693963a3-ae83-4947-9c52-305c534a65e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33168b53-aacd-4b4e-8b3d-5a04ae402f67",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecb1e72-1550-4cd9-bf8c-a58e2dcc5d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b4f28d-5e6e-4a83-93f9-33e693dd026e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80712dc2-f062-4ffd-a768-20c1f67445db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d4490e-05b0-452d-aca0-e2afb92d4b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce32f0c-3ee7-4809-8f14-edf4a25a9120",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea07d7d5-7aeb-429c-9007-c57a98474a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ca3c41-698e-40a8-bbb5-05c8f3f60314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1bbc76-4fb3-4149-ae43-ac21baf1026b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "90da299c-c35b-44e1-be69-0407b7921f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cead82-6e53-43c2-9c43-af974e13756b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052321f5-cf47-42b3-a128-a9e12cf931ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0dafd4a-a42a-4e08-9c91-462e52308caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8659bd63-21ca-4f53-a518-92b53dfffa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "47934ed3-54e2-40df-8160-cfc241cfe477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0431484b-5770-43da-a235-5294ec2e3475",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73e956e-3e4a-4929-8fb9-6ea922d54683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d0365b-477b-4830-b640-68192c5383e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a68236-a470-486b-b7bf-2ffa20521b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e7338e-acd5-4232-9cb2-2f5ed194f491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef98744-bd67-43b6-8b48-eb932bb5c69a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cc3877-ac84-47dc-8515-2f41e5d77178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5ded92-2652-4a04-8dc9-45bd799fd643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed677905-f143-4cf8-a37d-1dd0f77b6d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35319e20-5b49-42b8-a30f-17dfe36bd711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3341b9-1d91-429b-a770-bfb88252987d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fc56cc-9294-482c-a2b7-df0fd10d543f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cbf1f1-b294-4ae1-b6df-0ec9250261d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b25789e-f043-47f9-852d-0c416dfc1f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3180086-5824-4b51-ba6d-d4ba569a2fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ae917b-de14-4368-b1c9-f8a2a110588f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb7ae3a-9430-44d8-bd28-94b51af8db6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b39c00-d326-4962-bfce-195b24be4305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5a655f-24b7-412f-9164-9b72c070473e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cd4345-7891-4ec7-810a-5131d338a2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff634eaa-6a70-49e7-8919-f7a44d620529",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4748efbc-329d-4e1c-8c58-2f8ddaa47149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12f61b5-15fd-4ae3-9943-32afcaaac2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803c3876-20d9-46d8-be53-61f523dc6750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbac6f1-b85c-4dfe-aa3b-5f6d249d399d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d2263e-a59a-4fe4-a78a-f95189f83b38",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be00e96-e7f9-42af-8beb-cf7e9d374f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28da7d95-6296-4995-9e7c-39f2ce9fa109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720d8937-a7cb-4908-b876-e35d6eef7990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6fcb42-0f3b-4f60-85bb-e913055758d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39768570-0f6e-4c68-bd7e-5f1a393d3ef1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ec46f7-c78a-49ec-b093-ba382a78af2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0a9a5e-5367-48a1-8915-1f45498f7470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0459ddc-b7e6-4e9c-9cc8-a4cae2230297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfba7e6-a9a4-47cf-a40e-496be71f2ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464f60e4-ac35-485e-9bb6-a92567d9a5cc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd4c6fb-2a89-49e4-9cda-6fe45919209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00d0d86-9df1-43c8-a03f-e416b471136c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e35a411-c45b-4b31-a6d9-d6bae3a16633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7858a01c-e9f8-48f9-8f76-b66145520ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812e6eef-2cd2-4d92-8d0e-d03ff1b25b16",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eda58c-24e1-429c-9f6f-c2902cc90bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a57284f-c74b-4f7f-90d9-390a8ffd8536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a15333-a591-43f7-9745-17a2b5e3647c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4ca6c4-f3d7-4dc4-a256-a85e4dea2575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d62eba3-da6e-42d1-a66d-9e8c27a8cf3a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad78c499-a550-4710-b73a-e2ad9ca60822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb97729b-afbb-4d82-8d7b-3b6a81e363ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d445a26d-6b94-4d98-90a7-446599e8a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a910ba-8dd7-4536-823b-1299635fd65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c8bff7-23db-40bd-b419-bccd6ea4537f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b468d1-95c6-49aa-a501-9600856eedc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b08f4b-8e26-4fff-aa10-a790ff47c8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d178c8-5a8b-418e-a362-dfa0e22abfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "054418af-dcd1-401f-8cd9-3b1ce4292642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfd8dbf-519a-4cdf-93bb-3ec9d2f7291c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2753c3d0-c9cd-4816-b2c1-6b5f01b7a9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a3bd14-040c-49c9-93ba-0c66f546877b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dd840f-7430-4a7e-bd0f-ef1ff02118b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab66bff-8f38-4e39-a9de-709a3d17923b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0281824c-943b-4883-b28b-aac9461ad6e8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6782974b-38c5-47e9-a3ed-c0cf2047274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5710fdad-7111-4a2c-a70f-d6921437981a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfab8a98-04f7-4d4d-ae0b-bc4bf5eae8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc612dd-2354-4f33-9966-0d27e6a18d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8abc60-08a2-4caf-88e9-13cf0f68c8ee",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04421bf-8f5d-4c89-8a68-eb9090334edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4564ca-5ae4-4b1f-8ded-68d0e0a6b535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7375b0fb-b380-446b-a632-a6d9e67e95dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "333ca1b2-5522-43d3-9a9f-71690db54522"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43df233d-536d-479f-8f54-777acd2b2984",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8539b6e0-d70c-4b5b-95aa-d1533e5b8662",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5353e3ce-3512-4c0a-a1f0-3e24612e1de8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "900db207-5ebd-4f29-9d62-39ce23a8032c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dc935d-411a-4e9a-98aa-6765af027851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34eee9d7-8d09-4b7e-bd6f-63268abc5290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775a7359-c505-4222-996b-30f92bd1c917",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412effdb-8396-4a53-8d0c-c52083478558",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d6ab0c-24dc-4147-a838-d7db3aacf8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f435d0a5-c13e-48a6-adb0-ea99f6e5c8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcc4b260-9aaf-4d9b-8343-d65142c76aea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9fd3542-1458-444c-921e-4d76cb304052",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6d8f08a-9176-4a48-8816-9adccc15e666"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "084c2f10-8786-4eac-b1fe-b5e96fc63f48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5548cb74-e152-4e2c-8241-35da5e5e5939"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c514e7f-c3da-4442-95ab-544c4a00e421",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "724e0d51-e6e2-43de-92ef-7843073efaac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7611871b-8fed-40d9-879d-7772ee9f7db6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9573d4e6-e669-4028-8ff4-43a2aea8f6f5"
            }
          }
        ]
      },
      {
        "id": "73df516d-d7bf-450d-9f5a-20fa9e1ab428",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d7f7cc00-87c8-45cc-a579-07c1260c1ef1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12417920-76d6-464b-9448-33bcf3661aa6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d0e480cd-f388-4cb4-b1b4-e52a7f98ab44",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d631b4b9-c243-4814-86a5-78c5339676b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adb6325-e922-4fc2-8a73-a5c14a764ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1605599e-8f44-456b-9227-ac427a3c8fef",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425575f6-467a-4f2b-887a-3d1f709b49e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4eb1b7-7bd5-4adb-801e-1ac413e12bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46a6e8b-a4d6-4ae0-9ab1-21f092b5464a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128cea9-73c1-46e0-9dde-96a8cbb8fac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7a697d-79e5-447f-b382-551636e75fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd318df-8fe9-43de-9433-eb78d01ac326",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62664623-a4d2-499e-b404-0afb6b28c08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90fbfa0-b8dd-4106-87a2-ad914c720170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45dee024-7638-446b-86c2-0998cc235d5b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5d41d5-a7a3-43d3-8509-acf3f20d81f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaf2fc9-5bfe-49e8-aea8-bcbfb24c61d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cf6e19-37d2-456a-8a6a-41cd2dc0d07c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aeb250-7b2a-42d6-afee-c481b403d0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4819de48-2d9d-4762-9163-71627ef7ff95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719a8e77-05bc-4848-b909-949b66d4933d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19e489e-3853-4e50-b757-763142d892df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42580ad-6a56-44b5-a8c2-e7bc2dea3dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423be96f-72ad-4289-bf28-2170e269e2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168ade00-b3ee-4912-9991-ea5e0930e21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338ce54b-a022-4ea4-bf8f-6e0bb2adbd00",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d67e168-0097-46b0-94fa-87a6d7eec3c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38315b4f-3e89-4a5f-95d4-84db2c442bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db7887c-7a92-4faf-b2ee-d8490b3dd1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671d0fa8-1651-4a20-91d1-7647d5d4622f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e322cba5-6863-4df2-8afe-a5465fd4fc41",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f9f04c-63f1-4b74-839f-2abe22408dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c2a4dc-39e9-4750-8856-bc9abc80bbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3f25a9-73ce-4f5c-b0b0-942b46e8c08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3843c87c-3215-4a1a-afa1-ad41a773471e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d828eb6a-775b-41bb-8563-592e3f16d09e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87fe4a2-4a8e-4d91-8161-1b65ebf3ff2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "634e0242-b1f6-4737-b8d8-cdd6fd453703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eabe87-361f-4117-ad37-fad2f2036974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef7a6dd-9777-47c0-b81e-48b7047c3399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dfa7db-f914-4f15-bfc9-576448fc63e7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54b28b3-6562-47a4-bbbe-fce3fab687ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf4d0cc-be7e-4c5f-b461-52028e0cfb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94300303-a661-4a17-a7b8-9bc51710db3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23e15ba-6280-42c0-bab8-20640a4a70f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f99455-a0c7-4b96-a2cf-55b153fae169",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d37064c-8df6-479a-ab18-07cbf45b7ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b00ea28-dc2d-4702-85a6-3405c3da2e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7608ab58-6837-4020-af58-cc7eb29750cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9282434d-6f53-4baf-9c55-13db961bbe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710e6801-dcfb-4a73-9577-d77d0e595f1a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00642a84-3094-43f7-ae0d-7a7344800d86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0812649f-8b1d-4b23-b516-e8c35c0b868f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b87b268-4a04-42f1-bbca-a18480d100be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e1b046-ad01-4f5b-938f-91f301470921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c64576a-6a14-4ddb-b67f-03aa46f03e24",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43146602-ad84-4c3f-8c8a-767484b56167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50aef156-0cdb-41f1-aad9-0635580008d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd0c4a0-6f9c-4290-9d3e-1cd44d2d2670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d034ee97-0fd4-42c8-8598-591df3d3cf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efcf079-423a-4ef0-860a-c27e35bb7a27",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaf7c78-1734-4b78-afe5-9b6eb11d28f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254eb14e-680f-4562-8a89-8b8968a5774c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21c318b-b859-4fdf-a195-411df711cd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b12e82-ded7-4ab0-8d4d-c1735204ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce15e13-b1d4-416b-bb53-9b34f712cdc3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64acfaf-d154-4de0-a135-03e45432529f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4dfba3-d68d-48c9-9077-260c1e49db81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604df95b-e309-4981-ac4b-39ba691b2a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8247ee-0e94-4e40-8bbd-f8a3f0ad8664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c25781e-719f-43ae-b062-a25b5254bea7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18e0d2e-092d-41dc-afda-c084c0d3c756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b06e187-fc89-44b4-9d8a-8be85ca639e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e764b339-f8e4-4a24-ab08-6e47a9c53e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a377f656-364d-40e8-8c7f-fc3ae5e6fe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d0d3c1-3e6d-44d1-8fab-f085ef2e93b1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab672d8e-1db7-4dd9-a3a0-33cbae71bb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef8d3d5-b002-486b-accd-d3d8035484ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fadbdca-41c8-43a2-9793-b0eb77dfc0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb48b66c-9f21-4aaf-b5e8-ce94101776e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2f4095-f72d-4873-b95e-436d12da2b95",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73ce768-b24e-4a26-bef6-f36eb6462eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54399884-b51d-47cb-a88e-f3d5ce84b326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab49f319-0452-41b1-b0dd-bcc37958e6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9689d3ed-00bf-4b91-982b-8ec16bc9c070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1b2137-0158-47fa-b376-1427f70c47b7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ff47ff-c267-43e2-a54b-c4a00d0460ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7b3061-2a96-44a0-8778-7e4e4a873d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a98c4d5-909e-4140-83d1-ab691d2e6282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f614565-8c93-4615-9d30-6cfe50fbf010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9725713-0a09-40ba-a065-d33f0f6fed09",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de776d25-325c-4774-bfbb-7666acbc24ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7ec143-73a0-41a2-9380-9387919b5c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1368b196-ca18-4366-b257-1f8b8e1ea274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4169d6-0efd-46c2-9038-86c931dda9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a1c9d0-135f-42dd-b6d3-b900527297ef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5837dfd-bc88-41b3-8513-3259561a7685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e98627-63a5-4a38-911c-5685e6a3417f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47f10c8-1aba-4fb1-a8b2-0f73c838c156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a1dced-84f3-4a7e-bb6a-7207c2f5c425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998fa65b-2434-46a2-9a30-bb9e842084e5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2d7309-b547-4096-b70f-99806a179e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fb9e9b-2d12-4356-8f69-d03a573f95da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e8dcc6-44b5-4501-b396-ccda687ba306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8980473c-101b-48a9-9590-7c5101a003c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fed926b-54c7-4d92-901c-256b036255e2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eacf67-228a-4f5f-8613-047c8c028672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29f0755-89ac-4e7e-991f-267d6827d547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e892546c-f41d-4cba-a195-1167bf3e7431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d892399-3278-4189-986b-4c510fdc6548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cc1319-bdc9-492a-a50b-ef2165a65ae8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4494c3f-c759-4519-a1ed-b611ce07d2cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa0bdb46-b051-4bfb-9d2f-da29f03a0230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fc83c8-181a-4f5f-9183-ed3e28791cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0e127e-df5e-4e7a-a59b-c7eacac4fbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d62be33-b0fe-4794-8dce-f0b6858e8e77",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4235c6ee-bbfd-43cd-8b24-b9ed380647e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a93b320f-9ea0-4d19-a7f1-24c0e11705c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe07f39-5d7e-4f99-821f-e426c202db41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549c2713-6548-4bfe-86ab-c6befc7c0cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236d0153-f72c-42dd-9e63-ae7d408227d7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d628caf5-c276-48cb-81de-1ba31459aa30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6238d6ec-0627-4266-83b1-4888a398ba6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6457dc0e-fe9e-43f0-b61a-ea3c1be32c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fe162f-5154-497a-9dea-7b4bceffe93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a28e58-65e7-4f5a-8e13-92f8659c0dc6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1a82b9-711c-4598-ba49-cff8d5d69028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c8a29a-89e6-4725-9905-84ed9f1e2344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e6a28f-e57b-47a1-b684-0444fc171720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef58a86-9e4f-4b0f-892c-a6eac8f43ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075ad6c6-81a3-4602-9b4d-b6b67ba64f35",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9327d2a-dccc-4f76-83be-8be6620eba0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9c05d3-f5fc-4ac3-8209-f1c9f01fb5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c120d824-a22d-4ca4-8704-bc78729634ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7531b8a9-1f0a-4aa7-b9f3-77b0c46fb732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d3f168-3383-40c0-867b-fa0174e67b9f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85801ad6-599a-492c-9e49-f12c0a115f78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c03bb77b-0ed3-496c-b87f-506eb1f4c207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a32335-fc3c-4acc-89ae-3ebd251c3747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2034cdd1-1144-485a-9ff3-6b0ad612a562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f000ff-7ef2-4a44-be31-1f8e10c6d81e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df340f1-bfa5-4478-88ac-b9cabc93b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846d08a2-4327-49f6-84c8-21f178a52e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5922988-973b-4bb8-9343-376db033cae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aecc2ec-3c56-4c52-8345-ad85ce50ca5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a586052-925a-443b-8ced-6f34b054211a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fc5dcb-61c3-4b4c-9bfc-6af436b466b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab12cd1b-98e5-4892-b4e8-b1679c534bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673acef1-4633-45db-85f0-cc3fb93b7c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce16883f-19af-4c07-a84f-9f82f0c33197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbc9402-a234-4019-a9f7-5e57ba72f286",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92154eae-69e3-4358-903f-68a925a2f000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd840ae9-4b74-4a57-86ad-29054ea01891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b414a4e-9b19-433d-9319-a3a8ebb08878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0537997a-278e-4c1d-8914-df18eddde730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1d0d24-73fc-4489-9a0c-7ec94af6794d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419bffa8-8e63-4997-a485-ce7dca011cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67210da0-94ae-42fa-93f1-a44938844816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8e787e-fe6a-49c8-a363-ea37d911d6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4e5abf-8ce9-4519-b8ab-fc0e9308b7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d52d97-65c8-49d5-827a-57dac3b9164f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0a41b2-79eb-408e-838d-85302f19edc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27281c67-cfca-4726-9afc-50919f55db06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a56061-e829-4054-95aa-d8c53f4344fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f999deb3-36d7-4bd9-8b47-3729344f84b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62f25b2-3a4d-47ba-935e-86477ee322e5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53f3149-24d6-4c62-af54-c2fc617de3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9758b1-9a1e-4d3e-abf5-37e304e32eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc925ba-0861-4b30-8f54-a15127fab5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c1f076-8117-4169-9336-4fda4949f3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b47e16b-92e0-4bfb-b6ea-3949d37c497b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf67395-e261-4fb7-a687-86e938fe73a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf361a8-c52e-49e4-a1a4-0648e99242ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d218a244-d006-49cd-8392-6dfeecce13e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75f0379-6e8e-403f-9d65-440450c1feb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39431b37-a23e-4702-bfa6-f0cb1e58a2ee",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc8b1f-df36-4fdb-9377-cc01b356a898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029763b7-4590-477f-b9dd-8e295320870c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434d2ddc-3e9f-4675-b507-a401984f5ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a878199-8880-4103-84a3-f6a0b6386515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc11f02-2e23-49ca-8f89-baaa9ed8f6fd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b63a757-9a1e-46ba-a936-00b9f84584a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f012364-8e01-40e3-9b94-e024dab73abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ef9907-b790-4406-9c6d-06a51000cbc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ced28d-fd27-4282-b725-7315c64b8a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038144ef-cea1-45d5-84d9-c55b07b610b3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e833fe-6b14-4a31-aeb4-4242c42a5aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0ad39b-04a7-42b5-b246-357a060f51b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ea0e8b-c2f0-4a99-8091-2b37f94ce8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b140e8-adee-44af-8934-b8330ba2b524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4445aef1-e433-42fc-8001-a7cd4b764bed",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a3b0f2-01f4-48e0-a144-33aab973ab56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c1906e-0bf6-4831-8498-fe0bb9377256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d343c4ec-d714-4429-b884-970f82262bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be59be8c-33ce-4435-9f90-982fc2c74af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22b29ac-a0d2-4b50-a87a-def8a575b47c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99241afe-a0db-42d9-b9cd-b3678f6924e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335054a9-67e9-4357-8a9d-f6f71a744f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0609f8-d4e0-4ac4-af9e-54b19c042d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98c8736-e83f-413b-a6c6-c971f379e2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a8ffbd-a29e-4f20-8a1a-48a5a645e170",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3984d3-0ab2-4d11-ae51-60b4f5a27771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc07cb0-083c-4de3-bba6-435cce6606d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6907de09-fdcd-4d35-b720-1f08ffb80df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce3f5f8-6e82-4871-b132-eca3d48f8a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152b9184-cee4-421b-9453-ccccbbce0325",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561d852c-df23-47be-8d90-4da1f82888ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae4626b-c507-4d65-8a9d-fe45814537b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4676293e-5111-4562-ac8a-08627e2babff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd652d4-e1dd-4e9e-837d-8a4f45d098b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9945e86-0618-4767-9e3b-830653dc2f60",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1c3e69-afc3-4102-8851-b79dcaab6c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91231831-3937-4ea1-b883-026cbaec109c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b280d43-e6fa-439f-8536-dc7b2e977925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa4caa5-d211-4aed-81b5-5408129f9a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53ffcfc-419d-43e7-981f-1c1e9140eb87",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba1d508-94de-4867-b3f9-74641346f5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34be0270-b56d-426b-9fbd-dff4c0bb58de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e710f82f-c83b-4a87-8380-3134115199bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c7fb3f-799a-44b0-a937-87592d5f5312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b667a9-a352-4d42-ab0d-886599965fa4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39ade1c-f6a3-4392-ad7b-8a6a5261291d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b270c79-5143-4258-a370-94aa8fe8c1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41df678-d857-4689-8c67-6af48fa77ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24138b2a-f87b-4d75-b5fd-061af89f02b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ef313f-e074-46f1-a983-388a04b1360d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd4f3dc-ed07-42d2-9352-754e7a1fd6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42626e66-eb64-477a-acc0-b8c18d2677b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84facd4-05da-4c8f-8604-14470b44b1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d10a88-6e98-4cac-b698-7789a3a8dbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba06f6f6-fee8-4daf-9252-4c83c06a7d0c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe34f0e-02f1-48d0-b0b2-ee4d3db027ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265e4c09-f029-49bc-b809-beb7b3404f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c21aa7-df34-42de-882d-bb64a37c097a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef570bc8-fff3-4091-9a45-ee7954035545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1062f0a-c357-4734-a7f0-56337b520a4e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b1c9d6-fb15-4b2e-8bb5-493daababba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993ddd41-4b1e-474d-a946-68f136ff661b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678d04cd-9a24-4adf-8ce0-b901dbd39bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ae4132-4b21-452a-9793-d8f45ec4c07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aad24c0-b0d6-4334-a653-5cd7205b37d9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9d6586-e99c-4277-bf33-f2be09271631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb1fe9d-ee45-4560-bcbb-64ecb2d10427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a31a1-34d2-40d9-b201-35a0db3ce819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de89ac34-d8eb-4fa8-81f6-054e5053578c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be9c991-cf1d-4785-ad10-e369aac155f3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0910e72e-099b-4d03-8c96-937680b05b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0d6f45-d923-4fb4-89cb-82ef51e9642b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eae59f8-8514-4320-8efb-d5cff36de9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6362734f-5511-499b-be0e-09e8cc435472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622214bf-2743-45e4-9f5d-b67754f28126",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874dd39c-fd19-403a-bc7b-7aea3bd3f131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e12b28-77d3-4602-bf8f-6ada770fd45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f3c3f2-23ca-4656-98ec-118891c009fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a798def-64f0-4269-a321-5f8163c66812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbf6f28-9aa0-4b62-b14b-75f5c66be24c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db51199-8443-4b1a-9fc1-015d2fbbef1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccd9b54-b766-4578-8708-782f513aca9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6785302-6dcb-420a-a9d5-ce259fb44e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a63c1e1-1a58-45a0-b9bf-54234c95ee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ca9be8-9ba2-43ff-b112-6253526d843b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a066df-18a4-48b8-b2d7-b470511197c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69720cd-3e9e-4a84-8f3e-0f3cbb5df2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad6d031-bde4-428b-9055-9178e5587400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "421adf57-b8ab-4033-8048-901d561a199e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45e4c64-42fd-4dbe-8761-c05b5c3e47ef",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00318de-411e-466b-af95-cb5ce4e5c334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa83b44e-48f0-49f6-a498-8bfe0eed5731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b05f03-bbb4-451c-b2a8-251aa68bfddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5b56a3-8e28-44a7-8e7f-fb77c447880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd02506-c41f-44b9-aab7-8cf000a4cf15",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca40473-444c-423f-8f37-9fc5d34b6d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48decf4c-909b-4fdc-a87c-ec7b8e1ac24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb41b8-f3d8-4c9b-b442-e6d786b2fa0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d39599-6ae1-4267-8e94-7222091c3014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eee3051-7283-4bf2-8075-02752687b77e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4015f4-ccc4-45b1-b566-35989bb436f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a83fa5-d6b9-4b31-902c-c50dc2deedcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06146ae2-984e-4456-9fd8-4413177742f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7030fc26-4653-42c6-bcf2-1bc0d93906bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358454f9-0369-449c-b51f-d41665507665",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc5cb0b-b205-41f1-b63e-2d473b5aebaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085e61e1-c895-4847-b91b-5b322df534e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436da903-a8ba-4d67-85ae-3957ebd42c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1db376-f41d-4316-847b-2d634dd847c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eceb2ea-00ba-45eb-8b33-8e85e9b9ad25",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bb713e-fa63-4580-8671-6e2d318ba08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203287a3-7c6f-494a-9ab9-550615de495a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b69b0c7-e840-45c5-b742-f712ce63d9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed67c87-1dc1-446f-b671-74fa3489c552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b128ce-0ffd-4cb4-a92d-eec4c5f710f7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e7427-08d3-43d0-ae3c-05024f7a003d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a81885-cb5e-47cb-8645-277208106811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573fbf19-4ff9-4e1f-9601-08564d7e70ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67e7518-1cd6-48aa-aa7b-da6710981a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063723b5-4873-4e89-93b6-c510cd882254",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc5bcbe-c4ba-47ff-b749-74dd93b6c54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88bd682-1659-4f8c-b9fa-4e4b729feb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d1ddf0-4b5a-4c75-af28-67eb59c530d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90d309e-dfc8-4891-ae5d-822296757589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c595240-9a02-4557-8374-9aa12de63d30",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6351fbac-f034-4c4f-bf54-93a7eefe9b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbdba6e-0bc1-4866-88ce-14ed80650718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a30f64-5495-481a-8489-14583ec6380b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12efc1c-1718-4a96-9368-73b1d5184da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e54909-fffb-439c-86d7-ca183d3a9784",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883d1376-1b70-4d80-9f41-a09d6bd55ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f901a207-9be4-46a3-ab27-e53db4d42cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6518f0d0-dc55-4cca-a243-91f0337a7bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12faf069-145d-4d14-9463-ead11975fb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5660f9-3b31-4cc3-890d-02d3b30e5521",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e4b12c-6a11-478f-ad8d-f75bd4c798ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e677bd2-dc60-4b9a-b326-d6f4a817105a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c516b0-2a88-482c-85b3-6fa3afd9442d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887242e4-a797-4651-b8e6-060ed494a0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7e4b76-8c02-4308-bf2f-e24105bb02b2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d1bde5-eaca-43b3-a70c-d1c3f744cec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c7c943-c0db-41c8-931e-a52fcf76d3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eef059e-7921-4b34-bb1d-b924a5488901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd5c851-38c0-4262-b225-49945121bf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a29f74e-282c-4fb9-836e-b72895a0bb5f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daa0f76-cb90-44fe-b9cc-e1ca4a9fb0bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a634caf0-9566-45c0-b4af-19e72140932e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cf1e54-8149-4919-961a-fb3c87631843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ecf201-99a7-45cb-a6a0-115356a109c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bfac5b-9a4e-4fa6-95e0-0f365597beb9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4b41ed-6b7e-4edc-9d62-0135e89d4c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "596b4eac-2fd7-428f-af0f-6edc80016ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf85a89f-1579-450c-8003-32b716e816bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ae0da1-e89c-4667-b42d-6e9418d15c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99e68c-e32b-4d77-83ed-5337d1ca30a4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1a17a3-8ba1-4703-b3c4-ad8035d423a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c36eede-8648-4252-918b-0b8e44d88747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de78e72c-0d34-4bcc-90f3-15f7c20c83fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcce8a8-3294-4ea3-a754-04a89206f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7967ad-e215-4d4c-b578-5fd41473f804",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dcb11a-c8c9-4347-b168-97b757708c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1145f42-2d37-4746-99e0-feddf1ff1adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84a043c-4785-405a-82da-1d7261015a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74613e9-a18e-41cb-b148-a130a6f576de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2245ee8-21fe-445d-8e37-911f48297d85",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da1f7fb-0866-4950-90e2-54c97ac352d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d93aaa-20cc-43e5-8ee7-c2925d740785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdf62e8-09be-4676-899c-9a2d7bfba862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11534a19-d008-4da9-934a-2c5af3a85eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68756cd8-7a1e-4acd-b66f-90feca12f83c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a609cf62-ba02-44cd-897b-4a63e18dd66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62066c7f-f5f3-4c85-b3d7-5786efec66e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df347d4-5f52-4031-b48e-57f97934c7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810412c6-3cc4-4dac-8f10-65ef9948b20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adbd6de-ad4c-455c-b842-ba36e9a186ae",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03da910-1de0-4838-bf9d-83589ff80a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e68c6e-ed1e-4e76-aa5c-0b3b8a8fc600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7185b00-75a9-4fbb-9147-1d56c4ced6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd371dc8-966e-454e-bd3b-2b2b7571096d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58f3d1a-42b9-44b6-a4bb-392494b8d6a8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d049cd-c3a8-48c7-9c05-c8acbe33fb61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeaaa0bc-912a-4f1e-9c49-fc568408a6fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf93baf9-3671-407e-9412-25b9bad045b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa9371a-1154-4907-94c1-503dc4d977be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f3e31c-f60f-4807-89a4-fb3df91d6131",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7de3c9d-dcaf-4006-a4d9-098dbaa04616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e55215-3f59-44f0-ac59-53104c2fffa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7311e8-534f-401a-8cd7-d04db2780a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901c5435-8e5a-43ac-8e65-4689d488c963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d52eeb-124f-4cef-85b2-f7dc2f7907de",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95de1cdf-6b6b-4fee-9bb3-078427bdcc99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19bf113f-b4f1-48e7-b19a-3314fc615fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1389d94-c6b8-4566-a208-059ac1c299dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99533ff2-edc6-4912-b317-c23773a218fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675aa050-14c7-4b54-a9fa-1d750ac3eb9f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d7ef4f-badf-4c79-9a73-8fc0d108fd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533328b2-dae7-44eb-8de2-de6677136c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdfdb1c-6084-44ba-97ec-acb476746973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ff536-4f20-4805-9707-907209382101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4b555c-aef5-4b89-80a2-9e3d3c0db134",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bc7829-4c1d-4b7b-9113-5bf69efe98a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fba786e-c609-4d93-96da-ca6034bd94b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850e68b2-b370-45d8-b2d7-0d7ef7c31727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59488696-0821-4a68-9b55-f9168ed4cdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c321038d-1fff-4764-a284-20a6b3bf650d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d3c295-f49a-4e2a-afcd-926f8a996292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83abaa1b-4bf6-4691-88d4-9ef18bfe18dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4319cf3b-bd15-4e9b-a711-4ae6cf6cc178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2416538d-1d00-4e19-806e-612961483cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117502b8-2574-407a-95c1-a690bab061e0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bed89b-5a20-45fe-89b0-666366d09c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844a8aa6-053f-4f5b-9ad7-b555e712f526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f46f0d-9458-4e91-b235-ef0f1a4da05c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e579dc-d7b8-4d82-afd8-80cc51256c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927602df-b300-49ab-9238-85fece8acbbc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f40e8ac-8e90-477b-96b3-b2adaf386d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c7c7d9-81b8-49d4-96af-b8bf8433cd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a24043-fbf2-4fdb-8f83-9b4d153dd6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45425e6-35b1-405c-9a9c-913077ea0b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca20fbb-4302-485c-b37d-c9619be1434c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d670ce-98ce-4130-b49d-833231cba071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7059be-a4dd-4f1d-876f-c0813f48e4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde9626c-1e2f-437a-bf35-fee4f6c7db03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6113fa8e-da4d-43c5-8158-105a586aa91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a646cd1-637d-424f-9de8-35434fbf4319",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b6dd4-f29c-4874-bd53-921d60aee489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14dd820a-3168-407b-96ba-9f5aa33df671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8791fe56-eb82-48aa-b267-be3be5c478f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adc1527-22f9-4589-85ec-e0b1d38d923d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67025da-3706-4a12-82d0-fbed5549c86a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b6ce4c-500f-4d87-ab47-1e0966a1e9d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec8afbb0-72cf-493b-943f-00e7f757e259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e407efd-99e8-4941-80c7-ee5fd3d17d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dda9dd-6987-4b21-af8b-3cbfc9b00be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dce721c-c019-4147-89e4-d02d9796a52c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfc0fcc-9803-412d-9f7e-5fcfadbbb23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84900e8b-61d2-4bc4-a309-b308438ddd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1b095a-a1f4-4535-82c1-236f347a510c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1102c6f4-d935-4bab-8a79-8692cd500eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4617651a-bd87-414a-9b3a-d9daf397d816",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4147537-c6c6-48e3-b87b-abcec6d08be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81882ad-a3ef-401a-9e00-885ddd266396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e651b9-79f7-4063-8c9e-43ed954c41a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65fe030-e681-426c-bf6d-95bc55ed669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f90235e-f9d7-4931-a888-fe0ad4b61c5b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0ee59f-686d-4de4-b80e-7b693e25ade1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af65ec4-5c52-4ee8-a144-b93d69b19db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebe1b92-61d3-4cf5-9391-097afed431c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e17e613-102d-4325-b893-f37290493dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c029d637-b53d-48aa-a6e2-65e09f16040f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f05d9a-1655-4b9c-966a-a993e40b5289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db462c7b-0e41-478b-828f-6ac38b3f3da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c29284-ee02-49fd-a73c-65203761c2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb3b9cd-7e2c-4bbb-ada3-05d2762d98ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09c55ee-0031-4056-8349-be015f603763",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb09587-07ba-4771-b5a9-b8b7f0cfaf15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b7a762-723f-4425-ac37-6de9874e5da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af2d994-c29f-4748-8ade-6ff28e34a0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e92a52f-1f9f-46ea-aad5-4c734b5f4a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3564a54e-11b7-4b66-a8ec-e88744cd751b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af8698f-e1e5-4fb5-ae34-964c6ed1548a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49779496-ba62-48b7-a27a-fdebe5ad6dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d271101-7a51-4cca-9f7e-c6b3736fdafd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b305be7-8da5-49b0-9ba9-f6c8607e3f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8915dcac-4b1d-4a74-b70f-c44d83fa2efd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa1d5e0-b7b5-477a-b523-9ab5efc6db66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804bf4bc-5e03-458f-a796-4de9245abbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054b6d95-a57c-44e3-8f1f-8311439e63e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cc8d60-a409-41be-a8cd-a7f5e6fbd176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e310c7-ced5-4c7b-aca3-9886ce5e67a5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39d5432-24a6-4a52-9939-80aa2b24be37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7fdc1fe-e7cd-443a-ba0d-09f2dcaddc11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebc60c6-2c93-4291-8d50-f0da7278ec64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6b76ef-7048-4f90-a6b2-a878d8f3e240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b56e445-c820-4af9-b0b9-47ecf5033601",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae154cdd-0081-4c1c-ad15-ec7bf73ba64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399bbd6d-7eca-4d73-8a1e-8a5739b93323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829af916-422f-47b9-9e99-79b5d6d5330b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652df008-8541-4ded-bdce-fbfb936d0394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5070e3bc-d0d7-458f-a8a1-cb1c566b2237",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df19879-6214-4b79-aa2d-c56dafe48fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29490225-50a3-4986-8af8-b522c7932054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7222974-4640-4f27-bef9-ebb17175fcf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff525fc7-404b-45f2-abbe-7bb522a23d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ef21e7-cace-4205-87af-1bef81b02e5a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f288ab-17fa-4cdf-aba9-5e9c3b888236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2b5b90-58e9-433b-9877-4eb7689e858d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed4785b-92a3-4619-9bcb-8cc302f265a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03b5e88-c2a2-49f3-8645-b108deb8fc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca5052f-098a-4325-ae5e-8622165c0d65",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a817840e-f7cc-4f51-9b53-8bcda845dfb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae418d3-3664-40b2-91df-8698dd11b379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58abd77-5e37-4ccc-9afa-bf202527918f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe217a4-90ea-418c-98f3-4f4d79302fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce908c0b-8f12-4cc5-8a1a-f84f85479742",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f24474b-364b-440e-8c10-6d056e799e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9455db-912d-4e5b-bea1-c0fcfd3a890a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74617abb-0d04-4ce4-ba44-feac45c798fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fc7c15-eeef-438a-8ab0-6c04c7b63534"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc6f56bb-01d1-401f-92a1-faf54c13e1f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63f25ae0-006d-4578-a1e0-3d0fd652f99b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bed946b-d7e4-490e-b87a-ae4036c8f017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d078ab83-d7ec-4e79-b4d6-72eff6bdcad0"
                    }
                  }
                ]
              },
              {
                "id": "eea26841-d09e-42ca-acbb-2e4fe172845e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e63dd448-515e-4e9a-92a3-7dad24d3b017",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6ba76c-a77e-49ec-90a7-5e44651f49af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "04c0cc87-1f42-4f54-a175-633aa664a0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686f5c9b-c4af-446d-b989-829504485559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "482d30b9-a9eb-4e76-b8f9-abff3c7f43a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e074cc7d-dc2f-4282-9d85-a721d0db1bbd",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e89935-7169-40a0-8123-908dd6661f50",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "094fde5a-c4d3-43fd-b57a-62dbce889753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8a5a87-43b4-40fd-911a-5cf32d0c4fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a68e75a5-145e-44dd-9bfd-37fc0ddedbea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "534dc0e1-6e71-47d9-9ffc-aa0d72f2fcbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea9b4a8-2fa7-4ee6-a5f5-f1a1aad749ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70c34d15-63c0-4a14-b786-a0042e3ebe1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f9ff0d5-49c8-4b34-85ad-0a0d7177662e"
                    }
                  }
                ]
              },
              {
                "id": "514fc9c2-230d-4e81-8c05-7ecd89b86676",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "977935ba-ea41-418f-985c-0d2b434bea8f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121b1026-7d43-48ab-973e-cbb4bcc7da37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3ccfe418-eb2b-4345-a1d9-894f7d7ab663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251dd7aa-5c6b-4873-b57e-c6c3206ba1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec71a446-dc25-4824-bd6d-626ac6f33c85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d60bb43c-665b-4249-af31-5f67bebc8f75",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4ea01d3e-1a7a-43b6-90b9-c5cc38472d41",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91fed0d5-2ecc-44fd-94c3-84a2f574decf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7c4cc7d0-d3df-4545-864c-a654986c6c60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f0e2670-3bb4-47fe-9f48-728e38cf7e21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1e82e69-59eb-4d51-802b-508ca6485111"
                    }
                  }
                ]
              },
              {
                "id": "ecc62863-4058-41b1-89c4-e4f5faf47a10",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b00be05-6673-4439-95b3-283b6bbcdf8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8fea6f95-59ef-4dc8-a5b1-a7a208b1154a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d024a4e8-368a-416d-9a35-62b355165122",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f33ebd7e-7f2b-4698-867f-3ec4308e8f35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96609925-cb39-4726-b9d5-8030b0621552",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "42bf4ce5-3f4e-40dc-83bf-d753e27ae5ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32fbca72-c882-4814-92bb-00678a5eb677",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "910ad1a8-cb09-4ad3-acb5-aa0176b90b39"
            }
          }
        ]
      },
      {
        "id": "07d64e2d-b75f-40f3-9ab5-8044992cd881",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a94c2cbd-5759-4981-974c-39db1125ea32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b17c83c2-d082-4a1f-afd5-7b1bdb235de4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fbb40e11-8ce6-4601-8600-9ca595cd55f9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a117e7a6-2c30-4238-a08c-1b52b44b13f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4dbb005d-1247-49fb-8142-d3c7b3acf6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1d177a-fc91-4439-97d1-5f301d9e64fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "910906f2-b4f5-4381-b3aa-98c296671ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a2b679-0522-4879-affe-2fc4c6c17f7f",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112781a7-81c3-4987-b7c0-5d8d97fc2c54",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6d9600a3-40ef-4363-a326-2371b1329b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73887738-82a3-4c9b-8385-7d712ae2a0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78323017-fb2f-4af7-9ca5-a3a8804cc6d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b71dc800-54e1-4808-8054-4b7d74b45bfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ead43ba-bb1f-4e79-8f5a-36639db0d394"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e12d967-87ad-4eaf-a1f1-15561dfeb8be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5013f85f-46a3-4e20-bfd1-c4e38472254d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "344d6ec0-5206-4a26-909a-90b89ec3e61e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "06f2b55d-31f6-4ac0-b541-83554e5f91e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65a52441-fd92-476a-850f-6b230bd1eff5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "875969e9-ffbd-4c17-804e-07a34fe80907"
            }
          }
        ]
      },
      {
        "id": "216f7b85-5d4f-4d49-b382-2aa888936c2d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de1e9e77-19ea-46f0-a694-961273cada30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf86aa33-55cc-4ffd-be22-9dcf9f59e242",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6ed24c2-5099-497b-b0cd-d6859cdfbd2b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4827cada-7a06-4650-85e4-113f8fe22010",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc7ff7ac-5ba2-4008-b1ce-429f17155f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60f5e08-bf57-4294-8e3f-317386ec5fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f9f8ae8-18ee-4747-8213-5c962cad10aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82037f7a-0b5f-4afa-97e3-8b338c2a5111",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8868b7b6-2fe9-4cfc-a55b-722292eb91cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64e5857d-8317-4c91-8663-90f8e0b27333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6916785-3d58-46ef-9a48-d80400549dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7383c4cc-711b-41bf-9fe1-0b4657d265ec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57f6ca2f-1066-410f-98d2-fc419b7d896a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e52e3a4-d06f-47ad-ab95-99f44d64b82a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eae04234-d45d-41e6-8b3e-8d710c9ce55f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d4a9fb1-559e-471d-9ef0-2f6563805d55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58e6b49c-c6cb-4a58-b3c7-313c66ef7bb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "893b6f4c-84d6-4e15-a9a2-a7fd58234717"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea1ae24a-b716-477d-86d1-0aa4108cee2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40d6f8b1-0ef4-4abf-ad17-c67a9befcce1"
            }
          }
        ]
      },
      {
        "id": "9a09ba65-fca9-49ed-a6c1-a930fe4b5f37",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7f734c5a-33fd-46ce-ab2e-f9fff06d78ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e9a4927-3a47-4d3f-a233-556107779781",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3243fb2f-b064-4356-95e2-1281b24db703",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e72c61-5806-415c-95d0-54f0207d6678",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c260b324-5a3f-4559-9ae4-0df3758734fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb41eb5-4080-454a-8068-930f92159d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fa31f9a-aa04-49fc-9ab4-4c1f358e7e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed533b-40e1-4a41-9514-55989b8400fd",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67560d1-e950-44af-8ce9-58f17dc7b0ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3c63f474-b8e4-4187-8035-8c7bb02b8149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3b721e-cf43-4687-b46c-0a49ba50a207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4563ab94-d8b2-4519-bde9-c95e4189c71e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cecbf1e-b656-4925-bedf-79fbc2c6fd07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "821640dc-ce55-4465-8649-17d5d7fbed17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f360137c-f218-4dbd-a87b-508c06faf309",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c01c4b1a-8e53-46eb-9be4-40ed29c445ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f428e12-5477-4711-92e8-4f7a845f6411",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f63c0f33-0abf-48e9-b573-018151fb9989"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94092fb1-2017-47be-9dfb-a7824b90131a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "877fd7ca-d6df-46ec-8c5e-40a934c7b9a0"
            }
          }
        ]
      },
      {
        "id": "ccb28255-592b-4380-bbd4-71f194696c6e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c04bd2cf-06b6-46d8-9c90-da1c97710b88",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4571016-42d9-4e17-93fb-3103cbee5ea1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7685a8a4-42bc-4980-813c-9b2a5fdeca42",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4b9718f-13c7-41ad-b9d5-0530580d47a8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6431ad86-9d6c-446c-89ab-6ebd02286acc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 908.6423076923078,
      "responseMin": 7,
      "responseMax": 8380,
      "responseSd": 1007.204966793322,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683765412754,
      "completed": 1683765662211
    },
    "executions": [
      {
        "id": "e8dca050-c647-448d-bf57-cc5b96c05c8b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "624f0a5e-4ac2-4ffc-9b28-69bd2169c27d",
          "httpRequestId": "003bb2a7-be7e-449f-bcf8-52b0dd870d90"
        },
        "item": {
          "id": "e8dca050-c647-448d-bf57-cc5b96c05c8b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "efbb4b6c-ced1-4924-91a0-9958dcf686ed",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "19c95e51-3c07-4b16-890a-ec01cb0517c1",
        "cursor": {
          "ref": "d1fe0c4c-2a7b-4b3c-b332-cae9c6e0e88f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f2fe2659-12cc-4aa0-b7bf-b7cdb39cd108"
        },
        "item": {
          "id": "19c95e51-3c07-4b16-890a-ec01cb0517c1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9e3789a8-d5c1-4cd5-9a2a-518c1d214ea6",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "2a84b5ee-7aef-49aa-8959-6d2c24a880b5",
        "cursor": {
          "ref": "1f62b82a-7bf8-46a9-ad11-f897be9492d9",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "03b43a63-5a5d-409c-8fad-7318cf3ee01e"
        },
        "item": {
          "id": "2a84b5ee-7aef-49aa-8959-6d2c24a880b5",
          "name": "did_json"
        },
        "response": {
          "id": "9b0ff4d8-321b-43d4-83d9-6dc66350d2e9",
          "status": "OK",
          "code": 200,
          "responseTime": 1147,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4aa28-e862-4e53-9ed9-2a479729e5bb",
        "cursor": {
          "ref": "0f0f63aa-d201-4b8f-9cee-29561441a96d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85186ee7-387e-47f9-801e-346bf4166069"
        },
        "item": {
          "id": "46c4aa28-e862-4e53-9ed9-2a479729e5bb",
          "name": "did:invalid"
        },
        "response": {
          "id": "601b0c87-93f3-426f-8464-681fe5c03c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c4aa28-e862-4e53-9ed9-2a479729e5bb",
        "cursor": {
          "ref": "0f0f63aa-d201-4b8f-9cee-29561441a96d",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "85186ee7-387e-47f9-801e-346bf4166069"
        },
        "item": {
          "id": "46c4aa28-e862-4e53-9ed9-2a479729e5bb",
          "name": "did:invalid"
        },
        "response": {
          "id": "601b0c87-93f3-426f-8464-681fe5c03c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a89520-8aef-4dbb-8646-3f17e078f867",
        "cursor": {
          "ref": "5d4144c2-35d9-4c91-a402-fe54c67dba41",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3c33b7e1-6f2d-436f-9d82-664841104631"
        },
        "item": {
          "id": "a6a89520-8aef-4dbb-8646-3f17e078f867",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bb974c14-32c2-46a0-b018-be894b76fc09",
          "status": "Not Found",
          "code": 404,
          "responseTime": 957,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd825115-56bf-48b0-b7b1-c6a697cceccc",
        "cursor": {
          "ref": "c6e16140-835c-4ff6-8a84-3aeea3651021",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8ca5dabc-7e77-43ee-8f75-96c7937a613a"
        },
        "item": {
          "id": "fd825115-56bf-48b0-b7b1-c6a697cceccc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c5cd6372-dde7-4517-9e64-b8c80c9922a5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 614,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0597a7a3-6b56-4692-ab20-74a6355c0212",
        "cursor": {
          "ref": "0d82febd-d612-474b-9dfb-73486941430a",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fad794fd-96b8-4f00-be17-97acc155fedd"
        },
        "item": {
          "id": "0597a7a3-6b56-4692-ab20-74a6355c0212",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d6689130-2a5c-406a-b2fe-817110139b49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa8ed66-9fa3-4601-8c65-70a006642f76",
        "cursor": {
          "ref": "0fc7d698-e905-4c58-84a1-f8e05d86e22e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "84059ad3-f7c4-4e20-8e21-4774ade5252f"
        },
        "item": {
          "id": "8aa8ed66-9fa3-4601-8c65-70a006642f76",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7a443902-ec96-4480-a178-049e5b894d8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 612,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa8ed66-9fa3-4601-8c65-70a006642f76",
        "cursor": {
          "ref": "0fc7d698-e905-4c58-84a1-f8e05d86e22e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "84059ad3-f7c4-4e20-8e21-4774ade5252f"
        },
        "item": {
          "id": "8aa8ed66-9fa3-4601-8c65-70a006642f76",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7a443902-ec96-4480-a178-049e5b894d8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 612,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a72f64b-0d5f-47fd-a155-f031cfdc7430",
        "cursor": {
          "ref": "e11ba1c3-bd88-4453-80e9-2c9049fe0df6",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7c816e74-9db3-4348-b767-c3d39f67ff98"
        },
        "item": {
          "id": "4a72f64b-0d5f-47fd-a155-f031cfdc7430",
          "name": "identifiers"
        },
        "response": {
          "id": "dc9f5ee4-7fbe-43b9-bbf5-e5160ba2668a",
          "status": "OK",
          "code": 200,
          "responseTime": 1071,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e235109d-584c-40f7-b231-dc0155b6ab11",
        "cursor": {
          "ref": "22301777-bc25-4b0b-95cc-b1fe11b47bec",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "424b519d-c846-4e56-86bb-9df3e23999cd"
        },
        "item": {
          "id": "e235109d-584c-40f7-b231-dc0155b6ab11",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0677805c-85f0-430a-b4fe-9c4b3589239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e235109d-584c-40f7-b231-dc0155b6ab11",
        "cursor": {
          "ref": "22301777-bc25-4b0b-95cc-b1fe11b47bec",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "424b519d-c846-4e56-86bb-9df3e23999cd"
        },
        "item": {
          "id": "e235109d-584c-40f7-b231-dc0155b6ab11",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0677805c-85f0-430a-b4fe-9c4b3589239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951fc028-947f-435b-968c-d2e08b5d17b3",
        "cursor": {
          "ref": "04e5ae22-a677-436b-b690-a67ee6a87823",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1fa994a2-f5ca-4db9-a46d-7f8339b8fa5f"
        },
        "item": {
          "id": "951fc028-947f-435b-968c-d2e08b5d17b3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9094fc3c-7dc3-4b60-9616-e75bd23ee33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48544a1b-4f75-4c10-8e6e-796d1e46e241",
        "cursor": {
          "ref": "8db36efa-9b14-4fc8-bfd4-d1e8dad285c1",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ec5ac56e-ff9d-4385-aee7-c6d663f78fc2"
        },
        "item": {
          "id": "48544a1b-4f75-4c10-8e6e-796d1e46e241",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "147cbf90-b9ec-41d7-a638-5016d801a98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3262d08-21e1-4320-ad49-b41dd6b7d7fe",
        "cursor": {
          "ref": "a273bc04-44e5-460f-ab0a-e61ee44032ac",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7abff018-97aa-441f-9b1d-a9863d7619c6"
        },
        "item": {
          "id": "e3262d08-21e1-4320-ad49-b41dd6b7d7fe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ec983e7a-760c-4e68-804e-f7da3f09402d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d22f26-9ea6-47e4-b4b5-845a0bc357b1",
        "cursor": {
          "ref": "8bb00e12-ab73-4fb1-b653-6299bdbcf060",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "caaffceb-b6b2-4220-a4db-6f894ba161b8"
        },
        "item": {
          "id": "01d22f26-9ea6-47e4-b4b5-845a0bc357b1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "74888862-7091-4a73-a6cd-7ff5c2664dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eee2110-5b78-4c59-8e16-57bab0f80bdf",
        "cursor": {
          "ref": "87d43b03-7be4-48c6-9f19-4309843be46e",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "83befae6-90b8-42b0-a8ad-8c15ae1f4699"
        },
        "item": {
          "id": "9eee2110-5b78-4c59-8e16-57bab0f80bdf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "77f0de1a-2bf6-4901-bfa3-e61f5cd36fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6dbdc0-8476-460f-a553-600b414f800a",
        "cursor": {
          "ref": "d76d56e6-ac60-44fb-8893-7dcf89737841",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4bef061e-c5d3-402c-9679-7047f85f7815"
        },
        "item": {
          "id": "ca6dbdc0-8476-460f-a553-600b414f800a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fd582336-7fb3-4211-9150-1255e965a9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176e3b7d-6884-4121-9961-8c727e9682bc",
        "cursor": {
          "ref": "321a146d-e609-4206-8138-336072811c2d",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bbcc3457-f488-4a24-b3af-3926a85edfea"
        },
        "item": {
          "id": "176e3b7d-6884-4121-9961-8c727e9682bc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6f15a122-5754-486b-abf2-d06d99df4a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b010e5e-45e8-4dd3-9712-99d69730d03c",
        "cursor": {
          "ref": "799fd9ea-72bf-41de-9e94-5104e046fb17",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7be65432-dacd-453f-8cf2-0abc83ecff23"
        },
        "item": {
          "id": "3b010e5e-45e8-4dd3-9712-99d69730d03c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a7eef056-4033-4691-a3a3-826c7673bf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe0fd81-4da7-4708-a7f1-1dfd02399dad",
        "cursor": {
          "ref": "45e3d34c-d504-4570-8662-cab9f1270f6f",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3477736d-2d04-4c18-a4d4-12c19fcf2f93"
        },
        "item": {
          "id": "2fe0fd81-4da7-4708-a7f1-1dfd02399dad",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "17bfb852-80a6-4811-99ca-75d3e8a1b066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bd2bf0-0973-4f7e-b644-c1dde5a75a88",
        "cursor": {
          "ref": "ab633b2d-2937-48c2-9152-e69859af6366",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f387f04e-4934-45b6-9d6e-398d3f31259b"
        },
        "item": {
          "id": "15bd2bf0-0973-4f7e-b644-c1dde5a75a88",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "84fc5caa-a730-4e40-9640-390daa9efcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1107,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381caa62-d283-4446-b18d-fbf8fba07573",
        "cursor": {
          "ref": "d872333e-31a9-4679-aced-087cfc62baa5",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1cdfba58-a577-4bb9-a898-07f3c3a81955"
        },
        "item": {
          "id": "381caa62-d283-4446-b18d-fbf8fba07573",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5352b9ae-adba-43b4-8867-14a4762b0f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d214d9b-8fd1-47e3-bb5e-2b66644f3dff",
        "cursor": {
          "ref": "2ffdd8e7-8234-46c8-9915-2e5d6a038b9f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "64e46e86-6eb6-4c56-9967-de0eb2a86c1f"
        },
        "item": {
          "id": "4d214d9b-8fd1-47e3-bb5e-2b66644f3dff",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "071388b2-1f37-4d28-bc59-38c8c43b1969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be5758a-d352-40af-925e-66799a2aed79",
        "cursor": {
          "ref": "29e46b54-a65d-4549-8a57-f774e90a4948",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "db415f46-845d-474a-ae34-95799c041e70"
        },
        "item": {
          "id": "7be5758a-d352-40af-925e-66799a2aed79",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4c67cd5d-7eac-4726-b672-8e489f155543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d90dbb-ee44-4408-b16d-b6f35417d0dd",
        "cursor": {
          "ref": "58e0f0ef-c3e3-4466-b0aa-87660dc1edef",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "54473f80-7385-4cba-918f-c24a25fb45c0"
        },
        "item": {
          "id": "f3d90dbb-ee44-4408-b16d-b6f35417d0dd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6ee0d83d-ad87-48c1-97f1-8c8dce6731f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98344fb0-d374-4149-88c7-b47d49aeffd2",
        "cursor": {
          "ref": "af79fcec-dad2-40b9-b5ca-1a582d41171a",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ebb62e9c-211d-4082-978c-a7075b1ee6fd"
        },
        "item": {
          "id": "98344fb0-d374-4149-88c7-b47d49aeffd2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "65604028-f6e7-42aa-a865-609e9b4b6628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4ab0e1-e921-4af8-bd23-1667dc73a770",
        "cursor": {
          "ref": "0485be7d-8eef-4dfd-b134-856fd035af78",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2d3af7c9-8e75-4757-995a-5251e4063406"
        },
        "item": {
          "id": "ff4ab0e1-e921-4af8-bd23-1667dc73a770",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "96366ed4-dd6e-45ff-8295-5263298688b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824cfe2c-7130-4226-a2e8-226d06e45b80",
        "cursor": {
          "ref": "5e1e3bcd-2275-4c1f-a037-97a777784070",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9f2913b3-d233-42f7-b0d9-6ca52c6707e9"
        },
        "item": {
          "id": "824cfe2c-7130-4226-a2e8-226d06e45b80",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4b6fd82c-7855-4cef-9f7b-534cb71a12df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c427b7ed-1109-460e-8819-c2d3a1b6477e",
        "cursor": {
          "ref": "fe599336-9378-492e-8d96-fc0502e6e26a",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e0dab353-c444-48ce-acbc-b107b3962815"
        },
        "item": {
          "id": "c427b7ed-1109-460e-8819-c2d3a1b6477e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "10f29e06-63e1-4af8-bccd-d6c4e17af817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d1948a-0a3c-4ecd-9855-115f29a021c6",
        "cursor": {
          "ref": "448f43d9-4ede-4063-b160-6d2e1e9a5b06",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6e70454-b7f3-4023-b30d-074493755447"
        },
        "item": {
          "id": "17d1948a-0a3c-4ecd-9855-115f29a021c6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b2591d84-5771-4f4a-9ef1-de54ac799b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca1e731-8ea6-4b9b-97eb-5609652c2fa1",
        "cursor": {
          "ref": "9b5e1e23-66e2-4447-9f79-d81ab949b964",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "669c4571-27ed-4832-a375-ae94c8aa2022"
        },
        "item": {
          "id": "9ca1e731-8ea6-4b9b-97eb-5609652c2fa1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dab0b25e-6455-44a4-b9e3-ac029362a68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30763c8e-f833-4ffa-b462-ff6514eda7f9",
        "cursor": {
          "ref": "6de23822-bcfa-428c-9562-b998a8d7f78d",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4e79d711-e16d-44fc-bf7c-a5df7ae4568f"
        },
        "item": {
          "id": "30763c8e-f833-4ffa-b462-ff6514eda7f9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3d0bb764-3f84-4ad2-86f5-bb164b2469de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1165,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c22c9f-3efd-442d-a062-6a24ded0ef64",
        "cursor": {
          "ref": "9449ebb7-1145-4d59-9cc1-ae310870f401",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0680a4b2-cbca-4e18-8d9d-e082858c1bd2"
        },
        "item": {
          "id": "b5c22c9f-3efd-442d-a062-6a24ded0ef64",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1231687b-db48-4a4e-b144-4c9cd3179bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ea7b2a-7d90-430b-b038-7566c532b7f3",
        "cursor": {
          "ref": "8fa0eed1-0219-4d68-9f72-95613768bf69",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4d034ee5-b219-4d4d-bf7e-1a60355b966f"
        },
        "item": {
          "id": "b6ea7b2a-7d90-430b-b038-7566c532b7f3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8071e841-d925-496e-b624-ee5c0184b1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783c60cc-9614-4c92-891c-bd70f52d11c3",
        "cursor": {
          "ref": "6aa1bd93-e3af-4f86-bf8e-7331197af11e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1db02403-72ff-46fd-a17d-b6444bcf96a2"
        },
        "item": {
          "id": "783c60cc-9614-4c92-891c-bd70f52d11c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "72648b3e-482e-4878-a8c6-283e33f19295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1100,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e591e7df-1c65-4f31-a11b-6efab3128237",
        "cursor": {
          "ref": "8228ca71-dc52-48d5-9bf1-bf13e83246ca",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d451c588-adc8-442d-910c-8b7dfb166fb9"
        },
        "item": {
          "id": "e591e7df-1c65-4f31-a11b-6efab3128237",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e6814cf5-8946-45f9-bf50-1374bb4f1173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a384d48a-13b6-4fd5-9816-f696a29ac9f5",
        "cursor": {
          "ref": "68e4b548-b4d1-4007-ae48-5ac7905cdfe4",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3d3b413d-3fce-4646-a438-73366198f10f"
        },
        "item": {
          "id": "a384d48a-13b6-4fd5-9816-f696a29ac9f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "45ee7e45-9da7-4936-926d-32f00649e40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30759e5f-49c2-4d14-acda-adbbf9b8bf64",
        "cursor": {
          "ref": "d3d93e78-0ea7-40c7-a32f-c118ce8bf7f1",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6c7b06dd-9846-4cef-acea-088a5876fee0"
        },
        "item": {
          "id": "30759e5f-49c2-4d14-acda-adbbf9b8bf64",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "820f8d20-51d0-47fe-8b68-d5ef7c2382fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8391565a-1696-4f9b-af1b-aa810351456c",
        "cursor": {
          "ref": "66e0ac26-c104-47f3-a7b1-3ff3ec6f3f87",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a1e03fd6-11a7-4c06-95a5-7461d61fcb92"
        },
        "item": {
          "id": "8391565a-1696-4f9b-af1b-aa810351456c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3fa437ba-ebb3-48c4-ab29-5037e7a350bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601d77d4-70c4-4324-99e4-c88e9ab1e8e5",
        "cursor": {
          "ref": "8943d0ce-bf0a-45ed-9c0f-e6b7183bc3b2",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f27a931e-833a-4ee1-9f97-c8ebdc1adcb1"
        },
        "item": {
          "id": "601d77d4-70c4-4324-99e4-c88e9ab1e8e5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "af5c3cca-2558-44ab-b5ee-f4069f2d3d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1b0dfd-b3a6-48d1-8706-34aa7eb80acd",
        "cursor": {
          "ref": "ed7637dd-3c0a-4793-be8c-5d33c02c2593",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ad7b145b-1133-48ea-9a01-aec68ce080f0"
        },
        "item": {
          "id": "bb1b0dfd-b3a6-48d1-8706-34aa7eb80acd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "71210dff-c25e-4f4b-954a-528d099369ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18ad9c3-6127-4be7-a1fb-59044127b54b",
        "cursor": {
          "ref": "daaf9cdb-4dae-436c-9481-ba28b1164156",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4c29eb1e-b277-4e8c-811d-608e35bb1943"
        },
        "item": {
          "id": "c18ad9c3-6127-4be7-a1fb-59044127b54b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "35fee4d7-cfb6-4ef6-89f1-78a4d162256f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15290962-a191-4365-9b14-e6b999d095e9",
        "cursor": {
          "ref": "a9c89998-ee11-43bc-9355-7e7ea90a9076",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3732fd91-68a9-479a-b26a-0110675e708d"
        },
        "item": {
          "id": "15290962-a191-4365-9b14-e6b999d095e9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6abc5d95-3b02-4616-817c-dcb34c8b6b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d486e671-1fdc-4ef5-9775-ea3dd921ecc9",
        "cursor": {
          "ref": "663ed840-18e5-41f8-bd75-c02811c4bfdf",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1cee4ad8-5f23-43cd-8c8b-c38bb8248a0b"
        },
        "item": {
          "id": "d486e671-1fdc-4ef5-9775-ea3dd921ecc9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a4826c12-9e3b-41b4-90cb-9e4026cbf581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c29065f-1892-4558-81af-545ffcbb5e14",
        "cursor": {
          "ref": "05f6475a-8cb4-4db0-896c-9a8afeb6d9da",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8de92ecf-51d9-42da-8e5e-0b5e70c3b72f"
        },
        "item": {
          "id": "2c29065f-1892-4558-81af-545ffcbb5e14",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dfb07e99-9255-4561-9433-c8ebd2bb5c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb665e0a-48d1-4f0b-9632-be86a65887f6",
        "cursor": {
          "ref": "0d447ac7-5a53-4de1-ad31-5f6b777797ea",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "98e0ddd9-e0d2-4eb4-b7b2-aaa4a7d0b4ce"
        },
        "item": {
          "id": "fb665e0a-48d1-4f0b-9632-be86a65887f6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "74e709ce-3b0a-4163-ae42-70352b0499eb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 780,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734142c9-73ce-4c32-b594-77f580876409",
        "cursor": {
          "ref": "844b15af-e559-487c-b6ba-9d369ea264e4",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4ecf2186-7efe-46fa-aef7-2f28b0261b1e"
        },
        "item": {
          "id": "734142c9-73ce-4c32-b594-77f580876409",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d3151657-055a-4271-b5f4-d14612c8693a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c375222-05f4-4571-9b57-8a81b8344c55",
        "cursor": {
          "ref": "ccdb2a53-d3d7-45c3-aeaa-4bfd79b05f2f",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c16e2f93-b71c-4b85-b0c4-2693af402a53"
        },
        "item": {
          "id": "2c375222-05f4-4571-9b57-8a81b8344c55",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e2fdf524-636a-4a79-89af-5714617bc024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f5043e-c5bc-42b5-94a6-d1dea1404f76",
        "cursor": {
          "ref": "49851b57-0199-47f5-9d1d-66d4ceea7311",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6e9b96ad-0108-4cee-8473-98d9480eb900"
        },
        "item": {
          "id": "c8f5043e-c5bc-42b5-94a6-d1dea1404f76",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ace6fad4-8395-41c5-b8e9-47bc76cebce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d6cb0d-6acc-47a2-b710-3595ce2c3355",
        "cursor": {
          "ref": "7247b310-ae29-4852-a68e-630a98a9dacf",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b18c60ba-9a4a-460b-aa68-96532f20e128"
        },
        "item": {
          "id": "98d6cb0d-6acc-47a2-b710-3595ce2c3355",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "edf39ad5-4926-4baf-bde2-6c4cebcb825f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559a79fc-6a63-431b-a8ef-74b36ecca12b",
        "cursor": {
          "ref": "533eae5a-5295-4f80-aee5-1474ac55e90d",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "413f22ae-9a34-40ae-bbdd-ab04ace4d473"
        },
        "item": {
          "id": "559a79fc-6a63-431b-a8ef-74b36ecca12b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "705db410-e7fa-4294-bf28-4a5e74022fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dd14ec-a94a-407e-b410-1a0e44d4aaf7",
        "cursor": {
          "ref": "80279989-3338-418e-be27-d4ffb05c6f98",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e52f027a-16a5-4bfa-9a6d-fb9358d28b69"
        },
        "item": {
          "id": "84dd14ec-a94a-407e-b410-1a0e44d4aaf7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2cb6d885-4974-458b-9bde-eefb1948209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f3f32c-93e0-412e-9b13-632afdd31028",
        "cursor": {
          "ref": "ba33dc94-d243-4c54-b75c-b2f65e4f5118",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "71ee9cb7-296f-47e8-a5ae-424c8b03a48b"
        },
        "item": {
          "id": "13f3f32c-93e0-412e-9b13-632afdd31028",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2c4ca94a-afb3-4635-9e3f-1eb9c9a91c25",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 739,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29480084-b713-424b-a6d5-662b18e15bce",
        "cursor": {
          "ref": "2d0b2dff-467a-4737-819f-fafa4aaeff1b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dc66f7f5-0fd7-441f-afaf-fb3d3702d814"
        },
        "item": {
          "id": "29480084-b713-424b-a6d5-662b18e15bce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4168bf3f-14e6-48e9-964b-e27d8172fe2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d68dbb-159a-4100-a621-c5474cd090f3",
        "cursor": {
          "ref": "9dc1e894-0d2e-4756-a53a-e207400e30f7",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6b7c77d2-f217-47b5-a488-ddb5cc4a01a1"
        },
        "item": {
          "id": "49d68dbb-159a-4100-a621-c5474cd090f3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "eceed512-7cd7-491d-a250-d9e6d3ec61e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8036326b-c6c4-4e59-a444-bd77690564fe",
        "cursor": {
          "ref": "7640e512-53a0-4c85-97c0-472c1c7eb1ec",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eaa369cb-412d-4a2b-adf3-6ed0ec7d88bf"
        },
        "item": {
          "id": "8036326b-c6c4-4e59-a444-bd77690564fe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "44818ab4-0474-4bdd-b81e-65281a84cd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d2dd1a-0f76-4886-8d6c-cf6b5d3ad05e",
        "cursor": {
          "ref": "3cfd2f3c-0a55-4273-9aa5-27cd3f98a5ab",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "57436cc1-bdfb-428e-8942-0fa74ecb2432"
        },
        "item": {
          "id": "04d2dd1a-0f76-4886-8d6c-cf6b5d3ad05e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ba308cc4-d109-4813-aecc-6cd58bdb6f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3e57b4-b339-4588-b159-360f4d835607",
        "cursor": {
          "ref": "fcd480e3-c045-43a1-9c3b-f41d6f647f17",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "71acfadb-bec7-47ea-9e56-ed1d45b867c8"
        },
        "item": {
          "id": "2c3e57b4-b339-4588-b159-360f4d835607",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c2257e41-1c67-4a70-8898-d721be642398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61c119b-11da-42d6-8f20-8b8c614531e8",
        "cursor": {
          "ref": "f2a136bd-e5ad-40f5-acd2-aef40bc2bfae",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1c277d7a-a861-46f8-9ad1-99d1a9a80ae0"
        },
        "item": {
          "id": "d61c119b-11da-42d6-8f20-8b8c614531e8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "befe2611-b75d-49e9-bcf0-bc8728aedd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc781a93-5b45-44c3-a98e-e331b26b9d99",
        "cursor": {
          "ref": "e73d2035-c50e-4c0d-a058-6e97bfdab178",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a29fd6b7-c3bc-4766-bf65-beb48fbbad43"
        },
        "item": {
          "id": "dc781a93-5b45-44c3-a98e-e331b26b9d99",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "06fe91f8-d362-41b5-9ee3-12d499c21ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e283b470-ef89-4a3f-8db0-46251b91cebb",
        "cursor": {
          "ref": "df328720-9359-4404-ba95-bd285e59b55e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "80f2611e-efe0-4808-9b54-ac4c756d4e4a"
        },
        "item": {
          "id": "e283b470-ef89-4a3f-8db0-46251b91cebb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ed3d166d-0695-4459-b375-bcb5bbf145fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a440e3-9315-4cee-b921-c38915c71d37",
        "cursor": {
          "ref": "d578e671-4ba9-4d68-9295-f0c8ed3e3aaa",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "faad2a7a-26fd-4880-a420-eca9c7e4b459"
        },
        "item": {
          "id": "b2a440e3-9315-4cee-b921-c38915c71d37",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d7dc69c-2437-46ab-adc2-2b5d1b3cdf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7ad49f-e3e5-4067-a2ef-57224d1bacb4",
        "cursor": {
          "ref": "c224af71-d92e-4674-befc-1d957123ae63",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a5b4a85a-c751-4f3a-be10-d3e6f35db22a"
        },
        "item": {
          "id": "4d7ad49f-e3e5-4067-a2ef-57224d1bacb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e3edd52e-6b3b-4dc9-8a86-c715be7c2cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7785fd0-f9d3-41e4-b69f-c7590b682506",
        "cursor": {
          "ref": "e10e129b-befb-4525-98d7-02b8c7ae82ef",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7ab1d1d7-90a7-4d73-a228-527ae828fbf4"
        },
        "item": {
          "id": "f7785fd0-f9d3-41e4-b69f-c7590b682506",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5434ce6b-372a-40dc-95ca-228d620ae645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d2dca-84a9-4b2c-9a6c-f41a4f85195e",
        "cursor": {
          "ref": "43c44332-97e8-423b-bcdd-f1f7f9061d79",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "257b63a4-f39b-48c6-b1a9-be58755aeed0"
        },
        "item": {
          "id": "716d2dca-84a9-4b2c-9a6c-f41a4f85195e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f65b335d-55d5-40e9-aafa-02807d7e0bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4921e725-1c8f-4e79-9019-699e7094281e",
        "cursor": {
          "ref": "1c42e5fc-2922-4434-9673-fa70f61114a2",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "84b5f731-df7f-4ccb-94bb-0843fbdb46f9"
        },
        "item": {
          "id": "4921e725-1c8f-4e79-9019-699e7094281e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d740b3e7-b2e1-4ae4-9a06-e6470994132c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45607ea2-7fdb-43bb-aadf-09563eb5ddf9",
        "cursor": {
          "ref": "72c540c6-0de0-4d29-aa45-3c333b520b24",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a8d1297c-0a46-405d-8f7d-1cbe57a71ebe"
        },
        "item": {
          "id": "45607ea2-7fdb-43bb-aadf-09563eb5ddf9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ae52d77d-6268-46c3-a0b8-df373c8ee0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286495ee-bb6e-4aeb-8b29-3d1ecef6f266",
        "cursor": {
          "ref": "4e2d3a4c-b882-45c7-a3fe-25ca7ffc3626",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ba6cc680-9167-4d97-a6bf-882d8fe480a0"
        },
        "item": {
          "id": "286495ee-bb6e-4aeb-8b29-3d1ecef6f266",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e5a6ff4d-1dc5-4b9a-aa4d-4f95b3f4fad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d77c23e-36c2-4cbb-ba4c-272786a4d6cf",
        "cursor": {
          "ref": "53393dcf-8579-4f98-aa02-3fe7b8ed46e3",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2d8bf3d4-3551-4646-bda1-4a58d06923aa"
        },
        "item": {
          "id": "2d77c23e-36c2-4cbb-ba4c-272786a4d6cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9980e4b2-ca94-4556-8567-9d1dd7a1ffcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6985170-9840-458c-aa26-9a13954039a2",
        "cursor": {
          "ref": "51cd33a0-4c4d-4196-825f-7bd399d7ca10",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ff36cbd6-fbe0-4c13-8f25-9dc3c648fc7f"
        },
        "item": {
          "id": "f6985170-9840-458c-aa26-9a13954039a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d54471d0-03a7-422c-8525-86497c5eee61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc9f24-1314-4efe-81d0-de7bce086c4b",
        "cursor": {
          "ref": "d89e9621-5120-4233-b183-d2b09244dd20",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "94d063ae-e944-4922-aeec-6c4424b79cf9"
        },
        "item": {
          "id": "24fc9f24-1314-4efe-81d0-de7bce086c4b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6aec008a-a3e7-4674-a1ff-ddcbd5008159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29378d8d-947b-46dc-8ae3-72dfec43937d",
        "cursor": {
          "ref": "8186dddd-e72d-40a6-bafa-64b221c1250e",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4cdfc37e-75e1-451a-9863-57d844e554be"
        },
        "item": {
          "id": "29378d8d-947b-46dc-8ae3-72dfec43937d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f55be955-bbd8-455d-ba41-1b4ee3d7109d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d775436b-4441-4607-a3dd-c29f238ac7c7",
        "cursor": {
          "ref": "dca4fdb6-945a-4fc4-a98d-537c46d18996",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d2ecc8e0-5dc2-46ab-9c00-087546315dc8"
        },
        "item": {
          "id": "d775436b-4441-4607-a3dd-c29f238ac7c7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "524fc2fa-1218-4b0f-978f-2ac79aef7294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8237283-c960-498f-9552-e82b1604523e",
        "cursor": {
          "ref": "0f36bc00-c937-46b5-ac4d-27a5e0cd0d55",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "38820ea6-c89d-4220-a0e6-d34e2aa94e25"
        },
        "item": {
          "id": "b8237283-c960-498f-9552-e82b1604523e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b820ba0f-7470-43d3-8826-ffcc69c3fedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a079b080-48d5-43ba-8fae-6be5d6460e31",
        "cursor": {
          "ref": "ce3d3add-c2cb-46fd-82ab-d261322c2bc6",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bdde7c7a-26d2-4ea7-a620-a59656ab149a"
        },
        "item": {
          "id": "a079b080-48d5-43ba-8fae-6be5d6460e31",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8dcb7eec-e3f9-4392-ba8c-908558f16532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198f0f49-9e35-479c-94a1-f9da75f77179",
        "cursor": {
          "ref": "3f3294e6-21f2-4d92-8361-218a8ac43dd0",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f08c18ec-609c-4944-a5b8-449e09687b92"
        },
        "item": {
          "id": "198f0f49-9e35-479c-94a1-f9da75f77179",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ab5bb06b-e302-4764-892a-4f4215637351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd76ea1-4e14-4294-a931-9e81443e7c31",
        "cursor": {
          "ref": "7a3839f6-874f-49fb-b613-69ed1074f654",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b5786d44-1908-4c71-b1ce-d13a415b1822"
        },
        "item": {
          "id": "6fd76ea1-4e14-4294-a931-9e81443e7c31",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1a98f93f-24c0-493e-a825-2b81853160df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1126,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef43dd4d-6884-4844-b489-2054f95e36c9",
        "cursor": {
          "ref": "e940cfe6-2805-40c8-9ca1-ab36fb80562c",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "dbd7dce2-efb5-4653-9941-da67a9aa176d"
        },
        "item": {
          "id": "ef43dd4d-6884-4844-b489-2054f95e36c9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4bd99188-87c2-4c69-b441-09bc1e1dec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1099,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9c55ca-b652-49df-b855-bdf3362f12ec",
        "cursor": {
          "ref": "86d3ab60-d1b2-433f-a4ba-0ef19b3d25a2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d9bfc5fe-5fa6-4050-87a8-359c9b0a4fa9"
        },
        "item": {
          "id": "3c9c55ca-b652-49df-b855-bdf3362f12ec",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "01710018-ee50-4c7e-93de-6d821b1b7edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc9789b-e3d8-443b-b235-e622de2f5ffc",
        "cursor": {
          "ref": "1e7d5dde-fb77-4144-a070-c0f22ac6ea5b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8bf7414e-a3a6-43b0-b79c-8ada56563122"
        },
        "item": {
          "id": "0dc9789b-e3d8-443b-b235-e622de2f5ffc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "846eb420-d474-40c1-aa2f-7091b2a219f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc96654-cc59-4ce1-9028-27c2b57bef44",
        "cursor": {
          "ref": "95e49bbf-2641-4df5-950a-532711acb61a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a8900c44-4851-4c58-8477-6d0685cb803f"
        },
        "item": {
          "id": "dbc96654-cc59-4ce1-9028-27c2b57bef44",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d17f2409-a22e-4bed-a767-583ba33be50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213b39ab-d032-4ca5-849f-222b990bece7",
        "cursor": {
          "ref": "ad57380f-eb01-4c9c-8043-062f0f0cdb85",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e3d914fb-f037-4bfb-82e9-142580a03c7d"
        },
        "item": {
          "id": "213b39ab-d032-4ca5-849f-222b990bece7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "99b5d599-e9b3-4bf1-87db-da36ab2ee80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bffbcd-094c-4b81-b558-07dafd602177",
        "cursor": {
          "ref": "0948c3a2-91ac-4bc5-961c-4c021ede5754",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6d63b0a0-4c8b-4ec7-9f4c-9b46510ce1b0"
        },
        "item": {
          "id": "52bffbcd-094c-4b81-b558-07dafd602177",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2fc3134d-a6f2-47c5-8e8b-f8a88f96d121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c59447-da72-4e1a-8c12-ee73f46d5d5b",
        "cursor": {
          "ref": "815d10d1-140b-435b-8733-5c8e51f8dba2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f22a3c43-8b36-4437-a870-cdb6417bb51d"
        },
        "item": {
          "id": "57c59447-da72-4e1a-8c12-ee73f46d5d5b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e97d7952-4bf4-49b2-9d1f-4ee7fac34277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30e2f60-557f-4ff1-ba72-ebb89930fba4",
        "cursor": {
          "ref": "925ef46c-a408-419f-960b-f7fcbf6ab81b",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ba9a8032-2ea4-44c4-802f-857d83f11218"
        },
        "item": {
          "id": "a30e2f60-557f-4ff1-ba72-ebb89930fba4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "93fd6c3b-7776-4178-9983-387904a3b531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc51413-8211-43c2-819b-31435c37ada7",
        "cursor": {
          "ref": "0e87851a-9f4d-4304-bc33-5443da177cb3",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4e5ae3d2-38c2-4ebb-80d8-e1cdca53d11b"
        },
        "item": {
          "id": "8bc51413-8211-43c2-819b-31435c37ada7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ef36b2a0-b0f9-49fd-bf0d-63ae8770b5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58619e-5cf4-4355-876d-9fcb1bea0690",
        "cursor": {
          "ref": "23af2f3d-b46e-4fd3-b184-f40330839894",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3f8f55da-4bf0-4aad-928b-bf96d7c101aa"
        },
        "item": {
          "id": "4f58619e-5cf4-4355-876d-9fcb1bea0690",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b8d98fd5-ae4a-4cef-9c46-53c137354493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe9c2dd-4e74-4710-a507-896bda0f3862",
        "cursor": {
          "ref": "e9e2263b-e6e8-4e17-ad57-5b54f3d9f17e",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1afe6bef-90e2-4ced-abe6-37e98976ef1c"
        },
        "item": {
          "id": "3fe9c2dd-4e74-4710-a507-896bda0f3862",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6bb51d30-7012-465b-ab16-1a91cab5605f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b733735-8226-4ce4-b392-64a6346ff54a",
        "cursor": {
          "ref": "52e73eee-770c-4aed-abc7-d7c31e0660cc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "60e1181b-c5ba-4491-836d-069f40b5a1e7"
        },
        "item": {
          "id": "0b733735-8226-4ce4-b392-64a6346ff54a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "73ca1ca7-839e-4028-bcf2-6bf3b731d1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e869d5-9432-4ca9-8816-cf3e86fee47f",
        "cursor": {
          "ref": "f9f7fec9-fa02-437d-b875-be1fc0309c4e",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "01b2a82c-54fa-457e-ba4c-59248acc4265"
        },
        "item": {
          "id": "a8e869d5-9432-4ca9-8816-cf3e86fee47f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d157edcf-8b2e-4cee-998c-db9ad9fbca39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1183,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a458d8-1cba-418c-8ade-f0da1c61c0c0",
        "cursor": {
          "ref": "16b4522b-652a-4933-9b43-63667505079a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4b8b9104-c8bd-4532-9ca7-94ca38593921"
        },
        "item": {
          "id": "46a458d8-1cba-418c-8ade-f0da1c61c0c0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2a08672f-80d8-4c96-934f-192f20dc9869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1056,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3dfdaf-9ac2-486c-8f8a-3ccb65568b9a",
        "cursor": {
          "ref": "aa2aa81b-c75b-4b4c-8933-eea8e16d31a3",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "35ae8716-df77-4bfc-853e-36fbc8b2f351"
        },
        "item": {
          "id": "dc3dfdaf-9ac2-486c-8f8a-3ccb65568b9a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c95a4736-d32f-45c4-9e37-80a33013dc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1103,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48359b5-cbc4-4f5f-89d0-7fc271456731",
        "cursor": {
          "ref": "c28beec2-dc83-4b05-aa00-14a5022a8309",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b6361ad9-effe-4e96-9621-cb390d74ecb8"
        },
        "item": {
          "id": "f48359b5-cbc4-4f5f-89d0-7fc271456731",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cf6df66c-c075-4530-9355-c6924eb7df41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b28b2-7ec3-4668-a87f-f7f82182d640",
        "cursor": {
          "ref": "567bad3e-41e8-4a2e-bd2c-5bb3fc31de19",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f9c027cd-a6fd-4598-8b15-8e60f59d900b"
        },
        "item": {
          "id": "565b28b2-7ec3-4668-a87f-f7f82182d640",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b73b055-7e76-4ebb-9836-4cf689291aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe25f2ae-306c-44b7-bede-c0a16d245d6f",
        "cursor": {
          "ref": "7cf517a9-2fd6-4b69-be9a-bea18ab99119",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "faf8af2d-b0ba-4a8c-a46f-4a9496058c36"
        },
        "item": {
          "id": "fe25f2ae-306c-44b7-bede-c0a16d245d6f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bf031800-85a7-496a-ae31-c38ffdbfee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecfdcf4-a516-4525-b2ea-a0dc22ca6b52",
        "cursor": {
          "ref": "9ace34d1-8c16-4149-a102-23ca4a37e327",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "001b0846-a04c-4080-b1fc-55b180b7c455"
        },
        "item": {
          "id": "5ecfdcf4-a516-4525-b2ea-a0dc22ca6b52",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d246b1bb-58c0-47e9-860a-340e42ea1676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1250,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94332d2-7869-4473-9040-4c5bfb6124e4",
        "cursor": {
          "ref": "cad80c2f-6bcd-4ec3-87aa-81e010c668c3",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db4faf4e-d382-4b56-8ca2-094b0b5af071"
        },
        "item": {
          "id": "f94332d2-7869-4473-9040-4c5bfb6124e4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ee7d2df-6b69-4f73-b458-4612627fa523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f881b3d-9cc5-467b-b955-b9ef12e39f2d",
        "cursor": {
          "ref": "621789ba-9926-4d0f-8a26-ab54c4b9e8dd",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6a64f76b-5167-43af-9ac0-41e1dd85c082"
        },
        "item": {
          "id": "4f881b3d-9cc5-467b-b955-b9ef12e39f2d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9a13d1f6-787a-4dcd-b198-30f1b4d48430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ada86a-dd0d-403c-bb65-2bc9c60a4200",
        "cursor": {
          "ref": "9295c4a7-6ad6-42ba-9644-72e98c2270f5",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "396f12aa-3b28-4693-b1ee-b3a4f03a4711"
        },
        "item": {
          "id": "b6ada86a-dd0d-403c-bb65-2bc9c60a4200",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "31bd6894-34e0-4bd5-9ff2-672ab5003a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f18ba4-3153-42ba-9eee-f104a9f2dc92",
        "cursor": {
          "ref": "58653c04-98c7-49d3-8ebe-c9b753ee2387",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e3065dde-f3dd-45d1-bec4-51ffb974155f"
        },
        "item": {
          "id": "e2f18ba4-3153-42ba-9eee-f104a9f2dc92",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cd5aa847-54e9-4fe1-88dd-1c2b5ed89763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaf9de1-d8f4-4b21-bcd9-18d7acd24eca",
        "cursor": {
          "ref": "beff5199-7229-4075-bd1b-25fd2b745b69",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5bce197d-716a-41a1-b21f-418eb0c018db"
        },
        "item": {
          "id": "feaf9de1-d8f4-4b21-bcd9-18d7acd24eca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1d8f1f28-6c3b-410b-a6be-a2a828a7613c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c06f8f-456d-49e5-9bfd-17f4d40f2111",
        "cursor": {
          "ref": "2e68cd10-a401-4950-bc25-ba4059961abe",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d091e473-5209-4df2-8ba7-bb903eec5e03"
        },
        "item": {
          "id": "72c06f8f-456d-49e5-9bfd-17f4d40f2111",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2563763d-918d-4b00-90ad-255dba095f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672d776-d1ea-488d-bd6e-5d65fb135701",
        "cursor": {
          "ref": "0f2afd37-6450-40df-bc21-3d66629973d5",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "86c00856-12a9-4c9e-b4bb-650bcf9c8983"
        },
        "item": {
          "id": "2672d776-d1ea-488d-bd6e-5d65fb135701",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "345cf44f-fad8-487c-9746-d5ead87cd182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98be8c4a-8a04-4a1d-9338-95992ac35b38",
        "cursor": {
          "ref": "0c0c8eac-871c-492b-b230-2d4ae9e9019f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1357827d-270a-4de5-b4d2-7a04e6585d1e"
        },
        "item": {
          "id": "98be8c4a-8a04-4a1d-9338-95992ac35b38",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "683cf315-4207-49bf-8de5-dbe1b9dc56ab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a2b062-9fb9-4e81-b05c-c96aec57b0fd",
        "cursor": {
          "ref": "9c6b3d4e-a728-408a-8965-d0d2e08ffa05",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0dae0b4a-85e3-47a8-8ee2-6d8e53f1a8d2"
        },
        "item": {
          "id": "34a2b062-9fb9-4e81-b05c-c96aec57b0fd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0d7fd1f5-4ab4-4843-90c8-49af4bca0ef3",
          "status": "Created",
          "code": 201,
          "responseTime": 6814,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d27fe3-e2ed-458c-ad36-ada28c0da461",
        "cursor": {
          "ref": "f0226e4c-a507-4cef-9450-bf341d026ad2",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8a0392b4-0b82-4fde-8a1b-c570662729da"
        },
        "item": {
          "id": "f7d27fe3-e2ed-458c-ad36-ada28c0da461",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1e5cac15-891d-4dbb-9a7c-77d4070054c3",
          "status": "Created",
          "code": 201,
          "responseTime": 6326,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92898fc-f1b9-491f-ae84-130d1fabdd3e",
        "cursor": {
          "ref": "3283c488-2242-43b8-a926-677fe31d966b",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4065b80d-d8dc-4a2c-9c80-18cb51aabe17"
        },
        "item": {
          "id": "e92898fc-f1b9-491f-ae84-130d1fabdd3e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a5990371-110b-41e1-9399-3323bdd23973",
          "status": "Created",
          "code": 201,
          "responseTime": 8380,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5689aa-60cc-41bc-a7df-4eab637fb338",
        "cursor": {
          "ref": "e168c55d-5173-442c-89b5-494e2bbdec76",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "faa74f5a-8058-4947-ba29-e2cd4d9e024f"
        },
        "item": {
          "id": "2b5689aa-60cc-41bc-a7df-4eab637fb338",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cdc4019a-500c-40c7-9c58-4859f727d879",
          "status": "Created",
          "code": 201,
          "responseTime": 6655,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc80534-1b37-4395-b19c-98645a914cdc",
        "cursor": {
          "ref": "b0b0208d-d897-4f0e-9b3e-ec69d32fb776",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "af002572-348f-4a0c-9b7f-a46c6b33560f"
        },
        "item": {
          "id": "6cc80534-1b37-4395-b19c-98645a914cdc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "172d8e62-7d4e-4c3c-a603-4657a2f27f6d",
          "status": "Created",
          "code": 201,
          "responseTime": 6137,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fea4726-8a6c-47f7-9ff3-869573b7054b",
        "cursor": {
          "ref": "2a3421f9-aa18-49ee-b2cb-bdca8d9d7d11",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9ebe0089-671c-4461-a9ed-cc4314c780a5"
        },
        "item": {
          "id": "6fea4726-8a6c-47f7-9ff3-869573b7054b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fc33a15b-8aa3-4687-b0f0-d56f2400d62b",
          "status": "Created",
          "code": 201,
          "responseTime": 7885,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef483741-415b-462c-ae8c-aaba0c15b7c3",
        "cursor": {
          "ref": "a53b3768-17f4-4235-a6e0-1ca173544b0d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ff38ecbc-f8a5-435a-a9de-16b566e137a2"
        },
        "item": {
          "id": "ef483741-415b-462c-ae8c-aaba0c15b7c3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "71e5887a-662f-4bcc-8c18-cc3759fc5afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef483741-415b-462c-ae8c-aaba0c15b7c3",
        "cursor": {
          "ref": "a53b3768-17f4-4235-a6e0-1ca173544b0d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ff38ecbc-f8a5-435a-a9de-16b566e137a2"
        },
        "item": {
          "id": "ef483741-415b-462c-ae8c-aaba0c15b7c3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "71e5887a-662f-4bcc-8c18-cc3759fc5afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5320f8a-a22e-4818-b8ac-e7b64b35d11b",
        "cursor": {
          "ref": "ab7da3d1-dce7-4946-919b-5a17e4eea7f0",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3024a053-be51-4d36-83aa-9e18c1fab5db"
        },
        "item": {
          "id": "b5320f8a-a22e-4818-b8ac-e7b64b35d11b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8617ab9-caec-4fa9-8d7f-6a295d5a7363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98b5769-b126-4b3f-9fe7-550a08221c35",
        "cursor": {
          "ref": "510e0fc3-4370-4b13-bf1a-41e7006b42c7",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "55b740b3-88b2-48c1-acab-e202ed6ddb06"
        },
        "item": {
          "id": "b98b5769-b126-4b3f-9fe7-550a08221c35",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1e9918e7-d426-44b9-81e1-3343953f760a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7418c0-83ed-43d2-b386-90a017aba0b8",
        "cursor": {
          "ref": "32d6272e-8920-42bb-9051-baabb0fe7151",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e05fc2e9-fd31-4b7d-9c47-0c3889088fb0"
        },
        "item": {
          "id": "4b7418c0-83ed-43d2-b386-90a017aba0b8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6f61d41c-7fdc-4eed-8a69-53b0094a3971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b853cb-0416-4aed-94a5-29cc39360db6",
        "cursor": {
          "ref": "07ee66c3-eb2a-4f8f-8bf6-80f520e0d6a5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "77775ee8-ecb8-4a88-ba3a-5423e07bf566"
        },
        "item": {
          "id": "83b853cb-0416-4aed-94a5-29cc39360db6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2382f1fc-97ea-4689-b690-eaf9cd1a5147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45e151c-3c94-43d2-a00e-0f4c1daf1f37",
        "cursor": {
          "ref": "7db00959-b730-4386-a390-3e3c3d73434a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f309ae5b-ebe7-4013-a580-abb02ae9edc6"
        },
        "item": {
          "id": "b45e151c-3c94-43d2-a00e-0f4c1daf1f37",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "19f0f8cb-40bb-464e-b92a-ea7cec91f1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1077,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0839bf-b421-4d31-9a69-8c2b8b970b3c",
        "cursor": {
          "ref": "b8a67686-0545-44fa-8850-b8fd8f3401ae",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "19b24535-48aa-4742-afcb-707d74c3e613"
        },
        "item": {
          "id": "4d0839bf-b421-4d31-9a69-8c2b8b970b3c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cc591f62-959c-476c-85e9-b66d7bbe0359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1221,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd05915b-4627-4a57-892b-35341b2ee739",
        "cursor": {
          "ref": "47b8ab36-0cb9-4c9d-a1c6-106f060fecf0",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9670da3b-5087-4a84-b766-573152eb6f42"
        },
        "item": {
          "id": "bd05915b-4627-4a57-892b-35341b2ee739",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6a2fc238-2a7f-4df7-9b7a-899e545d0f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1449,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c6b564-fcf0-439c-9316-e42d0c89d8b7",
        "cursor": {
          "ref": "0147918a-f41e-43cc-a7ae-15e9e3133685",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9cf8324e-8831-4f7b-a827-a5852c0e573d"
        },
        "item": {
          "id": "27c6b564-fcf0-439c-9316-e42d0c89d8b7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e0050bfb-802b-41ec-bc08-8e47b756ba65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1486,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6538515-7c28-4d58-ba3c-7ff8b7089fdb",
        "cursor": {
          "ref": "3b9b5213-0189-4b32-9bb9-b014ea3ed67e",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a95c83b0-7332-49e9-a1dd-0dcb7ba7b773"
        },
        "item": {
          "id": "a6538515-7c28-4d58-ba3c-7ff8b7089fdb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0f1b43d8-4fc7-4bb7-aff7-6a661991a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1406,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9e2df2-4f31-40c4-8e66-64397d897bbe",
        "cursor": {
          "ref": "86994db5-3fb8-4764-8649-60a053f09dbb",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c06a621c-e0e8-45c4-9d3a-cd46386f9c8f"
        },
        "item": {
          "id": "da9e2df2-4f31-40c4-8e66-64397d897bbe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed652f39-792a-473f-a7b1-5c118a704983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1239,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db88fb2d-0ae8-4fde-abd0-4d3eec8330c1",
        "cursor": {
          "ref": "f6cbced3-fcbb-49b2-9563-47b258ae09c5",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3ac9c93c-fcac-4723-b5a9-ffb890cbd312"
        },
        "item": {
          "id": "db88fb2d-0ae8-4fde-abd0-4d3eec8330c1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ef064c8-1464-469f-8b56-54c2b75d5384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1379,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd718b7-b9dd-464f-ae34-8e32e7b35994",
        "cursor": {
          "ref": "6d30d775-3c72-467f-8e18-213fcd754788",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4fab26b8-7a39-48ef-9a20-00d410c94917"
        },
        "item": {
          "id": "5bd718b7-b9dd-464f-ae34-8e32e7b35994",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b36589a2-b678-4c97-be7c-cb5879479b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24e0f0-0afe-4ee3-9457-d299b7ad22d4",
        "cursor": {
          "ref": "67b8d3b6-b559-424f-abf2-37a35b32a898",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "26fd9f15-176f-47bf-8f1a-c8efbe2c8112"
        },
        "item": {
          "id": "ac24e0f0-0afe-4ee3-9457-d299b7ad22d4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c2d74bbb-6410-4d68-90e3-b250032840f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1449,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb4f3b4-0d22-49fc-beb3-f4f30c111264",
        "cursor": {
          "ref": "f64ce872-c987-4dcb-b074-cf95192933f2",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dd86564e-b608-4e6b-a419-36962f7745f6"
        },
        "item": {
          "id": "7bb4f3b4-0d22-49fc-beb3-f4f30c111264",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "050fb0e1-b5cc-4fdc-9876-192f8d26f035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2374,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33168b53-aacd-4b4e-8b3d-5a04ae402f67",
        "cursor": {
          "ref": "fad609a9-02dd-4d92-bdb9-bb6c27ae34f8",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1c07db7e-cd8e-4151-9e83-14a633f4a3e2"
        },
        "item": {
          "id": "33168b53-aacd-4b4e-8b3d-5a04ae402f67",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b27daed1-bf18-4a83-9ead-05d584477e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2107,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce32f0c-3ee7-4809-8f14-edf4a25a9120",
        "cursor": {
          "ref": "113668e8-026f-49cf-81be-751a1b50f5c0",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6560f3b8-0225-4b88-b23e-549ec8018ffa"
        },
        "item": {
          "id": "cce32f0c-3ee7-4809-8f14-edf4a25a9120",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31087044-bab2-406a-81c6-588675c3bd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1552,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cead82-6e53-43c2-9c43-af974e13756b",
        "cursor": {
          "ref": "612c2b70-d300-498e-b7f0-08975d91e0c2",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "936ae771-53a3-464a-a114-357b4211a692"
        },
        "item": {
          "id": "80cead82-6e53-43c2-9c43-af974e13756b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f2aa763b-671d-44b2-b977-b59a95b5f6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1379,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0431484b-5770-43da-a235-5294ec2e3475",
        "cursor": {
          "ref": "7a49eb7a-7411-4ffb-a97a-996308256e5e",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "06fbbcd1-8586-46fd-b311-71f24d0f7f7e"
        },
        "item": {
          "id": "0431484b-5770-43da-a235-5294ec2e3475",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3eb38b29-5f5a-43d7-b103-db37df5a60c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef98744-bd67-43b6-8b48-eb932bb5c69a",
        "cursor": {
          "ref": "4ad94888-20a3-4a47-897d-47e05fb1a180",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bb0da061-99a3-45bf-8e33-434450bbbaf4"
        },
        "item": {
          "id": "9ef98744-bd67-43b6-8b48-eb932bb5c69a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ee6b174-f4bc-4945-ac23-dfef7ba13658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3341b9-1d91-429b-a770-bfb88252987d",
        "cursor": {
          "ref": "19494668-dbed-4f68-956e-6177019a77da",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "638c229b-e735-424e-a6f1-e6df8bcfe2b9"
        },
        "item": {
          "id": "9c3341b9-1d91-429b-a770-bfb88252987d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fa8f0d87-52e8-48bf-9cd7-892ac985e517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ae917b-de14-4368-b1c9-f8a2a110588f",
        "cursor": {
          "ref": "9f9c015f-d453-4aa9-8733-73db83f054bf",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "72978d5c-2c1a-4d04-947d-e9afba2df7a9"
        },
        "item": {
          "id": "31ae917b-de14-4368-b1c9-f8a2a110588f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "22ec939b-1c06-4204-9c2d-ed6093be74fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff634eaa-6a70-49e7-8919-f7a44d620529",
        "cursor": {
          "ref": "0c4927e2-91f2-4cb3-a370-2c032de78fb2",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fb434609-990c-4a50-99c4-6b4ad47f592a"
        },
        "item": {
          "id": "ff634eaa-6a70-49e7-8919-f7a44d620529",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "69cbc59e-5c1c-4a3a-a2a9-08d6b393cc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d2263e-a59a-4fe4-a78a-f95189f83b38",
        "cursor": {
          "ref": "ec71cb40-5a87-4f15-9cc1-0bfa6da88ee3",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b83e4789-b998-49c8-8ef4-eaed49391aae"
        },
        "item": {
          "id": "b1d2263e-a59a-4fe4-a78a-f95189f83b38",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "17670fc7-9d16-459a-8229-14948828d355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39768570-0f6e-4c68-bd7e-5f1a393d3ef1",
        "cursor": {
          "ref": "afaf6ed9-fa21-4ac6-a706-fe2caf2e41d3",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "091c4120-fbea-4e7e-be64-981d6a61fb73"
        },
        "item": {
          "id": "39768570-0f6e-4c68-bd7e-5f1a393d3ef1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a1c324b4-0a6e-4f37-b6dc-d4192a511439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464f60e4-ac35-485e-9bb6-a92567d9a5cc",
        "cursor": {
          "ref": "d0a0de15-0190-4e40-b154-eda3123ab536",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bf2859ed-169a-4997-9f2d-86a555234814"
        },
        "item": {
          "id": "464f60e4-ac35-485e-9bb6-a92567d9a5cc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "45c84c98-074e-4acc-a2ac-f3917843ecab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812e6eef-2cd2-4d92-8d0e-d03ff1b25b16",
        "cursor": {
          "ref": "01504f1d-7a04-4f58-921e-edb0613966d6",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3edadeee-21aa-4b72-82bb-9e213e33891c"
        },
        "item": {
          "id": "812e6eef-2cd2-4d92-8d0e-d03ff1b25b16",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4f83d68b-07aa-4497-a83d-ad77401ceacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1076,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d62eba3-da6e-42d1-a66d-9e8c27a8cf3a",
        "cursor": {
          "ref": "7fac23b7-1825-4f41-93d8-06b5214e7722",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c390230c-669d-4f07-a5d1-2fcb688e580f"
        },
        "item": {
          "id": "6d62eba3-da6e-42d1-a66d-9e8c27a8cf3a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c3bad13b-3132-4e4a-a35d-e7e020cf2c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c8bff7-23db-40bd-b419-bccd6ea4537f",
        "cursor": {
          "ref": "8882a4f4-9e0a-4449-aabd-5b54c0a1567c",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "785a16b3-f4fb-4ee4-983f-159dd7486952"
        },
        "item": {
          "id": "f6c8bff7-23db-40bd-b419-bccd6ea4537f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2d62a652-e650-4f80-b4cd-72089243a49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1226,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfd8dbf-519a-4cdf-93bb-3ec9d2f7291c",
        "cursor": {
          "ref": "52d924e9-50b2-4b15-b7d6-e2c452726d1b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aac47271-0cab-4f0b-b27a-1bda3cd49c14"
        },
        "item": {
          "id": "1dfd8dbf-519a-4cdf-93bb-3ec9d2f7291c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a55cb81b-35c1-4363-ba19-31f597559632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0281824c-943b-4883-b28b-aac9461ad6e8",
        "cursor": {
          "ref": "40110741-d7c0-44a6-8b00-e4d4d153ed4f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b2fadb38-9a12-45b0-b251-71ab682d285a"
        },
        "item": {
          "id": "0281824c-943b-4883-b28b-aac9461ad6e8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68f847ef-f482-41f3-b64d-96a0bd3de08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8abc60-08a2-4caf-88e9-13cf0f68c8ee",
        "cursor": {
          "ref": "92b26d58-5316-467a-89d0-895f07598fb2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bbda134d-c238-4254-8c95-510ab12400bb"
        },
        "item": {
          "id": "5f8abc60-08a2-4caf-88e9-13cf0f68c8ee",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "13391635-de2b-41cf-8657-5f7e4e87b170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539b6e0-d70c-4b5b-95aa-d1533e5b8662",
        "cursor": {
          "ref": "1cdaec9f-b558-49d6-b76a-9c406978e83f",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4f9ddde1-6a1d-4c55-a302-8dd721c23cdb"
        },
        "item": {
          "id": "8539b6e0-d70c-4b5b-95aa-d1533e5b8662",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4dba0a2e-a478-459a-ba1b-e6aca7cb5c16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775a7359-c505-4222-996b-30f92bd1c917",
        "cursor": {
          "ref": "89a48d1b-20d9-4554-88a5-2e85043b77fc",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ba29ea96-a031-4b7c-9666-7e71d2796b01"
        },
        "item": {
          "id": "775a7359-c505-4222-996b-30f92bd1c917",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9e59cbfc-4878-4d47-97ae-56bee581e3fe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1033,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e480cd-f388-4cb4-b1b4-e52a7f98ab44",
        "cursor": {
          "ref": "457949cf-265c-41ce-961b-72c2b3679295",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7e2fdb87-99cf-4691-8402-f387ad323214"
        },
        "item": {
          "id": "d0e480cd-f388-4cb4-b1b4-e52a7f98ab44",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0850b98e-3f08-4325-8ae8-2f72831b9663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e480cd-f388-4cb4-b1b4-e52a7f98ab44",
        "cursor": {
          "ref": "457949cf-265c-41ce-961b-72c2b3679295",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7e2fdb87-99cf-4691-8402-f387ad323214"
        },
        "item": {
          "id": "d0e480cd-f388-4cb4-b1b4-e52a7f98ab44",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0850b98e-3f08-4325-8ae8-2f72831b9663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1605599e-8f44-456b-9227-ac427a3c8fef",
        "cursor": {
          "ref": "f5c5de05-1a98-4d92-823e-8df3cc348a05",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "49c8e93f-d6e6-49c0-953f-956e12bed7f5"
        },
        "item": {
          "id": "1605599e-8f44-456b-9227-ac427a3c8fef",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3d14ea6d-acf6-4250-9289-aabea785ff66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46a6e8b-a4d6-4ae0-9ab1-21f092b5464a",
        "cursor": {
          "ref": "78d96b57-651e-4f2b-b832-7aa81fc2ef51",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b411709e-2f79-43ea-a145-948a623fe671"
        },
        "item": {
          "id": "e46a6e8b-a4d6-4ae0-9ab1-21f092b5464a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f4a785dc-368f-4f6c-accc-7dc95926283a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd318df-8fe9-43de-9433-eb78d01ac326",
        "cursor": {
          "ref": "06c4e736-c323-4c4f-a1a0-65df6059420c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "84e84c3c-d609-4108-82a4-94b715f9874f"
        },
        "item": {
          "id": "1bd318df-8fe9-43de-9433-eb78d01ac326",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f68ced05-5c37-4da7-bb18-21a10d37e9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45dee024-7638-446b-86c2-0998cc235d5b",
        "cursor": {
          "ref": "cf2650e4-1536-477b-8b06-b313f1155012",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4e28ab4a-770c-45f7-ad55-d29ca4ea250b"
        },
        "item": {
          "id": "45dee024-7638-446b-86c2-0998cc235d5b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee83a4f3-c961-497c-8716-383bcd5159d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cf6e19-37d2-456a-8a6a-41cd2dc0d07c",
        "cursor": {
          "ref": "bf6b172f-fddc-4114-a63e-5ef375d90d9e",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8d31f746-e4d8-45ed-a731-844524eca195"
        },
        "item": {
          "id": "20cf6e19-37d2-456a-8a6a-41cd2dc0d07c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6671cdde-9c9d-4bb2-98d3-1c5eb9b3cc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1883,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719a8e77-05bc-4848-b909-949b66d4933d",
        "cursor": {
          "ref": "c9d655a9-b590-4d01-9b31-ccedec04c791",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eea0838e-5e9c-4c84-bb39-5cec2e39f44d"
        },
        "item": {
          "id": "719a8e77-05bc-4848-b909-949b66d4933d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "446a0ef3-f537-4cd7-9346-8d328c0e0c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1493,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338ce54b-a022-4ea4-bf8f-6e0bb2adbd00",
        "cursor": {
          "ref": "6a5bd6e1-028d-4b0e-91b2-91f27b67a7ce",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e9d35fa6-adc9-4a27-b979-f2abd3c8bbf9"
        },
        "item": {
          "id": "338ce54b-a022-4ea4-bf8f-6e0bb2adbd00",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "24ae5eae-d55f-4a00-8476-1c1bc49a2084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1652,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e322cba5-6863-4df2-8afe-a5465fd4fc41",
        "cursor": {
          "ref": "469c5dbc-2f8d-450c-866a-a67cb4bc25c3",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ed83a662-ba66-4303-ac73-dc5ec6956be1"
        },
        "item": {
          "id": "e322cba5-6863-4df2-8afe-a5465fd4fc41",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ea3f96b3-9d82-4fb1-afc0-4bed258f1b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1273,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d828eb6a-775b-41bb-8563-592e3f16d09e",
        "cursor": {
          "ref": "dd91fc42-4d1f-49d8-af09-5ff6aceaa4b5",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d568e980-a87b-46f5-ad78-ad689acbbca3"
        },
        "item": {
          "id": "d828eb6a-775b-41bb-8563-592e3f16d09e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "87e8e6b0-0813-47a0-9e5a-842fdd12a078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dfa7db-f914-4f15-bfc9-576448fc63e7",
        "cursor": {
          "ref": "9bd7de71-ea06-4b5d-b4c1-00046e0bf301",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bcb20264-8c33-4099-bddb-ec0251efe03d"
        },
        "item": {
          "id": "67dfa7db-f914-4f15-bfc9-576448fc63e7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "04f84e17-51df-4467-8836-72767f394262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f99455-a0c7-4b96-a2cf-55b153fae169",
        "cursor": {
          "ref": "87868207-cecd-425b-86b5-9b844290262c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "105f0a27-09a1-4256-8044-efb6ce6bec04"
        },
        "item": {
          "id": "48f99455-a0c7-4b96-a2cf-55b153fae169",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "194e8331-a760-4bdd-b3fa-e840415c9263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710e6801-dcfb-4a73-9577-d77d0e595f1a",
        "cursor": {
          "ref": "c3bd6d35-da3f-41b0-a430-fabc0a0ca73c",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e765d9e7-b38b-4f1c-94ab-ec48c60bea99"
        },
        "item": {
          "id": "710e6801-dcfb-4a73-9577-d77d0e595f1a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e7fbe94-133f-4692-8c38-08eb34db46a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64576a-6a14-4ddb-b67f-03aa46f03e24",
        "cursor": {
          "ref": "792e268a-8d61-4fa5-8220-6250d5e7d588",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6ae5697d-a54d-49ba-813d-fbd550629104"
        },
        "item": {
          "id": "5c64576a-6a14-4ddb-b67f-03aa46f03e24",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "51c1f603-2adf-408a-8da2-04049884ad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efcf079-423a-4ef0-860a-c27e35bb7a27",
        "cursor": {
          "ref": "68a283fd-4abf-4060-8177-9bc145c10032",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "de042584-2114-455a-8c57-2b4181b27170"
        },
        "item": {
          "id": "2efcf079-423a-4ef0-860a-c27e35bb7a27",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a1b252e1-d446-41de-910e-20e2522b201e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce15e13-b1d4-416b-bb53-9b34f712cdc3",
        "cursor": {
          "ref": "d9322c39-9314-4d1c-9307-6fdc150aab6c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8aa7ca43-c3d9-4f03-8b25-62bb3f8b7114"
        },
        "item": {
          "id": "2ce15e13-b1d4-416b-bb53-9b34f712cdc3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "57b22a92-9d90-460e-8cee-cc1fb95d768b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c25781e-719f-43ae-b062-a25b5254bea7",
        "cursor": {
          "ref": "2a23a8ed-fecf-4f7d-bd62-cb7bb05b8bbd",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "87d7cfe2-0542-4baa-93c0-de6d8b4f8c30"
        },
        "item": {
          "id": "8c25781e-719f-43ae-b062-a25b5254bea7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f38edd52-eced-4813-9d91-1c1d07d677f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d0d3c1-3e6d-44d1-8fab-f085ef2e93b1",
        "cursor": {
          "ref": "fd3541c2-7376-44ed-b2b4-cc36739d491a",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b63f5bd7-2251-4505-9b02-5ffd6a437eb4"
        },
        "item": {
          "id": "e7d0d3c1-3e6d-44d1-8fab-f085ef2e93b1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0a7f74bd-7cd8-46cd-8d3b-decc1f68da26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 892,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2f4095-f72d-4873-b95e-436d12da2b95",
        "cursor": {
          "ref": "60c09a53-5db4-4601-bae9-ffdb7d9cfb71",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0a0ff2f0-e086-497f-b6de-44ebbdb9cad3"
        },
        "item": {
          "id": "5c2f4095-f72d-4873-b95e-436d12da2b95",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "34cf3e6c-4cdb-4299-bac9-d28f35a329c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1b2137-0158-47fa-b376-1427f70c47b7",
        "cursor": {
          "ref": "daeb27bf-359b-4798-97ba-b3632b3fa417",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "be1a9773-691c-4d58-883b-9a446395ecba"
        },
        "item": {
          "id": "fc1b2137-0158-47fa-b376-1427f70c47b7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cb878fed-0e22-4007-b1c0-c79e28485f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9725713-0a09-40ba-a065-d33f0f6fed09",
        "cursor": {
          "ref": "b2d0deb6-77b9-4f4b-8329-14edc636b50f",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "08491b28-7167-447b-ad01-ee4b9304bc18"
        },
        "item": {
          "id": "d9725713-0a09-40ba-a065-d33f0f6fed09",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7c251570-82ef-4831-83f8-d5cbeb261558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a1c9d0-135f-42dd-b6d3-b900527297ef",
        "cursor": {
          "ref": "71f9ddf9-fd7d-4ae8-8a7a-a13793eb9980",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "444878a7-c55b-4ae9-8843-cde1fedfa7da"
        },
        "item": {
          "id": "81a1c9d0-135f-42dd-b6d3-b900527297ef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "130b4c41-cb02-4cf2-8c1c-73c1ba9e8971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998fa65b-2434-46a2-9a30-bb9e842084e5",
        "cursor": {
          "ref": "f83329c6-7e27-44f4-ae7a-b431ed09f4e7",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f998e5b4-12a5-4621-a043-0a5fd092daee"
        },
        "item": {
          "id": "998fa65b-2434-46a2-9a30-bb9e842084e5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8873c6c2-d61b-4020-af12-2a2b2a2825a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fed926b-54c7-4d92-901c-256b036255e2",
        "cursor": {
          "ref": "d1b3800a-ac8f-487d-91b2-80726e1d276d",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f72d85b4-628f-4103-b282-34e6c6e4874a"
        },
        "item": {
          "id": "2fed926b-54c7-4d92-901c-256b036255e2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9ac82290-4b12-4afe-ad56-ff09d6e5809f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cc1319-bdc9-492a-a50b-ef2165a65ae8",
        "cursor": {
          "ref": "02274fbf-5bba-4442-b46e-05b1c4ccdfdb",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b7a18db8-e482-4a10-8051-e28a858a5720"
        },
        "item": {
          "id": "d0cc1319-bdc9-492a-a50b-ef2165a65ae8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9ecec6cb-ac72-4a95-95ee-5634eb191fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d62be33-b0fe-4794-8dce-f0b6858e8e77",
        "cursor": {
          "ref": "b7896e2d-a17e-4062-b7e1-011e5ceb1317",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "75a31a94-ad01-4615-9049-098c5cf0d5a2"
        },
        "item": {
          "id": "3d62be33-b0fe-4794-8dce-f0b6858e8e77",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2cc9f5e0-3170-4999-a0e2-74913cb5ee21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236d0153-f72c-42dd-9e63-ae7d408227d7",
        "cursor": {
          "ref": "09e88f4f-4775-4046-ac34-c04ee2ce6577",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bb571d8e-510a-4e45-aad4-a26727486f71"
        },
        "item": {
          "id": "236d0153-f72c-42dd-9e63-ae7d408227d7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fced03b5-3b40-4c2e-8caa-615112f2d334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a28e58-65e7-4f5a-8e13-92f8659c0dc6",
        "cursor": {
          "ref": "f2c51096-1f25-4e3c-af74-a96d0c8f9e73",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "72fef1e7-896c-41da-bfdb-985b15f88145"
        },
        "item": {
          "id": "35a28e58-65e7-4f5a-8e13-92f8659c0dc6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "28319396-82ed-4686-a091-b03357e1ad58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075ad6c6-81a3-4602-9b4d-b6b67ba64f35",
        "cursor": {
          "ref": "533bb1f3-f5d5-4fdb-8658-e6b1c956cdc0",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6dc0cc1e-ed10-4156-92b2-ac75fc3d3c09"
        },
        "item": {
          "id": "075ad6c6-81a3-4602-9b4d-b6b67ba64f35",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "207ca3f5-4074-4925-9238-4722d9eb09cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d3f168-3383-40c0-867b-fa0174e67b9f",
        "cursor": {
          "ref": "098c97cb-e523-4dfc-84d3-89e719c846a4",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "77f9aef3-8802-4ba3-a47a-24213d513eb3"
        },
        "item": {
          "id": "82d3f168-3383-40c0-867b-fa0174e67b9f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "133c77ed-bed6-4bac-9a38-a8a51727607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f000ff-7ef2-4a44-be31-1f8e10c6d81e",
        "cursor": {
          "ref": "c71a77e4-55fa-4747-bd59-b5bd9b0d6d82",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4f51293c-5266-47ed-a678-1dd8916cdc0f"
        },
        "item": {
          "id": "a6f000ff-7ef2-4a44-be31-1f8e10c6d81e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a7ad25ed-723b-478d-901c-ebbd68990c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a586052-925a-443b-8ced-6f34b054211a",
        "cursor": {
          "ref": "c64b6c1e-e709-4b9d-baea-4a25ca7fba42",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e92f9fe3-3667-4438-a0cb-0915d082bd82"
        },
        "item": {
          "id": "7a586052-925a-443b-8ced-6f34b054211a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1fba3e16-4dc3-4da5-8211-a9fd414c431d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbc9402-a234-4019-a9f7-5e57ba72f286",
        "cursor": {
          "ref": "5b524131-900f-4775-b6ba-53cd64e4af7b",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "125d75d3-9fce-457b-9725-843203005584"
        },
        "item": {
          "id": "3bbc9402-a234-4019-a9f7-5e57ba72f286",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dd904ae6-15a5-4a00-b265-804aada2b92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1d0d24-73fc-4489-9a0c-7ec94af6794d",
        "cursor": {
          "ref": "071aeeb9-cf2e-44fc-a360-b93d852fa521",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f925513-171b-4dae-a5f2-76551cd6c583"
        },
        "item": {
          "id": "ac1d0d24-73fc-4489-9a0c-7ec94af6794d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f8b21570-b72b-4b46-b82c-d10185a320b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d52d97-65c8-49d5-827a-57dac3b9164f",
        "cursor": {
          "ref": "c514362a-51b9-43a1-8ba8-00466acaa977",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5131ba25-0e39-4244-a058-9c0df352c116"
        },
        "item": {
          "id": "97d52d97-65c8-49d5-827a-57dac3b9164f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "93569790-3668-49fb-b3b4-cf203171b111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62f25b2-3a4d-47ba-935e-86477ee322e5",
        "cursor": {
          "ref": "aa23bcad-1432-4916-9fe3-76eac8d362eb",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8b0b182e-0607-4bc5-823f-4cba1fbc1b59"
        },
        "item": {
          "id": "f62f25b2-3a4d-47ba-935e-86477ee322e5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c3a106d8-dad7-4c0c-9d54-1c69584e8dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b47e16b-92e0-4bfb-b6ea-3949d37c497b",
        "cursor": {
          "ref": "6e4480d8-98b2-4311-ba9c-e7c42aa4350d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "50aa88c9-6a1a-4743-b279-bd232b7ba08f"
        },
        "item": {
          "id": "5b47e16b-92e0-4bfb-b6ea-3949d37c497b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "da1880e9-0827-4489-a0f9-cb09c6b529b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39431b37-a23e-4702-bfa6-f0cb1e58a2ee",
        "cursor": {
          "ref": "ad3bf366-1ccd-4c2c-90a7-50d0791ba2f8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "92b5e67c-62dc-43a1-84bb-fed7a82de07d"
        },
        "item": {
          "id": "39431b37-a23e-4702-bfa6-f0cb1e58a2ee",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a72218e3-1b5a-4f41-9c98-8d6ec8b4b7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1253,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc11f02-2e23-49ca-8f89-baaa9ed8f6fd",
        "cursor": {
          "ref": "15ae6517-9002-4ba4-84d5-09036c03fd55",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d73ed73a-6874-4572-81cd-de2f9199f5db"
        },
        "item": {
          "id": "cfc11f02-2e23-49ca-8f89-baaa9ed8f6fd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d19ff532-5374-413d-aced-add62e04eae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1011,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038144ef-cea1-45d5-84d9-c55b07b610b3",
        "cursor": {
          "ref": "5354b1e7-2634-4f5c-b9a8-8cfeb40ca4e3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "19130e60-7d30-435a-bceb-6bf40be24d92"
        },
        "item": {
          "id": "038144ef-cea1-45d5-84d9-c55b07b610b3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9abe7548-642c-4bcd-b8d4-88b8decfb6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1053,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4445aef1-e433-42fc-8001-a7cd4b764bed",
        "cursor": {
          "ref": "1e4fbbec-8048-4234-91d6-0b9a380c749b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4ba92f00-f2e0-4243-ae4f-9369e18622e4"
        },
        "item": {
          "id": "4445aef1-e433-42fc-8001-a7cd4b764bed",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "43fdc862-c9f1-4c04-b1e7-6ee5ef413b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22b29ac-a0d2-4b50-a87a-def8a575b47c",
        "cursor": {
          "ref": "f12e4a5f-18b7-40ef-95f5-889529d11e55",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fd9142ae-4d0c-4dc1-ac7e-390f475699e8"
        },
        "item": {
          "id": "f22b29ac-a0d2-4b50-a87a-def8a575b47c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2b69bc9d-ec8f-4ce0-a154-f0f8f7ad9daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a8ffbd-a29e-4f20-8a1a-48a5a645e170",
        "cursor": {
          "ref": "64bbcfaf-bed4-43b1-9947-087790b95ac4",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2393299b-f223-4102-b0aa-f3dc54c03b6b"
        },
        "item": {
          "id": "d9a8ffbd-a29e-4f20-8a1a-48a5a645e170",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "95c28f4c-12ed-4d89-807e-fe3035826b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152b9184-cee4-421b-9453-ccccbbce0325",
        "cursor": {
          "ref": "b638dbe0-ac67-4167-9d64-be78abe93e48",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9b0949a9-2a82-487d-b96d-8d32844bac83"
        },
        "item": {
          "id": "152b9184-cee4-421b-9453-ccccbbce0325",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6299a468-bdb6-4003-8a43-eb36bd797dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9945e86-0618-4767-9e3b-830653dc2f60",
        "cursor": {
          "ref": "99b0f77c-a5d2-4d52-b26c-76c6c05a9fab",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5b314cf4-5f51-419e-8042-8af0d35b582d"
        },
        "item": {
          "id": "c9945e86-0618-4767-9e3b-830653dc2f60",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "86f4c817-74c9-4f53-91e0-3d7d2f005038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53ffcfc-419d-43e7-981f-1c1e9140eb87",
        "cursor": {
          "ref": "9894de48-966b-4426-9ecb-62c5c3478981",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ef656b22-25c1-410a-9171-18306c704ed2"
        },
        "item": {
          "id": "d53ffcfc-419d-43e7-981f-1c1e9140eb87",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "66dcbab9-10a4-4015-8e76-90cbceed3b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b667a9-a352-4d42-ab0d-886599965fa4",
        "cursor": {
          "ref": "41e24f9a-3ad0-45d4-9b9d-9dee05d98251",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4d96a6ca-8e16-48da-9bff-310973a7b8e6"
        },
        "item": {
          "id": "e2b667a9-a352-4d42-ab0d-886599965fa4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0f5e1e9d-f13a-489a-9eae-e3ef666addc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ef313f-e074-46f1-a983-388a04b1360d",
        "cursor": {
          "ref": "a9460889-07f2-4994-a243-353bb42d750e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f2f42fa1-6703-44f8-a292-81d7c5c22152"
        },
        "item": {
          "id": "67ef313f-e074-46f1-a983-388a04b1360d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "24e8f787-d417-446c-afe5-c07bd33c8033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba06f6f6-fee8-4daf-9252-4c83c06a7d0c",
        "cursor": {
          "ref": "a0d1fe11-b180-46f7-9cc9-4a49b1120d33",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5f723a7a-20a3-45eb-8d48-04753e5336d4"
        },
        "item": {
          "id": "ba06f6f6-fee8-4daf-9252-4c83c06a7d0c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2cd001e0-6b96-4fee-a979-2c4331744a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1062f0a-c357-4734-a7f0-56337b520a4e",
        "cursor": {
          "ref": "2a957e2e-594c-47f3-ae71-ef761b576db3",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5aac5024-1070-41ca-8c6f-b6c783a4467e"
        },
        "item": {
          "id": "b1062f0a-c357-4734-a7f0-56337b520a4e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "89d6e880-5d9d-41fa-a591-f5102c4b7660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad24c0-b0d6-4334-a653-5cd7205b37d9",
        "cursor": {
          "ref": "7a961070-f584-42ff-b727-98f19f2997de",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "75c5ae67-73cf-48f8-b12a-b6f3e3d47638"
        },
        "item": {
          "id": "4aad24c0-b0d6-4334-a653-5cd7205b37d9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5fee5749-70d6-4cd0-adbe-3010d1394c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be9c991-cf1d-4785-ad10-e369aac155f3",
        "cursor": {
          "ref": "e133c9a8-d08b-4e5d-803b-b9c0b9cd4b68",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "27e32a14-bf08-46af-975a-7679e0671f15"
        },
        "item": {
          "id": "9be9c991-cf1d-4785-ad10-e369aac155f3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b4341954-e505-4402-9c94-8dc488a20c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622214bf-2743-45e4-9f5d-b67754f28126",
        "cursor": {
          "ref": "95b3ec24-75e1-414d-aea6-f8748255efb6",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "76366fee-74d0-403a-a609-99c545bbb6d2"
        },
        "item": {
          "id": "622214bf-2743-45e4-9f5d-b67754f28126",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "81dec057-72f3-467b-828a-7580df37658a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbf6f28-9aa0-4b62-b14b-75f5c66be24c",
        "cursor": {
          "ref": "922ccf8a-6ae9-4d96-b0ad-d3a5e67ae3f3",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "aa9da84d-dd80-47ea-9ef0-fdc35efff09b"
        },
        "item": {
          "id": "efbf6f28-9aa0-4b62-b14b-75f5c66be24c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "331313f9-c472-45de-90e5-754f86f09087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ca9be8-9ba2-43ff-b112-6253526d843b",
        "cursor": {
          "ref": "9ce8cdae-f6ff-4e22-8b16-ed52ee13f43f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "16724f19-b76e-4af6-bd04-4b07357dc7e8"
        },
        "item": {
          "id": "00ca9be8-9ba2-43ff-b112-6253526d843b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f27304f9-6b9b-4eb0-9a41-eb1c2cb061bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45e4c64-42fd-4dbe-8761-c05b5c3e47ef",
        "cursor": {
          "ref": "3be19967-d1aa-4d7b-a947-623a973a1648",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7ff466fc-e787-4669-90f1-8479ef600bee"
        },
        "item": {
          "id": "e45e4c64-42fd-4dbe-8761-c05b5c3e47ef",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e5ccf948-770e-40d5-9bb2-26c2447778c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd02506-c41f-44b9-aab7-8cf000a4cf15",
        "cursor": {
          "ref": "50719e35-b76a-4724-af54-5042d5a89a47",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cf67403d-4167-4e04-b7a2-2feb0934a41d"
        },
        "item": {
          "id": "3cd02506-c41f-44b9-aab7-8cf000a4cf15",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "75b46d87-85a6-4663-b633-524eff244305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eee3051-7283-4bf2-8075-02752687b77e",
        "cursor": {
          "ref": "ffae18f2-ec61-4d00-89e0-687a3fc8398d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "83492bc3-382f-46a4-ac93-2543423c4d99"
        },
        "item": {
          "id": "1eee3051-7283-4bf2-8075-02752687b77e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6aa3c9c7-75ce-4e7e-868b-85c30b906975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358454f9-0369-449c-b51f-d41665507665",
        "cursor": {
          "ref": "b65f3346-8430-49a1-88e0-17249c411a50",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b0eaa8f2-d002-4156-8ee9-e97cf9097941"
        },
        "item": {
          "id": "358454f9-0369-449c-b51f-d41665507665",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9c3cce9e-18e6-4b36-ba31-165c76a96ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eceb2ea-00ba-45eb-8b33-8e85e9b9ad25",
        "cursor": {
          "ref": "a03ab675-4716-4811-a73d-72248f868d31",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a46365cf-2b22-4df6-aced-31a341369453"
        },
        "item": {
          "id": "5eceb2ea-00ba-45eb-8b33-8e85e9b9ad25",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9bdf6e97-781e-49fe-a7f0-467dc2490b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b128ce-0ffd-4cb4-a92d-eec4c5f710f7",
        "cursor": {
          "ref": "82f621a9-6a20-420e-aea8-36abe6be600c",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "89f75a9f-5eaf-4105-9414-965035760467"
        },
        "item": {
          "id": "11b128ce-0ffd-4cb4-a92d-eec4c5f710f7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "93b38c97-18bc-4000-b304-bf3ba48527cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063723b5-4873-4e89-93b6-c510cd882254",
        "cursor": {
          "ref": "3bb1e710-8727-4fe5-81ae-28ceed1756d2",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "212a7a0c-28de-4a99-a030-a7930d23a7fc"
        },
        "item": {
          "id": "063723b5-4873-4e89-93b6-c510cd882254",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "94e7a3f5-9df6-4097-9c3e-071d1d6d7149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1165,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c595240-9a02-4557-8374-9aa12de63d30",
        "cursor": {
          "ref": "9823f641-8ff6-4585-b1d3-6ae1beae3099",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8dab6570-43df-4da0-abc8-038e8a0454e3"
        },
        "item": {
          "id": "8c595240-9a02-4557-8374-9aa12de63d30",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "77a407d5-78c1-47da-91a7-8803cf6b5031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e54909-fffb-439c-86d7-ca183d3a9784",
        "cursor": {
          "ref": "bdba8a56-1121-4427-a5ef-a6e693323347",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "324c637e-c9e4-419a-9a23-3ea8322a6ae4"
        },
        "item": {
          "id": "c4e54909-fffb-439c-86d7-ca183d3a9784",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "912d6e89-579d-47cb-a647-98089ef83c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1032,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5660f9-3b31-4cc3-890d-02d3b30e5521",
        "cursor": {
          "ref": "ccc2b2c7-037b-4199-9c70-7ec1fc6c8c81",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9a7ffc27-d4d3-46b8-912c-9164b9c0151a"
        },
        "item": {
          "id": "0b5660f9-3b31-4cc3-890d-02d3b30e5521",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c269f1d9-3aa4-4bf5-9e3e-402be2336498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7e4b76-8c02-4308-bf2f-e24105bb02b2",
        "cursor": {
          "ref": "d417618d-f43f-49e1-b2c6-149aa57d27fa",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4b89d578-4624-4fd8-bf66-9dda57c5da7c"
        },
        "item": {
          "id": "cc7e4b76-8c02-4308-bf2f-e24105bb02b2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e7706f72-811f-4320-a20e-750d1d829f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a29f74e-282c-4fb9-836e-b72895a0bb5f",
        "cursor": {
          "ref": "9fda0f89-cb9e-44c5-976b-bff95fe096ff",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "09535270-692e-40eb-9cf1-c7d9c5bb29a2"
        },
        "item": {
          "id": "7a29f74e-282c-4fb9-836e-b72895a0bb5f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "98eb1a79-efc0-47cb-9635-4a4e1121de82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bfac5b-9a4e-4fa6-95e0-0f365597beb9",
        "cursor": {
          "ref": "16408f4c-9e13-49d7-86b2-f16fdf4d8731",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "936bcfc5-fef2-4873-a3d2-54dd5b92cc45"
        },
        "item": {
          "id": "d7bfac5b-9a4e-4fa6-95e0-0f365597beb9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9f945364-7ac7-4265-b3e9-5e593753a5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99e68c-e32b-4d77-83ed-5337d1ca30a4",
        "cursor": {
          "ref": "1cd359a0-9050-4f07-8c0c-aae409fb4622",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f40202b7-a2b8-4d8e-9998-e5fc3b45179f"
        },
        "item": {
          "id": "0e99e68c-e32b-4d77-83ed-5337d1ca30a4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d93a7ede-0a36-4803-9387-54ed179a65cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7967ad-e215-4d4c-b578-5fd41473f804",
        "cursor": {
          "ref": "1832227b-2782-4ba0-bbfd-0b9dfd52f5a7",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "10d1bdbb-d378-4979-a257-02c2710e2ef6"
        },
        "item": {
          "id": "4e7967ad-e215-4d4c-b578-5fd41473f804",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "279f2d4a-558c-4c23-bb88-f78519dda4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2245ee8-21fe-445d-8e37-911f48297d85",
        "cursor": {
          "ref": "45646707-70a0-410e-b903-cbb914703caa",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "84e90191-973c-48db-939a-a04e52244f61"
        },
        "item": {
          "id": "d2245ee8-21fe-445d-8e37-911f48297d85",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a7e0dda5-be83-4eb1-8ddb-d2eff4e609f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68756cd8-7a1e-4acd-b66f-90feca12f83c",
        "cursor": {
          "ref": "7a432e92-71eb-432e-9aa2-68de6f2f3d9a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1b9734ed-5b8a-4385-935b-72cce02650f0"
        },
        "item": {
          "id": "68756cd8-7a1e-4acd-b66f-90feca12f83c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "13b7bd0d-b99f-4f64-ba68-2b0e1efad4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adbd6de-ad4c-455c-b842-ba36e9a186ae",
        "cursor": {
          "ref": "82fb2bc5-4553-44b0-ba7a-47f9acd61024",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "99c6e339-52e0-45bd-b73f-07638d2c42c4"
        },
        "item": {
          "id": "3adbd6de-ad4c-455c-b842-ba36e9a186ae",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8ec1226a-885f-4657-b6eb-0c62bb798acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f3d1a-42b9-44b6-a4bb-392494b8d6a8",
        "cursor": {
          "ref": "57d17cc1-fb20-4cf9-8158-fef2462bb1e3",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3c9f5749-3601-4b40-ad7c-8f86c143d647"
        },
        "item": {
          "id": "f58f3d1a-42b9-44b6-a4bb-392494b8d6a8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ee0037fa-7e50-4233-8b16-bce691206a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f3e31c-f60f-4807-89a4-fb3df91d6131",
        "cursor": {
          "ref": "93ab7f32-cb07-463b-a63b-4fffc7bc1cd9",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "50d38fa4-4fd3-4dd6-9ce1-0cc66a367bb6"
        },
        "item": {
          "id": "f9f3e31c-f60f-4807-89a4-fb3df91d6131",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d21c321f-a793-47e1-a047-55e55124106f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d52eeb-124f-4cef-85b2-f7dc2f7907de",
        "cursor": {
          "ref": "24b7f92d-8459-41cc-9788-9661fbc8e067",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "511aad6b-f16f-4f9c-b9dd-f010280cf2e7"
        },
        "item": {
          "id": "63d52eeb-124f-4cef-85b2-f7dc2f7907de",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "da2e9751-567e-4047-975a-c332995d53c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675aa050-14c7-4b54-a9fa-1d750ac3eb9f",
        "cursor": {
          "ref": "c52edb43-f3f5-4722-8c1b-d2ecd491e3b1",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "54860c4d-7736-49bc-abdc-e398078ceacb"
        },
        "item": {
          "id": "675aa050-14c7-4b54-a9fa-1d750ac3eb9f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "12725d4c-e7d6-444e-9c1b-17f110228452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4b555c-aef5-4b89-80a2-9e3d3c0db134",
        "cursor": {
          "ref": "25611c8f-1710-4a7a-bf73-0b38fe3bd13d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "899fc7d6-f91d-4bd3-80e1-c65c8aa087e7"
        },
        "item": {
          "id": "3a4b555c-aef5-4b89-80a2-9e3d3c0db134",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "358621d2-bac9-4839-bf9b-cc915f02ca42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c321038d-1fff-4764-a284-20a6b3bf650d",
        "cursor": {
          "ref": "b9a06243-c23f-4c53-8c4c-95310614568e",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8aaf9dc2-7eb9-4d47-b4ac-1bc12d4d5e1d"
        },
        "item": {
          "id": "c321038d-1fff-4764-a284-20a6b3bf650d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "665e90ef-7c3e-4a9e-9a4d-bbe1437cd5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117502b8-2574-407a-95c1-a690bab061e0",
        "cursor": {
          "ref": "0d2513d6-3e82-4883-b131-0214f2948524",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a2544fee-4f11-4338-9199-809216ffa2c6"
        },
        "item": {
          "id": "117502b8-2574-407a-95c1-a690bab061e0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "056f679d-aa9d-4203-bb91-3d4b0870893c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927602df-b300-49ab-9238-85fece8acbbc",
        "cursor": {
          "ref": "55e0769c-84d0-4ded-bc4b-48ed9434ed7d",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "978a681a-0d60-457e-9946-f1990ff62bc8"
        },
        "item": {
          "id": "927602df-b300-49ab-9238-85fece8acbbc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "98dc21bf-473c-4361-9b38-1162982c4938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca20fbb-4302-485c-b37d-c9619be1434c",
        "cursor": {
          "ref": "6467ee9d-79f0-4d71-8d4e-6b311f6431dd",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3d325cb3-1292-4f1e-9b60-6f174589f761"
        },
        "item": {
          "id": "dca20fbb-4302-485c-b37d-c9619be1434c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9aa7fc9f-3312-4e5b-b84b-9f7ad2a51c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a646cd1-637d-424f-9de8-35434fbf4319",
        "cursor": {
          "ref": "89df1f72-1ea4-4d77-97dc-4536bcfd199b",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b3bc1593-b293-4261-b8be-6eda62cc20f9"
        },
        "item": {
          "id": "9a646cd1-637d-424f-9de8-35434fbf4319",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d5d66862-6ff3-45dd-a901-396bacd650d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67025da-3706-4a12-82d0-fbed5549c86a",
        "cursor": {
          "ref": "c79969ef-b0c9-4229-8142-1cef5a74ae98",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "71105304-fbee-4ef1-bfb9-1ea583880246"
        },
        "item": {
          "id": "e67025da-3706-4a12-82d0-fbed5549c86a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4eb562f9-7bc1-4259-a397-fa14ab0c1a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dce721c-c019-4147-89e4-d02d9796a52c",
        "cursor": {
          "ref": "1193e24f-c999-45ec-a065-a62500e3bed6",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ffc3bfd7-21b4-4294-b9d8-29de03112e65"
        },
        "item": {
          "id": "9dce721c-c019-4147-89e4-d02d9796a52c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a4717bf9-4c9b-4ec4-8197-413d3808a030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4617651a-bd87-414a-9b3a-d9daf397d816",
        "cursor": {
          "ref": "40bd4f3a-774c-4c49-9136-d8c6b01b795b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "146d9c97-f6eb-4580-9b86-c05e38a2c052"
        },
        "item": {
          "id": "4617651a-bd87-414a-9b3a-d9daf397d816",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7b57b40c-d2cd-435f-8c14-b74c5eee1bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f90235e-f9d7-4931-a888-fe0ad4b61c5b",
        "cursor": {
          "ref": "5a3ef600-1c2f-48be-826a-27209f6cd02a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d3ce8a8a-471b-4742-be24-590c4cd2bf93"
        },
        "item": {
          "id": "8f90235e-f9d7-4931-a888-fe0ad4b61c5b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1ed4c1d9-b7a5-4978-941e-f2c92de299bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c029d637-b53d-48aa-a6e2-65e09f16040f",
        "cursor": {
          "ref": "43fd6c17-0385-428b-ade3-e6551f6d93b1",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "19d4e3c2-c097-4dec-93c0-76bd878cf4af"
        },
        "item": {
          "id": "c029d637-b53d-48aa-a6e2-65e09f16040f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e43346c-3d17-4ae1-9cba-ff699d1b5b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09c55ee-0031-4056-8349-be015f603763",
        "cursor": {
          "ref": "93cc487e-6708-45c4-9986-2073c0a4e730",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f45cc74a-503a-4508-9a6a-08a1e17f64c3"
        },
        "item": {
          "id": "e09c55ee-0031-4056-8349-be015f603763",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "68b448fd-a0db-4127-8ea0-c156005e6d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3564a54e-11b7-4b66-a8ec-e88744cd751b",
        "cursor": {
          "ref": "9747b721-6a75-4e43-b95a-e8ab392b0f89",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f3f17c13-eb6a-43ee-891f-75eb3e5b2ff1"
        },
        "item": {
          "id": "3564a54e-11b7-4b66-a8ec-e88744cd751b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7defd461-0387-49d1-b317-35f7db29fffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8915dcac-4b1d-4a74-b70f-c44d83fa2efd",
        "cursor": {
          "ref": "94c6a05e-5cd1-4311-bf7b-34e48888fbcf",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "634aa07f-92fc-4af7-abb4-96ee3483f094"
        },
        "item": {
          "id": "8915dcac-4b1d-4a74-b70f-c44d83fa2efd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7e8bbdb0-debd-4857-a616-a348cd7e91ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e310c7-ced5-4c7b-aca3-9886ce5e67a5",
        "cursor": {
          "ref": "1202ba55-d04b-45c2-906d-dea9963c110f",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3734c06b-f048-4251-b8ba-f8acb0d96f05"
        },
        "item": {
          "id": "e4e310c7-ced5-4c7b-aca3-9886ce5e67a5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5f467bdf-9cff-41ce-9368-c0a2c27700de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b56e445-c820-4af9-b0b9-47ecf5033601",
        "cursor": {
          "ref": "0df9f286-dd33-40f7-99b8-871c350e2160",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9c2b6da6-9a4e-4219-b789-d47d1b4af389"
        },
        "item": {
          "id": "7b56e445-c820-4af9-b0b9-47ecf5033601",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "80e555dc-247c-422f-988c-27b44f60be7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5070e3bc-d0d7-458f-a8a1-cb1c566b2237",
        "cursor": {
          "ref": "f649e3cd-63d7-46c2-88c1-5e74caafbb9f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f59521ff-464f-4db4-8ef9-74bb946a90d9"
        },
        "item": {
          "id": "5070e3bc-d0d7-458f-a8a1-cb1c566b2237",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8c457cfb-9ae3-4feb-aa9a-6032ff3de8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ef21e7-cace-4205-87af-1bef81b02e5a",
        "cursor": {
          "ref": "ce15b82e-d9d8-4196-832d-f5e576fdb349",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a504ba49-e4fd-4ca2-8558-a000c482d64a"
        },
        "item": {
          "id": "89ef21e7-cace-4205-87af-1bef81b02e5a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4bb3483a-33df-470a-aa9a-e3c9faa5c485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca5052f-098a-4325-ae5e-8622165c0d65",
        "cursor": {
          "ref": "fd8f1f91-8c7e-4c7a-b190-ca8b28c1285c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a903d104-9837-43bd-ae91-0771508ebe98"
        },
        "item": {
          "id": "5ca5052f-098a-4325-ae5e-8622165c0d65",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8c394c2a-d990-40f6-9434-f68ee178f94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 907,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce908c0b-8f12-4cc5-8a1a-f84f85479742",
        "cursor": {
          "ref": "af9253d8-e11d-4c36-93f8-73e5d5e5c7b1",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9aee1b0e-4582-4973-b690-c6f8d3000dac"
        },
        "item": {
          "id": "ce908c0b-8f12-4cc5-8a1a-f84f85479742",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "92cdad9e-8bda-4e72-aecf-31654b8c5628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63dd448-515e-4e9a-92a3-7dad24d3b017",
        "cursor": {
          "ref": "b5ddd661-f6ea-4cea-ae08-eb4df377a995",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e595aee8-ba51-40ad-9035-155d6cffb91e"
        },
        "item": {
          "id": "e63dd448-515e-4e9a-92a3-7dad24d3b017",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "97be50ed-3a4e-40fc-9c1b-d10fa9469953",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e074cc7d-dc2f-4282-9d85-a721d0db1bbd",
        "cursor": {
          "ref": "94f09c6f-b7d1-40b3-bc65-5c278a72808b",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2c563e42-eb8c-4222-b614-6d4d3218a61e"
        },
        "item": {
          "id": "e074cc7d-dc2f-4282-9d85-a721d0db1bbd",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8399b35b-fc0d-4068-af3a-7e9aad56f210",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1073,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977935ba-ea41-418f-985c-0d2b434bea8f",
        "cursor": {
          "ref": "11920f17-0fab-4c97-bdeb-0a17359dbdbc",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "065c4d92-efe4-4869-8be1-8dd839f5c9b1"
        },
        "item": {
          "id": "977935ba-ea41-418f-985c-0d2b434bea8f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "86cda844-7844-4344-8b82-3a1cd7b76e56",
          "status": "OK",
          "code": 200,
          "responseTime": 1176,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea01d3e-1a7a-43b6-90b9-c5cc38472d41",
        "cursor": {
          "ref": "45adb3f0-b4b3-4b6a-8cdf-6fea3d37b6ee",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c83f0084-3940-40d8-9bb3-4c40dc761652"
        },
        "item": {
          "id": "4ea01d3e-1a7a-43b6-90b9-c5cc38472d41",
          "name": "credentials_verify"
        },
        "response": {
          "id": "57266dbe-a17e-4684-ac68-4336b8bd521e",
          "status": "OK",
          "code": 200,
          "responseTime": 2660,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc62863-4058-41b1-89c4-e4f5faf47a10",
        "cursor": {
          "ref": "21a7d8d6-620c-477e-abcf-3b4d07653004",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b8033a56-3ba1-422f-99ff-79a30b8e6f2d"
        },
        "item": {
          "id": "ecc62863-4058-41b1-89c4-e4f5faf47a10",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "136fff21-4225-4260-97a7-963be2b5d7ca",
          "status": "OK",
          "code": 200,
          "responseTime": 2296,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb40e11-8ce6-4601-8600-9ca595cd55f9",
        "cursor": {
          "ref": "22323919-132b-4778-b92e-62235844f933",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ed8781ec-1511-4b26-baa4-f5c874340fb5"
        },
        "item": {
          "id": "fbb40e11-8ce6-4601-8600-9ca595cd55f9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "853e0799-7566-4848-a72f-65a9fa2374e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb40e11-8ce6-4601-8600-9ca595cd55f9",
        "cursor": {
          "ref": "22323919-132b-4778-b92e-62235844f933",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ed8781ec-1511-4b26-baa4-f5c874340fb5"
        },
        "item": {
          "id": "fbb40e11-8ce6-4601-8600-9ca595cd55f9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "853e0799-7566-4848-a72f-65a9fa2374e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb40e11-8ce6-4601-8600-9ca595cd55f9",
        "cursor": {
          "ref": "22323919-132b-4778-b92e-62235844f933",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ed8781ec-1511-4b26-baa4-f5c874340fb5"
        },
        "item": {
          "id": "fbb40e11-8ce6-4601-8600-9ca595cd55f9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "853e0799-7566-4848-a72f-65a9fa2374e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a2b679-0522-4879-affe-2fc4c6c17f7f",
        "cursor": {
          "ref": "d1252d81-423f-46a6-97f2-afa4fd2851cf",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cd6dee67-ea80-4283-8033-8901dbd369b2"
        },
        "item": {
          "id": "25a2b679-0522-4879-affe-2fc4c6c17f7f",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "02692495-e73e-473b-9244-8cae418d90cc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 623,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ed24c2-5099-497b-b0cd-d6859cdfbd2b",
        "cursor": {
          "ref": "6ea0d469-c1f0-44a2-8fec-46a37c721a15",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "421fe219-9a7d-48ec-9880-88d2474f3024"
        },
        "item": {
          "id": "c6ed24c2-5099-497b-b0cd-d6859cdfbd2b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "69924914-e872-41fa-97ef-8296d38f2945",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ed24c2-5099-497b-b0cd-d6859cdfbd2b",
        "cursor": {
          "ref": "6ea0d469-c1f0-44a2-8fec-46a37c721a15",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "421fe219-9a7d-48ec-9880-88d2474f3024"
        },
        "item": {
          "id": "c6ed24c2-5099-497b-b0cd-d6859cdfbd2b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "69924914-e872-41fa-97ef-8296d38f2945",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82037f7a-0b5f-4afa-97e3-8b338c2a5111",
        "cursor": {
          "ref": "59ff72bf-5bfb-4f5d-8521-9797319fd9b2",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "411d9d5f-d0fb-4948-b093-4434f5fc0312"
        },
        "item": {
          "id": "82037f7a-0b5f-4afa-97e3-8b338c2a5111",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "4e79a412-e16b-48c7-890d-8918a94ac037",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 975,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3243fb2f-b064-4356-95e2-1281b24db703",
        "cursor": {
          "ref": "ec04b60d-3ee8-4e8c-a9c5-49739b74ba82",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea4c4662-4d09-4bad-8269-c4a181b5f2a8"
        },
        "item": {
          "id": "3243fb2f-b064-4356-95e2-1281b24db703",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f5201d81-385f-414d-8b88-9c478407fde8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3243fb2f-b064-4356-95e2-1281b24db703",
        "cursor": {
          "ref": "ec04b60d-3ee8-4e8c-a9c5-49739b74ba82",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea4c4662-4d09-4bad-8269-c4a181b5f2a8"
        },
        "item": {
          "id": "3243fb2f-b064-4356-95e2-1281b24db703",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f5201d81-385f-414d-8b88-9c478407fde8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed533b-40e1-4a41-9514-55989b8400fd",
        "cursor": {
          "ref": "dfb5c693-2746-4242-a9ec-a6934abe583f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3f12d308-a7b6-46aa-84cf-cd970e64894a"
        },
        "item": {
          "id": "cbed533b-40e1-4a41-9514-55989b8400fd",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "fdeee454-638a-4e69-b68f-06f7791f7cd3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 805,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}