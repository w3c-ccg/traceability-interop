{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2e89088f-e735-449f-97b3-fcfcff95ffb0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f3eec383-f716-4d9d-a5e3-3d14093e587c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f163b9e-8549-4f4e-8c57-3dd1f54bce0a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d6cb47e3-ee7c-49bf-b832-1faef72235c7"
                }
              }
            ]
          },
          {
            "id": "469342be-007d-4923-a200-c5730db39d16",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc8d8c58-7f20-4f10-93d9-9185ef293fc7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5805e4c-b8db-4843-8775-e27602d73a8f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9b274fe5-f551-4575-aa5d-9fb0bc0319a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "023c986a-24f1-4681-925a-1e1e22f93b51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e21e1991-6996-46a5-b347-9c365a456cc2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cdf1c99-57f5-4924-ade8-446d3ae8fe5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9bce3661-6e8b-4730-b83e-92150fe63335"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c2e61daa-6af5-46b9-b96a-3feafa2cec32",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12125700-dd15-4ec0-9bb1-8be3cefa6681"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2b81aaa-b614-479a-a30b-d73237d20668",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3092455-32aa-40aa-920e-d53f054b15d5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8441a330-a3b2-4bca-9b02-cb170772a8c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2b17e3da-3297-4e2a-a4ef-0df6a9d2b170"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "268e2179-7467-4165-9c81-86c2835ec5f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f70a74a9-b1e2-4779-a949-001b14a51d2f"
            }
          }
        ]
      },
      {
        "id": "ed7a167d-a053-4b79-b796-75df5942f74d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eb3c183d-1cae-4e37-8b64-38ee884cdfce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "711ab177-7332-4afa-899f-90666338f0d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "632f38d2-efc2-43a7-980a-96aa121b119f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1686ea0-5606-4110-947e-1810690e8513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aeb632f-1dd0-4d88-8704-4ba1ba6e4f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bff5aaa-bf54-4331-b041-8aeafd8fa096",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b91e6a2-dfc6-44b2-930a-337de4545aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "075e5a92-ee37-421f-a62f-7ae828766c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c24e0e-5d4e-42f1-8c2e-e15998e5edd6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ddaf2e-6ac6-4bbf-a7ac-ded7e96f2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14d96409-0358-4350-a9c0-7584782fbc87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ebef04c-97ca-4d82-82c9-7817007dddd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ead41fb-b9f3-4eaf-a76b-0151e629f19b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c68bb2f-f329-447c-8aab-325c11a7f2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a850b54c-7ef2-412b-a486-3baafcfec63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14535ef-901a-4ea3-9959-fde96aca52e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f8762d-084d-4811-9373-ec50092ad1c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "204bce89-8d60-4055-a3fd-9445e7cfb233",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d576c859-a508-454b-934f-0f6c7be81a7e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bafe269-c34c-4fc5-a93c-defdaec62b61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3cbd153f-3072-4712-9fbe-c649838766de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f0f3cf3-ea3a-4575-8910-5984df6ab10d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "493b3073-56ac-41bc-b035-4e9c295a3d49"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c4a2e67-9219-4945-aadb-49dc5b51b538",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "749c65ca-2e6e-4b75-afe3-ac729e37da61"
            }
          }
        ]
      },
      {
        "id": "74ecfff3-81a8-4f63-aa61-9f20eb07f969",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3a5b8922-20e6-4a28-a787-2ef1eabf420e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a17cf972-ca08-4d6d-b336-b93081ab50fc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a17b6894-64c2-4148-94f0-70564d12fb0a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bec39dc-f7a1-4cb2-83ff-ab938e4f244f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e51da1-b170-49c4-8d8a-b1a1bec4718a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332b3c36-80f9-4838-836a-15d11f132dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a880738-d92d-482f-92d6-25449589fdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1908d49c-e40d-4d88-b00f-1b3994c37bf1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb78e44-eb63-4aaf-a281-ddd486eca75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d808b1e6-71af-40ec-ba31-265a0e5c9050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d17ca61-bd48-4c82-99a0-3892bace38a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "440a5e3c-4c25-4011-9e21-b23e19010163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512400a3-88d5-4dce-bba8-39e6df48e76a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e63cd6-6c39-4b82-8f39-eb297eb1274e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9961b81-7f30-4a81-97ea-973a4df83996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca11ccc5-ac26-427a-915d-588f33a1dbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dadda18-e044-41ec-a7a5-07c1bd372556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478f38ba-ecef-4963-9867-267ea7b4f311",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cbcc0d-a5e8-4972-b3bf-ff047342b4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cfe1d3-bd7b-4c5d-bc81-098101f70f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087839fc-ed38-430f-a59d-41453bfbf5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e78ddf-11ee-400e-b86a-f405b6dc4359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3e25a8-868c-4b82-b3ed-26b9f395185a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa3f788-2d05-4a1e-ba82-ce53783c8565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240b0aa8-bedd-449d-bf48-8d0854e91195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edab2da8-5a3a-4d38-89d9-641e63ca634a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ccfa506-171d-4a1a-9216-a38026ab3367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0304cf-ed55-4798-adfb-f015f9732401",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81827c20-cc97-4285-80d4-8658c1f0bbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a4ae0d-bb27-45c3-955f-9d370cda0448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcbfcde-ce78-445d-8595-88bc6116a80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a78128bb-31f7-4f12-9b06-16d62474ad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7e8623-f1dc-4f3a-a7ab-738ac9b48de8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9ad20a-0a3b-44c8-a291-fb50a2d0d016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32bdac0-8bcb-4d00-a5ee-ef849c236b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290a9c46-5c3f-48b6-90b6-2b74ab6e317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81775f2a-1374-40dc-afb3-c85780c54167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec2ab86-0f1e-487b-82cf-7c846e151791",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ea82ba-1a3f-4cb9-a609-5892acee5dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d5680f-cf3c-4391-86aa-0d502d0dad43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec33b4e-f106-4f27-a129-0b9397fe0c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7435fac6-e0f8-4cf9-a89a-d1972091ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05cbf4e-2f41-477e-8db5-c995e2f6df9d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce6cbb0-0c92-4e69-bd4e-ee558f89ea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af96abaf-69c2-425a-bc08-f9a7da263ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b897fa26-ec8b-414c-b0fa-de7bff22e1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd05f138-92eb-46a0-935c-7ab9ea7cedc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d34508e-0079-4317-938c-d4ab5baf2c26",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d32be9-930c-4b6b-b97c-31800dc18bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f83c7e-3c67-4bbc-9b58-a0745f6b1248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf37434-07d9-4f80-a6e3-637e2c3ebd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a489ab8-1409-4b9f-8b1b-33f359152b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02b4622-f011-4912-b49a-f1623896190a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c7e837-b7e0-41b9-b900-b1e628f71520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbda8b4-a137-4077-9fa5-133ce57e4717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28ed2a1-3682-4c17-93af-e04c6448d180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f422fdf7-a25b-4cd3-9ba9-07518bc7be1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb80f655-38a3-48d9-aba5-9e5c98976d93",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249de683-9c4a-4652-aba9-21d235eb27ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103d1c14-598f-4c74-a825-cea8dade4675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b11bdd3-1b43-42b9-a852-c416d81da04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54369a13-f6f4-4797-84b7-5d5146967350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315d9439-3fb4-4bb2-b84c-98df3bb36323",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9db994-1f66-4616-949d-65127e710e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8238d5a-e126-4bc0-b6d1-ed2898519578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca24578-0428-4547-a9fb-5ee6a8d69363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdb04e0a-19a6-4a2d-9946-9d3648f72e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ee09ad-fe16-410f-b379-b13f6092b56f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78089713-dd44-49ad-8867-8c8518c11e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19673423-6eb8-4987-b4a6-ea75ded5307f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ff65e1-3b7d-40fd-94a1-a7c1dd30e9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af7f67a0-07bf-475b-9a67-e39419e48cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ade061e-c7bc-4966-9421-891a42660793",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c959d1-cb38-4aa9-8194-37b7646c8467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc755c5-652a-4efd-95c1-bd35846da9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4059183d-7296-45c1-a51a-97a612de4803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba42fbcf-24aa-4408-8300-13883aff7d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5992962-7261-4790-a59f-769f1e6134e7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd2491b-9720-4306-aaa7-ccba08d0ab3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9227ec-a18a-413f-8cd8-ba5f737d8d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91021af-fd90-4003-8530-9ddf55f0021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "523aceea-32b7-4610-a2f6-2ac2357361e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c97c22a-89e0-4b02-9f7a-2040c2de2cb2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3ae5bb-9756-4145-aa7b-629f7d39336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f243307-6a3f-4689-b729-58ae82784da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db511a36-ee93-45aa-83ab-e58a33b6489c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ef5319b-eae6-4d14-835b-ce217be04d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6206e5ef-4952-4b9e-9acb-aa3d4dec4f06",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1c8c1d-2516-44f2-8097-899402a5a32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c11641-bf34-49e6-a6ce-e093fa9a172a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894373ee-8716-49ff-ac39-9416b3918477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fb39b3-33f6-44ea-9642-c1ee38f21fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5290bc-4c61-450e-b88f-4774faed9e0e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade5a476-2590-4149-947d-8836632cf770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7799a1f-ebcb-4ea9-a0b5-f2e7b0f4569e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa631d38-4513-4196-be0d-090fbc00603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ac088d-c493-43b6-9a49-81b415f38870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bbbef8-fee3-449e-802a-b4cf7e7d5769",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a544e556-ade0-4efc-b9ce-2514dfdec577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccc1038-67a5-4755-a0a0-e1449b6ef166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8685335-b915-449c-9764-9db70d2cc828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99599a9f-3294-4f80-b04f-8b9bf26a6b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b1df50-d6a1-44e0-9e5d-27041ae19962",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8565163a-6123-4ee7-8591-a3d6cc49ac41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ec7b39-7224-4f37-a10c-3c3bac7dcbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ac0907-4a65-4bf9-8568-12a036daed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acdd1dc9-81bc-43dc-8ac5-c0eccae7ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d19fddf-ccd7-4c4d-9542-af665bffba1f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f3395a-7835-4acc-bc40-6549e09e0c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39810ab1-484e-4757-94af-5d8d217ac51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e41bb25-2066-49a7-82d1-13d451007764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20c7b631-a60c-4dce-890d-a5dbb14f669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d792ed1c-3b16-45d7-84cc-8a561ed081ff",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7cd0ae-9110-4f9e-9e9f-1452cc0f2af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2304335-05cc-4e1b-bdcc-ded452229056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b8be0b-0a49-47ac-9d30-b5b0afca27ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe4f1d0-f874-4897-9c48-0b14fdd19f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c380d568-e0f8-44cd-acf8-d65d3da0e272",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1ea833-4c35-4ef7-b9f5-56b1e88d7a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7175c8d8-4821-4b2c-9714-5c072ffad195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bec58dd-c5d8-4846-94a3-b07e0ec6e2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac64dad-25f6-448f-ad2f-8a5d9fb56820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce5165a-2e1a-4290-afef-a961f02b62ab",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8657116-37b6-4c72-a560-2e9c31fb442b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0105fecb-cd91-4ee5-b1e4-67f49225cddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7521ec1f-e728-40a3-ba33-98f5a09087c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf8b721-8f5f-402e-9193-7ea986f944b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f9986d-cb41-466f-b53e-b98713787e21",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86518922-66ac-42e5-85a9-bde99d6be7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cc149d-819e-4322-85a7-e409bd78b39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b7bfcd-a24f-4336-be13-0dc1b16127dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0786b4a-df75-4d9f-86bd-077a34623649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e4992c-38dd-4e28-ac23-d5d1bebafb4b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da07a4e-e9d0-4f2b-9b2b-7122b425e700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2aed9cb-e7c7-46eb-a0b2-86c5cc7b1e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a9d3b7-2fff-422f-a852-3d8ac8ff6cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40f4b569-4113-4a73-8c80-abb59f5b9660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1243525-c5d7-4f7d-a6f9-e1cf3f65e8a3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a36286-36b4-4b30-be20-39a45ff01805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1514ab-815d-43bc-9542-86f346fc7242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d941eb1-1baa-473a-be1f-6e6cb6561bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c58a6f6f-cb39-41b8-9ab3-4c472ee96a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e1ac84-24d4-442b-a38e-9197fdbaa1f2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d15e44-fdec-4fce-85a0-4b487c7ec2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68dec36a-ea31-44ac-9d4c-f77a445a1acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94afdb1a-6169-4cea-a798-7a7a014d332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08ad7d6-4cbc-448a-a3cd-d51abcc3f524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586184f4-6737-43f0-b947-d578677a0219",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dd35fd-745a-4f05-9cd5-229e632e338f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89032bb4-6867-40ef-9d94-ebd03dd0b316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81968158-fc38-40eb-8512-3d1b5903211c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ed832a-0001-4343-9f0f-b859c5a559a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ee03ca-19e4-4f06-800e-5f1f0cda8920",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aadc88-e581-47bf-b12f-378f047b3d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ab5610-aded-40b4-aab2-0ebac94327b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9dc7b8-188a-4c6b-9a8a-7b33bd3c84c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4424c43-0662-4207-91b6-515a4db5be9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98eeeb-3c11-4789-bd5f-63a3949307bf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23e164c-2f7b-4c45-b98b-7a9ddbc2478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452d1970-417d-47ea-9c42-7c0f5a894e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ead9521-22ff-4dd9-95e0-94fc6a2c718d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d20e63-a2cb-42f8-af20-887009b0acc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03b5fcd-421d-4247-adf5-a913df030311",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7ca40e-ddea-4216-a2e2-56f1b3bb657f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06253df7-c406-47e7-ba35-5d7084f8e917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b984157f-833a-480d-a057-65329ba27c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a97cc424-dfe4-4c84-be8d-0bf01dcdf273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d6470a-d2ad-44b1-af40-601ad87bdf71",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b454e2a-13f0-4355-8ba5-7c328757eb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805d92e1-db32-4cfc-9f56-24412204bfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a751736-10ef-4672-aa83-96924a53eca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b52dd17-99d4-4519-84da-91a034bf5ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc51cc7-a1b1-4651-aae0-8b866b2e8a9a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90507e23-00a5-4b42-a983-c296cb648c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681ee1fa-efd2-4dad-937f-be7f844d6d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fd3dc0-e261-4315-9414-fa1083a510be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b95fb9a5-5dc3-4e6f-a6e0-91c00d3b1a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab1857f-b66c-4a69-af04-68c2f2da24bd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ca3de5-d812-4ab7-8a69-8349d76d21de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1147b2a6-4c99-40d2-a910-9f60ec15489a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c37341-8a8e-4845-b474-20922fa240f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae224171-0e00-451a-8a86-8ac7049e1b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e1302c-15b0-4889-9570-cb0180c9edaa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a9c14e-62e8-4fc1-94fb-3603c8c0f094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12164e1e-ae1e-449c-94ec-44f05c1fc58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68409353-feeb-4652-9d30-fc98b5e97c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9acbb7c1-7ee1-432f-a9c2-40da7431fe56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86ea291-1c09-44e2-98e1-6a40f7ef9f8c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027796fa-bbf0-4eff-b192-191a7fc9befa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700667c1-edaf-4ff4-9a1f-03e235dea267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6115ae8a-e5af-499e-b677-20a65a26f337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec90ef6-5971-4495-b094-b1b8ba837f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13fe2d4b-d08b-482e-be09-de090b36900e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d1969b-6606-42aa-aeb8-7ce9ca55d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7aee8e-74ad-403b-8448-e4d66e455d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184d06ac-5ae3-41a1-9a20-986952138aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a19082e9-1df5-46b2-99d2-da7ae47a6e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e87e50-4294-4bb5-b997-9a513021e49c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1c1019-8b7e-45e9-ae65-66481f6ea33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e68a75-6dc3-4f7e-a3a3-567cdff63b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd081ff-77f5-43db-a5ef-880540b961a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95a58656-a2f6-4443-91fa-3d01c08bbbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438750b6-b450-4b2c-83ae-4cc8a465ad42",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce08cf9-39ce-42bd-981f-18667307f3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fd9a21-5249-4491-aba9-dc8d802f2e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb68f89-b9ca-433c-9e45-c9bf3d57a613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f9bcf6-7a39-4fef-9d0a-e1aad7db4425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fced3a9-02c0-4d95-96db-b234ac274898",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefda4e2-9255-4003-92e9-9abfda53f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70240d9d-c236-40a3-a5c9-63eb16aa002f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463ae644-946f-446b-89cc-33f220d0573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eb82c9ab-a5ab-4710-8765-157ed0942c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f430a91-d361-4841-b356-026c99b88fed",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78bb3d4-fdaf-4dd2-ac6a-567188616d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b36262f-d282-4803-8ada-a89aac84ac8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83c9f6f-f02c-4a43-899f-db9678ba88e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c81c21-fa27-4a26-b90b-c06f1257cef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdb4daa-5411-4222-83ea-1807ad7ecd15",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a76ab8-88e3-4615-8212-c5fb961ab3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b405903-2ef6-433a-bd57-85f9b6e68d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516b6c1f-9ed4-4e69-bb8c-724155054239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e49a254d-4d0c-41de-80e7-d1cbb29cd99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6576cbb-6645-499f-b0c9-8666f8a13e98",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d16fbc-0a13-44a7-9791-ae57c11abc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83df3784-7b3a-4823-825f-1d3679e4a520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8222fbfb-3689-4d2b-abfb-9b3552d9333c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0226d3fd-a98d-403a-8a24-6d8150e32cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a007e7f-a9fa-4f72-8f3b-a1890a77fba5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff756ab-48d6-4272-9782-a88fe1a9d0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920a1e11-3106-4d10-ab4c-95576e4fc3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a50082d-36ff-43c4-9d54-6fbe0097080a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "206c7533-1209-4d2e-9104-34d3927d11ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6865fa-e0a9-4ccc-801c-c0a519dee070",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c10224-6fb4-42ab-8aa3-91a718f99767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c52308-9912-4fe1-9a6f-6c1e35bf29de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded84ed1-7a61-4336-b2a3-ea467321afb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ad0013-eb83-43bb-8f66-c2a05898d5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce412c3-9c87-4878-bbeb-0fd0ef02582d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c570af-2f6d-4105-a37e-f092e9e02862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dca3ef-351c-461c-a6b8-cf3be7282713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df32880-a249-4bbe-bf1b-238b7fe06be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc2358c-af08-45b1-86bf-b2d534d5eb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b692d48-46ae-415f-b37c-1fc0efad6cdb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c203632-1394-4535-b283-aa72264f0f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0a7d8b-e357-4d9c-915a-0cb5ff734fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6fb7da-f92a-4ac1-897e-c99bc235c537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81a98306-95db-4388-bf6c-53de7a8aa120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929aca9c-a040-46d2-acd9-ebc56b2382ff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3761482d-d825-4e6d-a55a-ab8b5a6d397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d61257-fa69-4b78-8047-2f7ebf833915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8b7601-b2bc-4904-bb2a-6c5b2390114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5331c01d-8d33-41e8-9b8c-3a229a64014b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd2fad7-eb69-4ea8-bf0c-06d1b5af3c3b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0959ed-8cc4-40c2-a5e9-8a8491f8a214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6ac3d6-45be-43fc-af0a-98d28b03e32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8216a6-4d8d-41bc-84c1-b2231d5a9298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9802aa9-9753-45ca-82d9-f42ca010bf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3881818-56da-420e-94dd-ab05d6fa81ad",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a646e36-b6cb-4f4f-863b-50547bbb72a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fd7ceb-12c1-4e61-8c59-4a9180cd13f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbf1d58-9334-47f2-a6c9-b37a4766f451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3e3b94-aa54-4983-830e-5abb233c8d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae5e5fe-45a7-4bc7-b57c-ba26df0d2910",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb4f61f-2643-4130-9c6e-f2b45cf4ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0632de8c-a0bd-45d1-9d2a-f70b92c249f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e7b81a-a310-49c7-85c0-fc41dbf31372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7090d9b6-eb88-434d-8a05-e19c4c06dfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0192ec-d09e-404e-bb71-74fe85ca2572",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b787442f-e09f-4493-bfbc-79074c1eab63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c57c741-f4a2-418c-8ef6-ec5ac1809307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9d79d4-050c-4147-97b7-b7d8a33b37ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be496fd-dd28-4f8f-a3cc-45ce34a090e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e0f40b-73ab-4a20-a8dc-114b75bb4572",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4a5845-cc38-40f2-b2f1-cfe256970174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767de320-cc83-469b-a460-eb37b7410c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c89f5d-38c7-48bb-93b2-2e3c7a1aee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0e8b05-6a3b-4ae5-9aed-035d64552d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a69e39-a7f2-4eb4-86fb-ddcdb5829084",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643df3ea-512e-4767-afa0-4a92f4153eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f25fb7-9a85-4ca0-a624-bb3f9db136d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc5a8a8-fac4-48ea-9ada-e1b8eb63c331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "adde70b3-43d9-41a8-8a5e-58d01011f683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aee31b-c023-4f3b-b3f7-2ded4ca41252",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dbc176-b039-45e8-8bf9-3374662d5580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84b0fc7-8b10-4ff3-9bd9-6e12505cc235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c2753d-ab14-4fdd-995f-3bd3bc97f157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41516dac-658c-4482-a2ed-3bdf58722445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33af9b28-ba0b-4acf-a7af-6fc6d431c61c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9749c57f-1486-49e4-b7e1-881cdff7cc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7323be7-9189-4e69-819a-9d499f5e7b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6568c457-356b-4bcc-9cc9-85b46756dfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c66fd330-d0e8-423e-8cb6-f0659bbbae2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7560d293-0a10-47a8-9c6f-b29daead41b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab169bf4-c97d-49bf-8ecb-49523dc1607f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b15c49d-c2f5-4d46-b8c2-3cfefe59e4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c494efbf-5549-487e-b77d-26f8b66dd313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26359fb1-5308-4c7d-b4c4-bb2be8119d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1257bd-8c93-483d-bf71-b95b89c3eb06",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d49c33-1fab-4fae-8570-3264858790d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8087f04-37f9-4134-8439-6f338ade7fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19c4808-e7e5-4b2a-8b4c-d92d842e88a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1042a96b-c27d-4f41-995b-35156e4b8433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97b3eb5-2d40-4db5-9687-cf07e64f4f9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df84f641-0a62-4ec4-b1e0-dbcdfeb13a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc4915c-6e77-4ba4-98b8-7bdfaa7e237e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4841b13b-a6cf-414e-aed9-fd330b403766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f64f8eeb-f024-46ed-8575-2bd15fa800d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf3d6af-24fc-4a8d-8320-fc8707bdb754",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468b6b91-e20c-4476-8478-03b1ff702428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81525c9-c1e6-4265-936c-4d8207cce2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428af2b5-797b-409b-9397-4dff118e08a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccba27df-0ffa-48a5-a8f4-5d90ecbd9714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf517dd-e7b3-4d90-ac5a-db2b3a49b657",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b3096-d19d-45e9-8613-8ab4693d231e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dfcd006-7126-4a46-815e-39389d27e452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5641bbcd-ccdb-4a64-8192-8a4782d11dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbfcdf5-043e-4b22-b19a-55cc1bab0392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5e9be3-c007-4b22-bc0e-c980a964f926",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896f7634-ccf7-49f5-ae51-3fadcdafd008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fe6d60-4aef-4c84-b3ee-a5864e8f1d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e83600f-d19a-4fc7-abf3-53bfdb071cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341db1c6-5065-4c11-a220-16d27f7a64d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c416e6-1253-4f00-9d62-577059edaf07",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60d6233-fb00-42dd-9ca7-9f5b2d1e5087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143fe088-d125-4713-b69e-228680ef40c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2f1b86-dc9d-4dd0-b919-d309bbc9a871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e18fc4c-972f-4c5b-99c6-b412b71c6d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7e04eb-408f-4da2-a42f-e58d7cd7224e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4135c382-ae65-40bd-93f8-057d18640193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8463c137-6c98-47c0-a784-1399a50980b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec74ba7-cf74-45ee-bcf1-9fa3b5f98f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b4844b-06ba-4a7d-9f2f-72fb5db136a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb4b14c-5786-4366-ba08-75ae2c64218b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8844c7-93fc-4984-b8ba-258deec0e166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a4f540-042c-483f-8228-71a710cc43c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a23e7b-d863-40a5-94a0-0629154b9b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c4a440-6c9c-474f-9080-6fe18e12b05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8caaa179-1b8c-40e3-ace9-0eb1f1f1947d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df17a0b4-0ac9-49fa-915a-5297d145a7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd69018-27b8-4d8d-be15-7209446c1981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c5550b-4cb3-4539-ad58-101a83dc43c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "021cc3cc-c3ff-4c61-b9c5-d5400528c567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf2258a-3b77-4c6e-9e43-1b998f3e1f95",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8595e3bd-395d-40a5-b5c9-0beeda8ba833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f8d9ae-008c-431e-b45c-e7e5f2202a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3fcc34-b4d3-4216-abec-1ad4ba3ce35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f4ca07-4efc-4715-b900-5cb99a5b7a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ee0c3b-dec9-48c0-9cf3-cab4a0b4cf97",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b68d44-245f-48e2-a54d-ef9526476534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9862f80c-708e-4410-ba7f-b93974c2cefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2fa811-44ee-4a41-b017-540a104618d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9f4ced-117f-4bd5-9cec-e601a898be90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cc6114-99e6-420c-aa4a-76eb449d61a8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb1ad18-d588-4981-9083-2c61c9bf281d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef6fac4-89ba-47cd-90d5-e745fcf52974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98710d9a-919c-43dd-adcd-5f5af44aedea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0349a00-b4fe-401e-b8ab-737f4fefb99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2fd0cd-b193-44ce-a402-f1c2ebf72df6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad12e2e-4cbe-41bd-8d99-3c6b5b81355c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c254359-f096-466e-92f7-4ecb65eb9887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7490eeaf-b2dc-4b86-9723-2fd6903d8080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e81d1dd5-434a-455d-8288-4da06ceb719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855eaad0-59e7-4529-ac73-a520ef765a62",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19627bbf-a616-4cfb-92a6-2d6063264935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bde8ab5-a713-4030-84a7-7636e2ff0bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc16a8be-3e37-4487-9324-b1d93a8547d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51974561-5d31-46d3-a760-523af4a43f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83caa03-3f6a-4cd7-a27c-363eaf5841fc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc98eb06-dbc5-44cb-a65d-78a234dd516b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2efe852-dd45-49a1-9803-714013dc05a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89f6741-dc2d-4850-86f1-12bde29cd5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30e53e3d-4f55-4e94-8f6b-1cb91e93ecd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b7b7ef-9673-4b90-9893-a46fde14462e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628081f2-34d6-4d93-873e-262e022faf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265fc66a-519c-46b0-9319-a48cabc5b718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ceeabd-9450-497b-aec9-d08b5c20c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58159ed5-4118-47aa-8662-74a2117ac8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c1e6f5-aa97-4687-95d4-8a192fc8d7b1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede5098a-6d59-41bb-95f7-3e2be41c9844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a9cba3-c615-466b-82d7-179655dc94d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b1262b-f671-46b5-8aea-b0bef74672b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "391c4451-d207-4f04-9149-8a449c162e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b98991-1626-4161-b0a3-d67adfed6c7a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df313cb-f386-475f-b7cf-63e1b656a53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4190c5c2-7231-4599-8d43-051e37f1704d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe5a0d2-c549-425f-af6b-a5bc19c3668d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7ea981-c806-4a69-a214-98163667a374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5abe19-2782-4b60-99d9-abdf8cc00bc8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf43354c-d712-4df6-a013-bef0e3687035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3e5480-72bc-4685-8395-4a9d57457dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bcef48-517f-4dcf-a462-5b503ee925c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d920d783-08a0-4e13-813c-be1b5f49a466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fa3e12-cd66-403b-b521-3d8c10a91de7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a915260b-631b-41f1-b43a-440930ca702c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104d6622-c378-4877-a1cc-f2724d437235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eda0a5-2f76-4585-b3b5-3f8ef467698a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f079b53-a160-4761-91c0-257fd856de86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9239f1a3-0fd4-48a0-b4de-afa932509e0d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4df06c-c546-4f11-b4bc-c9232ba02012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5be8aa5-80e3-4398-af55-d22db9b88021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999d447d-5e67-4b86-8e62-8cdb0a011801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77a5bb3f-42fe-466e-b160-fa89480123e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827c0652-0640-4b73-9c2a-2dcb8da9ce1e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6ef190-671c-4702-b59a-c4f68ef93341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d843c5a4-53ee-4941-a21a-fca6aab194ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e357b8f9-ed1c-4633-a885-5a551d6d50ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "645b92bb-3afa-4eca-a8b9-945e59f8099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a83d421-aab7-4b55-8a74-a893d1f0cce4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3f9f19-a9ba-4305-ae3f-6d3095364950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9c48ec-d454-4876-bb2d-0c34729c79ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f4e7b6-d2d2-47cf-ad64-a231ea873c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d39824a-6576-4ca8-afd6-ebf94951cee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8479cc8-7ac4-4d86-b1d1-8617ef2ee1fc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578233c8-351b-4445-b9d7-de369dd419eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffbca5a-8b75-40a5-a181-2186c1fc96ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89ffe5a-d5df-48de-9283-d520e1d72ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6323fb79-eb4f-47ee-9a46-2fef655eedc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1b2f9f-d245-405e-91e5-9ced64288c5c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f60a3b-2fa5-4350-b45b-d9186ae323f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c94a86-f54c-4ecb-aca9-555e90e8dc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5078da44-d237-497c-9e18-3fed8850d20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b683eb6-d4b5-4953-ba7c-060df0954daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467e73f5-8159-445f-ad12-beb2cc2f63bf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebf5f74-3f0f-4e32-948c-b462bc7f5019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4496d5b2-7953-403d-8670-79cbd2b6380d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d68e05f-f5b0-4d33-9c98-422cb72f921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7da14a-260a-4cc8-87c2-fa4fb0a4f575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126c772c-ac57-4952-a9f2-940076ba5615",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6856a4f6-093e-4793-bef4-9f9361c63a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c756053-1776-42ba-a9cb-0677fe8953a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea726b08-6823-4f20-b942-0bf3e70182c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69201b0f-dedd-4eba-b6af-97c96c7e65ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a63517-4b00-4f8c-9d81-8e8f5865d3b9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e1af14-659a-4f23-b848-2ac5d2be81b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a55e3b3-df01-420a-8c3a-b47632bc0ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3b982b-1485-4d30-a71b-83baa2ba32c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "586a1669-3b8e-4843-8f48-ed664b5eba5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566a72d4-b01e-441e-a223-4bedbf3f133e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b21ea95-3ef3-41ec-ae67-8f6e07915330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33fa55d-f7e3-41a3-b0da-61152b823b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe85952-19d0-4483-8a05-3dc1ed093172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec96acd-df97-4839-9967-f4128c6ea98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af08f278-a08f-4991-a0b2-d562052bd351",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ef979d-8bea-424e-a006-0123fa3fd80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b179e306-a4a7-4303-b99b-4ca1d712950b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c6fae-9bea-4c45-be12-b7b8aec7dca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28003329-b900-42db-b00b-65d63eb845b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbca70a-7e1c-42cc-98d6-d28ed5af8d05",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a655141-0cde-4c14-a734-054978015ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4058639-2ef0-4a20-9118-82e60875bfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e558e0-7dc5-4d47-ac9e-f5deb85b3926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd89304-2d5f-4dac-94bf-9e26f57fb375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9662a6c-612d-4251-a27c-2fdc71aff8d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c87d2fd-f0f6-4903-b3a7-82c8e9162cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321c3c3e-d483-4046-b2da-3bb441156ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eea3c40-f611-4bf3-a45f-3d5d2211b4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a53374e8-52fb-42a3-be6f-3ea847b11617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3293df3-a0ab-4485-863d-75db0f445edb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3e7a52-4048-420f-8924-e661131c6c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "77589ed3-a538-4dc1-b12a-6902b0455af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0bf5bc-533d-4ae3-a081-a56787273dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82b0fb42-9200-4386-9dbc-fb768248b050"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "816b1e94-95f0-4111-9aeb-0ff5357865a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "014bd925-69a3-4541-8f09-a12927f0c3d5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b8bbb1-cbcc-4c1f-b773-782b000ed76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1774551b-bfa0-4470-a074-9445d27e265e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc9b0ed-3b26-4956-a599-b77c584e248f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1308a57-a819-43aa-9855-4de25bd48290"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f22e417-1038-4a7d-82e5-0f970afd82a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b56c35c-0e81-4f22-80eb-3bf6825c2cf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf5816e9-d2eb-4066-8297-4dbdddbc2ca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d17b4452-95ec-42dc-acc6-0f3edb7059a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb1bab9d-4434-45d4-aebc-af0b1e2935c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5524e59-1fdc-4ec2-963e-b167724e58e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "55c809b1-bb20-4528-8146-eb0ff2951d4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9327386-22ac-41fd-996c-e591011e5f9d"
                }
              }
            ]
          },
          {
            "id": "a2a5047f-4374-47dc-90ea-3662e817a034",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb11ec72-be6d-4481-931c-fb05a47e8ca7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "914d6614-2805-47c7-b16f-0f17e97e17de",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7114e7-9e7f-40a8-a5ac-4d0b7d8c8e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "22653600-a3de-4750-82c7-30ca8d859d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c57f0db-346f-44e7-a64c-351bd6baa4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5a47bc-e18d-4666-b87e-4c3d808c510d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad072189-87f8-4224-bea8-bd484fd598de",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f5e8b3f-9135-4e7a-8815-446f1cd22637",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc6cada7-a0a0-47c4-b2aa-9e185965bb70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ec2e45f-69c6-4d6f-809c-f01e3fc2ae43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e0d7833-1e21-485e-9ba5-6d673b95b4bd"
                    }
                  }
                ]
              },
              {
                "id": "d724b2a0-ee00-45d8-b998-0dce49cf7c97",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1078d713-5a4e-4ba2-b2ba-62161916f765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "270167df-e5c8-485b-97a1-9f789911a8e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ff60756-5433-45ed-aa9d-00811759842d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc4771ec-989a-4a5d-a84a-e6b1587ab9f7"
                    }
                  }
                ]
              },
              {
                "id": "ae2f5847-1a4a-4206-b533-abcfb0574e4d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80cad887-d4b4-4591-8a10-d7116d7e4c13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e966f192-6101-47b7-9c6b-2e4a5d44b62e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35a93b96-3aae-466d-a49f-e9fc190581d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ccdf5997-82fa-4683-b451-cedd76db08a1"
                    }
                  }
                ]
              },
              {
                "id": "ff68898d-9f90-4bb9-a762-f481588e670d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84b92947-aecc-4523-9aff-63b13bf27199",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4b36246-8bb2-48d3-897b-41f21f2a884e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed9eff37-90da-41c8-92cb-28485cc7f46a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "458a308f-4911-4fe5-a614-2d27dcf78584"
                    }
                  }
                ]
              },
              {
                "id": "ed06dbdb-5873-4b26-907a-b4a22bd2bafe",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "197a2450-0357-4a96-864d-3e421af3482d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e017091-6939-4830-935f-5c654cf0bfd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a84527c-f995-42b5-af08-e4fa3b6221de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3783820f-e6cf-4cc7-9f97-97fc635f2acd"
                    }
                  }
                ]
              },
              {
                "id": "d761b421-6877-41e5-a898-45b7fe8efdd6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "629afb5f-4bcc-4def-8371-c58ec8670373",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f976135-86c8-4c5f-9dd3-9af146887fcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7b792c5-e969-4af2-a2d5-cda65f4ce176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e90ce64-dd73-40d1-b396-3efe6a530b06"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "703e81bf-15fb-4a2e-9332-6c6281627276",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "169b0ba8-0e49-442c-801a-ce7f67baa9a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d28dab8-bce7-4528-8849-d5e27d96eff0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "035f1072-d0cd-4f3b-9081-439b0ad7b4a9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89d2ced1-a421-4667-bf25-5d21a2805e9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ff17da7d-fe4a-4bcd-9194-18436473b7cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b9878c3-9f80-47a8-92b7-0f24fd959425",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44eab324-2e02-40d0-84c3-e2815ebdcae0"
            }
          }
        ]
      },
      {
        "id": "9f58c368-7459-4e29-97eb-c8e8da072ba8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bf55042c-f2d9-4ee0-be5e-2331b2acc9a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "861da9e7-da7a-47ab-bddb-9a5932a0cde3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0499e752-de04-492e-8a1d-f925c8e5c565",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed24d5c-2ed8-427e-bc01-901fdb6196b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d07a8d-f520-4666-87ea-6356fabe18e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd3b449-8eb7-4786-a808-5df7aa46eb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9d4b1b-b260-4999-a148-e476477a0619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56823934-b6bd-41b8-bb57-95a3102d461b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b07f94-1516-4578-b6e4-7da927350970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4db1cf4-f00f-4722-aa21-3aafdb667641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8891f829-ab53-41cb-8154-1eb5ccd252dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47334604-c742-47f9-89d4-9c20f832e70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28672ad-f927-4992-8b06-9ca594f0fef3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284dc5dc-3b30-4d91-b28e-931b3e351bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a420a0f-0d72-4d59-9a68-6bbf53e8afbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09bd926-4856-45e9-8323-fbabe6eeeb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e9eecb-7aac-4fff-860e-53aff6be7b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69949134-f873-47d2-b433-59866692f2a5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fc0b72-3b32-4960-ad65-6a5f76f4fc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47132f1-5b78-44c0-8145-f8cd0321d832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0a7ced-a459-4ad4-bf4d-7d2bf51195e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d069d1-3309-46a7-b063-01cc581d8d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a1b241-7254-446f-b097-b1b13cc0769f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea1c4ee-756d-4e52-9cc1-fc8007b900b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ef5d98-6c0b-4824-bb8f-b3f6a8d69a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b677a10-fedc-4e46-87b5-6cb81004dc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38afbb78-dc30-49a7-8422-aa983d364cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f77906e-6ea5-4e60-8640-50b2f0b9cca3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d904a0-486a-4603-af3a-750c2267d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8612b55-08e9-43b5-81b0-985a135c8672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4458c877-11da-460a-abd8-a6a56d0b37ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "682c6bca-9f2d-44d3-8b1f-f4f1e6f50536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355addde-d1bd-4a4e-9db2-0b6c0d83943a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad80189-70d0-4f3c-8d68-1426f9e76c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20db68f-6262-48f4-a9f5-208fd7549729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666900af-3fb1-4e87-9fb7-ce3b633b2264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd53a10-2b02-4181-8844-bcfc32fb7fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f00d7fa-46da-4f5c-9470-5d24215737a3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fb75ba-21de-44ff-8f99-99fb8c8dcbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79bb38b-2efb-40ad-af8b-8cbf8074e447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d43be04-507e-4c23-b7cf-5e59e5774aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed77a620-dea7-4d76-9414-264b13f53978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971abea2-c183-4915-9f5a-7c5165137afc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901814fa-678e-4903-b466-c9dfcbf583f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d179ca-973f-44d7-86ad-94f26586804c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b63287-1e44-4f2b-ad21-0222e1c742b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d29189-2186-4125-8f57-6ebf15fd9551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f9761f-7c27-4dc7-a654-3cfc5579dd48",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b83115-a08d-4d03-8c02-8dc8c66b001a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac62dac-fa44-4274-b455-9af619f11289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd415377-2bb0-469a-9c5f-406d179ce67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d03456a9-c07e-4a6a-80da-7594ee23b668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ff42d7-1dee-4bcd-a499-8c33baa8aba9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0243c276-7715-4538-8753-cd6ff0c77078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339a641b-afca-4309-8f47-330c6d0871cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c929547b-9d53-4cad-a31d-3074b2ebca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "afa0853c-96b9-416c-9a64-cab9e13b6348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ac3f37-9e2a-401b-a3bb-514525172c44",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907164a7-f6fd-4a29-8589-9d225084fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffdeaa15-5959-486a-9d38-4f545b5ad4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac23c5e0-c084-4268-8472-13f7dd51a4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c72ce39-fb32-4838-a7d0-6b00f0318fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2905cf-20df-436f-8c94-b3f2adcb8f72",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2eadc1-e510-47e4-83b7-a0b9d2fe9481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d857b039-c7e5-4677-b4cc-636b912d9f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970444df-6584-4a3c-9727-25d66fa61ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec83334-eee2-4e51-a78e-b9b0200415b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2beddf27-8a10-466a-95be-23b3ee54bc9b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932e544c-a5d5-48df-b8e2-b12602d86709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0d4610-31e7-4db3-9e73-b933b9640d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5351d076-65f3-4d7b-b5cc-47bee6cdcf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a90d5a3-746c-449d-a2a5-88a5604b2e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc141978-82c1-49ca-a49a-44313a5d6446",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2225e5-dbfe-4936-9bb1-c25c73eb8794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924d5027-078d-4902-9d58-aa859cdfe978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694a8f05-72b6-4ece-ab94-fc8c9ec91b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de21bfb4-649d-4ca9-b674-d94947a8f4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46688386-0092-49cd-83ce-65fc8b1e4ec9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cf6b53-4bff-44e5-9ab4-cd6ec5b70b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de8f773-bc1c-4b66-82fb-1d07552bcdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d84063f-4439-4425-9973-5c60980570df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc70ebc7-5f5e-447b-b1a7-0966367a1103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69a3f39-fff6-4ea3-ab18-dafb23a37206",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc12f56b-efc7-487d-a38e-7fa5d3a7b652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841f2516-7d23-43df-9094-ccab984b1177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f685aac-0d58-463c-926e-0a7a9498d1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87f3405-e8a4-433a-978a-c6c7a9eecd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffef46d9-0c35-4d66-bdb5-60e965e0b746",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14bd545-90e5-45c2-aed8-1261cf865a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b677a78-1494-4223-8af3-81914ea78059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c786aff-a4dc-48b9-b49a-1bffbc53a3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ca79e1-7538-4339-9ada-5fbfc293c967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c085cbc7-bc52-4235-99ba-f8060420ceb1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2cb48a-c6c0-4b55-b151-73a451d0002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce881fc-b089-4122-94c8-5cfeeb9b0ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7022e82d-ac51-414e-8c6f-ee105f18c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3c45f3-4435-41ce-9136-1a2ebd7a6c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac372733-8c5d-49f7-9726-57d2742b4cd8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9198ae42-0e82-4b8c-9b01-e2b8fe82ea98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b02de9-0005-47c1-88e6-631649e4e0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de151c3-b097-4df2-821a-55f09ce281b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0ef3b2-2a02-4c1b-8654-b852efdc7c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd049e1d-8ee0-4c6a-908f-68e72ec77bf9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca7980e-6a71-4f2d-9922-e6940aceb795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37af3618-06d6-4faa-9a1e-1adb125d0c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e531b579-e474-48b7-a79b-350b9d6a178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90790448-0262-4e92-8cf0-69729084a264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35233dac-aa4c-4912-91af-5c278d43c61b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12beac9-5080-45d5-89f9-d930aaa7b4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7005415d-acd5-431b-9cf5-38ba9f94e7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8552f152-0e9b-4dd6-9700-d4a364f22aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95b6bc16-50e5-4315-ac97-753a07494408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cb3983-4e59-4a3d-a08d-15826b49f9e6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "148a0413-c94a-4451-ba98-15b7804b2b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd433e0-6ae3-481b-ac28-335c94f76b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7367c22b-fc9b-4567-addf-90b66d27b38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce1d0ee-d18b-40c7-80f5-1c14c4aaa8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00581134-967d-4438-8305-27d2dae77ff9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9bd935-bf95-42b5-b518-fea1720f71e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd23070-bfa0-4609-94af-c04f6b6f897d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af32a28f-c0d1-441e-8482-b9e295cb3721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f6bca8-d6be-4bbd-90e5-9cdf4a5fe3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0488937e-081f-49ab-a961-380c754c75a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b19734-4fd5-4cb8-8ef6-cb4c9173a6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e0126d-87dd-4774-aa1e-ac40413067a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e33963-1237-4e0b-aacb-ada9f4c79d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5376550-95b7-45bf-b09d-2c9c21b5db01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e30d7a7-f3e4-4a67-877d-3bd17952a1d8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa00180d-6c4a-4898-8a1f-f93a7c630189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b6e07c-0f2f-40ee-8bec-af4a647d4c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96dc5f6-1464-43b7-a6e8-c70416b85ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00cc9221-769a-4cbc-a803-45dc8c4004db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48195fd2-8149-41f2-897c-1daa28b7322f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e231eae7-50df-4e98-b120-08022fd83e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dee833-dd18-4a18-ac8d-58647a9bf014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686636a-fcd3-4d20-9e4b-7e10c7c5a9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5142e45e-8023-4b58-888e-615e32e3bdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69d5029-4800-483b-8574-cc00ca3ec04d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf650403-8057-4da8-9226-697629dab24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb97335-4e57-458f-ac09-37aa588a23ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008d4811-f48d-4ce9-8d61-b6a30094773a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c4c0b9-cd71-4fdb-bd70-08cb7d4a40e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c62f1c0-77ee-427b-8039-7fcd25798694",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a5f56b-df9b-492a-a867-91f56e580b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1464ae45-3031-47f4-8382-29f8944f48b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3e82fb-e40b-46b1-9b57-06ae441f40ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffe4007-e0d7-451e-bf47-d72a30343ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cafffb8-b168-4006-a82b-a21519005c7d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c7145b-4754-44c4-bf7c-9c5faf3934d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0b9129-1369-4c39-8d2d-6ad413008027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5205d54d-b33a-4231-8443-8cd1a270222e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbdb0f9-c40d-4a58-a56f-0da510f41ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f9ddb4-8343-49a2-97ec-8dcf03767676",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4058c6-77ec-4c6d-9e98-02d2de7a6499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a7ddd0-210b-4dc1-9b59-09c3c37035a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcee0e81-8672-4396-b887-ed9a117d5724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "813fc023-5ca1-4304-8a3b-8e09cd0cf302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4624040-0edf-46e0-a95f-60349a41dbfb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af8bdad-31c4-4fd9-b60c-925c4b50bcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6bcd95-b770-48df-8323-083bd885c417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa322af-187f-4b53-9ac1-2307b8adef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05ecae5-c0c3-4fc5-b113-924369e14d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a070bfc-f6e0-485f-bc2d-366ef78941fb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1d27cd-4791-4be8-ad9c-9e376bb46b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48389cd-a1e3-4719-9e46-a10e15cf71eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fd9a00-0f0b-46b6-8c74-151e66658769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "947debea-bf09-4720-bb8b-e6e0e347e545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac51324-3a52-46be-a88d-c015b21bf4e0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72f7d4-47e8-43b3-a527-3ea9aec3822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f17b030-cc59-4056-9d55-9e6504f6cca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d7eb32-8193-4563-97a1-d1be48c7150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0268848c-f0d0-4b6a-9955-d12909a71422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9671500e-dd44-4a3b-bd78-1f939f5ecc85",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b849044-f776-4860-b43d-14b5efc60535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b88d1b-8714-4c8c-a817-c2678158ddd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451ed63e-3d98-47e0-be2f-b6f43e962785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67deac7f-debc-4c06-9c5a-09e5b0fe65cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3506280-2a7a-46d1-a922-1a5a1a0122cb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd8e3f7-7b8c-4a2e-9c36-769cbe903b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950c0862-bc1f-4747-98bb-5fc63dfe25d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7209b8b6-cfe5-451a-b21e-45accbf9ad3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c462b16-6e23-4554-9745-4542f293372e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c500b17-b1be-4df0-9b26-6ff8a262f899",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7861df9-ad0a-4990-a951-082528f8fdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c09790-d02b-4f6f-955b-78d36cc572a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d06d63-f931-4288-b988-e431cbedbcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e267650-deab-4304-a6a9-7287a8a1b654"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1100834c-b870-4c93-bcc9-c85a69beecc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "900e8a30-6b23-47b9-8972-656f30ebd8cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52622fd6-1c05-495b-9282-aa8a75122ca1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "05b79c35-04ad-4490-a640-3d6aedf94585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c41198-a853-4fd3-9f75-35a5f19a881e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "334ba289-e2fc-4703-91dd-864b7296f457"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15c40ad1-0ae3-4ce5-a6cc-814f6a1b8f37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68464c74-3191-42bb-831c-9512e781c45f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b2fafa2-39f2-4bbb-ba90-7fcba007f8c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3077e9f4-d77d-4552-89c8-d602d624430b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0963699b-f86c-47c1-b98b-8e129be066c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2ece81dc-aa85-4402-bbeb-0084ccbedbaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b11741b-4ba0-447f-8f91-cdf13047302b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91d2d5e6-bb90-4eeb-8d21-dc429cc20249"
            }
          }
        ]
      },
      {
        "id": "4688cbfa-bb48-4dcd-9fba-69d3739990e2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f1a685b7-411d-4ccd-84dc-7f2bdcbff4c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03296581-d7f3-4e8d-967f-37ae705ed746",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c091dee-c98d-40e5-a879-7e7d9ef414b3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44dcf0d-f82a-49e4-80fb-a232b3eed3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4cd489-1945-4fb5-8101-b7c3b0ccbd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d76ae3-d950-40ea-89cb-ce3c8caa67a3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d35f5b-dfa1-43d2-aea4-55bf56ea1451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3505e5b7-112d-49ae-8099-b43be73e8cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c1784e-1510-48dd-8d83-09dc70e0d165",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220459e4-b77a-4468-9033-cd14b503fbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04137edf-6f7f-4632-a81f-6b0a95dc62de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc89be5f-4824-4a07-8769-8b5b7f882d34",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f846d8d5-41f9-4614-a8af-4f63718c9f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b36491-0526-448c-a8fc-0e5957da7702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62a9149-dc19-4c73-9c8b-ea9f817ba7d4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c94eca-796a-4c3f-b524-201a65591c0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d4c9d6-64d9-42c0-8157-58a71d0da06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3914c649-2cba-42ad-b410-831d15c67601",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a235c277-4af7-402d-91a2-b884cf7f564c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45407e3-69f8-4c4b-af21-6d8bf91e936c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26860477-9c63-4ee5-92e0-5936e875fd42",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36002a2-5584-4f0a-8668-1773c8387639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f1ada1-8b9f-4b6a-a44a-7beb82864680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19603c7-ae19-4546-b7d4-f5b5f573368d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f74d489-608c-4c04-8e2e-772664ecb218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c303924-e198-4a1b-b196-4a9b180a068f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccf7a77-d3d4-4318-938e-be6085a25c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78d4c6e4-60a2-4242-8f2a-c5ffbf845524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a1e090-c230-471c-a552-90bc71ca9a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e108fd30-1f33-4f97-9952-30958605b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b0cabd-2a40-4729-9acf-039b62636333",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e7541a-1a77-4f47-94b4-8a53fe1b0fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1183281-92fc-4925-bf3c-8d545895cf3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d331bf7-b719-4d27-981d-3f909333bd42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddbf039-a539-4a8d-96d8-1c7dc1d1391b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30a3657-a9f3-4cc3-b94e-9fa0445fdd65",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4150c12-37b0-4b35-afab-b693bcc68d84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fb8bfd9-39c7-4465-a063-e989566735b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ac152d-f345-45a1-80d3-0e75c24c9c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33665efa-eed8-4e2e-a08d-49a8b176869a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585ce52a-178c-4747-b2ee-b0c762005e8a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7efec8d-0995-454e-8ad4-819b84d395f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68bf051-3cce-4472-9847-e7b9dc4c5c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaac6c5-673c-412e-955b-8b3ef2dfb38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353f3e30-9570-4aff-b8b5-a904468d5acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc27af7-ff33-4f96-9644-0003518ce3c7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2e7dec-1020-4a24-8e69-56709c14d86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad18276-ccab-4e50-884a-bf99ac006241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6092525e-db61-4d98-8fc0-bc4217427540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44dc2df5-4dde-47c8-b156-947c48389043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c91424c-f646-4d88-9247-3bc87081ea2e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a80146-9203-4803-9f8f-f56049da45af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd16b83-a770-4f7c-83a7-b8760e40a8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3211d43c-930c-4bd4-a615-082b2735ab3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946861f7-feb0-4957-a9be-6ef696335e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcffa11-1027-4126-8181-c47278447376",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c09b0cd-76ff-4bcb-bd6f-c555fd0e627a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfbf0b06-5461-4d28-a301-ad20c14bc5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da44627e-9066-4172-b211-84cfc9954971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50f4b62-b3ba-49db-8545-55fba71d0ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68450215-357c-4f7a-9728-9f510091d92c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e73cf7a-eb51-4ec1-abd2-7fd557f68857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f617bb-f872-439b-b780-ddd62def8676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfde53f2-910b-4dfc-9832-58504462da58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f248d5d-172a-4c34-a7ee-37e029e8f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad4e2d1-95e3-4956-9564-2d27b4488bf1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6b89b3-32e7-4edd-b035-3dd497eac5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a8125d-2a06-4520-aa93-26de7c4402a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ae95c3-4198-497d-b0bc-5429be10640e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6d44e9-7127-47c0-bc92-7772974a6176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00eeb827-1195-40a4-91d1-a452028957e7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac5ad3d-58e7-491e-aa7d-ec77f64bdf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f67a1d2-19fa-4e06-b3d1-89d7b675d398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597b9bf8-bbe9-4721-be63-b4ec006ef2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be6a3a9-f96f-4e46-b5f1-6bd848c2dcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de41872-4c4b-4aee-bf2e-a2222a3d3e2c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7d40de-8916-4f7c-be56-fc267bb167e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e372e69-e026-4592-87c6-ad99d6e83db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f165c2f4-7578-48e3-86d9-1bcad0ca46b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7ee5a6-0aa5-47ca-9bab-7a7572ef4ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29a564e-a079-42be-ada2-f2df0d518238",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94074245-5dba-4deb-9c4e-e5569c939e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4deca3-4b7d-4c2d-b6e0-10512bcc7c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81d6efd-600d-47b6-9490-846c8b2b88e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e777914-c638-4a51-988d-769b0fd86ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f5f96f-0a5a-4736-9073-9db5464d07aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c95e79-dc5f-4913-93e2-2d4c01713a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c23dfd8-3d86-449d-b911-e2f37803124a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b8d57a-0454-4182-911e-1887200021ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dc6253-5aa2-4a05-a165-a0f76cec7296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc85d9d3-9865-42a4-9c05-cb979a648d07",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865c13b4-5eb1-486f-beb3-5de1f896d559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35803a4-ec39-49bf-bf54-135471ed48d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baac203b-61dd-4294-bd03-0df95c8ed21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8476d1ee-c64e-4bab-af49-7f85b9636534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140942ba-72e0-43a0-8e56-01de0d9ec225",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cc7a37-0cb1-49cc-9230-d3f4fa5bd693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54428ad5-a579-41e6-bfc9-98470a25883c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d86cb39-893b-489b-9edf-381cdb9e8e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25549b2-3afc-44dc-b110-333ea0a1cefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accb0b55-7233-4dba-8828-2c2f19fc25cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30bd88f-3ae1-4964-b28e-7ecb1e765cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e6c8f8-9f00-4f70-8614-c204619fc1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eda4888-2593-425b-aa7e-ff2f024df19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd21154-0cc0-4cf8-a00b-d8db37912586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4102b24a-eb27-4774-8c9b-af301f08ce72",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaae9af-74a8-43e3-91d0-eac5187ef033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86857a87-a6bf-4b3a-8824-5837757648fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d7be5c-cab6-4a90-8654-4cc3f4a2962f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52965d92-edec-4718-9382-9c6be1d0b437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e928cd5f-2429-4ff9-9d48-49802d7b8471",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadbca20-00fb-4973-a14a-13437cb33b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed830027-cbef-46f9-96b4-4938dbceba7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e41a508-006d-4116-888c-9862d2385eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ffec40-360f-4321-8dbd-cb15c463e625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55a3e45-792f-45d7-951b-ecbefbfededa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a15076a-07bc-412d-98e5-194dc9fa84b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd57c5f9-e145-40bf-99cb-b018b734feb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756f523f-3f30-4522-a087-460d9141f43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd85791d-aac3-4770-8795-7a41b12d23d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd33af42-4726-4786-a876-e6a967c7c785",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05b1cac-e87c-4acb-9d60-b956fbb0af9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bed7d28-ec32-4caf-9903-87d4ad4cc5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742fa9d3-4853-4546-9bcf-2761f2c69e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8c9b40-0507-424b-8044-a34e35733784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84330e87-649f-4581-9b68-fc0ad73f2654",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768241f4-eea5-4088-a29f-9bafa0cee1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e272c3f-882a-4061-9901-84b9c94056cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b967452f-311a-4a92-a4e0-71ed896e8f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcd2e6f-ab62-4d4a-b96e-bb1f872629a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cb864a-0c4b-4459-b401-97ee453f77c3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40251bbc-1e4c-48ad-89cd-be5ff3b8bde2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9d653f-3af4-4f30-b4cf-dd026a5ddc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f36ce1-75e1-4c54-ba00-2e826eba12d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81aa5d6-9f86-4285-820d-919d653ea636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8040c2-6424-4fc9-8d01-87075dbe2156",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b775d092-9627-49b5-ba14-062a6a107ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c868c051-a16d-46f2-8ede-aae8ed927eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb3c498-744c-43e2-a586-1e79353246b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203bf1af-254f-43f2-91d8-eea07aead393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4536530-06c3-4695-a524-0e02973a41c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c61f6d7-19b6-4f55-81eb-bedda7ba8ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42ae75a-fb83-495e-bdd3-a7831b078183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c38553d-9f1c-4df6-8eac-0af516514839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9dbb8c-5bee-447a-a072-7209f703d5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0596a38-6249-4091-af19-aac03fb41eb4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fe70e-b7e1-4356-9fb9-1ae8967fd43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e85cf94f-841c-4cf4-8592-a42ca74ad5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336c8017-06c2-4e12-9641-f491d523cae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0491a6-93ee-4003-9624-faaed976e74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ce8417-dcf0-4bd7-a443-799ca2a7ff42",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d23cae-151e-430c-8562-3440159251ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f33a6486-f7d8-48db-b5fa-8e6ccea43fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002147f1-bdee-45ae-8373-67d2213da669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3b3622-7626-4adf-9a70-2071e2085367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5685fe07-4f95-4b8e-9c5c-accdb2ec3da5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d566707d-edc4-4ac8-b7b7-30a7b0126589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d16b120-6750-4ea9-83d1-b673fcd1689d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c2a627-184d-44b2-a1c6-6a7c12f2cc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dbf7d0b-eb42-403f-865e-f152e3010e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69083f0-760b-4220-9e2d-3ae12eb8bfa1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8acbb1d-dc3a-4b15-be71-ef68472ce36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827428a5-229b-4771-bcda-3c5d8ca03a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e220a3b-ccb0-4219-90b1-686ffa955f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e889ca75-a9b7-4674-9af3-a22bd6175cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702c2a28-e6d0-4c1c-b589-3fe7da6f19f3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84b7399-c935-48b2-99f4-c7e5e08dd618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69204e74-5c1b-4c8f-8fb1-5ad7772701ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73783d74-5477-42a8-940e-ea193d5e8c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd562fd-d1c9-4c69-bab2-9b9e06565b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa644da-6ab3-4de1-bf33-6f66aa6e0ad5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0961b55-3f5f-44e4-86f9-afc825a4e04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471d3226-28c2-4b4d-a4e6-7ca20b954b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae98e409-8d27-4373-92b5-a77e1410a7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a4bdd7-e9a4-4222-83a2-5150b36afdb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dbac29-45c6-47f9-bbd2-6f0657a27405",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d7c765-160a-4660-9294-e064629c2d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005d3532-3b61-4d83-b32f-89bb31376967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4f6c13-9904-4365-88d4-9e2286671df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef8672b-39c8-404a-a0bf-74a87973511c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb5d475-8a98-4ebf-82c8-40db06e9002f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88de5ff-c75f-46f8-af20-6762ee2c126f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7064c372-9b9a-4f6c-8d62-8efc31ff6dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae489936-a3a4-450b-ae9c-4081062f7e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9494da3c-b25a-41b8-a491-87cdcc027b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955c0cf2-46ad-451b-b32a-e9f957c42329",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86199550-b84e-4cea-bb29-eb813d0b8bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba55e7f-6762-499f-b31f-11c25e160f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3105e11-6efe-4e07-9592-9433c1f59006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f17fbe-8188-427d-a1d7-097b87d09ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae54515-1136-4ecd-b8b9-0c7ca4d13b33",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff40fc98-a00a-430c-af92-1c3b33707278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0525812e-1d64-4e28-9fd0-79d37e5d3742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54c613a-d486-4f75-a932-4340c2900753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498f3cc1-054b-46f5-b368-9b728d279261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839dd7eb-c987-4864-838d-db435377e7fc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f45bdfd-b9d8-4f36-ac43-05e818c163e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd580bf4-65b9-48b4-95b3-3dd5f29f2479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5899d5-11f9-4b83-8cba-f34659b61e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79bb15bf-fc1b-45fb-bc60-7cdc8d3158eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bad6b3-6edb-4fef-a8d2-9759d121a461",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fe13ad-8e05-491e-9563-7132b7db36f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95957943-7d87-42cb-b3dd-02b81b93144e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0fd1a6-0b52-4025-9b06-85d7e4212b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5043415-13e3-47bc-bad5-cc5a5810d513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbdca58-65eb-43aa-ab29-8badc6a0992c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e35206-cf55-4afd-8037-c1131ad5a647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dccc0b-acd3-4d5b-aa23-1ec2a183c4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ebf051-c616-49f6-b083-0fd1e79a5499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e8f951-335f-4e96-b9e0-88d0fa44d66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9ad6e2-d0cc-4418-bf9f-a7c0ffbfd745",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d08060-ff0d-41fb-ab8b-64993f886848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58056f6c-45de-4929-bab2-557e3f74ea74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f9669a-d5b8-4e09-b0e2-a19be22c833d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9581a565-3366-40b3-b311-e7b61fc6cd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5f7389-bf3a-4061-a9b0-b518a32f382d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090f622a-4f6a-4a8d-b9c8-6d05d2dcee44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf17c0ca-4723-42a4-87ea-467c4ead2ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bb08ed-26ee-4dc0-96fe-f574b4f31c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ddb7ea-d2a4-469a-a9bd-132cc8d0b5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6728477-87b2-474f-9cd2-b8b2dd930384",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3b3c9c-3b9d-4174-941e-c9ccf722589a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785cd788-245b-4558-8699-fb9f2f0a8744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6c055f-39e9-4657-b458-840e94222e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24657e7b-cc64-4249-9c46-13b68c693238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52b7b79-e0a9-48d8-bb8f-d310aa1ba524",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d3ceea-333f-4e07-85df-265b2ee3e60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b8382c-1350-4352-9d74-86e5eb841e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb47a80-8052-46f9-8ff1-8bdffd26e533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50e9258-dd2b-4741-a246-b4db9d5acb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0769c791-ca01-493f-ac88-30b1671c6043",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc88c8e4-d898-4214-9139-a6270a092787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea402eb-d1ce-476f-bbf3-b5e001c84763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa86a97-83f2-4ed2-aa9c-b9dfe5a1a0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fe48b6-c30f-4aa5-a5fa-a20d07ad5a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f09073-68cd-4ae9-9018-f16e401794f2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc4f201-a6d4-4339-9bcc-58b8e07d2dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dbf452-89ac-45c8-bfa3-50dcb8c5a43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13e4822-e2c5-45a1-a9d3-28121a5ac345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30aea5da-4187-408a-be86-3f9fa0a393d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0307048d-3825-4439-b5d1-8ff8b4bcd990",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a4d61e-13b9-44aa-927c-7530a17965ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387931fb-147f-47f9-8eb1-595eacf8ca71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34475146-d2ab-486c-83a4-f67256f23b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4f1621-7b41-41b8-9dd5-100a0963828c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e9fc5c-ca6f-4b71-a64a-c44b4551aedc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545a2dba-e0ce-4294-96e6-86ab468c9851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d62e541-3012-4dc3-a841-099b52eaa118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe6ed1d-2288-4ff9-b4d2-e74ebd4e7c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd64783-9af1-4716-8b9d-6050ddbbfa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d75ba2-1112-420d-b9bf-f6bddcf2ca60",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29f6720-e69b-4e30-bbdd-a363376932c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615b06ff-b6d2-431c-b906-93a9777025ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5794e733-d03a-4495-b87a-600d579290c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8563baf7-6b86-4fdb-953d-349892e01db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dc4686-5089-4a4b-9a75-e76c77fba1fe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8891bc3e-e46b-412a-b078-e8395278c7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f735fdf8-cc77-4122-bffb-919f773a1343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62b8da5-c457-4008-8bea-d8124bb1a794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dccec95f-8803-449a-9f57-1bb3e2f588ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a801232-0f3d-4150-a9bb-15d9f0bc6014",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72e4f97-8904-4847-8225-66f9dca7234d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50de01e-56be-4889-8e05-0951e093f554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be0cc61-6def-478d-9302-13b962297a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfa45be-5198-497a-8c67-cee9c1363596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b71a378-4e6e-4569-9d3d-07682e14a228",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dedd79-b9c5-43d7-8f49-844e27bac1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9772928f-3b6b-4c2a-9256-497df0da29b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7dda6e-a734-40f5-8e1e-e512044c6dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ade1c8-6ce3-4f89-b37d-c96e586a5a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ae3a76-76a1-4f90-9499-c679357260f7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f416801-910d-4ed5-ba23-ea8f2d5f293b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b732239c-269d-44e3-9521-3727adbf54ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7007ffb6-dffa-44af-9412-fd9adc70f4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5f4a8f-8864-4e0d-a9a7-425a3941c594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ebf71c-8ff0-4eaa-be17-8d7acc7900a7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e352ac8-d51e-4496-a4cc-f17685d20171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2227649e-225b-46ff-8429-0da7bb157bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c5fb67-6c99-40c3-a53e-075db76e8603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5f2ba2-777e-4e9c-8dfe-086ec4577b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0644802c-c2ac-4547-866a-38710c7cef10",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb6f62-751b-417c-91fa-28b7c87665ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0209d856-4ab3-4359-8ca5-fcf59cbe2a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f252fa2-175f-47af-a5b0-5f1c97c5d51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c944df94-6894-4568-821d-3c803e34220d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5f9753-7401-4355-97e1-1347fe83cb7b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e228b0c2-e557-4a12-a19a-097b0f4ef688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07fee14-bd94-4f67-820a-6c31c047d313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4d06f6-019e-44a3-be93-e50bbcf8f1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cccba2-7ff3-4b31-ab07-0afb3ce97c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e6355d-d6c4-452b-b8af-f2f4716526a5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e63ab27-3e57-4d46-9356-52ce7082e786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4f0a42-e31f-4ff4-8cb4-b516e95031c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aeb6b1-af69-4469-9df4-4b0b090f75f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f61cd9a-af79-42ff-9a42-05c013061d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d239601c-a25a-49dc-b6ce-8b46d0420dd6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044fa231-3d90-4145-a8ec-1fc3cb21ca97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4380fe-1f8d-4412-8ff2-ab318faecdc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b67b2d-d34a-4ef6-b6b8-d53f92202fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a769ca25-6c77-4b54-8c8f-102b05013070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7deff709-5699-4359-8cab-4102f2be6d73",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d40fc32-d403-4f07-9c89-f27369f5889b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8d99eb-401d-48ee-af67-5deea8d0ce34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df99c881-c05d-412b-bd88-a46ecbc25f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f38f386-fdc8-4f7e-bb05-7dbf0b28358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76aabb1-2384-4a39-ae1f-c4db03dd4e1d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd77df28-a15d-415e-9ebd-0a808fe2c85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc66594c-d6e1-4237-a299-188838352b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c373f53-807c-4493-8195-0624972cc26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3c95a1-6675-42f2-94fa-122ab3419b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713871d9-7cbc-49af-9a3d-91c98eba16bb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac56cec-db09-4da3-86b5-2d8fc640ef86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449c8d13-1316-4f30-8c6a-f19b2d3958e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e95831a-cd5d-4546-a1fd-dedba94fa469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9b476c-3aca-4e18-8321-4536508ff69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1433478c-3984-4303-9679-35116f883ea4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea8d723-c695-43a5-b7ca-6ea9774a1479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "196cf433-aac7-49d8-b9d6-56236f254dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16003811-bf4d-4e4c-ab97-e8a0f8852d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dfd48c-4447-49ba-bffb-ff4071451b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd97522-23d0-41ec-99cd-2fd746d991ba",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd95763-9ed9-45d7-b672-7c3893497cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d51fa92b-b4c6-4118-95df-a3f588e87119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85c2b19-2007-42c0-b96e-f79a4d0076be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a86a76c-5d24-4e0a-a13e-4279b7c4e0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ad577a-9ee0-4ee0-b29e-ea35f1ffe277",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2083a276-3a8b-4837-9291-7ab79e61c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "091cb710-ae13-4d0a-9ee9-ca78ea983f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a72f9e-777d-40d4-bc3f-8f1e3c5644ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa21a30-8cc3-4347-8153-4b5c129627b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35154ce7-0a4f-4419-9dce-0c58463f8603",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8c25da-1640-4c2f-888b-18f7e129439b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb2b151-ac3e-47fb-bec2-80b57f4949b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87176394-0ea5-4632-860e-c2f289e34a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31bfdbd-0302-4e50-a681-03ef8580cea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2496cb0-7e2e-4e84-9981-aba84daddeaa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f622579-7df0-4e21-a663-8d9af06ba9ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5961e7-feaa-4a88-b200-e875cbdae0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7d310c-33cf-4041-b7ba-681d7b8f9798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056fd7b0-f22e-4a09-b01b-e8df33e62d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca2ceb8-edd8-4ae7-8768-f731e52d5523",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942a217e-cef8-4e74-929b-d90272513b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22377097-b0c5-447b-bca3-8d86cbb41fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2c21dd-2aff-4623-8bc4-8253dc94ec15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c061e0ee-8ae2-4b39-94ed-d1a2df225620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e3f321-4a6c-491b-afa5-7a6f90c2e471",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9801a2-cb5b-4e79-b15b-e286b7d39dfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c48b994-35bf-421d-a9d2-ed025e9a2c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "becd9f10-15b6-4191-a36a-73eaf5e168e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea92783-aaea-446e-bfa4-a0840085147f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaf13c2-6616-4c25-8252-8447d1e20c6c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0c7a90-a4e6-4e95-b8c1-9a3aefef991e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f741bdb-afb5-4b24-af78-cd9eae571d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d3bbde-33d7-40cb-8dd2-df1920fdf983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438b5e88-c84a-4b56-8740-61843f7a79f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0797f0-050f-4473-ac97-2d5dcddc840e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336d0268-13d2-4034-adca-81439fb6d8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c7ae51-13aa-40a5-8792-59703cf57849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f7b00b-1f14-4f56-bc80-4e8d0cad3f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212898fb-4e95-4acc-bbaf-4882f09da3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cba9f5-76d9-4b47-9f94-a00c9a6268d8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bb8f2a-7600-442d-8ece-9c55c0179a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039236ee-7bf8-4b9f-8788-db6bc969138a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff1aaab-0b0a-4975-8bfb-66f30d938fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb48bcd-5c0f-4caf-834e-b986187f68fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e4a192-5211-4e5a-8c3a-6a3dd456fcb0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d9192a-9e4a-4558-afcd-e5de567ecfe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "945eb50b-d7b1-4aaf-9ddc-407271b157c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38038986-156a-4081-bd33-b35e5dfec531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c19bde9-fe86-4aec-b0c9-f2086cb87d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9987277e-2b0e-4ff7-a758-470ca607e2cd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f0fb20-123b-4d8c-bff1-9819a5446d30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0073bfab-b237-4307-96b7-82f092c6e2d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67b681c-7a79-4228-9f18-cdd513679e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91590f5-c8fe-4a59-b4c5-d5dd09eb13b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594b3109-d63b-4f39-9751-2341825a37c2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aa2989-d198-4262-9601-30e88c84667d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cdb7f3c-e00d-44a5-ab4b-d1075a226ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46488fef-cf14-4a13-9778-e4c31c0b52e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92726d5d-1c92-4517-8e09-4d7abe388a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c9588b-3409-49db-b546-264f61fc5bcc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e7ec8e-13b4-400f-bad8-4204cfa15c3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87bbe43-a85d-41d1-a920-cd25391d2cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeebf02-ef05-4bb0-b838-8a153f6e45c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80611a9c-a6df-4359-b98d-7a7ecb227174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e434b6c-51d9-48ae-bfa1-2ca4c3e2b2b2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8f0bef-3fd7-4d08-991e-1915397f0b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32872798-e145-4163-9938-5a66cbf781fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ad7881-f88f-4b26-bc6f-f2c243cff60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6789f1-993b-49dd-ba6a-8d9adf9886f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352f04c7-bc56-4e7c-ab65-ea060c086370",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1571b9c-2f95-46d4-a4c3-101a86483517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abef6f1-1522-4010-85f3-74e3ef112391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d42198-dd6c-4a1d-ba9c-68c91fb16435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f39e5a-e00c-4d01-b4f4-3dd7f1a65fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b2f1c2-7755-4485-940f-f3f292b0bac1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d571dd-b22d-42a2-86f1-3227171f55f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c593c5-cc25-4761-a7d4-7345862e228f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0989efd-ae5b-4047-bd3c-a2c18d33f5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37895c78-083f-4f70-92ad-90aae5347dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb894b9c-c5d2-4503-b81a-f90737f8ebb9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7587d9fa-dc3b-4704-88b8-6bb1998e02b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa436a68-f176-4175-945e-4a2d5580ca21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc24bd6-bbd2-49a3-977d-5ac07ed1224a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b79d969-e2c9-434b-9949-97ee81078aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb11730d-10b3-408b-9166-8c6dc64e6d31",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c9bb9e-30e0-4765-a4d5-9f4b424581c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d10c7e0-d7ee-4001-b170-c26a61d225ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae866356-4db2-42d4-a3f0-632ccbbee527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906fa4d8-39c0-4194-84b9-4b0e39a5f2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687e3d0e-3c90-4253-947b-dbb49e11ed4f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e01d55-0eff-4445-9eda-71ddd48791ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46c37529-9f40-4358-bcea-0630955de2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74289b88-ce10-43b4-8d6b-5c2925226a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0572ae1-9e66-40ea-92bd-5a975af4f7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23ff5cf-9073-4184-9731-a408a8380dce",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bfe784-19b8-41cb-942e-c9d6fa80e627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b92b47-0b95-470e-ae28-4aeebde02930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531dec75-386e-4046-ae6e-867d123451de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6066f0f-8682-41cd-b0c6-c6cc4377f763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fb6907-296b-4b7b-9b33-a7b99a02aed1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d9cc67-a591-44d1-98b4-da58c79c658a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a11084a-8aae-46cd-9b41-74ac94a77475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115472f9-cb08-45ab-8099-14f2a4c6b69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c445fe77-a932-40ba-b75e-5b71b6e53522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8721c4c7-e9e4-4806-a434-66966654bb75",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5264ca96-470e-4027-a8db-dd82a0f73414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d74771-f9d4-43b3-b63e-1e2a122294ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5c6f90-1131-4efa-b5e6-1bddf0f51542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01599bf-0101-43e0-87a1-e26cbb1c2412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c788d69-e40e-49f4-9986-3dcacd266bf9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b91a4ae-c1b8-47da-9e5f-2a116e3bd47e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd89d9de-d25a-45f9-924d-f54c0b13a089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be7fc7-6da3-46fc-9211-ee8ea8dcb3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139270ad-0a14-43c6-9e7a-0525fd290e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea8b60-18f6-497f-bbf0-7d8f6c0e8b97",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45221c95-8f4c-48bc-a449-9108c1331fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94fd518-98e2-482c-a3df-0e7116e38856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a45d84-4ef9-4731-a862-d7e6a75c3ed4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7845880b-e124-4753-9e49-04930584b570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691196c2-e0bc-4496-8ada-538827eb3f95",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019dba76-1b7b-4a5f-b982-816250afe2b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3ec8a3-ab94-47ae-8b92-523427abfc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f80afe5-27a8-4e55-8143-dffffdce55ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ab606d-254d-4b48-98fe-75c5d2d9480a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bc3fef-ea85-4a69-8723-3cd2848c39f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a43d1a0-524d-4728-943c-23061f3defa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323af7af-7678-4e57-ae81-1dc7831d6ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0bc181-55da-4536-9add-43645eded8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44162ab8-0bfd-43fd-8059-125088c0600f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e52ae4-b4c7-4bb0-b066-c0f77417959e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133f1503-a214-4635-ab65-9a20d4aee330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccbae7a8-d6f0-4a23-91e7-f2aa20688050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8540b161-569b-4104-a984-b4a71bfdd1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcca468-9f60-4b6c-8382-16063ca530a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea77eb-f132-4d4a-90c5-5fbdac1c5727",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444123a0-8c9f-4e7a-801d-6ad7660f2a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f3e906-c743-4e61-8e60-951c1ebcf45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef38f96-846e-4606-88c5-b66dbf069cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca3b7e5-d414-4c9a-b691-72a794e66798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e0fc7a-c269-471d-a1aa-7fdf086561aa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970ee4ba-b2a1-4884-89c1-16b69e9c53a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c819b31-fb28-44f1-be7a-f1b7354bc64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ffe9d6-29f2-4cc6-b3bc-419dbe4cf60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c220b4b1-af83-467c-b861-5006ed161c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65829d6-1628-4fd0-b7f7-8755bb161d08",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022c8152-f552-410a-94b7-214740dbf6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7675318-c748-41a8-9f6c-4220a74a0163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63389978-7c65-4c72-9699-ff1934add372",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd8b7b9-8422-4838-84cc-b9f6c485b623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b177b180-42af-40ab-91f0-6585cb35ae8b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b65f1bb-7ee8-4fd5-bb86-75ad914a161e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc8593d-9914-4f9f-9083-bd9096f7a266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3096d7c-3be0-45bc-ad20-ca5f1c8bcea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa53e400-44a9-4fa9-894d-34034ede7ff7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da561ce8-d36d-43b9-8ea2-295641c2cc60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b5d6af7-8c41-41aa-b452-044458c38deb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f91b52c-c254-4a23-8b4c-db6747f53949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f4802a0-b6f0-462a-be3b-05c2078b84cb"
                    }
                  }
                ]
              },
              {
                "id": "21395df8-4db3-4902-bbcb-672a7d3cdf75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "add323c8-4294-4399-a972-c61448bba73a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ca7468-5302-4819-aeef-da3c36f62541",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ee21e54d-8c92-448c-9566-06f9a0bfb3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e936e0-5162-4ac9-ad3b-a98f40579f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "162bab8d-b1d7-4d31-8835-8e1b476e399d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77d23c14-b636-4cd9-8ebc-61c6b83bbb83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0c0c8fb-7f10-46d9-a5cf-1d6125696b7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d85d4b2-ed3c-4078-847c-1e4d6a102163",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e81f2597-0889-492f-9305-a8371f24813b"
                    }
                  }
                ]
              },
              {
                "id": "06fce40c-5724-4863-b746-5289c1421576",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "220bc3f3-6a4b-4af3-890d-f42e3f5db52a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472e6693-912f-4683-bdbe-bb5a3f0637a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f5ca16c9-158d-4126-b67c-03f52cd319c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1818720-9a89-4305-8edf-2fd566a8be5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5170cbae-dd26-4bac-bc56-3d40cffcf5b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35aed8ad-cbe8-429f-841f-735ab50cd977",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d589700b-f03d-46ae-ae67-47adf2833bfc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f1e7f93-a94e-4c56-9ad9-cde14d10c83d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1f3752f-c710-4755-a90c-89d1836a0c95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68f95fdd-4f37-43a5-a24d-74ec3dbd5c05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b822ea36-892b-4f46-beb6-5c45fbf6ffff"
                    }
                  }
                ]
              },
              {
                "id": "6342aaa4-49bc-4db8-b4c2-ceb8be3e8846",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99689739-f2cd-4a51-b067-4ed5a361d5ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aa32f125-0a98-47c9-941a-a7b8e628b533"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286116ee-a60d-4298-aaba-0d72a2593e40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c2faa8b-10c0-4c1f-b9e1-34c4bc6f6eb3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "419380ec-1719-4bc9-96cf-9a801dc59092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5c7915f0-a768-4e6a-883d-6aec53b373c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db326275-3dfa-4bf3-81e9-db66a5ca3bb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b61aa08-ffa7-4d93-b3c1-2362573e6293"
            }
          }
        ]
      },
      {
        "id": "d5f8d56a-de6a-494b-b3ee-bbef6d8b8ae9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d71fed47-8c27-4b32-85e6-687981c38fbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d43ff38-c166-4f07-9e3d-79a8feafa06f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92bc583f-dc4a-485d-aa14-e4aa76cf8669",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96843ad3-9987-4975-abf3-d534db2a2034",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b408c583-c007-4297-a208-c50fef8dcd4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef27b7a3-12df-459d-8b02-4c81d52de987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daad89fa-6e0e-4535-8876-7dfe8e177ca8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd4c5db0-360c-4c71-a552-ce1411bebe96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d13b5080-40ec-4aa7-bc4a-1f15da689358"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7e8e048-595e-4076-98ca-1a76b835b936",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc1de56-5683-4934-a930-62d7e56221a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "558e843c-9b37-4b1e-8c59-881bb111a105",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6bd83fec-9fb3-4dc7-930b-24e107f66890"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39b7bf18-21ed-4c57-bafc-a69d6d024bc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dadecc5-8d12-4d28-85d4-fb12800398e9"
            }
          }
        ]
      },
      {
        "id": "e68be1c5-6404-470d-8bd3-be65fc36ae35",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "feac34f2-837e-45e2-97c9-7dce793ffb1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a54b357-e318-492f-aebd-fc764fb7f7e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17ca4bce-7193-44f0-975a-5b72942a4ad2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92cdea5-7783-464a-9000-25aa97f185c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7671be19-c4aa-4e01-a2d2-bfa157369c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8564bcc1-fdfd-42c5-84bb-36d276ba73de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c963f3a-04ee-4fa4-a15e-ca9dee09114b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cf23aaf-c11c-4a73-b9d0-7bc087b11a93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cb82ce4-1fad-487c-9045-418cc017156b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a31c949-093c-4926-b401-7d89cc016bba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb3f399f-448e-45bf-9cc8-825ef6c6fb92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d91f147e-346a-43d9-9fd3-aafb365b29e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "48fcb330-3345-49fc-8a5e-54b03c95f8cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f0e01bb-9011-4523-a727-9f103512c83d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c02ca31-b513-4483-9e8f-468f6e139f41"
            }
          }
        ]
      },
      {
        "id": "16606d53-76ac-411f-aef6-6b4581d8fa76",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a973e54c-d6ec-4634-8a29-bf3345eabb45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59897b98-8d56-4f1f-b914-048fe43cd2b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f73d5b1b-d3c0-47a8-b01e-87ace436e410",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dde2c26-0f4d-4a11-aebe-2e886461a39c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dc75f20-f5f4-495a-bb0e-b5870c503e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31d53fd-647b-4d7b-a49a-4e0f8021fdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "760bf6f7-33a7-4edd-9740-7b5e802fee76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7907ba1-e070-4936-9b93-950aad4aab31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22e0c83b-d114-4419-9ab5-9155f8a1ce7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cca91c7c-afbe-4468-a8bf-0dcfb6e0c35e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9acee7d-9660-4954-ba04-00d5aa4e3525"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56fe5ae2-3461-4d3f-b7a7-78de49798599",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "809c17d8-a0ac-421e-bfc0-31cf5f6a2d6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fd6f5a3-4859-42ea-93cc-675f2d3871d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c68c4f04-ebb2-4b92-a44a-b91575e52312"
            }
          }
        ]
      },
      {
        "id": "8959c965-c8ee-4324-abda-f84ee2b167b3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2f7cabe-2b2a-472b-adc8-98a77f1037b6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c13a48db-7d55-400f-8792-91babe43aef6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1d6e5301-8bbd-48ca-bc80-79b0aa158ccf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38d92a07-a8c8-4231-bb6f-ab1815d718e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "554c6b72-bc5e-4af7-a4e6-e5a61d8fd619",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 39
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 138.1865079365079,
      "responseMin": 22,
      "responseMax": 8182,
      "responseSd": 683.3398438543711,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728002718731,
      "completed": 1728002762237
    },
    "executions": [
      {
        "id": "f3eec383-f716-4d9d-a5e3-3d14093e587c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2ab1ed32-b7b9-484b-b3bc-48f994c7fe68",
          "httpRequestId": "a556233f-36e2-4853-8888-281f74c13f6d"
        },
        "item": {
          "id": "f3eec383-f716-4d9d-a5e3-3d14093e587c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b73eaeec-54b2-4029-81e8-f29d9f716dd5",
          "status": "OK",
          "code": 200,
          "responseTime": 4096,
          "responseSize": 0
        }
      },
      {
        "id": "469342be-007d-4923-a200-c5730db39d16",
        "cursor": {
          "ref": "7d0dc6f2-9668-478e-81f3-8591bf2d4293",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6439bc28-db63-440c-9601-3a2b7cfb699b"
        },
        "item": {
          "id": "469342be-007d-4923-a200-c5730db39d16",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f7092a28-f800-4dd4-8702-b7cdb931da23",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 0
        }
      },
      {
        "id": "e21e1991-6996-46a5-b347-9c365a456cc2",
        "cursor": {
          "ref": "4c342693-74d1-4004-9222-1ab5533ea0a7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "271d5132-8307-4b31-85d4-780c1d11cf79"
        },
        "item": {
          "id": "e21e1991-6996-46a5-b347-9c365a456cc2",
          "name": "did_json"
        },
        "response": {
          "id": "8307f715-80f6-41be-9a42-876071ff8692",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632f38d2-efc2-43a7-980a-96aa121b119f",
        "cursor": {
          "ref": "0d628e73-b3a6-4c68-a131-68aeeea5051b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be3e6f97-df55-410b-9b25-3f7346614200"
        },
        "item": {
          "id": "632f38d2-efc2-43a7-980a-96aa121b119f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c64bd35-d9aa-4804-a480-3fc72c9140d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632f38d2-efc2-43a7-980a-96aa121b119f",
        "cursor": {
          "ref": "0d628e73-b3a6-4c68-a131-68aeeea5051b",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be3e6f97-df55-410b-9b25-3f7346614200"
        },
        "item": {
          "id": "632f38d2-efc2-43a7-980a-96aa121b119f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c64bd35-d9aa-4804-a480-3fc72c9140d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bff5aaa-bf54-4331-b041-8aeafd8fa096",
        "cursor": {
          "ref": "9db3f7f2-bc51-4ed3-90fc-d76a333bbda6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "150906ad-1a19-4044-bffe-fa168b3053ca"
        },
        "item": {
          "id": "8bff5aaa-bf54-4331-b041-8aeafd8fa096",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "88850462-7c4a-46bc-961b-5ef443be9d55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c24e0e-5d4e-42f1-8c2e-e15998e5edd6",
        "cursor": {
          "ref": "a183074f-1345-47c5-bc6e-dcbddf2c78b3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4d3af3ea-bebf-414e-9b5a-0c9ae0051524"
        },
        "item": {
          "id": "e0c24e0e-5d4e-42f1-8c2e-e15998e5edd6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9d835f6b-d8c7-4cc9-884d-4625814b291f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 122,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ead41fb-b9f3-4eaf-a76b-0151e629f19b",
        "cursor": {
          "ref": "d1870665-b3d5-4fe6-8a66-150ae057e354",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b461fec2-525c-4816-a3ac-2a69082aaf08"
        },
        "item": {
          "id": "8ead41fb-b9f3-4eaf-a76b-0151e629f19b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ee451ac6-8059-42c8-b517-1fbe10e740dd",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 200",
              "stack": "AssertionError: expected response to have status code 401 but got 200\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "id": "d576c859-a508-454b-934f-0f6c7be81a7e",
        "cursor": {
          "ref": "9da865a3-c4c3-4d42-9148-17021d7fab43",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "18215cc8-424e-4e0b-9730-6c5476132657"
        },
        "item": {
          "id": "d576c859-a508-454b-934f-0f6c7be81a7e",
          "name": "identifiers"
        },
        "response": {
          "id": "731b5822-e8fa-4a81-8053-dd9a0b61af83",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17b6894-64c2-4148-94f0-70564d12fb0a",
        "cursor": {
          "ref": "1134e4f6-4170-4263-95f3-2097de9a6ace",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a72e7663-31a6-4cb0-a352-90620ee799eb"
        },
        "item": {
          "id": "a17b6894-64c2-4148-94f0-70564d12fb0a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cc5ec220-efa6-479e-9e99-caf2ec17de47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1908d49c-e40d-4d88-b00f-1b3994c37bf1",
        "cursor": {
          "ref": "8c0b1b42-300a-4aac-a1ba-f22ce36b53f0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b09bd0d9-65b2-46ce-bdbb-a3f98d4fb80f"
        },
        "item": {
          "id": "1908d49c-e40d-4d88-b00f-1b3994c37bf1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "98b0ae0d-63e1-424d-8a90-1c7ad5767126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512400a3-88d5-4dce-bba8-39e6df48e76a",
        "cursor": {
          "ref": "33fcbe92-6e16-4306-b138-47170956cf60",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f9c553c1-ee53-4b7b-bf65-8230df83afd2"
        },
        "item": {
          "id": "512400a3-88d5-4dce-bba8-39e6df48e76a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b54f8e9a-09dc-42b7-9743-4228d85a36ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478f38ba-ecef-4963-9867-267ea7b4f311",
        "cursor": {
          "ref": "ff194bb9-b08a-4178-8055-af3b3d49ff36",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eae15ba0-582c-43fd-9d09-06b093247584"
        },
        "item": {
          "id": "478f38ba-ecef-4963-9867-267ea7b4f311",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4201d745-f11e-4b01-9d7d-1b512d239850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3e25a8-868c-4b82-b3ed-26b9f395185a",
        "cursor": {
          "ref": "d8a8828f-8a8a-4bd8-9496-c802621ca9bb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f72a75a4-31bf-4288-b896-ef0a3bb70344"
        },
        "item": {
          "id": "9e3e25a8-868c-4b82-b3ed-26b9f395185a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bedce335-b889-48a5-a636-9a4c087a0072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0304cf-ed55-4798-adfb-f015f9732401",
        "cursor": {
          "ref": "69f4c220-e2b9-4865-a3e0-10c9b908c40d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "302f746c-e9f2-4660-8247-5c360ad1224e"
        },
        "item": {
          "id": "da0304cf-ed55-4798-adfb-f015f9732401",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5b166e1b-6f6a-45b5-a50a-aa4ed4ff13b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7e8623-f1dc-4f3a-a7ab-738ac9b48de8",
        "cursor": {
          "ref": "3b4a861d-7a4f-43cb-adbf-54650091cfe5",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "abe7a34c-8bae-45ff-b91c-e57114981dc5"
        },
        "item": {
          "id": "8b7e8623-f1dc-4f3a-a7ab-738ac9b48de8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2625b029-4840-411f-87fe-adfcb85a7068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec2ab86-0f1e-487b-82cf-7c846e151791",
        "cursor": {
          "ref": "d4f03da2-9291-4fab-8f41-3fedff881f1f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3061baa-6e8c-468b-8919-d5529abb444a"
        },
        "item": {
          "id": "8ec2ab86-0f1e-487b-82cf-7c846e151791",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1f7e1ddb-0da7-407d-bda6-ad17cc3fe169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05cbf4e-2f41-477e-8db5-c995e2f6df9d",
        "cursor": {
          "ref": "6bb6b4ac-0a37-483a-b50b-efd9a1a3b9ad",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4be22e11-66e0-41e7-99f6-1368a3ba8377"
        },
        "item": {
          "id": "a05cbf4e-2f41-477e-8db5-c995e2f6df9d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b835d12c-169f-4cc3-a736-f175f4da227a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d34508e-0079-4317-938c-d4ab5baf2c26",
        "cursor": {
          "ref": "781bc2d0-e6cd-447a-aea5-e6d7647a82b4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4b167f45-80c7-4133-a72c-e14ed57f50bf"
        },
        "item": {
          "id": "3d34508e-0079-4317-938c-d4ab5baf2c26",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "48e609b9-de68-4e91-88c3-bfef1773835d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02b4622-f011-4912-b49a-f1623896190a",
        "cursor": {
          "ref": "cbe6cc8e-d712-4cdf-b6c9-fec9e4b967a0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aaccf6c7-86f4-4b8e-93be-beb9ef0a7404"
        },
        "item": {
          "id": "c02b4622-f011-4912-b49a-f1623896190a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "790e94a8-10dc-44ba-8631-3c747c34a044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb80f655-38a3-48d9-aba5-9e5c98976d93",
        "cursor": {
          "ref": "453cac3f-a1c6-4b8d-894b-933cd38de854",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8205b5e3-38b2-4bbe-bae6-e9d0ae51a504"
        },
        "item": {
          "id": "eb80f655-38a3-48d9-aba5-9e5c98976d93",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5c5ddf3f-0748-44cf-bc0f-8cf98c9b4e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315d9439-3fb4-4bb2-b84c-98df3bb36323",
        "cursor": {
          "ref": "62788f99-ae5e-4e1b-8818-5e2259a5da90",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7b41aef2-4919-4ba5-b05f-3b2efe5be4a9"
        },
        "item": {
          "id": "315d9439-3fb4-4bb2-b84c-98df3bb36323",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ce4b3095-a1fe-459b-b7a1-60b40e3e550d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ee09ad-fe16-410f-b379-b13f6092b56f",
        "cursor": {
          "ref": "3ce8faab-c30c-4905-bc13-784384bda38f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "91264131-e606-4a41-8f37-fa9bcd42b35b"
        },
        "item": {
          "id": "e9ee09ad-fe16-410f-b379-b13f6092b56f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "810e48b2-8f16-4f4f-9cc3-e29f6c80be36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ade061e-c7bc-4966-9421-891a42660793",
        "cursor": {
          "ref": "b74420ce-fa2f-4a1f-b5fa-91fea506acf4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3cdcd2f2-5676-4b97-abff-aafaa7fdf47e"
        },
        "item": {
          "id": "2ade061e-c7bc-4966-9421-891a42660793",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5a27623f-0c50-4d8e-8af2-6c61416c8361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5992962-7261-4790-a59f-769f1e6134e7",
        "cursor": {
          "ref": "19d32944-6cfb-439a-9e2c-b3ccee92539c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e0d4e120-bd7e-4f4d-8384-539af6562fee"
        },
        "item": {
          "id": "a5992962-7261-4790-a59f-769f1e6134e7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3fd74c3b-4f4c-4a98-9b43-f82dc1edf436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c97c22a-89e0-4b02-9f7a-2040c2de2cb2",
        "cursor": {
          "ref": "3da49596-3240-4092-9f92-07b95e067407",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0a7f5074-89fb-46dd-8d8d-262ae6753a30"
        },
        "item": {
          "id": "3c97c22a-89e0-4b02-9f7a-2040c2de2cb2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f27a76e9-6707-4400-ad46-04280d658e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6206e5ef-4952-4b9e-9acb-aa3d4dec4f06",
        "cursor": {
          "ref": "3cebf9c9-6781-4e88-9274-fdb33b652aa0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "01b406e3-b72c-468b-98ed-e325bef504e8"
        },
        "item": {
          "id": "6206e5ef-4952-4b9e-9acb-aa3d4dec4f06",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6701ff9e-632b-4646-95bf-a1dd82e2ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5290bc-4c61-450e-b88f-4774faed9e0e",
        "cursor": {
          "ref": "ef035cdb-5007-41e2-a8ac-a715f562694b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bfdbf213-9d78-4585-9356-71f69f59d531"
        },
        "item": {
          "id": "5e5290bc-4c61-450e-b88f-4774faed9e0e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bd2d624f-adfd-4e7c-8d4d-98f1ae1fcdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bbbef8-fee3-449e-802a-b4cf7e7d5769",
        "cursor": {
          "ref": "04498749-5b8b-40ee-9e6f-901596621381",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3efa0698-4e13-47b9-b7a3-6c05a601fe41"
        },
        "item": {
          "id": "a9bbbef8-fee3-449e-802a-b4cf7e7d5769",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e6f01ec0-a073-4a73-af9c-964aba88534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b1df50-d6a1-44e0-9e5d-27041ae19962",
        "cursor": {
          "ref": "caabaa77-3f17-4584-b1a4-41543eb36d50",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3258e705-69c3-43e5-82ed-db8a61517180"
        },
        "item": {
          "id": "48b1df50-d6a1-44e0-9e5d-27041ae19962",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d7854fda-150b-45ed-baf7-0be210cdb22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d19fddf-ccd7-4c4d-9542-af665bffba1f",
        "cursor": {
          "ref": "7352be68-e2ea-4623-b31c-09dea251af86",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2a25d798-6941-46f9-8bd7-1d82f94b4d44"
        },
        "item": {
          "id": "1d19fddf-ccd7-4c4d-9542-af665bffba1f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ff73c058-aa07-4cc0-82a4-5b20ce860b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d792ed1c-3b16-45d7-84cc-8a561ed081ff",
        "cursor": {
          "ref": "946caeaa-3f49-499d-9485-16443f3a6685",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "52fc9e66-2093-450e-b8a0-ad4a56622586"
        },
        "item": {
          "id": "d792ed1c-3b16-45d7-84cc-8a561ed081ff",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "407218f7-f28b-4850-9ecc-8719ac21eb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c380d568-e0f8-44cd-acf8-d65d3da0e272",
        "cursor": {
          "ref": "96ff1f63-a9ba-45a0-97e6-fded40495bba",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f88dc9a8-dc14-484d-93ad-44c3afe2d79d"
        },
        "item": {
          "id": "c380d568-e0f8-44cd-acf8-d65d3da0e272",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "21fe1c13-ccb6-4f51-b995-57ad5bbd5814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce5165a-2e1a-4290-afef-a961f02b62ab",
        "cursor": {
          "ref": "2c4bcdf1-fe69-4a09-80d4-3c2547dfd6f9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e4a6beb0-f936-4bd2-999b-a42a66cafa61"
        },
        "item": {
          "id": "cce5165a-2e1a-4290-afef-a961f02b62ab",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "94870ae2-251e-4438-b849-902c1655cf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f9986d-cb41-466f-b53e-b98713787e21",
        "cursor": {
          "ref": "f032780e-4b70-41a8-a4d2-61cba36fdd52",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bfc3fdaf-213c-43d2-a1a5-f4573548b968"
        },
        "item": {
          "id": "84f9986d-cb41-466f-b53e-b98713787e21",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a2054209-2310-4027-9680-5d89475a96e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e4992c-38dd-4e28-ac23-d5d1bebafb4b",
        "cursor": {
          "ref": "2529cb23-50a0-479d-b2c9-52b91a1697ee",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5d187d6f-7567-48f6-8727-7bb3f2828539"
        },
        "item": {
          "id": "42e4992c-38dd-4e28-ac23-d5d1bebafb4b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9e006e71-11dd-471c-bf48-7d2a1b0fab40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1243525-c5d7-4f7d-a6f9-e1cf3f65e8a3",
        "cursor": {
          "ref": "03581292-c449-4251-938a-20bfb607f4fd",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06ba0d19-f74c-4b7c-88e7-815fa1c71e33"
        },
        "item": {
          "id": "c1243525-c5d7-4f7d-a6f9-e1cf3f65e8a3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9be7605-2848-49e4-bbbb-6d0695a0f30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e1ac84-24d4-442b-a38e-9197fdbaa1f2",
        "cursor": {
          "ref": "2e84d65f-be49-404a-a336-b12b119803fe",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "34b7bad6-3085-4965-aeb0-5d0dbed8ef43"
        },
        "item": {
          "id": "11e1ac84-24d4-442b-a38e-9197fdbaa1f2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dbf22420-1351-469a-84c7-49339f657b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586184f4-6737-43f0-b947-d578677a0219",
        "cursor": {
          "ref": "0fc1fd9d-f1de-41ba-9cda-be769a1710dd",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "21646ac9-040f-418b-8f78-3cb2bce5bf79"
        },
        "item": {
          "id": "586184f4-6737-43f0-b947-d578677a0219",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "86b688cc-fa81-4b90-8ea7-86645b1e6d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ee03ca-19e4-4f06-800e-5f1f0cda8920",
        "cursor": {
          "ref": "4fa9301a-65e7-4ccb-81c8-174c90aacb92",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c0a46740-3b69-48ea-85dc-676deb72dced"
        },
        "item": {
          "id": "b8ee03ca-19e4-4f06-800e-5f1f0cda8920",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d97233d3-7f23-474f-a940-f166ac9c9e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98eeeb-3c11-4789-bd5f-63a3949307bf",
        "cursor": {
          "ref": "fba731b3-e5ea-4768-9fdb-d1f0f5dfa4f0",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "215fe96f-6853-4e3a-9faa-f0a163acf304"
        },
        "item": {
          "id": "7e98eeeb-3c11-4789-bd5f-63a3949307bf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ec62fcb7-e218-4f82-949d-704a6258c528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03b5fcd-421d-4247-adf5-a913df030311",
        "cursor": {
          "ref": "9977687d-930b-4921-b629-59eedcc7513f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f3b31a3f-8a9e-4bec-8b2e-e70a9e4c32f1"
        },
        "item": {
          "id": "b03b5fcd-421d-4247-adf5-a913df030311",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7b51eaf7-a39c-4a9c-baf0-0b742d8b6ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d6470a-d2ad-44b1-af40-601ad87bdf71",
        "cursor": {
          "ref": "98bfa8a8-e83c-429a-90cd-0e6002e5f307",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "364b5c0c-f0d0-4918-b0ed-d357af8961d1"
        },
        "item": {
          "id": "99d6470a-d2ad-44b1-af40-601ad87bdf71",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f4e9c98e-6648-49c3-8582-a6daac3b2258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc51cc7-a1b1-4651-aae0-8b866b2e8a9a",
        "cursor": {
          "ref": "a426c8ca-7fab-4aa4-bf24-d38aed782acf",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d5a26a62-721d-4e1f-bde1-aedf81aea46f"
        },
        "item": {
          "id": "3dc51cc7-a1b1-4651-aae0-8b866b2e8a9a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "af206cca-bdfa-4857-b2bb-5398f9b92c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab1857f-b66c-4a69-af04-68c2f2da24bd",
        "cursor": {
          "ref": "03dc2811-12be-44ee-972b-7954ba2c2cfe",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f7967257-d584-4876-9037-0240f2724298"
        },
        "item": {
          "id": "8ab1857f-b66c-4a69-af04-68c2f2da24bd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "01977e7c-9c63-42ec-b141-9af85e984bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e1302c-15b0-4889-9570-cb0180c9edaa",
        "cursor": {
          "ref": "107ef844-57ee-453e-8ed8-e99d8fc7242c",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "492d5196-d488-499c-b7c4-76ce885d8561"
        },
        "item": {
          "id": "c2e1302c-15b0-4889-9570-cb0180c9edaa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2bacd9bb-900d-4aa4-9f76-868a198fb4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86ea291-1c09-44e2-98e1-6a40f7ef9f8c",
        "cursor": {
          "ref": "66d20f2b-02c1-45c9-8ed9-a6683f784cb6",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bd9cc455-e45d-422f-bf72-5e90898233fd"
        },
        "item": {
          "id": "e86ea291-1c09-44e2-98e1-6a40f7ef9f8c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2894ddd5-e8cb-473e-b959-4b713b99b18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13fe2d4b-d08b-482e-be09-de090b36900e",
        "cursor": {
          "ref": "73498379-d1e0-4531-842f-5838c1263df8",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e5f0d7d4-44f6-452b-96c5-6515ddeb872f"
        },
        "item": {
          "id": "13fe2d4b-d08b-482e-be09-de090b36900e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "73ff345d-7bba-40c2-a2e8-ae3f27d7ae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e87e50-4294-4bb5-b997-9a513021e49c",
        "cursor": {
          "ref": "536628aa-b8b1-4340-b05d-d2494bd2f507",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "666436be-a7c5-45ea-8419-0fded2a1bfdd"
        },
        "item": {
          "id": "c9e87e50-4294-4bb5-b997-9a513021e49c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "98fbccbe-5c7f-48cb-8590-d52f77e629a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438750b6-b450-4b2c-83ae-4cc8a465ad42",
        "cursor": {
          "ref": "6789fd3e-9675-4dcf-9e2b-df10379f5b68",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f1eab2ba-bd40-441b-98bf-5e0e9dcaff76"
        },
        "item": {
          "id": "438750b6-b450-4b2c-83ae-4cc8a465ad42",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7ef7b2f4-2bc3-4362-ad98-77ada09f15d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fced3a9-02c0-4d95-96db-b234ac274898",
        "cursor": {
          "ref": "3e890c1f-7099-4554-be02-fa5c75c060a1",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6513ba71-cf9f-43ca-ac17-5fe4df7ad514"
        },
        "item": {
          "id": "2fced3a9-02c0-4d95-96db-b234ac274898",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "79b46fae-d65d-4022-936e-59335c0dbaa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f430a91-d361-4841-b356-026c99b88fed",
        "cursor": {
          "ref": "a98c04df-08ed-4d56-b028-fcd5f4301838",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "15f97ca1-0453-4d63-9d29-7ed5d5dcec38"
        },
        "item": {
          "id": "6f430a91-d361-4841-b356-026c99b88fed",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "236aa65c-c817-4d4d-9701-92cea598621d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdb4daa-5411-4222-83ea-1807ad7ecd15",
        "cursor": {
          "ref": "ae26f171-a95d-4895-8137-ed370e1d1f42",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7b2e8ba3-2791-4712-a1d8-6b7e5e80d2fd"
        },
        "item": {
          "id": "8fdb4daa-5411-4222-83ea-1807ad7ecd15",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1bf99de8-6cf7-414d-8732-5dda30fdbaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6576cbb-6645-499f-b0c9-8666f8a13e98",
        "cursor": {
          "ref": "4bf18763-bc82-4a6c-adb3-5a4d266d2955",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "04876209-2c5d-4b36-9a8d-87dd4fa0c14f"
        },
        "item": {
          "id": "d6576cbb-6645-499f-b0c9-8666f8a13e98",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fbc52b75-9ec6-416c-aac7-2abe7942ab30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a007e7f-a9fa-4f72-8f3b-a1890a77fba5",
        "cursor": {
          "ref": "f1c297aa-ecf8-4c21-9958-60f60bb746d3",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "10a10489-5b8f-4abc-9a6f-6ef2dc6cf679"
        },
        "item": {
          "id": "6a007e7f-a9fa-4f72-8f3b-a1890a77fba5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "98be91cb-4991-422b-b9d7-cce42c4e6fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6865fa-e0a9-4ccc-801c-c0a519dee070",
        "cursor": {
          "ref": "afdd40e6-61a7-4845-8763-55eec0eba870",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e4f7bead-49b2-4730-b192-a0151a69df12"
        },
        "item": {
          "id": "dd6865fa-e0a9-4ccc-801c-c0a519dee070",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7729d9e3-c4a6-4c6f-987c-ccfd95186ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce412c3-9c87-4878-bbeb-0fd0ef02582d",
        "cursor": {
          "ref": "58daee22-de24-4f15-8b50-379c59f994ad",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "141bbbc5-2faa-4c90-9d00-126a7f544c1e"
        },
        "item": {
          "id": "cce412c3-9c87-4878-bbeb-0fd0ef02582d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a8692f8f-6c80-4862-8524-15ed43e57509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b692d48-46ae-415f-b37c-1fc0efad6cdb",
        "cursor": {
          "ref": "eb000a57-4908-464f-86fc-ee3e9e47ce6f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3fd98e20-66f1-4f64-945c-c96763ce9950"
        },
        "item": {
          "id": "4b692d48-46ae-415f-b37c-1fc0efad6cdb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "58508952-c6e4-49d3-bd54-1d079f636d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929aca9c-a040-46d2-acd9-ebc56b2382ff",
        "cursor": {
          "ref": "7d5a2e1b-98ef-4b17-a98e-04b3d03d51f0",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "da603bb5-8543-4e3a-b04d-eef8912129cc"
        },
        "item": {
          "id": "929aca9c-a040-46d2-acd9-ebc56b2382ff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e47073e3-5acc-4d04-9088-bb9346264bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd2fad7-eb69-4ea8-bf0c-06d1b5af3c3b",
        "cursor": {
          "ref": "7ddd095f-faf4-43de-9377-dd1b1622db15",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8abd0e28-fc7a-47d0-bc13-f740f090545a"
        },
        "item": {
          "id": "ecd2fad7-eb69-4ea8-bf0c-06d1b5af3c3b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d6e9c8ea-27ec-4fc0-b5ef-3d7e8ccc4679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3881818-56da-420e-94dd-ab05d6fa81ad",
        "cursor": {
          "ref": "9c3d1f9e-9cbb-4b05-8f89-ddc714e36a5f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5cb57eec-898f-474b-9fdb-93df1394ae18"
        },
        "item": {
          "id": "c3881818-56da-420e-94dd-ab05d6fa81ad",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1b39bd4c-47a6-4126-96ad-2a25b724c702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae5e5fe-45a7-4bc7-b57c-ba26df0d2910",
        "cursor": {
          "ref": "624493ae-5f8c-4bf7-834b-f54ef1489746",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f438ddaa-dccc-404b-927d-0dfa543194d6"
        },
        "item": {
          "id": "9ae5e5fe-45a7-4bc7-b57c-ba26df0d2910",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8490bfc3-8403-4549-a75d-5b00323375ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0192ec-d09e-404e-bb71-74fe85ca2572",
        "cursor": {
          "ref": "ea80a6ab-59a9-4434-9ecd-2c370f51c8c7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fac9b4a0-04d6-43a9-abab-c2bf3b6043a0"
        },
        "item": {
          "id": "5b0192ec-d09e-404e-bb71-74fe85ca2572",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b7f36065-4a5f-4d6a-93af-9c325c6945f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e0f40b-73ab-4a20-a8dc-114b75bb4572",
        "cursor": {
          "ref": "0c66cd5f-da33-40ce-9fad-33f4843ebfd4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f8b4be0d-efc8-48da-987a-597e80235e25"
        },
        "item": {
          "id": "f4e0f40b-73ab-4a20-a8dc-114b75bb4572",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6808afd9-17fa-415b-bbac-bd0e3aedc7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a69e39-a7f2-4eb4-86fb-ddcdb5829084",
        "cursor": {
          "ref": "82f85fd7-f35c-4646-af67-646977873cde",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f6966a86-7086-495e-a69c-1746228c4073"
        },
        "item": {
          "id": "29a69e39-a7f2-4eb4-86fb-ddcdb5829084",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c08b21d-91a9-4a92-805b-61f7203431df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aee31b-c023-4f3b-b3f7-2ded4ca41252",
        "cursor": {
          "ref": "75b4cb99-d9a8-49f3-bbdb-9786164dbc70",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c685de16-59ee-42f7-81c6-b87899f332dd"
        },
        "item": {
          "id": "28aee31b-c023-4f3b-b3f7-2ded4ca41252",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "48e256cf-cf58-48a5-80af-dfe8d03e3a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33af9b28-ba0b-4acf-a7af-6fc6d431c61c",
        "cursor": {
          "ref": "e3e4b853-500f-4da3-9860-b8464de039b2",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7edfdb29-bea5-4cca-97e2-79a11cd41c43"
        },
        "item": {
          "id": "33af9b28-ba0b-4acf-a7af-6fc6d431c61c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "45c25cc1-0821-406b-bd9a-a17625368d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7560d293-0a10-47a8-9c6f-b29daead41b4",
        "cursor": {
          "ref": "b02fe5f8-4c03-431b-bc4d-f493d33ee2da",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e5e8efcb-981c-42e8-be3e-177bd3ca4a46"
        },
        "item": {
          "id": "7560d293-0a10-47a8-9c6f-b29daead41b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b2233a6e-874d-4565-9f22-aeaae78ddc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1257bd-8c93-483d-bf71-b95b89c3eb06",
        "cursor": {
          "ref": "49bf6add-3a44-4512-bd15-53714100cbee",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4e73923c-ad52-4d9b-bd08-0b920b4e9b0d"
        },
        "item": {
          "id": "ae1257bd-8c93-483d-bf71-b95b89c3eb06",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "63e9166e-84cd-4644-be9f-9e8dc2cef781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97b3eb5-2d40-4db5-9687-cf07e64f4f9a",
        "cursor": {
          "ref": "2f8ea751-5b93-4d8d-bb43-8b6ace1cedfc",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "380cddbb-feb7-478b-ac3e-c67284c675ad"
        },
        "item": {
          "id": "a97b3eb5-2d40-4db5-9687-cf07e64f4f9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "66c57091-8b10-428d-ab5a-4b08eba32036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf3d6af-24fc-4a8d-8320-fc8707bdb754",
        "cursor": {
          "ref": "d1a6fdd1-ecd0-44da-a884-6f2535a446d4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d250d925-450f-48f0-a048-ca935079ddb4"
        },
        "item": {
          "id": "baf3d6af-24fc-4a8d-8320-fc8707bdb754",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d476755c-8290-4f6a-bb6b-19b81a1d7358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf517dd-e7b3-4d90-ac5a-db2b3a49b657",
        "cursor": {
          "ref": "16c03327-1473-44d9-a119-8883ef39f332",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f0cb0eb-0c1c-46cd-ade1-c9510c2ff3df"
        },
        "item": {
          "id": "fcf517dd-e7b3-4d90-ac5a-db2b3a49b657",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "69fffceb-2880-4dfb-98ed-31704a67a8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5e9be3-c007-4b22-bc0e-c980a964f926",
        "cursor": {
          "ref": "29f74b79-dc7f-44b1-b37b-c432941ab992",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "44bf5213-6872-444b-af0a-636671de1ea9"
        },
        "item": {
          "id": "6a5e9be3-c007-4b22-bc0e-c980a964f926",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1c70beea-835d-4062-bb0b-7377dc0a8711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c416e6-1253-4f00-9d62-577059edaf07",
        "cursor": {
          "ref": "0df65adc-a770-4b5a-b69a-d28d1174d6aa",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5522bd07-0413-4f10-86aa-483dfb71709a"
        },
        "item": {
          "id": "a4c416e6-1253-4f00-9d62-577059edaf07",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0a92591d-e8aa-40c4-a9cc-f85e7f98215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7e04eb-408f-4da2-a42f-e58d7cd7224e",
        "cursor": {
          "ref": "dd53c906-7abe-4dad-8af0-9a57b30eaf4e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "55e55541-cb0e-4630-8aa0-87382f860a31"
        },
        "item": {
          "id": "6b7e04eb-408f-4da2-a42f-e58d7cd7224e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1a096a13-27dc-40b4-9747-9d8cd84079e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb4b14c-5786-4366-ba08-75ae2c64218b",
        "cursor": {
          "ref": "b02a2c06-1546-4012-b7b4-86b0a5aee416",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a98f5ba7-29d3-407c-b621-a2cd10b29bba"
        },
        "item": {
          "id": "3fb4b14c-5786-4366-ba08-75ae2c64218b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8b293f01-6bfa-42de-a7a3-e253fdb14d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8caaa179-1b8c-40e3-ace9-0eb1f1f1947d",
        "cursor": {
          "ref": "7876c645-7bfc-4257-a12d-5e735b2754a9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "66bac39a-ea4d-4ec2-9b37-bca2aafccbed"
        },
        "item": {
          "id": "8caaa179-1b8c-40e3-ace9-0eb1f1f1947d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ccf513b5-5503-4f82-b0f2-135c39c11c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf2258a-3b77-4c6e-9e43-1b998f3e1f95",
        "cursor": {
          "ref": "80ee2585-5e04-45f0-b02b-5c60a6066214",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a5b45922-3ccb-42cd-b357-f795ccf10ae8"
        },
        "item": {
          "id": "3bf2258a-3b77-4c6e-9e43-1b998f3e1f95",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3c923136-75da-45cc-ba16-71d0d796fcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ee0c3b-dec9-48c0-9cf3-cab4a0b4cf97",
        "cursor": {
          "ref": "39a8d6ca-2555-486e-b4c2-e44931b46799",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "80ebf8f9-e118-4cf5-96f5-c43fbdc3487e"
        },
        "item": {
          "id": "a5ee0c3b-dec9-48c0-9cf3-cab4a0b4cf97",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "47b472f5-67e1-457c-a13a-7144affd69a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cc6114-99e6-420c-aa4a-76eb449d61a8",
        "cursor": {
          "ref": "95b00386-f81e-4680-b25a-3981eed8fa72",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3d4e67de-6728-452e-b820-3bcba7d54698"
        },
        "item": {
          "id": "14cc6114-99e6-420c-aa4a-76eb449d61a8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4692e267-3ebf-4c1e-aff1-3460269d275f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2fd0cd-b193-44ce-a402-f1c2ebf72df6",
        "cursor": {
          "ref": "6ac78cd3-5f17-4dd1-a018-a131c14484db",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4bc5ed7a-86e0-405e-87b9-68e3c7d1e944"
        },
        "item": {
          "id": "5f2fd0cd-b193-44ce-a402-f1c2ebf72df6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a80d3278-2b5f-4963-89ba-3988d26924ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855eaad0-59e7-4529-ac73-a520ef765a62",
        "cursor": {
          "ref": "377ae344-c26f-4086-bbd3-0fe898b08967",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "25a9a909-17ec-4624-a4cb-25032885d8df"
        },
        "item": {
          "id": "855eaad0-59e7-4529-ac73-a520ef765a62",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e2a25a8e-d20d-4c4b-8823-eb4f405d37e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83caa03-3f6a-4cd7-a27c-363eaf5841fc",
        "cursor": {
          "ref": "653772b3-4e13-4ad4-911c-69afa18b61e5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d3a91d3c-b936-42fe-a928-b2b75958e45c"
        },
        "item": {
          "id": "c83caa03-3f6a-4cd7-a27c-363eaf5841fc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1df32046-9c1e-44c7-b68c-132dd167f345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b7b7ef-9673-4b90-9893-a46fde14462e",
        "cursor": {
          "ref": "3b73ba85-743d-4e53-9bf1-8501230363df",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "51a4029f-ad6b-4b82-96c8-bdc354283c43"
        },
        "item": {
          "id": "26b7b7ef-9673-4b90-9893-a46fde14462e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "75e5d5cf-d541-4379-876f-e500bcd1e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c1e6f5-aa97-4687-95d4-8a192fc8d7b1",
        "cursor": {
          "ref": "e69ab20d-3ad6-4297-a48c-c408a20178fc",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3532d7fe-76db-41a4-a408-87b674646eec"
        },
        "item": {
          "id": "c1c1e6f5-aa97-4687-95d4-8a192fc8d7b1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7435606f-bc0b-483f-bcf3-082efe2d1260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b98991-1626-4161-b0a3-d67adfed6c7a",
        "cursor": {
          "ref": "67a1cd9b-3a35-4ea7-9d1e-027a057ac254",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "494b8dc6-0a6b-4a11-af7a-a0f804187a65"
        },
        "item": {
          "id": "d5b98991-1626-4161-b0a3-d67adfed6c7a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "68ae7a66-2471-4a64-8a61-b581fcd8f5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5abe19-2782-4b60-99d9-abdf8cc00bc8",
        "cursor": {
          "ref": "1751c82c-abdd-46df-9e77-6283bb095b6f",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e2cb4207-8fe1-4abf-b6ac-92b62168e9de"
        },
        "item": {
          "id": "7b5abe19-2782-4b60-99d9-abdf8cc00bc8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9188d415-772c-4b94-8458-2814578d1ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fa3e12-cd66-403b-b521-3d8c10a91de7",
        "cursor": {
          "ref": "421ee1a0-cc54-474d-aff5-3826e54c28a1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "927d291d-a17c-48de-8801-1dbd10da3cdf"
        },
        "item": {
          "id": "23fa3e12-cd66-403b-b521-3d8c10a91de7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b02696eb-02c2-41e8-8b51-a0c5b926c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9239f1a3-0fd4-48a0-b4de-afa932509e0d",
        "cursor": {
          "ref": "238b6da3-b15f-4fea-a3ae-a22ae786a375",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bbfdfda7-a1b0-46be-a89e-90497f0d0e7c"
        },
        "item": {
          "id": "9239f1a3-0fd4-48a0-b4de-afa932509e0d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7a8edf49-890e-4e87-bbb6-499075f12078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827c0652-0640-4b73-9c2a-2dcb8da9ce1e",
        "cursor": {
          "ref": "f4770f56-a824-4dc2-a368-f983e628390b",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "add17f21-14f3-4bda-8ab3-5d00a6da4cb0"
        },
        "item": {
          "id": "827c0652-0640-4b73-9c2a-2dcb8da9ce1e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "56883481-d5a3-4b97-af62-9d615ea9c850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a83d421-aab7-4b55-8a74-a893d1f0cce4",
        "cursor": {
          "ref": "3d8850d1-0fc5-41f2-ae68-1d32f8e97546",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "83967e71-b3f6-49e0-893a-0ec1b734f160"
        },
        "item": {
          "id": "1a83d421-aab7-4b55-8a74-a893d1f0cce4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6f2b6d41-80ba-47aa-9ba5-5e641663597f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8479cc8-7ac4-4d86-b1d1-8617ef2ee1fc",
        "cursor": {
          "ref": "62dbbc62-1d83-493b-a28c-263977c27285",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "392ea4c0-c81a-42c8-a80b-f575311a3e04"
        },
        "item": {
          "id": "d8479cc8-7ac4-4d86-b1d1-8617ef2ee1fc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4268e8bc-6fb3-463c-8608-87c394ad4865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1b2f9f-d245-405e-91e5-9ced64288c5c",
        "cursor": {
          "ref": "6ebc4255-a95d-47cc-b816-3edd459264a5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "13b81481-f464-42d1-89e2-92d31f6735ef"
        },
        "item": {
          "id": "0e1b2f9f-d245-405e-91e5-9ced64288c5c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2b3da96f-bc5b-4e21-a261-7ea3c30d8bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467e73f5-8159-445f-ad12-beb2cc2f63bf",
        "cursor": {
          "ref": "43e5c49c-7f04-43cd-a314-3d275e859b1f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dce61622-52a4-4a62-889c-6eddc33b8cbe"
        },
        "item": {
          "id": "467e73f5-8159-445f-ad12-beb2cc2f63bf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "612c8059-baa1-4f5d-9634-428b88a372ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126c772c-ac57-4952-a9f2-940076ba5615",
        "cursor": {
          "ref": "7f0a251f-7a8d-4617-934f-b4eb1ecd73bf",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5cc3a6f8-354b-4747-b960-8a1dbcad930c"
        },
        "item": {
          "id": "126c772c-ac57-4952-a9f2-940076ba5615",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b40b0da7-342a-49d1-842c-1449efe26c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a63517-4b00-4f8c-9d81-8e8f5865d3b9",
        "cursor": {
          "ref": "d728c592-1e66-427e-aa8d-ac67759d7808",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f3eacc78-ef1a-4e5a-9250-72db4649afb9"
        },
        "item": {
          "id": "18a63517-4b00-4f8c-9d81-8e8f5865d3b9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7fa40669-ab8e-4dd2-be85-ce1499f9d68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566a72d4-b01e-441e-a223-4bedbf3f133e",
        "cursor": {
          "ref": "7d883498-3a86-417e-a0b8-f0ee9f4b1732",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1525bc3-20ca-4d36-871e-c82cb6bc95ae"
        },
        "item": {
          "id": "566a72d4-b01e-441e-a223-4bedbf3f133e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ca9bfb8f-5842-42b7-9e4c-059876510205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af08f278-a08f-4991-a0b2-d562052bd351",
        "cursor": {
          "ref": "d5d13c8c-1e03-4912-963f-9decf7ec7efb",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5d99376c-a331-4a17-9294-6af81ebc6466"
        },
        "item": {
          "id": "af08f278-a08f-4991-a0b2-d562052bd351",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6783b825-bc02-4b95-b0b0-ebbb7e34ed97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbca70a-7e1c-42cc-98d6-d28ed5af8d05",
        "cursor": {
          "ref": "25da4969-d4d1-455a-bc52-3116cd67d80b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "144e5d06-ed31-4fbb-8d3f-f6fa4abc290f"
        },
        "item": {
          "id": "edbca70a-7e1c-42cc-98d6-d28ed5af8d05",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "33451620-d106-4c2c-bbc3-3ff44a76b0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9662a6c-612d-4251-a27c-2fdc71aff8d8",
        "cursor": {
          "ref": "78a65441-cbb2-40bb-b622-5a0bd4fa6518",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "76314b12-4d0e-4e01-875e-507156d64c4d"
        },
        "item": {
          "id": "c9662a6c-612d-4251-a27c-2fdc71aff8d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e4075b3c-cee2-4d5e-9104-bd4d5d1ec4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3293df3-a0ab-4485-863d-75db0f445edb",
        "cursor": {
          "ref": "ceb84b23-4b39-4333-889b-c450c098a170",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a038ce6-a677-4111-88c1-fc6e5d124386"
        },
        "item": {
          "id": "f3293df3-a0ab-4485-863d-75db0f445edb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "722bd2bf-5925-4293-b03e-e088ad4d315d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014bd925-69a3-4541-8f09-a12927f0c3d5",
        "cursor": {
          "ref": "4a38f2d3-40b3-4a5a-9978-d93ba36fa08b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1501fed8-e134-47a3-9168-ac2587f5f46f"
        },
        "item": {
          "id": "014bd925-69a3-4541-8f09-a12927f0c3d5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e25b0f75-88c3-4c8b-a9fe-dcb934e36f89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914d6614-2805-47c7-b16f-0f17e97e17de",
        "cursor": {
          "ref": "38cd6ba1-e302-44ad-b3b2-95a1b06759b2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "906afa2c-eba2-4e94-b7d8-a5a6caa99124"
        },
        "item": {
          "id": "914d6614-2805-47c7-b16f-0f17e97e17de",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "304ce429-6869-4c1a-b56e-74744b09cda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ad072189-87f8-4224-bea8-bd484fd598de",
        "cursor": {
          "ref": "97121943-fa6f-4e0c-a860-0343095688cf",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "746ec737-6863-431e-8704-2c3f1b0cf30c"
        },
        "item": {
          "id": "ad072189-87f8-4224-bea8-bd484fd598de",
          "name": "credentials_issue"
        },
        "response": {
          "id": "005e348e-4f27-4d55-a705-838380af0d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d724b2a0-ee00-45d8-b998-0dce49cf7c97",
        "cursor": {
          "ref": "b983fe8e-6d1f-488c-8792-c613c02b0d60",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "00f83b31-855e-499a-8a0a-1421415b563c"
        },
        "item": {
          "id": "d724b2a0-ee00-45d8-b998-0dce49cf7c97",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6d2deeb6-c6de-4a18-b21a-b958d642424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ae2f5847-1a4a-4206-b533-abcfb0574e4d",
        "cursor": {
          "ref": "3df80fc7-3408-442c-a787-2409d55270fc",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ccd68daf-f488-497d-afc2-4da2df3f55a5"
        },
        "item": {
          "id": "ae2f5847-1a4a-4206-b533-abcfb0574e4d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d28fbe71-5c9a-4b65-a739-a50112046e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ff68898d-9f90-4bb9-a762-f481588e670d",
        "cursor": {
          "ref": "d4dae946-b053-49e2-acdc-181a54f8cba8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "69c77e5b-6992-4678-b755-70b9118b6de4"
        },
        "item": {
          "id": "ff68898d-9f90-4bb9-a762-f481588e670d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "75977d8d-565c-4e28-97c2-1ed006c3e9f9",
          "status": "Created",
          "code": 201,
          "responseTime": 8182,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed06dbdb-5873-4b26-907a-b4a22bd2bafe",
        "cursor": {
          "ref": "b24d9859-15fe-4e19-b6ae-fbd5b6ca4215",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1e453e80-463e-4cfc-8066-a79b39108ab1"
        },
        "item": {
          "id": "ed06dbdb-5873-4b26-907a-b4a22bd2bafe",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "050ccc09-1f44-4772-841e-5f0a5aec13e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d761b421-6877-41e5-a898-45b7fe8efdd6",
        "cursor": {
          "ref": "110fa13c-4fde-4411-b5e5-7b993c113290",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1948c817-5e40-4d2b-827b-14ddaf862fd6"
        },
        "item": {
          "id": "d761b421-6877-41e5-a898-45b7fe8efdd6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "44b5583c-5bfb-4546-bc7d-491d6d07814b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0499e752-de04-492e-8a1d-f925c8e5c565",
        "cursor": {
          "ref": "387d5bbc-1d36-48de-ac24-903e9991d216",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "16729c8e-1883-4a4b-af4c-5045854f3d6f"
        },
        "item": {
          "id": "0499e752-de04-492e-8a1d-f925c8e5c565",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3201e4c-2839-4bf8-a05b-79a8d3c968af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56823934-b6bd-41b8-bb57-95a3102d461b",
        "cursor": {
          "ref": "0a527ad4-cef5-4dc8-9661-691269d71c04",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "63fd13e0-1f0a-464a-93f4-313e50e05717"
        },
        "item": {
          "id": "56823934-b6bd-41b8-bb57-95a3102d461b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7d512d6a-b4f3-425d-9c6b-137fa5a1b8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28672ad-f927-4992-8b06-9ca594f0fef3",
        "cursor": {
          "ref": "bc796f32-15a8-4d91-b180-3b29ced042a1",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9d1236d8-ee58-4b74-b23d-34d17fb49055"
        },
        "item": {
          "id": "b28672ad-f927-4992-8b06-9ca594f0fef3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e520b95b-3cad-4f21-9c69-c0e98ead43ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69949134-f873-47d2-b433-59866692f2a5",
        "cursor": {
          "ref": "8b6ccf24-8ad4-4719-89f4-0fb1a42b4c0e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f2f5edd8-040c-4bf0-a287-c2b45c320cea"
        },
        "item": {
          "id": "69949134-f873-47d2-b433-59866692f2a5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e806c377-0c90-4015-b97a-e8a6ef24f522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a1b241-7254-446f-b097-b1b13cc0769f",
        "cursor": {
          "ref": "a9dc2531-809a-484c-8e00-f0322fcff76b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8a3d0892-a800-4f90-abf9-b42ae83ec54a"
        },
        "item": {
          "id": "b6a1b241-7254-446f-b097-b1b13cc0769f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "28adfa45-ed67-4827-9583-8b76c4e1f57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f77906e-6ea5-4e60-8640-50b2f0b9cca3",
        "cursor": {
          "ref": "3898ce98-8a44-40cb-a3f2-7a9832e83be1",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f1019dd2-aa45-456e-85a3-1ad62a02bcd0"
        },
        "item": {
          "id": "9f77906e-6ea5-4e60-8640-50b2f0b9cca3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8506ef75-622e-4edd-a5a4-48c62d164383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355addde-d1bd-4a4e-9db2-0b6c0d83943a",
        "cursor": {
          "ref": "5d79b03a-f948-4926-b26c-e7cc3f9e6dcb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "979688ee-459b-4694-b32d-02983e35dea1"
        },
        "item": {
          "id": "355addde-d1bd-4a4e-9db2-0b6c0d83943a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb0927c3-b72a-421c-a860-ddb1afeaf912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f00d7fa-46da-4f5c-9470-5d24215737a3",
        "cursor": {
          "ref": "e4917356-57e4-45d7-a461-5277aaa14691",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0eaff3e9-df7e-414f-9930-0d79321ca0aa"
        },
        "item": {
          "id": "3f00d7fa-46da-4f5c-9470-5d24215737a3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c2fe8ce5-fa57-4062-adf3-42bf2a1ddeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971abea2-c183-4915-9f5a-7c5165137afc",
        "cursor": {
          "ref": "87297d7e-5455-4cc9-b4e0-322a6a7da4f8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b6487f6e-8193-492f-baaa-32ef00a9fcf2"
        },
        "item": {
          "id": "971abea2-c183-4915-9f5a-7c5165137afc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "33b27f1f-45b7-41ba-8889-869d1f179445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f9761f-7c27-4dc7-a654-3cfc5579dd48",
        "cursor": {
          "ref": "ff1b3e80-9a6f-4358-bbda-eaec6b35f1ee",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d76e17b4-3a04-433a-87ae-6df6b6a3d652"
        },
        "item": {
          "id": "b8f9761f-7c27-4dc7-a654-3cfc5579dd48",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "32a7ac5b-eee8-473a-97fb-48a00cc3e36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ff42d7-1dee-4bcd-a499-8c33baa8aba9",
        "cursor": {
          "ref": "221267c7-2466-49dd-9570-e25964a133a3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "353668d7-36ed-4c49-87f8-9f5cdd7d2fef"
        },
        "item": {
          "id": "80ff42d7-1dee-4bcd-a499-8c33baa8aba9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c808baf4-26ed-46d6-8abd-7f05d0bcde85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ac3f37-9e2a-401b-a3bb-514525172c44",
        "cursor": {
          "ref": "fe795860-5729-420b-bac1-2cabd85bd788",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c605b259-4fcc-4844-8ce2-d57ce41deff5"
        },
        "item": {
          "id": "b5ac3f37-9e2a-401b-a3bb-514525172c44",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a57e9606-fdb0-4d81-bb3a-d8ef6e4a2610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2905cf-20df-436f-8c94-b3f2adcb8f72",
        "cursor": {
          "ref": "9a00fc90-dc30-4bd6-9ac7-57183a52f5c4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0c91713b-87a3-48c5-8cc1-1af70332191f"
        },
        "item": {
          "id": "5f2905cf-20df-436f-8c94-b3f2adcb8f72",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4582becc-33dd-4161-9d4e-8fbec8b1c599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2beddf27-8a10-466a-95be-23b3ee54bc9b",
        "cursor": {
          "ref": "fc0946e6-15ba-48d9-8f3e-7d5f124642ed",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cc0bb57d-a69a-4b8f-9067-29c54982710f"
        },
        "item": {
          "id": "2beddf27-8a10-466a-95be-23b3ee54bc9b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5f8d1f70-97c8-4d39-87ff-094e234b38b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc141978-82c1-49ca-a49a-44313a5d6446",
        "cursor": {
          "ref": "e2de2ae4-3b40-4aab-8aba-4ec14a0d5356",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5466747f-b4e2-4169-82da-750f24598730"
        },
        "item": {
          "id": "cc141978-82c1-49ca-a49a-44313a5d6446",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2fc60277-35a6-41d6-9db0-9b7bb0a4bc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46688386-0092-49cd-83ce-65fc8b1e4ec9",
        "cursor": {
          "ref": "ff99e784-231c-443e-a81f-06462a7f5b0d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1e6af96d-7601-430b-8ba5-fe13cc66d3af"
        },
        "item": {
          "id": "46688386-0092-49cd-83ce-65fc8b1e4ec9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd82f757-1e93-402d-bdb2-b1a518dae164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69a3f39-fff6-4ea3-ab18-dafb23a37206",
        "cursor": {
          "ref": "3b02adbf-656b-41d6-b536-8522763b0e6d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7bd92ff2-10fb-49fb-8fde-f7de14fc0e63"
        },
        "item": {
          "id": "e69a3f39-fff6-4ea3-ab18-dafb23a37206",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "86b09d3a-4c78-49d3-b76f-bdeebca376e0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ffef46d9-0c35-4d66-bdb5-60e965e0b746",
        "cursor": {
          "ref": "1bd99528-4c3b-46c4-ba4c-472d48b104c1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "16118bfd-81b0-4e7b-95ee-f0e6209e6f25"
        },
        "item": {
          "id": "ffef46d9-0c35-4d66-bdb5-60e965e0b746",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f7d8d0c4-5d0a-4296-9fd8-fafb9c8cc669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c085cbc7-bc52-4235-99ba-f8060420ceb1",
        "cursor": {
          "ref": "b1687466-5a8b-48de-a442-95925f098b0f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e8ec20be-fef8-4728-b4cf-af5899bafd53"
        },
        "item": {
          "id": "c085cbc7-bc52-4235-99ba-f8060420ceb1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5dad9245-f36f-47fc-b890-fdd55e00d8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac372733-8c5d-49f7-9726-57d2742b4cd8",
        "cursor": {
          "ref": "f039d71d-9149-41d2-b2fc-57d906de0969",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "54f8648a-20f5-441f-9e0e-c9c52c6478bf"
        },
        "item": {
          "id": "ac372733-8c5d-49f7-9726-57d2742b4cd8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c92f13e5-0c6b-47b5-b4ff-0e5cffdf83b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd049e1d-8ee0-4c6a-908f-68e72ec77bf9",
        "cursor": {
          "ref": "79ca735a-ec24-4805-aa5a-5b81d434dfe4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9ae4697f-eb79-436b-a2f6-c5f0e26a0dc2"
        },
        "item": {
          "id": "bd049e1d-8ee0-4c6a-908f-68e72ec77bf9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58f3d736-66df-42f9-919b-5a1005b0cc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35233dac-aa4c-4912-91af-5c278d43c61b",
        "cursor": {
          "ref": "f43696d9-950c-4689-98f0-99aa71594fde",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "26dcceaf-b853-42e8-ac7d-d0fee2be4d21"
        },
        "item": {
          "id": "35233dac-aa4c-4912-91af-5c278d43c61b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "85535fa2-8d2d-4c6a-9a0b-9281960e3735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cb3983-4e59-4a3d-a08d-15826b49f9e6",
        "cursor": {
          "ref": "c0ee1952-0f4a-4715-bbe9-ef44b39a20f2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0039aef4-d487-44ac-bb64-6ccc2d30e94b"
        },
        "item": {
          "id": "49cb3983-4e59-4a3d-a08d-15826b49f9e6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "58adb5bd-8acc-4b11-882e-fe6ab434dede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00581134-967d-4438-8305-27d2dae77ff9",
        "cursor": {
          "ref": "f55ed8bf-2d97-4661-9d26-748877c5afae",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "11311819-487c-4673-a3e2-d85fcfca1fb0"
        },
        "item": {
          "id": "00581134-967d-4438-8305-27d2dae77ff9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66fa0743-63ac-45a0-85fa-634aaeff023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0488937e-081f-49ab-a961-380c754c75a0",
        "cursor": {
          "ref": "0bd259fc-adb8-46a0-90a2-e0436fdc35a5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2e7c3240-ca07-4c17-8b5f-7c2dc0edab70"
        },
        "item": {
          "id": "0488937e-081f-49ab-a961-380c754c75a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b9fbf014-31d1-4c6d-800d-fccad5b5c1b8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4e30d7a7-f3e4-4a67-877d-3bd17952a1d8",
        "cursor": {
          "ref": "9ecb07c4-45d1-4bd8-8f82-76dad0b77658",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "97a39e1d-50f0-44dd-89ab-247bff841631"
        },
        "item": {
          "id": "4e30d7a7-f3e4-4a67-877d-3bd17952a1d8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "35be32c1-4cbd-434f-af1f-69471a9f5151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48195fd2-8149-41f2-897c-1daa28b7322f",
        "cursor": {
          "ref": "1ada4498-377b-492b-b871-a2cc2dcf126f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0d2cdf78-0f24-47a1-bda4-3ce424414611"
        },
        "item": {
          "id": "48195fd2-8149-41f2-897c-1daa28b7322f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f97b51f5-0e32-4f32-b9e3-b76a2cec086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69d5029-4800-483b-8574-cc00ca3ec04d",
        "cursor": {
          "ref": "71bd817c-18e8-436d-9820-3640de5e782c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2e53cf12-e3a7-46c1-b84e-937ae0465894"
        },
        "item": {
          "id": "f69d5029-4800-483b-8574-cc00ca3ec04d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a2e4504-8b67-4b5c-9122-a1287365f373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c62f1c0-77ee-427b-8039-7fcd25798694",
        "cursor": {
          "ref": "3334067d-5cfe-4dc5-8aa1-879d56650c4c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "20aadd70-06c0-4202-a0f8-695112e63be7"
        },
        "item": {
          "id": "0c62f1c0-77ee-427b-8039-7fcd25798694",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16fbf0b7-c6c8-49db-8725-9acfbffa4a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cafffb8-b168-4006-a82b-a21519005c7d",
        "cursor": {
          "ref": "7403e5f7-d3c1-4b2c-8bf4-7d28f066cfdd",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8f90020c-17a4-4c38-8d70-ecaad5881a64"
        },
        "item": {
          "id": "7cafffb8-b168-4006-a82b-a21519005c7d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "78741df9-8def-4989-8814-48dc772914d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f9ddb4-8343-49a2-97ec-8dcf03767676",
        "cursor": {
          "ref": "484ba416-5838-46ed-bb41-0e5b35d9caa2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e09539bc-0a7a-4109-9127-f9c3e8499e68"
        },
        "item": {
          "id": "08f9ddb4-8343-49a2-97ec-8dcf03767676",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0bd574f-93d9-4ad6-ba56-4283062e1625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4624040-0edf-46e0-a95f-60349a41dbfb",
        "cursor": {
          "ref": "381b292c-9c26-496e-ac95-93052d233b0b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "23e033eb-af12-4661-a8dc-7e1073ffdc4d"
        },
        "item": {
          "id": "b4624040-0edf-46e0-a95f-60349a41dbfb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f55dd185-9a8a-46e5-a424-b6eef23ba5cf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2a070bfc-f6e0-485f-bc2d-366ef78941fb",
        "cursor": {
          "ref": "dd3bb6c5-cf73-44d5-b11c-81ba1d217a36",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "318ae1ff-beca-49a3-b252-232e79c44fbe"
        },
        "item": {
          "id": "2a070bfc-f6e0-485f-bc2d-366ef78941fb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "422eae28-d23a-4c0d-a10d-bd61a123dba5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "dac51324-3a52-46be-a88d-c015b21bf4e0",
        "cursor": {
          "ref": "68431462-4e8d-4880-acff-9f24e08f3ac8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f38e4d9d-60ad-4715-b4c2-e1eaf130bf98"
        },
        "item": {
          "id": "dac51324-3a52-46be-a88d-c015b21bf4e0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "aeba280b-5654-4481-aa9e-d4d382fb5282",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "9671500e-dd44-4a3b-bd78-1f939f5ecc85",
        "cursor": {
          "ref": "fa779022-ed3b-4f85-8ede-e63f6ed21789",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4be518a6-1933-466a-80d6-1102db6a3add"
        },
        "item": {
          "id": "9671500e-dd44-4a3b-bd78-1f939f5ecc85",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2e351b6e-13eb-4d8e-8c9a-21b7c735382c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "c3506280-2a7a-46d1-a922-1a5a1a0122cb",
        "cursor": {
          "ref": "8fbf466a-c60f-43a5-89b6-e6dc36b34d87",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "989582f0-0e60-430f-ad70-cad6235c72e2"
        },
        "item": {
          "id": "c3506280-2a7a-46d1-a922-1a5a1a0122cb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "94f70ea3-7119-4264-aaad-920829dd3d1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "4c500b17-b1be-4df0-9b26-6ff8a262f899",
        "cursor": {
          "ref": "0155a2dc-319e-4e7d-8fa7-cbfcdc21ab6d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3226d7f7-c2f2-4c7a-8919-fa947cd47ad3"
        },
        "item": {
          "id": "4c500b17-b1be-4df0-9b26-6ff8a262f899",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fbaba42b-a07f-43bf-874b-efb17103546a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "900e8a30-6b23-47b9-8972-656f30ebd8cc",
        "cursor": {
          "ref": "3375dfdb-0f9e-4011-9a7b-4b0fb922640c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a7308c47-2bf7-49ed-874e-107cd930a3bd"
        },
        "item": {
          "id": "900e8a30-6b23-47b9-8972-656f30ebd8cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "898ecbf5-7dbc-4155-841d-e0d25a7e0cc1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c091dee-c98d-40e5-a879-7e7d9ef414b3",
        "cursor": {
          "ref": "fd556fbb-a33e-4613-8746-2d3aa0245285",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a7d7d408-286c-4c6c-8457-306f8a7038fc"
        },
        "item": {
          "id": "9c091dee-c98d-40e5-a879-7e7d9ef414b3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0475398c-ab95-4b3e-9042-0cf50e654bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d76ae3-d950-40ea-89cb-ce3c8caa67a3",
        "cursor": {
          "ref": "0fb20c30-012d-47b4-b6ea-fcaa68066c0b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3376a1c2-c06c-4c73-a0a5-fa27ade60240"
        },
        "item": {
          "id": "84d76ae3-d950-40ea-89cb-ce3c8caa67a3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2f0075b5-83e7-4b25-8550-b9c7dff6007d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c1784e-1510-48dd-8d83-09dc70e0d165",
        "cursor": {
          "ref": "5a52e608-dfcc-4905-8550-a2635bfa221e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "306253f0-f538-4813-9db0-7410ba0488fb"
        },
        "item": {
          "id": "f4c1784e-1510-48dd-8d83-09dc70e0d165",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e5d0f270-e0a5-4acd-ba31-de557677e70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc89be5f-4824-4a07-8769-8b5b7f882d34",
        "cursor": {
          "ref": "8e5a608e-28e7-423d-b6bf-c589d09aa539",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "20970b13-fea1-4a9e-93cc-7692a4800668"
        },
        "item": {
          "id": "fc89be5f-4824-4a07-8769-8b5b7f882d34",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "06074e55-cf78-4c3b-b15f-1fb133ef5741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62a9149-dc19-4c73-9c8b-ea9f817ba7d4",
        "cursor": {
          "ref": "9b031f08-a58b-4a65-a417-61c5a232c873",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2bb0dd56-b2cf-4e02-9451-1543d6bd1abc"
        },
        "item": {
          "id": "e62a9149-dc19-4c73-9c8b-ea9f817ba7d4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a0f7847c-792b-4951-8e5d-7167f303eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3914c649-2cba-42ad-b410-831d15c67601",
        "cursor": {
          "ref": "3be80661-9029-48d3-9697-f4e73c87d42f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "552bbd3b-39f0-42f5-bf01-85ecf01cd9fb"
        },
        "item": {
          "id": "3914c649-2cba-42ad-b410-831d15c67601",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "efd3eaa9-a5c5-4b32-a135-1b5c9637433f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26860477-9c63-4ee5-92e0-5936e875fd42",
        "cursor": {
          "ref": "d6ddc900-b6bf-4f88-a9a5-06e02945ad47",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "74bc24d7-37f1-4504-9737-280fb92cb35a"
        },
        "item": {
          "id": "26860477-9c63-4ee5-92e0-5936e875fd42",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fc6205cd-d3ca-4038-ac4c-add9b0a55137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c303924-e198-4a1b-b196-4a9b180a068f",
        "cursor": {
          "ref": "aa218c11-54b3-4c41-85ae-54508af75cac",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "54d025f2-2f43-4ccf-aa02-70c62b75a0fc"
        },
        "item": {
          "id": "2c303924-e198-4a1b-b196-4a9b180a068f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "38b0c675-f794-40a3-bf35-ac7fb087f561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b0cabd-2a40-4729-9acf-039b62636333",
        "cursor": {
          "ref": "403573be-31d2-4aff-9dba-b7da2e0c6afd",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6282235e-6c0e-4851-9cca-8c8ce6de97d4"
        },
        "item": {
          "id": "c6b0cabd-2a40-4729-9acf-039b62636333",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ae9ce5c5-6789-4d96-bdd6-8869b6d560f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30a3657-a9f3-4cc3-b94e-9fa0445fdd65",
        "cursor": {
          "ref": "b086a04d-2852-4fa5-b2c7-cbcfbe6f13b8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "43b31cf7-3785-4103-98a5-80adb7ef24c5"
        },
        "item": {
          "id": "a30a3657-a9f3-4cc3-b94e-9fa0445fdd65",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "909380ae-36dc-415b-af2c-8d2dd74f2a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585ce52a-178c-4747-b2ee-b0c762005e8a",
        "cursor": {
          "ref": "f90abd09-feb1-4ac8-9e0c-c55b39aacbda",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "47af5c1c-71d0-4f91-a495-fb28097a6467"
        },
        "item": {
          "id": "585ce52a-178c-4747-b2ee-b0c762005e8a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "12354202-b78b-45ed-9798-627ae91478e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc27af7-ff33-4f96-9644-0003518ce3c7",
        "cursor": {
          "ref": "9686c819-f7dd-4ce1-8c91-bf9dbe4f72ac",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f9642b5d-2c51-43e4-90a3-4b777e03b09e"
        },
        "item": {
          "id": "6dc27af7-ff33-4f96-9644-0003518ce3c7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3fb49764-cb45-4cdb-be74-63096e6bdbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c91424c-f646-4d88-9247-3bc87081ea2e",
        "cursor": {
          "ref": "189fd814-7c91-4443-887c-76be0884cd17",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8b896ce5-5b7a-46c4-8de1-744f3e9d8254"
        },
        "item": {
          "id": "9c91424c-f646-4d88-9247-3bc87081ea2e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3e1a1f8b-c504-4788-be2a-73dd999b4ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcffa11-1027-4126-8181-c47278447376",
        "cursor": {
          "ref": "c8dc6123-27f9-450f-a92b-e58f774598d8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "552c0471-d59a-46bd-bcb0-effbfd9aeb16"
        },
        "item": {
          "id": "4fcffa11-1027-4126-8181-c47278447376",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "aba1bd38-5fa8-46f4-a811-4aef17a99eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68450215-357c-4f7a-9728-9f510091d92c",
        "cursor": {
          "ref": "1742503b-b38b-4a4c-a3a3-1791908e70bf",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3f590445-9898-45e4-a46d-f031957fa795"
        },
        "item": {
          "id": "68450215-357c-4f7a-9728-9f510091d92c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "023396d8-5b99-41ca-b575-715575c2e47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4e2d1-95e3-4956-9564-2d27b4488bf1",
        "cursor": {
          "ref": "6e350878-ff9a-4ddd-96ad-bd244af2c119",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2ed9294a-cf1b-426f-8c7f-d2dce53c0cc4"
        },
        "item": {
          "id": "6ad4e2d1-95e3-4956-9564-2d27b4488bf1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b0d70180-60a3-48d2-af34-4a51bdee9cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eeb827-1195-40a4-91d1-a452028957e7",
        "cursor": {
          "ref": "2caa799f-e194-4467-855f-5e55fa41e326",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c52cdc18-ccf6-4cd1-970e-1758cfd3d44f"
        },
        "item": {
          "id": "00eeb827-1195-40a4-91d1-a452028957e7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8e166ba5-1b54-4780-9a00-d2f206c305e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de41872-4c4b-4aee-bf2e-a2222a3d3e2c",
        "cursor": {
          "ref": "94c77798-2389-442a-86f2-4370a4b62340",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f23cb47a-8cfb-482a-9336-d271d7fcd0f3"
        },
        "item": {
          "id": "4de41872-4c4b-4aee-bf2e-a2222a3d3e2c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "18bbf62f-d889-48bc-a24b-b112ce651723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29a564e-a079-42be-ada2-f2df0d518238",
        "cursor": {
          "ref": "58d425f0-31c7-4a1b-bed2-56c0d3a468fd",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ee8372d6-04bd-49f6-bbfb-7becde1a3309"
        },
        "item": {
          "id": "e29a564e-a079-42be-ada2-f2df0d518238",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "14c6cb0b-55a0-4a30-9dd1-09b83d100065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f5f96f-0a5a-4736-9073-9db5464d07aa",
        "cursor": {
          "ref": "c7a8f813-5339-4e69-b5fb-19137f9323db",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ebb6fb64-dcb1-45d4-9b38-ae664c5818b2"
        },
        "item": {
          "id": "46f5f96f-0a5a-4736-9073-9db5464d07aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aded06d0-f4f8-476c-9f21-e142072f79fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc85d9d3-9865-42a4-9c05-cb979a648d07",
        "cursor": {
          "ref": "6f561a5e-df09-489b-802b-674b3fc9eb69",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d079976e-e913-4be6-b5fb-23494f3c786e"
        },
        "item": {
          "id": "dc85d9d3-9865-42a4-9c05-cb979a648d07",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e0f15a90-b6c7-4a2a-aa05-83de40f97825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140942ba-72e0-43a0-8e56-01de0d9ec225",
        "cursor": {
          "ref": "1e817531-49d4-44fc-946a-55a822933b59",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "105f70e3-ba93-40ef-be65-e56079e9ebd8"
        },
        "item": {
          "id": "140942ba-72e0-43a0-8e56-01de0d9ec225",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bef23c82-6357-4123-83b2-a204bcbf8213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accb0b55-7233-4dba-8828-2c2f19fc25cd",
        "cursor": {
          "ref": "f653713c-a846-4bc8-947c-4ce93f46d3b6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9709a63a-e29c-4884-a492-d8385c4bd364"
        },
        "item": {
          "id": "accb0b55-7233-4dba-8828-2c2f19fc25cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d80c2e44-d3c7-4eee-9ed2-75d3062fd5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4102b24a-eb27-4774-8c9b-af301f08ce72",
        "cursor": {
          "ref": "0d56776b-6ce5-4505-86c7-71a0981d86f0",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "79edcf60-4730-4b4a-b96c-a5955c02fc86"
        },
        "item": {
          "id": "4102b24a-eb27-4774-8c9b-af301f08ce72",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "24ff43e2-f067-48cc-ad3a-f688d131072c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e928cd5f-2429-4ff9-9d48-49802d7b8471",
        "cursor": {
          "ref": "f6b8d47c-6dbb-4e07-8f07-afd29d6279b2",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9fd87f8c-8412-4249-a5e6-a25b0c4b6803"
        },
        "item": {
          "id": "e928cd5f-2429-4ff9-9d48-49802d7b8471",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2c5130c4-8f6c-43e3-9276-157eeab8a76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55a3e45-792f-45d7-951b-ecbefbfededa",
        "cursor": {
          "ref": "68e6e078-521a-4e12-89ea-5c44ea31f779",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "09ecfddd-afca-45f2-bcb9-0cd395091ca6"
        },
        "item": {
          "id": "f55a3e45-792f-45d7-951b-ecbefbfededa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1db1dc07-0c63-4d03-b6c0-2d0a2bf50e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd33af42-4726-4786-a876-e6a967c7c785",
        "cursor": {
          "ref": "dd84c05b-8620-41a1-8d48-a75252743401",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f1a44029-baee-4ffc-b4fc-da69e0e6f56a"
        },
        "item": {
          "id": "dd33af42-4726-4786-a876-e6a967c7c785",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b3134902-179e-4b6b-8d65-5980f39c7af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84330e87-649f-4581-9b68-fc0ad73f2654",
        "cursor": {
          "ref": "ca5b04b0-e56d-4e77-b46e-84c42df93774",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7c263b8a-e3a0-4b7e-aa1a-748fe7f4a104"
        },
        "item": {
          "id": "84330e87-649f-4581-9b68-fc0ad73f2654",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0916fedc-401c-4406-be96-179ea43dc950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cb864a-0c4b-4459-b401-97ee453f77c3",
        "cursor": {
          "ref": "4352a04f-20c2-4d50-8afb-322d3f35433b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c8152577-d849-48e1-9c98-f51dd80c40e7"
        },
        "item": {
          "id": "82cb864a-0c4b-4459-b401-97ee453f77c3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "292a38bc-9f08-4bb1-9b28-64dbe712d8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8040c2-6424-4fc9-8d01-87075dbe2156",
        "cursor": {
          "ref": "ef77b2f6-c547-45e3-b0dc-0b82c2bcccd8",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "de23806c-469a-4dca-bcba-fd968b759b9c"
        },
        "item": {
          "id": "9c8040c2-6424-4fc9-8d01-87075dbe2156",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b6588281-463f-4a50-a7c5-40fd6dbbb235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4536530-06c3-4695-a524-0e02973a41c7",
        "cursor": {
          "ref": "656cfb8c-5eeb-4eab-a6a9-097c32885449",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6d1c79f4-8e74-47bb-8f8d-43b8fa3280ba"
        },
        "item": {
          "id": "b4536530-06c3-4695-a524-0e02973a41c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "33d9ca4b-e795-4827-b910-c85cc74a3155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0596a38-6249-4091-af19-aac03fb41eb4",
        "cursor": {
          "ref": "cc8f17db-59e1-47bb-9b23-5662853cb8db",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fc649de8-8cde-4f3b-8fd5-5afa59aab813"
        },
        "item": {
          "id": "a0596a38-6249-4091-af19-aac03fb41eb4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "37f7f63f-3489-41ca-a58c-ae367f99b7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ce8417-dcf0-4bd7-a443-799ca2a7ff42",
        "cursor": {
          "ref": "83e97a24-1f1d-4ccd-b268-308087a0b67c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "05022566-bc2a-40d5-b4db-e35cea43f674"
        },
        "item": {
          "id": "90ce8417-dcf0-4bd7-a443-799ca2a7ff42",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "46c163fb-1021-47fd-b8f7-edf6d25e8d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5685fe07-4f95-4b8e-9c5c-accdb2ec3da5",
        "cursor": {
          "ref": "235fa656-2628-42ad-815d-5984c70defbf",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "67cf301f-d66b-403f-aa8c-00fdac068703"
        },
        "item": {
          "id": "5685fe07-4f95-4b8e-9c5c-accdb2ec3da5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0e273904-c76a-40c3-a749-4dce15522a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69083f0-760b-4220-9e2d-3ae12eb8bfa1",
        "cursor": {
          "ref": "45778858-f40a-4313-9b9d-b1c0fb8d9a90",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a5c951bf-2bc6-41ec-9001-a38ef81d6bf1"
        },
        "item": {
          "id": "c69083f0-760b-4220-9e2d-3ae12eb8bfa1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2bb3fc7d-7bd9-4ae8-98e6-84e3fb732ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702c2a28-e6d0-4c1c-b589-3fe7da6f19f3",
        "cursor": {
          "ref": "e7b7dba8-8cd7-45f7-8f4f-99baa64843bf",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "31b732b0-483d-42a4-bfcc-5b6cc8589414"
        },
        "item": {
          "id": "702c2a28-e6d0-4c1c-b589-3fe7da6f19f3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ed8288aa-8c7c-4456-9a90-699bce41bce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa644da-6ab3-4de1-bf33-6f66aa6e0ad5",
        "cursor": {
          "ref": "72f86721-17a0-42c1-8109-aaada6745cdb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5a1b4003-39fd-4e75-bfbe-3abdd372bff7"
        },
        "item": {
          "id": "2aa644da-6ab3-4de1-bf33-6f66aa6e0ad5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "39770b83-3eaf-4a7d-aa12-ec75062562c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dbac29-45c6-47f9-bbd2-6f0657a27405",
        "cursor": {
          "ref": "645615e5-488b-4599-9e59-add0cb80c7f4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7962b087-f947-43b4-95cb-fde025fbe1d5"
        },
        "item": {
          "id": "b4dbac29-45c6-47f9-bbd2-6f0657a27405",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ad7f74d1-12d3-4b54-bfc4-0eb4c5de02c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb5d475-8a98-4ebf-82c8-40db06e9002f",
        "cursor": {
          "ref": "bb86156f-c881-487f-a075-7dc6178d26e7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "430a1324-edbb-44fe-9730-dec65a12a714"
        },
        "item": {
          "id": "dbb5d475-8a98-4ebf-82c8-40db06e9002f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9f4db031-7b0c-4c16-a0c3-889bb6e91765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955c0cf2-46ad-451b-b32a-e9f957c42329",
        "cursor": {
          "ref": "3150c6a7-2dce-4971-a43e-3c2cc0e53543",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2318e0ea-4304-4e56-bebf-a02e1577fc9a"
        },
        "item": {
          "id": "955c0cf2-46ad-451b-b32a-e9f957c42329",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d70ca455-e0ab-495c-8a8d-615b852e0a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae54515-1136-4ecd-b8b9-0c7ca4d13b33",
        "cursor": {
          "ref": "bcadba0b-28de-4759-964d-10a00ff4563c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "82857e85-03e7-4361-80a8-a9713a9d4dbd"
        },
        "item": {
          "id": "4ae54515-1136-4ecd-b8b9-0c7ca4d13b33",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "af415ea2-e49f-40e0-b526-99f75253ca88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839dd7eb-c987-4864-838d-db435377e7fc",
        "cursor": {
          "ref": "f63072f8-c77b-4b38-9e6f-176a1c70ea56",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fc153c6c-4aa4-46c2-a581-bb32e95666dd"
        },
        "item": {
          "id": "839dd7eb-c987-4864-838d-db435377e7fc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d75c29f6-9fb7-4e68-a47c-68f16a91103c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bad6b3-6edb-4fef-a8d2-9759d121a461",
        "cursor": {
          "ref": "45ab9824-4cf7-48e3-bc12-079adbfd88fc",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1d0a7f2d-3586-4f9f-95c5-b2315bc76599"
        },
        "item": {
          "id": "55bad6b3-6edb-4fef-a8d2-9759d121a461",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a1491d54-e0f7-45dd-bc3e-6e2fbfa15853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbdca58-65eb-43aa-ab29-8badc6a0992c",
        "cursor": {
          "ref": "0111c5e0-5801-490c-96a3-fb1b59261fd8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ecd6cd1a-2da0-4872-b6ab-9593d88bacb8"
        },
        "item": {
          "id": "3cbdca58-65eb-43aa-ab29-8badc6a0992c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e7c5a3d0-4005-44db-9548-521439497d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9ad6e2-d0cc-4418-bf9f-a7c0ffbfd745",
        "cursor": {
          "ref": "1409e54c-a8de-4951-88da-187a17c38cb0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "159dd8fe-1a9f-456b-a425-e03a9abaa93e"
        },
        "item": {
          "id": "9f9ad6e2-d0cc-4418-bf9f-a7c0ffbfd745",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "35dc23a3-27c1-464b-874f-4a7230da8749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5f7389-bf3a-4061-a9b0-b518a32f382d",
        "cursor": {
          "ref": "b4890674-4c63-45c9-94be-2059a6d368fd",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f22cb70b-b270-4df4-bb02-e73c81fe2762"
        },
        "item": {
          "id": "fe5f7389-bf3a-4061-a9b0-b518a32f382d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cb6badf7-df65-4e2b-a422-cf6bcdc258dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6728477-87b2-474f-9cd2-b8b2dd930384",
        "cursor": {
          "ref": "a7900145-0754-4f8b-bde5-f4f3e86fedb4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e5498038-2077-4e04-856b-2e87392ef2aa"
        },
        "item": {
          "id": "f6728477-87b2-474f-9cd2-b8b2dd930384",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3e307375-7760-4784-81e0-9b93bea9f824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52b7b79-e0a9-48d8-bb8f-d310aa1ba524",
        "cursor": {
          "ref": "6dda2711-11fe-49bc-9c2f-644b7be04c59",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "13964b28-aa84-4efe-be7b-e5f045d402c6"
        },
        "item": {
          "id": "d52b7b79-e0a9-48d8-bb8f-d310aa1ba524",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8e2783e0-b673-4d7b-9c14-f4d16b6ae434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0769c791-ca01-493f-ac88-30b1671c6043",
        "cursor": {
          "ref": "aba60a12-6b76-4702-871e-817c4a6abddc",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ab78254d-abab-4ca6-a32d-3c869b9f38c1"
        },
        "item": {
          "id": "0769c791-ca01-493f-ac88-30b1671c6043",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "70ac50ae-d31c-4bbf-889a-984ee504ae83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f09073-68cd-4ae9-9018-f16e401794f2",
        "cursor": {
          "ref": "5dccb831-ed66-4e6c-8d08-c58c2a7759ff",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9c567d15-359e-4db4-a7bf-ca241abe1deb"
        },
        "item": {
          "id": "04f09073-68cd-4ae9-9018-f16e401794f2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "eadadc60-a04a-4b8b-b277-b8a965bf1b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0307048d-3825-4439-b5d1-8ff8b4bcd990",
        "cursor": {
          "ref": "45e90850-94f2-47a6-a6ad-be2a54980def",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "090ebac0-35f2-441d-978e-50e167fdd08b"
        },
        "item": {
          "id": "0307048d-3825-4439-b5d1-8ff8b4bcd990",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c8003650-8871-47bb-a438-d4962a7f8655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e9fc5c-ca6f-4b71-a64a-c44b4551aedc",
        "cursor": {
          "ref": "ad21ce46-deac-473c-9ff9-ea0eafd85f5e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "56a0a744-39d3-4bf7-8adb-01ffdb8c8380"
        },
        "item": {
          "id": "34e9fc5c-ca6f-4b71-a64a-c44b4551aedc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2ca0b860-04d3-4db4-bb39-fc560d3ccf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d75ba2-1112-420d-b9bf-f6bddcf2ca60",
        "cursor": {
          "ref": "6eb6d61a-7518-4211-a2db-e6c57231ec80",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a98d8b88-e657-49b2-bdb2-f1196b3a4df8"
        },
        "item": {
          "id": "d2d75ba2-1112-420d-b9bf-f6bddcf2ca60",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9b82039c-313c-4468-99de-401f89d70d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dc4686-5089-4a4b-9a75-e76c77fba1fe",
        "cursor": {
          "ref": "1fb929d7-95e9-4fbb-b70b-54b421b57978",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8561271b-158c-4118-87ce-395b0f10b74d"
        },
        "item": {
          "id": "71dc4686-5089-4a4b-9a75-e76c77fba1fe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4db4962e-a4e0-4ac6-8452-6e519f64ce06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a801232-0f3d-4150-a9bb-15d9f0bc6014",
        "cursor": {
          "ref": "57c6aa54-c136-45d8-881f-fa2c0e001a51",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7c990e83-307f-4672-8149-b89ee98d65fe"
        },
        "item": {
          "id": "5a801232-0f3d-4150-a9bb-15d9f0bc6014",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "688d8113-1a38-4149-9d22-395db54eaba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b71a378-4e6e-4569-9d3d-07682e14a228",
        "cursor": {
          "ref": "c1d8c861-6e4d-4c8a-8b48-e081bc612474",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "41e295c2-49fa-45e9-bc8e-4400bf892a8b"
        },
        "item": {
          "id": "7b71a378-4e6e-4569-9d3d-07682e14a228",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d26b29d2-eabf-4d4d-8ab3-55ecdc67a949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ae3a76-76a1-4f90-9499-c679357260f7",
        "cursor": {
          "ref": "d2adf1fd-52f7-4213-90de-0793a4000a76",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "113d4bd9-fd09-49aa-a588-2a4d928d5b73"
        },
        "item": {
          "id": "68ae3a76-76a1-4f90-9499-c679357260f7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5f750778-9e16-4e58-8142-cfeb79a2b049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ebf71c-8ff0-4eaa-be17-8d7acc7900a7",
        "cursor": {
          "ref": "ff36f090-2254-448b-a74a-02740d7b4ede",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a76b7e33-e6b6-4411-9c21-73fd8b8c0489"
        },
        "item": {
          "id": "01ebf71c-8ff0-4eaa-be17-8d7acc7900a7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c8da7ee2-841a-4d68-b2ce-770ee547f8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0644802c-c2ac-4547-866a-38710c7cef10",
        "cursor": {
          "ref": "d74ebab0-7836-430c-8e0d-317e5cc2b3e1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4464f410-b9f9-4aea-bead-03496cc0bbaf"
        },
        "item": {
          "id": "0644802c-c2ac-4547-866a-38710c7cef10",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8fd8e2d1-a6ef-4af0-abf1-6bffbbb8d6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5f9753-7401-4355-97e1-1347fe83cb7b",
        "cursor": {
          "ref": "0c05af9e-ad67-4d15-bd76-67ec8e9cf722",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ccd43774-823c-4fd8-baea-762f8f6c73e6"
        },
        "item": {
          "id": "6a5f9753-7401-4355-97e1-1347fe83cb7b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2b41b619-7eb0-454f-a26c-fa5545bd6111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e6355d-d6c4-452b-b8af-f2f4716526a5",
        "cursor": {
          "ref": "88752384-6fb9-4aad-b6aa-09140f4a1179",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c2f7f890-9ebd-4400-95b4-f3647f010e35"
        },
        "item": {
          "id": "f3e6355d-d6c4-452b-b8af-f2f4716526a5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "34a93f66-d5f9-4c57-bb7e-33cacec9b3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d239601c-a25a-49dc-b6ce-8b46d0420dd6",
        "cursor": {
          "ref": "ce963b88-5328-4877-a5bc-7fbec9b2b1d4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d3e2b946-3af9-4131-a7cb-00ae25d4605a"
        },
        "item": {
          "id": "d239601c-a25a-49dc-b6ce-8b46d0420dd6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b0afaf5d-d612-4de4-a061-a2f17d606574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7deff709-5699-4359-8cab-4102f2be6d73",
        "cursor": {
          "ref": "c9e729e4-5376-4e0a-9559-6648587bf830",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5d8d133b-d8d8-4b20-b234-2b6113047937"
        },
        "item": {
          "id": "7deff709-5699-4359-8cab-4102f2be6d73",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a37e6839-3669-4a84-9b2f-3e009743332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76aabb1-2384-4a39-ae1f-c4db03dd4e1d",
        "cursor": {
          "ref": "b81435c9-ff57-4eff-92b8-9562f11c10e0",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8efe8d60-4796-413b-9e9f-dc8efcf492a7"
        },
        "item": {
          "id": "b76aabb1-2384-4a39-ae1f-c4db03dd4e1d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "13ba779b-be8c-42d8-8cbb-09cffc8298b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713871d9-7cbc-49af-9a3d-91c98eba16bb",
        "cursor": {
          "ref": "e96da09b-77b7-49aa-95b5-ffa2e5c2d065",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "41e38a74-6101-452d-b01c-25754c9987cf"
        },
        "item": {
          "id": "713871d9-7cbc-49af-9a3d-91c98eba16bb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a15427dc-3626-4877-a426-5b37a35ea8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1433478c-3984-4303-9679-35116f883ea4",
        "cursor": {
          "ref": "20e3b56a-175e-4964-a931-5c3838248ecb",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3727caa8-750e-4472-85f0-888c4921b05d"
        },
        "item": {
          "id": "1433478c-3984-4303-9679-35116f883ea4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9f6eeec3-a3ae-42a1-967d-d7102537886a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd97522-23d0-41ec-99cd-2fd746d991ba",
        "cursor": {
          "ref": "1935511b-65c0-4f70-ab01-6efec990904e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "504bd9e5-580d-4323-89bb-b27e486a7163"
        },
        "item": {
          "id": "2dd97522-23d0-41ec-99cd-2fd746d991ba",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cb534213-640b-43db-b944-7d7ce32fab1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad577a-9ee0-4ee0-b29e-ea35f1ffe277",
        "cursor": {
          "ref": "c18d36db-5c24-4b22-b4d1-0b321dbe2c4d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "022fe764-dbc6-4079-8fc4-1db5c06e9efe"
        },
        "item": {
          "id": "00ad577a-9ee0-4ee0-b29e-ea35f1ffe277",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f7e55d23-96f4-41c1-b7ca-9be103e8bea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35154ce7-0a4f-4419-9dce-0c58463f8603",
        "cursor": {
          "ref": "801f94cf-e412-4f87-95a2-c40d778f2bbd",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5b198b8e-588b-459d-85d3-81e866910442"
        },
        "item": {
          "id": "35154ce7-0a4f-4419-9dce-0c58463f8603",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ac2d99a2-edfc-4e86-9672-e3822adaab63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2496cb0-7e2e-4e84-9981-aba84daddeaa",
        "cursor": {
          "ref": "252dd881-994d-4b0b-8e8c-ff3418e6e4e2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6f7c42a6-7028-4d5a-854f-c33c79dd0e74"
        },
        "item": {
          "id": "d2496cb0-7e2e-4e84-9981-aba84daddeaa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dcb18a4f-41bf-48f1-ad34-8a2addf6c703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca2ceb8-edd8-4ae7-8768-f731e52d5523",
        "cursor": {
          "ref": "76d254de-51e4-4658-b18e-2afd118a0978",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d05a176f-9847-4670-8ad8-f72b1163f653"
        },
        "item": {
          "id": "bca2ceb8-edd8-4ae7-8768-f731e52d5523",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d26b70a1-64bf-4178-9282-c97e9120ab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e3f321-4a6c-491b-afa5-7a6f90c2e471",
        "cursor": {
          "ref": "013a4f2d-eebb-4ea3-b8d2-4c01aaa3fdbd",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bd92998d-8579-4217-b721-2cefe4e07e22"
        },
        "item": {
          "id": "a9e3f321-4a6c-491b-afa5-7a6f90c2e471",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1a3729d4-e443-4321-abe6-5ac6f48a4082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaf13c2-6616-4c25-8252-8447d1e20c6c",
        "cursor": {
          "ref": "b5d29473-167f-44ed-b05c-72f714399acb",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ffc71c4b-9257-4d44-a81d-96ddd0ff2e65"
        },
        "item": {
          "id": "ceaf13c2-6616-4c25-8252-8447d1e20c6c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2c306ea5-912e-4591-be75-33a9b82fda67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0797f0-050f-4473-ac97-2d5dcddc840e",
        "cursor": {
          "ref": "f5ea871a-3409-4375-aae5-2e4248867eda",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0b83740c-be3d-4d7e-ab9a-cb90c2e0f61d"
        },
        "item": {
          "id": "da0797f0-050f-4473-ac97-2d5dcddc840e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e8d1c08a-f7a2-4e42-b23c-ff8e68cbf95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cba9f5-76d9-4b47-9f94-a00c9a6268d8",
        "cursor": {
          "ref": "f1321da7-cbd8-49e8-8063-618475c7de2c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6dfc729a-5633-450b-8a46-d24e962a50a2"
        },
        "item": {
          "id": "78cba9f5-76d9-4b47-9f94-a00c9a6268d8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6a155843-f42d-49fc-872d-aaf1e5a0bc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e4a192-5211-4e5a-8c3a-6a3dd456fcb0",
        "cursor": {
          "ref": "05570c34-8f5e-4f69-91f8-f5fbfc0edf60",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4d9d85cd-dfd4-4453-9a31-a4ba1e8e68ce"
        },
        "item": {
          "id": "f8e4a192-5211-4e5a-8c3a-6a3dd456fcb0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06e8f6fa-1ec9-435d-bc94-f44f9e1bc9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9987277e-2b0e-4ff7-a758-470ca607e2cd",
        "cursor": {
          "ref": "31d7cbae-9a3b-48c3-a387-1b39d55a985d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ee0f3726-c459-40f4-b55e-9b5ad8cc9228"
        },
        "item": {
          "id": "9987277e-2b0e-4ff7-a758-470ca607e2cd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "07486aea-83fe-4d33-bb9f-4db26aa3a41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594b3109-d63b-4f39-9751-2341825a37c2",
        "cursor": {
          "ref": "1e828937-0773-4269-bae1-839625dd9fce",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "49e3990e-91e7-4780-bbf2-a7a4cb771cc7"
        },
        "item": {
          "id": "594b3109-d63b-4f39-9751-2341825a37c2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "46a6945c-c867-475f-9348-d163a7d49aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c9588b-3409-49db-b546-264f61fc5bcc",
        "cursor": {
          "ref": "92fe2e4c-9061-467d-a440-c5b172bf5d55",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "97f3d38f-501a-4f26-bada-ff6829c5db5d"
        },
        "item": {
          "id": "83c9588b-3409-49db-b546-264f61fc5bcc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9a69c873-f977-4b3f-8f74-69fb076c400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e434b6c-51d9-48ae-bfa1-2ca4c3e2b2b2",
        "cursor": {
          "ref": "22034f93-976e-4300-9b35-09de8c434435",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d54de5d5-28a5-45dc-91c0-b3b4561a4316"
        },
        "item": {
          "id": "6e434b6c-51d9-48ae-bfa1-2ca4c3e2b2b2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9b784e34-8acb-4ece-8f42-fc37ec9cd0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352f04c7-bc56-4e7c-ab65-ea060c086370",
        "cursor": {
          "ref": "96bc2ee5-d47a-463a-9267-fccab045a788",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5ecf14ef-2fd4-4514-8cfc-8a804b776c17"
        },
        "item": {
          "id": "352f04c7-bc56-4e7c-ab65-ea060c086370",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46e31dd1-1281-464b-87b6-1ebe7c712ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b2f1c2-7755-4485-940f-f3f292b0bac1",
        "cursor": {
          "ref": "d0adcfdf-8b7c-4d0b-a4f7-6bcbb933ec83",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "91c60da8-ed86-4007-a382-5cae89964c0f"
        },
        "item": {
          "id": "c5b2f1c2-7755-4485-940f-f3f292b0bac1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8dabc563-d4fe-483a-bccf-28fb5830c44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb894b9c-c5d2-4503-b81a-f90737f8ebb9",
        "cursor": {
          "ref": "7ed452da-b1d9-4cae-9cf4-7803dc5f82a3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "13736ef5-7ad5-4854-95f2-053145231b22"
        },
        "item": {
          "id": "bb894b9c-c5d2-4503-b81a-f90737f8ebb9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8057416a-05d4-45d5-ae4c-fcbe1f7a894d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb11730d-10b3-408b-9166-8c6dc64e6d31",
        "cursor": {
          "ref": "6438c4b6-d35d-489a-a91b-235fcc1ec139",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8fe52b8c-fad3-4e15-871d-fe34264b739c"
        },
        "item": {
          "id": "fb11730d-10b3-408b-9166-8c6dc64e6d31",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e44e9c66-84ae-41d8-b97f-0f7ef767db7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687e3d0e-3c90-4253-947b-dbb49e11ed4f",
        "cursor": {
          "ref": "43bb30cb-5acb-4617-8d21-3140019821db",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a6566d7a-13fb-4d5d-be46-1aa8058be78a"
        },
        "item": {
          "id": "687e3d0e-3c90-4253-947b-dbb49e11ed4f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c54a5356-3a23-4681-903c-8312c1b7b826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23ff5cf-9073-4184-9731-a408a8380dce",
        "cursor": {
          "ref": "58b39fcc-a499-4f3c-9314-addbc5d99ee4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "86b1a507-0537-4237-b9be-4fb34cd74a30"
        },
        "item": {
          "id": "b23ff5cf-9073-4184-9731-a408a8380dce",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b26289fd-be81-4a90-8e10-083c0786ad67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fb6907-296b-4b7b-9b33-a7b99a02aed1",
        "cursor": {
          "ref": "e7bfec07-cfd3-4b9f-93b3-4a099abc0491",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2d42be26-05e7-4efb-a804-d8e9bbe58972"
        },
        "item": {
          "id": "94fb6907-296b-4b7b-9b33-a7b99a02aed1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ac9fb7c4-d3ea-42e5-82d3-07ad471e9956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8721c4c7-e9e4-4806-a434-66966654bb75",
        "cursor": {
          "ref": "963f0205-40fa-4f28-bd47-ccc188cc1c1a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fc8395bc-6b3d-4fff-ad89-cd7608c01729"
        },
        "item": {
          "id": "8721c4c7-e9e4-4806-a434-66966654bb75",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "08036c94-dd02-4211-9f7a-716cef347009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c788d69-e40e-49f4-9986-3dcacd266bf9",
        "cursor": {
          "ref": "ffa30419-7ef1-4797-86cb-2e51650dc180",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "65bb642c-9ae9-495e-b855-ac8259fa5dc5"
        },
        "item": {
          "id": "3c788d69-e40e-49f4-9986-3dcacd266bf9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a51880a-30b4-4dfa-b405-1e84caf890fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea8b60-18f6-497f-bbf0-7d8f6c0e8b97",
        "cursor": {
          "ref": "9a4d4029-29f7-4931-88a3-bd1c64798c0b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "67a6af6e-1729-49f6-9949-a17f1582d753"
        },
        "item": {
          "id": "4eea8b60-18f6-497f-bbf0-7d8f6c0e8b97",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "609914ad-6a82-49c0-b869-5a676203fc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691196c2-e0bc-4496-8ada-538827eb3f95",
        "cursor": {
          "ref": "fcf8f129-05c2-48af-a171-9f4ed0a092d6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ded2aa82-2a62-4512-9b53-bedbbcb74a1c"
        },
        "item": {
          "id": "691196c2-e0bc-4496-8ada-538827eb3f95",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f018f04-dd8d-4342-a05d-6bc902fe4c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc3fef-ea85-4a69-8723-3cd2848c39f2",
        "cursor": {
          "ref": "e0a4d996-4cb7-41a4-83a4-ef83dc4235d0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "539d5a45-7c8b-4bfe-afd1-491dedbc985e"
        },
        "item": {
          "id": "73bc3fef-ea85-4a69-8723-3cd2848c39f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f5e3c7f-2e0f-48f5-8d81-cbb23cd92e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e52ae4-b4c7-4bb0-b066-c0f77417959e",
        "cursor": {
          "ref": "94e2eaf0-0cbe-488e-98b0-7381832b1856",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1fc35bb1-d034-4988-8984-dc4e59d7e914"
        },
        "item": {
          "id": "64e52ae4-b4c7-4bb0-b066-c0f77417959e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "387ae14e-8736-4d48-be55-e89a40c33367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea77eb-f132-4d4a-90c5-5fbdac1c5727",
        "cursor": {
          "ref": "8a308e29-854b-4ad7-95fb-c50c27a90a0e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dabaa7cd-f537-48f7-8f6c-275d8bf2d317"
        },
        "item": {
          "id": "4eea77eb-f132-4d4a-90c5-5fbdac1c5727",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a67f5b90-d5ba-4e38-b738-dca46a6ce2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e0fc7a-c269-471d-a1aa-7fdf086561aa",
        "cursor": {
          "ref": "0edc2d36-7040-4edf-aa0d-1c3176f72076",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a9a1a089-9032-4296-bf60-d3f4bd450798"
        },
        "item": {
          "id": "a5e0fc7a-c269-471d-a1aa-7fdf086561aa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ca93efa1-aeaa-447b-8f76-392f649684cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65829d6-1628-4fd0-b7f7-8755bb161d08",
        "cursor": {
          "ref": "120399b7-e020-40cb-8b50-89e7d66f7db6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f75fa5e1-b5c1-4631-aa2b-ae294e95957e"
        },
        "item": {
          "id": "a65829d6-1628-4fd0-b7f7-8755bb161d08",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "96e886b6-7dfd-4603-80ba-856f1f756d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b177b180-42af-40ab-91f0-6585cb35ae8b",
        "cursor": {
          "ref": "30611eef-0cb4-4ac3-8692-abe43cc53c14",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "26058022-89c3-4d05-92ec-937ac9676642"
        },
        "item": {
          "id": "b177b180-42af-40ab-91f0-6585cb35ae8b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "802f1d08-cf76-473f-82e1-7a849955ce8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add323c8-4294-4399-a972-c61448bba73a",
        "cursor": {
          "ref": "96bed621-2e3f-4ffd-90c4-ee335f964352",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "96dd4bc6-158b-41e5-939a-11023a3810c8"
        },
        "item": {
          "id": "add323c8-4294-4399-a972-c61448bba73a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e41b9753-4065-4cb0-a56b-66dc4c271450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220bc3f3-6a4b-4af3-890d-f42e3f5db52a",
        "cursor": {
          "ref": "2dad78e9-a150-4cff-8a56-6ba5aa8f27ad",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cf661015-50da-4ae5-aa97-854d9e20a842"
        },
        "item": {
          "id": "220bc3f3-6a4b-4af3-890d-f42e3f5db52a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "25ebeb44-3add-44da-b705-7a8314161b61",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d589700b-f03d-46ae-ae67-47adf2833bfc",
        "cursor": {
          "ref": "0d2441ff-2659-48e2-8ddc-2ac7a1fd6acf",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3473b2d3-ea59-4da1-aa8c-db59340437e1"
        },
        "item": {
          "id": "d589700b-f03d-46ae-ae67-47adf2833bfc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "20667932-70ee-4866-9d4a-73760f3cbdc8",
          "status": "OK",
          "code": 200,
          "responseTime": 3556,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6342aaa4-49bc-4db8-b4c2-ceb8be3e8846",
        "cursor": {
          "ref": "665d5691-8ba0-4116-8b46-ff9bbdad53db",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b97fabdb-4755-48de-9a01-e855f8b20d0d"
        },
        "item": {
          "id": "6342aaa4-49bc-4db8-b4c2-ceb8be3e8846",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f66456bf-730f-4e37-aa00-b82247d8c35d",
          "status": "OK",
          "code": 200,
          "responseTime": 4354,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bc583f-dc4a-485d-aa14-e4aa76cf8669",
        "cursor": {
          "ref": "2e84068f-3f18-4d56-92d7-f6f7f0e04dc1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf9d79a7-2515-4ba1-b7ae-2f559f73c014"
        },
        "item": {
          "id": "92bc583f-dc4a-485d-aa14-e4aa76cf8669",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4771e2e8-c528-4bea-976a-baa36e92c216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bc583f-dc4a-485d-aa14-e4aa76cf8669",
        "cursor": {
          "ref": "2e84068f-3f18-4d56-92d7-f6f7f0e04dc1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf9d79a7-2515-4ba1-b7ae-2f559f73c014"
        },
        "item": {
          "id": "92bc583f-dc4a-485d-aa14-e4aa76cf8669",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4771e2e8-c528-4bea-976a-baa36e92c216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ca4bce-7193-44f0-975a-5b72942a4ad2",
        "cursor": {
          "ref": "49479fed-d4fa-4658-9970-965d85e20792",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7170f818-26f1-4567-b3dd-1451da8db803"
        },
        "item": {
          "id": "17ca4bce-7193-44f0-975a-5b72942a4ad2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "55c76f76-30dd-440f-8335-23aca2f724d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73d5b1b-d3c0-47a8-b01e-87ace436e410",
        "cursor": {
          "ref": "ff60aa6f-7508-4673-a088-135bc69c4fb1",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1819c5b2-2681-4960-a640-975dc44c8f43"
        },
        "item": {
          "id": "f73d5b1b-d3c0-47a8-b01e-87ace436e410",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "72628ed2-beeb-4579-9a0f-269cad159dde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}