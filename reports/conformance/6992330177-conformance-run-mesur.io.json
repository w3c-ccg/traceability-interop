{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e8bed66a-7ae4-4652-9b7a-25fbb8ccc71f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "aa8169f8-13a9-44ee-8b03-47863ec30334",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5984de1b-a48a-4b42-a581-c93a688da9af",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cdfeaabd-9aa9-4b7d-a2cf-ffb81c1f21c9"
                }
              }
            ]
          },
          {
            "id": "88e1a021-5f44-40b8-922e-ce18839c613b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5559c3c7-4856-42da-b9ba-cbcc49bc7448",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c9e2b1e-cf84-4a7e-914b-c3c3a415e19c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "09d80857-cbad-4986-90b4-f9ed864f58c8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "70484c43-7dfb-47a9-8bac-e8d1e29bb95e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "387836d6-f64d-4b09-bb65-97fef1aaf494",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfb168ad-efbc-4bc8-8ac9-55235d04baa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7b1ea30-ee56-4c7d-9a4e-82f37ed4fb5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d0b440b-8558-4efb-8592-a5fb37445d23",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "538e04ac-b872-4ede-9b0f-7fc8e6a8b576"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54aba6b1-b6e4-4a34-8be4-f1d69b90e2e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31284961-ed38-4737-9049-f876620fc600"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f94a954-a3f0-4a60-aae4-a9e655b420e3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9ced30cf-600f-4a92-9d7a-dabfa317ed3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1e4b952-c79d-4cca-8f9a-41412351362f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edb07557-271b-4188-acb2-419c949b116f"
            }
          }
        ]
      },
      {
        "id": "3134196b-f492-4069-9af0-3c757c4eb32a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c06a2642-662d-4285-bfc2-59b721451b21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a9b327a-8dff-470c-9cdf-2930ac4f84eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "135e518c-cfe6-469a-9931-d9e8528a9efb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e49cef-f455-4232-8af0-d83267dcb9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "522c78fd-7706-4342-b738-602ef2c051f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ff51e6-9304-4d06-aac9-6219325e3e5d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710548f1-25e9-41f0-bcc7-ebb1b705a7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "992fd1c7-6a0c-4976-be90-d84deb1b86d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea8f097-1489-44d0-8b97-53f9160f14f6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5cf77d-ed56-4227-a293-db59776c89c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99747e9f-6a4e-4851-8c2e-297311ecdb9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "48d9bd53-306d-4a70-baf9-2fc46f1a8275",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18a83a14-af5e-4131-ad1a-9337029e6375",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3f0684-8085-4598-a13e-c4c21a956efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c78c2466-2100-4d0e-a267-447649f33718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4008b64e-4ad3-4b5b-a9e4-f528930930d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beed0ddb-138f-4077-910b-6d8fa4da7d74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "91630075-7f74-4dd3-9ca6-c3c82a3fc8ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c6f1a14-5176-4797-a2d7-6a1a016f055c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81145d45-7aff-4315-ae41-5c258407a6ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2211c9c6-bb3d-474e-a693-b84ce4b97f6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e574e146-9cd2-4749-95ae-56582156cb69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "01ebe095-20f7-4454-af73-98de0b80edad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53bacdb6-452d-47be-8420-6886aaa7bfdf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5f8729d-1b8a-474a-966e-85ceb693079e"
            }
          }
        ]
      },
      {
        "id": "23747b81-bc23-4993-814a-6f681f0a9264",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "872d5bf8-7d57-452d-a32c-57f7839fdbc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9c5b502-5a0c-4c25-a1a2-9ad5ff864c3a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "027d9536-fc69-454c-8eeb-710032d055a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c840e296-7738-46df-8618-dc31860f3acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2258985-a96a-4207-a596-6c2c3dac9c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6af8f3-83cb-469f-a15a-b4c2434ebe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04de1282-f178-4463-93a8-7280fab06f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df95073c-100b-492d-8dd2-2c48420b8da8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25578548-722d-4624-825f-f97431226b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f703c048-46ad-4076-83e6-ac14766293ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b9caa2-f3e5-4f1d-bdb9-69d3c8e576a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90fd2203-5207-4db8-a943-08f29c4d714d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41098e48-6fe5-4f4b-9a70-3ed765060353",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c09c3a-b358-4b3d-bebb-13d19d7bab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e4a829-0ef4-4370-a4c5-9facf7caf568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743c47e4-24d5-4e8f-bac6-c016f18767fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "657819b2-7457-436f-823a-c46ccb27022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648c3030-b055-417e-9e7f-15dbdccd1c24",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ff009-0beb-4607-b30e-18e3a8b54f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012240c2-bbd9-4c44-8d49-0598b17f01b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a446f07-bf54-4af4-b9f5-8118f56c7073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f18c5fc-2131-4a7b-a37e-d2f8a0987ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d103808c-0d3b-411c-8ff6-ca6cba87032e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d886b59-2e55-402c-990a-35705b45e90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2ae7b4-ceb0-4a9e-bf71-9e9a17934713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1d0959-52b1-49fc-9687-6dcfeb0a8a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77c9b8a8-510a-453d-a749-90c81a6eab40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1594f4-b0dd-44bc-90a1-aacb40997a64",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60bbdbf-876e-4c36-ba82-ba016934e03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ab4ed9-2cfb-412c-ae14-7d37cf347561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aeacfe-0a07-4275-8342-9ba71a41359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da835cea-f6c9-4f5c-b808-e58e29f370d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daadcd27-7056-4b18-958e-f6b564029a5d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a39d9da-7752-42af-8132-f59f097f9456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366e2ca5-5dba-49a9-bd6c-2de619211202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdc295f-2080-4ed2-b69c-879088afa33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67fda3a4-978d-42fe-903c-c089e006508b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a1c0fa-c7fa-4027-8277-73408023442c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32477770-86a1-40c4-82ae-6e5e563832f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2152a275-4cea-4b69-aa27-914ce2ecadfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f906c9-99bf-41de-8d22-5517eb7242a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151010bb-fb48-43b5-8e6a-e6d9a46e486a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b712901f-5fde-41d9-bb21-adb7014491e1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec422f98-f301-4a96-9888-9a4accafd8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a040fe-4389-4a3a-be74-2db86e686f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815644b8-1fde-4b5b-834e-4e7e508b171c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837e117e-8c40-4d28-a2fd-a3a63854dbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5065feb8-c1f9-4e52-8abd-35c634fc4884",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b29d4ee-14c3-413a-9bdf-c7775e30c1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f02101-2fbb-48fe-9c1b-fd1a1735ff75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c46584-bea3-4540-a4ea-c5afc6f6d6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85bf1074-8c2a-4505-9bb0-7fd50a6c4919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14eccef-8347-4c5e-9c04-3f2792d593ce",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb8a31d-f695-4f08-bf0e-9f3a25c0a965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03d8386-70d3-4e31-baa3-b7583c20b634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05391d9c-7736-4672-a996-38ffae74c328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51737049-bd28-466f-a9b3-f4f79f672627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5c7734-b880-4a82-b583-697792f5f9e3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0850ad-4e04-4cea-87b8-968aa87d512a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a4db7f-86fa-4d07-8e43-8a1af77594e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ed06a7-4e02-4c96-90e0-602419b22c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0444a64-2d57-4df8-b04f-2a37026cd731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2367b902-f217-4b4b-8388-89b90aabaa1d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5448ba-2701-4096-b5ba-d938251d2948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60672fa-565f-47bb-a7b3-0c4db8638ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b94aea1-651d-4df1-a845-46b9113c3f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6876bb6c-0f9f-46ed-a668-9026e75ebb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e06dc4-b1e8-486a-b247-3c8325405c47",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4e31c5-3a76-4385-bc92-cb213c2d2a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ef177a-6559-4985-b6e8-0fe2d88417f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe84eac-8cbf-44a6-be3c-13793ed824f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c89640b6-3a1a-432f-bcd2-fabf30ada951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76b7813-96c4-48fb-ba0e-2a6d33d0b12e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483b1e68-167e-46c7-9663-b7359a57f124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b7ca16-0234-4f14-8269-76538d7cccce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdf175b-e2cd-4aca-8e14-d36b002f68b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9142eae-289e-456e-bb6c-2369d1eb5dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e5c17e-b437-4b9c-8498-793478cb1478",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f1b407-380c-486f-95cb-26c66c3073a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549e1865-5c27-409a-81a9-8db11dced1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49278b54-ab6a-4332-bbac-f5271f2964d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e21db8b1-79a9-4772-8036-cb0ff6564a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f277e6-ad5f-4a97-b6dc-f64a2cb59f16",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5fb78a-e3bc-4f89-a349-9aade25a24bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f5746c-3c9d-4282-9b4a-c6804f8b937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e24da2-9161-4bc8-91a9-5a3ac375c0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07544c97-2ba0-47bd-9d4a-12f175bca177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ff2b0c-e5ec-4e8d-97ae-f936cf60352a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024fd757-ba57-4251-9474-c748478c831c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381e61f7-ca39-4550-a6ae-7db8cabb13f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d383cb9-3a37-4c67-b56c-892a3366ed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76531f6a-fe37-4bf8-95ee-0faa9328641b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8c61db-bc70-4b4c-85eb-f67cf4d31ee5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ec15cf-16f0-4dd8-951d-da3e64373f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97aeefa4-054a-4ae6-b782-5ca0897c91ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4353a71-a352-4d79-acc6-222490170ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a065867-d1f7-4d92-95b1-657df3b04011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a090bfd-91a6-431f-841c-88e30fdbf950",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236bdb4b-2965-4a91-a331-fbdb818294e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cafe8e0-9175-440d-96b8-00f3b7ccf222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d2bebe-dc81-44e8-a363-23f369385663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e01a72bc-7dd7-49f5-9827-953a902c7535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318c68f1-fd13-4d99-a01a-ca5b07c9f18d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742a7c40-adf4-4d7f-a612-89b36cf3251c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca310b7-00bb-42ad-9bd9-502804996f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd096366-b936-48c2-b387-489b3d011860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3f99d4-c180-4690-9032-b451648282ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa92251e-6fad-44c0-a65a-02d0556bc3eb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c16829c-a5f0-449f-91f1-e0e8363f3031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbb4246-19fb-46b0-a4a3-aceb1abb0ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04794ab-5b11-4ae6-a3f4-06a0f6b6ed4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52b0ca10-2cd7-4664-9f63-b3e9f7863dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74410e0-b1b3-47a6-8f8f-7807e4c70ab1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b519e69c-3235-49fb-855f-78a1047eef2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ff11c3-9a41-4346-9aca-116a1936856c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b330e5a-600d-4e88-957d-9599dd3e52fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03467eaa-6cd6-486a-95cf-f7b72a74ef59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f0237f-396b-42a5-8878-9bf005a02c22",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551c26b3-94c4-4967-81fa-1256de5fe2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba24505-d096-4cf9-8c6e-53ac486fb150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c1fc88-f6a3-4513-8373-cd99dd93f344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab2b420-62a1-4fae-a20e-745b4e2d2a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235bee95-05ff-429c-a6f4-c1d13b6cacf2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718daad0-0e62-408c-9d06-753747f03994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2863aab-8058-45d9-8be8-79fa6a4120df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c8d2fa-84d5-4904-b651-52183755c1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "21af48a4-c662-433c-95f9-af702ad13daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5b8250-e5fa-4ab3-ab88-381616929a87",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdd231e-aa18-44b7-a7f9-65bf7610aac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec675277-f41c-4660-b3b9-d6cab099940f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83967604-d02e-41de-a7dc-22966c5a3b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13712023-b6a2-4d8f-a6da-b4a75848d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8f824b-949c-4e00-80f2-c95c6d9869fe",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d285f9-3d7e-4c1e-a6d9-61ede36b1e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db3ea58-5f67-4219-91fb-ae48ab7dfc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6003fd19-74b3-4b9b-9c81-8b43d4262b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "773b389b-bd4b-4a41-a93a-0a15bd631185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc5fe91-08d4-469c-b251-836bc7d139d0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b50f1f7-45ed-4073-b8e9-7cc584d6c8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9e09d6-aa72-46b8-9471-469212664fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d914af-aa21-44f4-877a-a6f7dc6d6ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d4e8a8-2b36-4b19-8a12-c068cc4d516e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc50800-007b-4c5c-b564-fa85170e1635",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b92d77f-58e1-4e08-b3c2-264603feab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29869b4-ff21-4641-a6d1-5421127c9f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555143ce-5e55-44a1-9792-05b4bc7b0870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c2becd-44ad-4742-be2e-21d1d48db58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30da2bc-f8f2-4197-8014-e31350ba78a0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c273bde-ea89-4f47-a5d8-e84e04c4c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff997d6b-11c9-4001-a811-810ada819490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fa8e1d-a050-48e3-9b17-fe8900dadd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5965da1-13a5-4b14-b583-31cc7b6d3f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78adddac-b0ab-46a6-9c27-ee5f2f100ae8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0102d336-5740-4b48-97a6-ef0846971ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75537c42-0d46-48e6-904d-eb47b3f5fc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2285bcd3-e930-4e0f-ab8a-763fd0ef030d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "977037b9-f13c-4cde-b781-c3392eae1fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570767b6-dd6c-4a7f-b4be-524d55375609",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d3a4b-fa89-450f-b7a5-cfe5e4b881ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5668604-cf9d-4d6b-83b3-4638593ed805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa136a80-62dd-4ea5-b6a3-6bf0090030c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaf5cf3-7323-4feb-96b6-b3052d869a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214521e9-d9a1-4dee-9212-81db0b398470",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899fe0c6-09cf-4232-93c6-01eda4e1bbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9ac5e5-eb9b-4251-9201-65798903be64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3972e127-3a9e-4383-9d97-050c44b33f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "053911e1-44ac-405d-b4c5-95878f98bae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dfff33-b8ec-4f23-834c-8771f500b757",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd99439-1d7b-4979-a8bd-b0a6aeee60e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f17309a-272d-416f-931f-a0d5cf4290ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acd3aa7-ccb9-431a-948d-9f1eed2675f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72456824-ed5b-4f8b-b1f9-08d5f973b861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffab6872-3d44-47f6-9709-293880843d21",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd628e6b-e337-4abb-b088-768ac359b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532f03be-8b55-446d-90eb-40066407cc1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cf85d7-a754-4b7b-8efd-5d05041681b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d61f5a-4d51-4121-bde6-a5c8c5f2ae35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5192ba8e-6848-4056-a31b-3cf8398f5e04",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b74cf28-e926-488f-a56e-cdd4e776f8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa11767a-307b-432c-a298-d70579660fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e12f83-bfdf-4c7a-aaee-95049dde58a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2503fb61-952d-4b62-b6f9-438de7e2ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cfd581-9b79-48bc-94c6-c298fe2a0b3b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3062568-b421-43c4-bf73-7c4adf26ba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ce6c51-b261-4513-b6ae-94db47e7035b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08844a4b-5a37-45f3-8c38-a0aa68aed52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb7f870-e1ff-4ab4-97bf-6918a597c20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b741480-4ba1-4082-bda4-387c62d62239",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc90c137-2395-4f37-a979-c8bd78c760bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66416a24-0fcf-4cf8-8e50-b4707d0e125e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c80f9b-5620-4a57-bccb-6bf8bae9d014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7dfa6e-ead1-4f6b-b939-f79e8e103aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c54f4a-5007-4b61-88e1-c1f6894c50b1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdafb05-c64c-49b4-b9d1-9ff6e356943c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6dba65-95da-477d-b0e2-0e65bc0e1bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba95413-8b22-4ff0-a853-1e126f97070e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e32824a6-f329-47d1-a09c-66b66c85d76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8941fc3f-a421-4781-9708-4d08fa4a7b6e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af084516-672d-418f-8fec-c44b60d43919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "579dcd43-f090-4fd4-8699-660acaba98a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7433bd66-50e0-4d9d-891e-7ed20265d864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36e5b0a3-ee2c-40ff-a18b-fe4917b32bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abc6425-c836-446f-a7d1-a1f66f3264f7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51aac0c3-54ee-48d8-b390-0ac6b2871002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34faebe3-8901-4dbe-bf27-a99fe0078473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef542da8-8ee2-4841-8321-babfc0708813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78ebce27-ddb6-4824-a176-d6a6f7bf2b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c087a9a-b597-4ef1-8e4c-ad96919050f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80171d1c-27b2-428c-84a0-c1bf7a9ab39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd496956-ba24-451e-98fc-29d3968e5138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278b3005-3852-4423-af62-b6cb92abde93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e048ad-00fd-4061-ae66-9bb07797057f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34ba60b-6095-4b3b-85de-9dd47e9f9370",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faffd38a-f9aa-4423-bedc-8524c75759e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d77cea-93f6-4b9c-98d1-5f9da085a239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b50d54-92cd-42b9-8719-0c95835f7937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb596db-fec1-463e-984b-491f0591f937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089f3ba7-6559-4a17-9a62-d432ba187931",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3fe4d91-596d-4aad-a2f0-0579b05ba113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9647ef-29e3-4947-970c-348e4bb70b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3928a2-446e-477b-94b4-642c164a3947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d743d1-c7c9-40ae-9e1a-5e73fc7730fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81880b0-33e2-4c8e-931d-4ec3e37bc15c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7ba3a5-3aed-4950-b0ad-bddf667968a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a921dc80-1327-4197-89f7-179ea9c61088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06213a3c-6b37-4f6a-863f-fd1cff5ff7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc215cb-8274-4001-8f63-7ffac3d8f885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8249b8f8-6d7f-4eda-97d9-9dd06e52befc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca12c20-1b47-4aa7-b419-914f1fa867f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b8c7bf-ae82-4bd7-902c-28f3fd0262a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b466a55b-5f88-4521-a55f-ab46e725537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba8846a-8360-49f0-8756-d569ee6180fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cb0f6a-b9ae-4b12-83c7-15df4c84bf6a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435ddd28-62ce-4025-9088-306dd64644c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1e05f2-354c-4930-9cc7-5e9d5a05da3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6184ebe3-7048-4c35-83bc-f606901e7d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d456024-1501-4c2c-95bf-f50c698414b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a3c885-7c54-406a-abc5-69a71d7f8e8f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68ea71a-2d77-4e7e-b583-9f098e87e203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e58715-0713-4e7f-9043-46a43620c4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1347229f-b6cd-48c2-a281-fe45b8071ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0954f2-b74a-4a75-8334-57f8ffa98b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75a8b6e-f361-45b2-9173-4aa481be9b70",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de08797d-8abc-49c5-ae76-ea7b4befaa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0915957d-6c59-4771-a68f-d9ecda8b48fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691e69f7-9d4b-4b56-9482-a0feeb3a1697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72d95cde-9ba5-4cea-9530-baecc8820a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5213def1-b5e5-45c0-b42b-d8d594723977",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84321f1a-9fb9-41a8-8a43-c59df1f3ead0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132b7dc1-1130-40bb-9cf1-78362f02c22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a69344b-4aa8-4ef2-a2e5-07a11dc34296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06ee1674-075f-4fcd-86b3-cd787b5e3425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5f2435-e683-4c32-82e9-05377a844a64",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee7d7a7-8172-40e1-8ae3-c8aed4d06ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb2971c-fe6a-49aa-b89f-13ea2f9b6ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6aafa2-798a-4215-9323-0da176fd6e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b077f92f-a008-4562-b354-4d90c8ee9cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621f8163-e947-4b39-b18e-8deaa89f5813",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556443ea-521b-4e6b-bf9e-ef810fd6054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1921b54-4782-4e79-be5a-ab09c3bd7e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3579adc-f7aa-49db-b86f-68aa6d07184b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3376aa-3914-4262-a22f-6b6f3303f11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00c9734-8a39-400d-8edf-efc75b959b66",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94cf456-e10e-42c3-8117-73977c482f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ff95d6-5916-4b70-b2ef-cef89bdbf3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9b4808-56c9-4c60-9a7a-53a9587a7d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "053fec17-9a4d-4a53-adca-8f0bed7b648a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2164da63-bef1-43d1-82dc-0c2e9ecf40a3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7c89b7-06d0-42c0-a2f7-fc6422184eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6a3918-c0d8-4ba9-a021-aef1ef4d775a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acdaa7c-5c8f-4f0c-aa53-d5b662be9ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33fccf2a-b89d-4544-9985-a4e478f2ec09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa765f2-f34a-413d-be98-df599280a915",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbbf7f3-519e-46b3-a29f-c88772e0ed85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838fd9c7-86d2-4785-9225-728d599b23a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d13f001-6ccc-4fe9-bbdc-1c098fbebbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "902af28b-b324-4aad-bfd9-540ead35c531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49ae1b0-6685-4520-b550-4e9618bd0e16",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05488c4-9581-4089-a49f-c4f478d10983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ce13ac-e3c3-43f9-b003-3ceaac96f46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b00f27-9a04-4fbd-944c-9a4f41567551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9d97da-c7d6-442e-80d3-6bb12a4ec7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93804a10-aa31-4319-bfae-b0fe5931e555",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557be08c-23d1-42f6-9130-e855b8765fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e77692-c7a8-4c8c-8cdf-c9f6b3a6e975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a08c89-29b0-444e-962a-abce5705f632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9da3617-90ab-4500-8eec-c52ca61b7245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789ba301-1554-4229-9297-5dd41b8d42bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ed0879-80c5-4a77-91b3-983ce50d6e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7419ed4-96cb-4b49-99f5-69b5d2bb38e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7683b0b-e8a6-4b18-bee5-3280cd745e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad69f00-fda9-4306-96b6-9c5c990dbc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fd0762-6a58-479d-9c81-4f4d32239c70",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c92b9f-989b-49b8-be0a-82476848ff0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb908aa-03c4-4bb9-9272-cc7a9a3fee4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2c7971-3481-4acb-b9f5-5ec91551c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9d4bf7-647a-49c8-b9e7-018bd9455455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f943a63-3fd5-4891-b6f5-b2611e336789",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc921eb-bed9-4036-a3ac-54c464350bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da07d5e-048d-43d3-a3dc-4d9aa8ce407d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673c3973-2aab-454b-9240-930b90057a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b19c95-c9d4-4e8f-abff-f39a061eb82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7722c3-e92e-47dc-9172-12ae86100449",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3b9b0e-2e8a-448b-9499-f906ee3d7ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc2ed80-9452-4535-ad9e-841b955afff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb6d8d2-0581-4856-a487-85075974b308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f90cae9-a12f-4442-860b-33f158207d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7734f317-609b-4ad9-849e-898e3b23a524",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9d5266-cefc-4348-9a0f-4bc66ae0fabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9c66b5-32e7-44e6-8bbf-5c4cd3e1b473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eae26fe-e76d-4a36-a3e4-d464ff7168cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "434aa6d3-bea2-430d-a198-d5745a42f377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d44e7f9-149f-4126-be81-b314539cf97f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df99993-c815-4383-9bef-d910fd395194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad852a63-beb1-42fa-90cf-b73212e32022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca9ea10-2279-48cc-98fc-230490b9d985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "364380ac-f9db-42e2-9e11-0486decc9bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba00ba4-43f2-424f-ba82-8baebfb2b886",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcae76d-23df-47cb-b8ff-a05c8e91c86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053420f6-852e-4d07-a72e-689ada27ddb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973a20ca-4f30-4e5e-900d-14ab6bb9aee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd02201-ebfe-4de2-84be-df5a014d4ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905f7334-4fc6-4eb9-8e1e-9080a93c56e0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda13ecd-92b3-4feb-a5ca-a67c266a0d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b424b6de-70a9-4136-9547-579708b5845d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae53a6d-ec79-4b42-8381-b5fbd942ea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb07cd5-6703-4020-8781-9cbea431145c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a2bd56-794c-4526-ba81-d095fe1a5181",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f575fd05-22fb-4edc-b164-8fa218cb66fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e3ddaf-87ba-448c-8ad6-03eb7b4d7131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fce847-ff0f-4eea-a77e-cc70447ae3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a772c89-3fe8-4a37-a72a-522b4f5e9611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6732be7-0b1a-40c1-977f-96d0854873e5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b803a862-a2da-4e87-a072-3a289be59b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb05be6-c68c-4748-8a7a-ed541c3ed68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74314956-888c-4ed6-b1fd-2b5a6322ab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7e9233-00e2-4a96-8b99-dcfeaf456d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b588c9f-bb9c-4d0b-b3a2-d97117b88635",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388dae94-b872-421e-a547-f817ce41d237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a0618a-2e8a-43d1-836c-dcb8d18e8f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c76e739-a4dc-4d19-8294-b4b14b9483ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2b6802-182b-4d8b-809e-4dae866574be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4863d28d-9a28-4560-adf8-5fdafa9f89c0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2a5761-c0a5-47fb-8e73-41830675053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e5e83f-a391-4dfd-ad60-18fcb24ef944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3091fc34-d28d-4a11-b2a3-320956aa0c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "205c6811-82cb-497c-80e2-d60527f52b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa264cf-4305-49d9-8ba2-be65126ff334",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2df9a9-3b23-4b23-9cd7-14fef77784f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb5e48f-eb5f-4328-91e5-ad36d565c2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f83f82-9b71-4ddb-8847-50c95c83a92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ad7ddd-b1ef-437a-a029-7e53a3244e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77303905-9f47-4b9e-9b5c-389a325d92d0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9597f2a-abfc-4bdf-8200-01d6d4c3dfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477222d1-91a6-4b40-aedc-2d97b84b3456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a026bc7-4378-4372-9c3d-82069d1e1ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab89763f-7f84-43e3-a6d5-4df5638127ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d860ea3f-fabd-4e21-9786-563a97b1405b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcb2086-32e1-479e-bca1-57db926c2ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb7e7c9-0058-483f-9e6a-a28130e883f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c487e7c-df5f-4e8b-82d8-413587641eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c7deba-765a-4ccc-8e1b-afd86bc5ccea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba90c131-6cb4-4824-b093-0d3083395c89",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b32631b-ddf1-46b5-8d36-9d7124b28d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc566b7-add5-425c-8a85-4dfe9f397811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd45a2fa-6533-443b-9c14-08e47026afb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b075ef18-a121-42e5-b953-761f21c9df01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107ff86c-672b-4e8b-b82f-6c1c52cf553b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2676e4-e990-463b-9b36-5758aaec9442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8fc683-acfb-44c9-b4b8-4897dc9678cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfd09e1-e609-4661-8795-19f5f081fe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c25cfc2-b188-426f-b79b-af5fd6481cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd782e7f-773d-4b4a-89df-3473da4baf01",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba933cd9-d5fa-4e8c-8500-6bb01d3fbb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f19c2ec-638c-48ae-9abf-eacca5d5a9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d44783-d991-482a-bb15-73c15202dd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdc1fa5-3720-43c4-8d14-41651fbc302c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcff5f8a-a2d3-4c7a-a888-46e367678c48",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17feabdc-e36e-4baa-ae9b-a6cc4cd5a26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5aad53-bd53-4787-8066-a5f4148fc93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09e0760-4d3b-4d52-b27b-bc163071dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "611ff2eb-b1f2-455e-8d14-09d3796f789e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e204d91a-5cb1-4bfe-8a49-d650e70d1ede",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cb8d64-86cd-48e7-96a8-4d59961284cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5c7f9c-7101-4a48-9709-84c1db518b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94f09f4-df2d-4162-a58f-4c2444bb41ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e396978e-d8bd-414c-b677-ad38d263d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e10172c-e45c-4252-9a3a-fd2d997660d0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6a5157-1019-4f32-8c75-5010f6ddeac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1139d5aa-dd36-45c2-8917-15626f8b4a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad20cbc-808d-4a3d-9d93-d8a2535d9ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "600e6740-e44c-45af-bca2-d9457c7c9033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fb6ecd-6a41-4968-ac8e-552456608a2e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e0db95-4e21-46af-b80b-92c5d1ffab29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1333da67-1c0c-4f18-9b7a-da3613361515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259e804c-8348-4890-94ba-f9956b19b1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00760d52-2706-4880-97c6-0c273e4afb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdd86ba-3cd9-4312-8244-5843cf67862a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c8dced-c9c2-4c62-a746-452e00b2146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6f56eb-9d50-4ade-b591-58f65c76809f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50c37b3-489e-4cf8-ba75-018a6cb410a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6c8829-f2bf-4def-9dc4-896846eb115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0aafc5-da0f-405b-a628-b4f3d76e7fa2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dc3295-f779-4dd7-935e-dfcb498f13a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7452898-71c7-4c03-8631-ffc19a8941dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2ac1eb-ab12-462a-a298-d4e057c535f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2071531-1c15-44d7-9166-8e2510a7c3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a52e4f-f2bd-4c6c-9767-da91d6d0b162",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c2253c-a60a-4c41-84ed-7e848590cc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f24a47-51d8-4450-87b1-4f6dab71900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967f947b-050d-451f-876a-c2bcd4d38eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b933afee-955f-4736-bae2-4026d8952f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89cdad1-15fa-487f-863e-0348eacbec2d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf3912e-78f9-43f2-9ef9-a3e8f2307406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a645c3-ce60-4095-9dbe-e72a7f775be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef76036-027a-4830-805f-26ee7551db0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9be74a9b-9eec-415e-a4c8-9f569c833c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7999787-bf71-4d32-8730-6fad5c0edc18",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92297bd2-5508-41c8-b186-33a66ab19344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73fe6af-0d9a-4684-a9b2-213563b03f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c725b7-c421-45cc-a0d5-bfee998c8321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5069320-b568-49d8-a17f-ef25c8e7590b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59db59a9-65e0-4ecd-b454-905a5086cff8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72622e24-15f5-4493-948c-487b6d1c4fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f39751-78cf-46d4-8fe4-687ba7346391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd75ec4-ff87-4125-b3ac-7c5ada3b6268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05ea5ef8-5fcb-45d5-994a-0cc2200fafe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781633d9-8f64-42c8-a82a-44eae00c18fd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9473a39e-300a-4a18-a555-11d89c5ffe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b241cc-a450-4b9b-909f-e725d19af72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfb9c37-4021-4b9d-bc15-18969fa3ebe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a27ea6-346d-40d2-bae0-31f45a0194ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7f53e9-896d-4410-a5eb-8bdbaebe5cd2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ab3872-a0ee-4a31-8876-b67222a16c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae7eeb7-0b08-43e1-a7b3-fe497cc66a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffce3e65-2cbf-4cd7-a411-3451637741a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcbe357-faf0-49e8-936d-52b3e0ec9fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc999bfd-3622-40c1-b94f-4cbad38a2ca1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bd04ac-6dcd-417e-ae96-29b04e4a01ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cdfb28-5f21-45f3-bdb5-e99cc609d56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baedaee0-c057-453f-881f-c25337a0161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eae9927-ea55-4416-8f78-38f862f734d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cf91f4-94be-420e-ba7f-d43b79ee4adf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21da40f5-34de-4045-902d-a8d3f6d57dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407c689d-68d7-4335-b724-14eb79e1eabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc0dc70-be06-4296-ac4e-42e7cbce4403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eacbb8c5-dce8-4c93-96e2-906d3337bff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a0bc80-1123-459b-96ea-26d2fa930a3a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985712bc-2f6a-4c50-acfd-cea7f8b6a2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e41998-8d32-4e34-b67c-64635bfd0233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e0d6a6-4440-455e-bb24-5fab2f481ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4765ecc-059c-4cfe-b56d-78482c0db8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e5c856-ecf6-450d-9fc8-d4149e9abda9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346270ba-2a03-408d-a9d3-9e0c3ed6c5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715605fa-7b2b-4857-a95e-0bd0529a4529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8390e93-982d-4b6c-8328-f973c5610ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "71af63cb-e396-4163-bcda-f5a4a938ff9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95758cda-8fce-4e87-a2bc-24bc14f0c681",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c051831-09a6-40f1-9b8d-85396ce3f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c550a558-9630-4b9c-b513-99337337392d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac962f20-a364-4405-b6f3-eb33c78fb531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "614f8f52-c946-40a0-acc1-7e5767df1dc1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a881dac-baa4-49d0-8e20-987f4402da7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96ba89b5-819b-4872-9b4a-7d8d2a655e9b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340dcd4-012e-46de-a1cd-6626146621e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39031055-c217-4e63-9d5c-98e135a0ed53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b57141-ae72-435d-92f6-c30e05ece86d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c062f7c8-29b2-4934-b127-d32268715266"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dabac15-ce2e-4dcc-a80e-5f6980d56164",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e84ccf6c-dca3-4fd7-a0a0-5bc82b413ae3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8a08a2a-4a97-425d-bc0d-2db663c95e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6211a32-da35-4db2-80bf-2b5671d52c01"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a6559d9d-1152-41fd-8ffa-55af8c7b5e13",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38808d01-3956-4303-9c12-57d6a34e3f1f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ba4c7b2-7dbb-4101-b22f-06690aae41c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e63c4e72-127e-45c3-9928-4df49b914d66"
                }
              }
            ]
          },
          {
            "id": "90a7075d-950c-454e-a8c2-d141e2deac46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d811129-135c-45bf-803f-e6e64c78c396",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2d214234-8e14-4787-b10f-6cf0fff92630",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd42414-344a-458f-9189-aec653ce3e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c967bf90-3977-4c9e-b89e-ffc16c842a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640ac3cb-885c-4aa8-90c9-4c9385f3e4f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f176f825-5ee6-4a5f-b3a6-61e1aee9ee71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba8f3792-12b5-44b4-8ec4-c28856b3a9f6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ee73ff7-804b-4e55-a637-71474b54d71e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "addd18b2-b3eb-4725-8aa6-95e481c0fb45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0218eb7-bce3-46fe-8acb-66791ad8929b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8494c9d-c5da-4db4-8ba5-0571eacc194c"
                    }
                  }
                ]
              },
              {
                "id": "28de1b32-69cd-4c9f-9033-89d23b9574b7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95cc36b4-3b2f-464c-96b6-b4438845371a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c546f182-867c-40dd-88e7-afe61254a71a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "904ca02a-b9a7-4fa5-99e8-d50d02680548",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34c50ce7-4bb1-4cbb-afec-1c5d2545e723"
                    }
                  }
                ]
              },
              {
                "id": "eb225c44-509e-4074-bc4e-9cd6fb8ec980",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38cda9c2-5264-4e55-a827-a7ac32d71be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bd1658d-2469-45b0-9a82-a1ae337b9690"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63790205-ac69-410c-a6c1-9ed6235dc76c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63f0f4c9-dc12-407e-a0a8-96baf49a7df1"
                    }
                  }
                ]
              },
              {
                "id": "472736eb-eac2-41f9-bf61-1e32522a0249",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a505201-0a6a-49f0-9e49-79f49f3c0f61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0e82505-7718-4d45-a0e3-32ba462820ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94de4bd5-0f39-4b61-96bf-62cdfc6a221b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "932bde6d-61c2-42ca-a6b9-1b6faa3625a8"
                    }
                  }
                ]
              },
              {
                "id": "38c9e2b5-3b73-4cf1-9915-18e9f942daf8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8707b883-953f-4405-ad61-4c5aee18d35d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48897498-8a95-41b8-901d-e29c87d04678"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3264e0a0-2234-458e-b3d5-15af74931de3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9125db93-f8e7-4f5d-9d8a-6cb2a7739d0a"
                    }
                  }
                ]
              },
              {
                "id": "9e0a7bcd-9e95-4cbf-899a-d39b2fddeef8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc872141-0d7e-40f3-932c-6ca75e54e49a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df865899-da57-4e1e-9947-73e206cebdbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e28a98d-b7f9-4f5e-a939-b44bbf522b44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18dc2ef8-dac9-43b5-94c9-fd2a59c765b1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ba8a4b6-45f1-4782-bf7a-51f2ba82c844",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "affc7ff5-c247-469a-8397-ba4bef730c9e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99e805f8-19ec-4294-9a44-e8e331bc3bc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cce762e0-6027-4184-9d65-57ace66807fb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c9d84b3-d90b-48a1-a9dc-23885f94021e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2058657c-d72d-43a9-b407-90a78fd17850"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c091e229-09e8-4413-aa70-68a6b906d41c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c02e26d1-e71d-4310-9058-ddc93bc0008f"
            }
          }
        ]
      },
      {
        "id": "a68069d5-07af-4174-83b1-e89b48e29430",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "18651748-65c6-460f-8acc-a6eb760b65f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c3c6efd-c9d0-4dc3-b3b5-822ed7e5790f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee3d6b28-d119-4903-ad3d-0010421ac36d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c3fac2-f998-4568-8d0d-cfa37e253886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71cf3b4-ff36-472c-8442-e793687fa78e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296526af-c18b-4d0e-b490-342eac64a33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac70d0f-d5cc-4b1e-9ecf-033859a844c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4393267-3e27-4538-a12f-89f1a3b31d66",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f606dc-71b9-4892-8fbd-3a4ed82064ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e445de33-9ccb-43b8-b7fc-42fd5fcde60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370e9e92-04c4-4416-aff9-4ff99386ff1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d48e7c3a-38f8-46ba-9cb9-4bcdc172145e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa445df-afb3-49ff-9df0-d9556ea1f598",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10497cb-c130-4f16-94b2-871a10beb27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c21402e-f209-4894-ae0e-e561f7959966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6c8dd1-1f35-4693-a783-e938354d1be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eaea2fd-a0b3-4661-8ff8-de0d78774f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b5b2f2-4e91-404a-a837-eb6ee3a51ed0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e904fe42-5f50-4d99-995e-e9f8479c477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5496da-febd-4400-9fc1-9ccb6dbf4fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4e9fc3-05d9-48df-8b4d-43c05b780bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb542eb9-bb35-4871-ab97-c352ccc822e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b9393a-7b19-42d3-9f2c-00a0a9bea527",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42ec7c6-99c9-4433-bded-b77078dc724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f02c46a-8e1d-45f5-ad4e-06794f4e64bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c856e0e-798d-49a2-b67a-22dfddfa88d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95bde1b7-2ec4-4d11-8fc4-c69ab7550e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549f89d0-5371-4da3-88b1-a651e4f09b50",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668e925-ed70-4b60-a057-d761dc68c8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e2b693-7a64-47ce-bac6-f14dbfa26bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b242aba-142c-497f-b543-8ee65b821548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6368a7b5-f4b4-4887-b555-76e99c847f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f06da8d-6ebd-4732-822f-8001526abd4a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eccaf7c-ad3b-451a-8a17-1fc185e7994e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56609cb-9b94-4861-8f40-fb644d7f985e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13243f52-8106-4d9c-a492-0c6553623973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a834b1-804f-4482-92fd-fb2e10b35a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a44b862-32d4-48a2-8863-df45da8433e9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940c2035-531c-4208-a91f-40e73692b50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d89311f-a1ac-40a4-a58c-d67011dcdf2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25061fd6-8986-4f0a-9294-e6f65121cf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd6839c-9903-44ae-9cfa-feec9498422d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cd8654-cd6a-467b-a42c-d1f1bd47da56",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1673808-7f0c-4160-ad5c-2d88b18defc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ed2867-9eb2-4cfd-b20b-802af8192961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b60b88f-a2f2-4c3f-b4a3-0a5fc8a070b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba68851-6851-427b-8317-2616f243da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60c621f-4278-4db9-a4e1-5c2011390016",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634dc8d9-b6b3-46c1-b147-daba97c9bf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72964d6c-6652-4ed6-bf09-40edd5932339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f475d61-5507-425b-8a0e-8f12f805bea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadb888d-f3a5-41dd-b9dc-6a141eb098f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ef8f47-0cba-422a-ba89-3d6c8051dc82",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c15b4c1-2247-48d3-942d-baf4bfc575cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f9aa24-cd55-442d-a599-b49f45748f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0919730f-9798-4c77-8664-8435a1663152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c0525f6f-f46d-42ce-8442-b296052b3815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d46760-38a8-49f6-93c4-b3e3e18d2acf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972971a1-6bef-4cea-a185-90ace729b731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd2902f-c2ba-40fc-af55-c884837b7273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da641464-f0f6-40a5-b233-ab4762a758f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6464633b-37c5-4a3a-a25c-883d117facc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67607cf6-e88c-472a-bfe7-0b0c5582a3ef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc0d30d-594d-4bcf-9eb5-22d258433851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3163f30-c1c1-4da1-b80a-8ae5987efea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e030f379-c7ec-4a60-b794-999267b8ea4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "357a52be-0884-4c3e-9b07-801fadca1157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51752a15-b3ef-4b85-8ab9-03ca7c3dcf95",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36292a17-ff6a-4399-96bc-deb44b3631b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5707f69-4a3e-404d-a373-2e0bbe232860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997a1ced-6ebc-4ba4-98fd-70d5504e5e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f028f4-372b-40f4-a476-1892bb4b7b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c5c16d-f2ed-4c36-ab0a-9d66954a7370",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401350db-2a93-46a0-ae26-a5942a799b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c162a7a1-66e8-48be-acec-2f4107f27c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf8a287-f539-44bd-8300-9798aceafea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d47b93-7ef5-4708-9558-2090df85715c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f57e9d6-f275-4f0d-b233-197041e72446",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023d7f3b-6126-4a4d-bc9e-4ec4349a8536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2887ecc-a6a7-437f-8714-e43f30aa9f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7742fc60-3c27-4261-833e-ce107b5feb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d67ff5-431f-472f-ab3e-b7fd949d439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1bfbfe-397f-451e-8eeb-e375c9cd00b9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03533910-946c-4bcd-a37c-797f9b4c3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e7c500-ec8d-4548-9520-aa8cb5964ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724d3967-1c85-4d3e-9db7-dc8bba3a26c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c10d165-d43b-4533-92e1-f0d2a234a10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4d4538-598f-4627-b54b-9e24abdb9b46",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c12af61-c987-4429-a4c7-8db3e496f7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9e1fb7-25ba-420f-843e-3b5ccf0b220b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f8d240-a3cc-4f68-989b-394b552e6a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9c1afa-ec1d-40fd-8022-066197a7beb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841cc9d9-5f84-4c46-bc33-36d622f49c5a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eb3a58-0c9b-4fb7-8158-72c418d3eb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1e0724-0712-4d28-a872-a3f2b27c6400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b7aae5-4b58-4f51-8e66-aee46061ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70343840-c73d-4ffd-bee5-17c5b3a7f457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2916328c-3ef8-4435-80d7-7dce42a2841f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff4a8cc-092f-4d86-8ced-97e059e36e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df421fc-6792-4e70-9d22-41f45192f5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f9b2d3-cd0e-4fd1-9ecc-47eccd64c056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6d30a9-c6c7-435b-9139-cbb270bdbc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea415d81-ba23-4e6f-a33d-bac915889d5c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98dd18c-5bfa-4ed7-b32c-06b20fb99f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b533d07a-683e-480e-8add-32c6e1750685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a811337c-06c9-48e4-bf0a-aca775370a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1529eab9-7f61-476d-aab4-773c75024ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51efd609-bf1d-4c61-b1c6-75393d191767",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daaa4f4-f204-4d5c-b0af-c0e4fe1fe657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b4a98b-b7f7-41a2-b444-279920273640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a06779-d23f-4c7b-88fb-74698fa9e69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2e4012-7e9a-4412-a0c6-400cde9245b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f15b53-b823-4d12-9a17-618af2e6f67f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d67aba-10a5-41ad-a826-550adf9f1def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2814c6-4b89-439d-9085-e6056650c5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ba0532-9fe9-497b-82f4-d45b61811385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f813cb-02bd-4142-8631-c7969c5ab9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc44a3a-66d8-45b6-874c-f71b68c0664e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2acf600-e969-479e-ab37-a48ea39ef400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3164fd-df56-45be-be06-b25dfad04186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5150e254-b531-44c3-9469-b84d70636025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29afc5b6-a938-4ece-90ad-ad9225f1714b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4283f71-8842-4ba5-9e04-83a24454c619",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b039a2c-a4cf-4f6d-b68e-ed10599a03f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31edf046-bf91-4e43-9dbb-a103cd4ea3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db26283e-677f-4cb5-b114-8d4aa3e27fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6001da53-c557-455e-a443-60859780c0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e138e358-82e4-4b07-adae-8ba78537ea14",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db28aeb1-51a7-43f5-b3de-3a3d7fab4267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521f9036-a598-495d-8973-5582138ee558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14eaa6a-2585-4b21-b6f7-8f3821b876f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95b206e-705a-469f-8ae7-c092bf868933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2137e983-5030-4f17-9196-6f3c9013d109",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759a4a72-ee5f-4838-bfd7-16453f0547b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9bbe49-b292-4b6b-a793-7822d73d8485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3927d3a8-30fd-41ad-8fd3-bc8c6d86c74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c69915-caf2-4ff4-bd19-877fff9aa702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ee448e-4a43-43fd-a26d-c81ceb935743",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01728937-2f5a-417a-a870-2a262b31778e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0659f75-55b5-4b49-80ae-ee031410a96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103c754c-9e58-447b-9a33-4fe340c24862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4b0b66-9249-46ad-bdf2-4b87d6a1e41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b377953f-6b71-40f8-9471-8f17b24c9e5a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f349607a-be04-44ab-8664-4b3521bab69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e0dceb-2ef2-4aad-8d04-fd48a7daa765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec97775f-b993-4654-818a-3fe2b2b4c06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d44a17-c128-4464-9a01-73db8c059e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88bc0da-ec92-4564-89fc-43810a44d94c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e82caf5-d8fa-4d95-8288-5c8b6f4696b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0267e0-5c0d-477f-9325-9453ce1a29bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f648a7-cf0f-4620-97c3-4a447968e00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "720f158a-1484-4ba1-a62b-5be88b9a6550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594fec3d-1d82-4fc2-962f-c08de57e1327",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048566cd-865b-4866-b0e1-65118d7ee598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8adcf1-85d3-4a92-81fd-b46e8a803ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0459ad60-94a8-4929-b9a7-697f6882375b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a34435-6672-4392-bffd-32bc5ec80954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b270fb-3692-4d78-a86c-5edc0b0133e7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dfbe75-e6fa-46da-860f-e48de23a10c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76008e62-052b-4a8f-9d37-50f069eda094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b773618-3390-4698-87ee-f454a74aaacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9c480a-bc4e-4e31-aa1e-f0829b82a8ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5babae70-933a-4a13-aaf5-c665118b4e57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "627f4e97-3db8-4054-ae7c-ec136649757d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0b9c07-3a00-4eb3-993c-4c836aaa0ce8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6639e9e3-343b-40e5-8fbd-d3d0cb01e0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a6436f-101a-4399-b4d3-63cd7839c176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f930520a-1c66-401f-a115-2711f8fac0de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8b8cac1-d82a-4e7a-a7e5-3e515eee275c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "786b7632-dd7a-4c3a-af8c-6eef88f7bb1a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5d39d91-e12c-4db2-a0d7-64a596c5903f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "098f2e42-4eae-4913-a5c4-08945784b67d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a872845-dc26-4ce6-b94d-ea9a7ebf0bbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fba4e409-101d-4bed-8020-523966f184d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1fb64f6-92c1-404f-bf5e-4c637a96922a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2af7d8d-dd53-4852-8dd3-68646c8eeee7"
            }
          }
        ]
      },
      {
        "id": "0b7c5a9b-fbec-42c8-bc4b-21b8a437c1a1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7ee0bf69-19d2-4a57-8375-0f481bcb61f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b9c9a6f-8ed4-496b-ad86-9f3ea2d79975",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5616d2db-ab35-48d2-a5f2-cd098699ec27",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad958baa-596d-4a96-ba5c-901cf09852e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9008e6-9281-4236-8a48-fa13a759caf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694648cf-1a3a-47e5-a296-04a73eca13a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a0ffc3-5d92-4a48-80b7-d3f2e993d05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81358f15-00fe-4a8d-a99f-1e9741c3c192",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7222dd-4209-4e6a-8527-2511189bf007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121a5be6-451a-45f6-9344-94660cd050eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd1d01d-77b4-401b-b317-e26f69a741d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "57442508-e894-456a-bb5a-d032239a0968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438323d1-fb7a-4dab-9398-e6001645d104",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6337c78f-96e8-42a2-afbb-9c535e8f8994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025b9eb2-443d-4074-b3af-5af346eb52ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d294b5f-2679-45b8-a40d-538932fa8802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab7ec2b-bf12-43fc-87e2-f8a1b45cb830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbca08d-d57f-4f44-a782-d94de4b987ea",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cb82d3-1d4c-401d-97c0-4de5cd7d5d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65002d60-64c2-4e97-b01f-ba954e02bb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214f16eb-16df-4edc-81a1-e98419af4e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "056898a1-7a0c-4c27-90c5-46c39c387f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885f9efd-3dc2-4007-bf55-8629a415bab2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52c5b74-693a-4382-8cf7-043c9508159c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa02c84-e8c0-40ae-87ab-9569ef42d0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0923e8b-b8ac-40b2-a783-6f471974549b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b172bc8-800b-4c45-848a-8f76c9568293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0ed574-4dd1-4085-99d4-b91427c3414d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e41283-8323-4861-8958-83e1186e921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf09ece-8dad-4ac3-abba-f873fabe7145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e17ac9a-62a8-4f84-ab33-d6d061150a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "babaeabd-3eb1-4cb3-9570-831324f3e66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da3628a-09ec-4e38-bae2-07ef66d2209a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d44ac8e-ec59-4ad6-9aad-8bfee79eb64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d3725b-6475-4b1a-a22f-44275e15cc17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc0eb5c-41f8-4772-89cc-3a6a87333a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "997bc9a4-f247-41fb-9809-a535e77650df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f54dcb-eab9-416b-9032-13e33b6061ce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af929283-8e5f-411d-b7c7-6b828efa8c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775fd169-b782-4e75-aa35-cbe0492a41e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89dbb353-a0f6-4efd-b55d-b335cb2aecbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f68cbe-cc9c-4537-8485-8cc6c6f229db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eb15d5-6ca0-4ff7-ae17-3425163bd4e3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f90f05-86ae-4ff6-a56a-d6a4c2496ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b906149-0522-4fc8-b817-b3eefd702614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22a2fca-c5a1-46d8-b420-1f6cd51a5b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "378ed417-18f3-47de-9598-6477b6ee4ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8f301f-7a53-4502-afc5-ea094dc72765",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b813f83-84dd-4971-8972-d5c9223d34e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92e8860-5a10-4180-b86e-a1cf2d057562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ed43a8-21c3-4ec0-a501-bd15434114ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db165f87-25a2-4f56-97d8-e3673bd68b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf251698-0ce1-405c-90c3-0b7b4f980f88",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7722c25-6768-4d87-a1b7-e131cae67c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56769751-20b7-42b3-9115-85ead8101057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdde5182-3a4b-4acf-b4f3-849fc620052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4fadd9-f8bd-4cd7-ba6a-c5ee3bde596c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249ab535-fc5f-4178-a6cd-b8272c873d3e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5de8ec6-6ebd-49bd-9c54-d8a5c8bbd887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff668b90-4da2-46af-bdf6-e6694e59ccf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f0db8a-fdf8-4e98-ae3a-09d292b0b1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a23935ff-1bb9-4884-83ba-34f95152b2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2ab2e3-0305-4f37-bf54-5adc6a9f381f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db474ad7-c658-4522-8318-6185c85e9ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebafbd3-7be3-4c20-a4ef-c0f71c0e37c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dc3eba-bff4-4021-9a64-e1167c1d7387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8827ee-5184-49a9-9fd2-3b86bbed90d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730dbbc9-4488-4297-b3a4-ea5411e55be8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074c07ea-d264-4735-94d6-7a0da5af1975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada63b46-0b14-4d67-8ec6-27108f9fcfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16214be5-c5eb-4a8b-97c9-4e6bad0f1857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb19363-85a2-4a4e-a42d-b709e5a96090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b1ea28-f67f-4332-ab3e-146d219af665",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc87817-3a03-4aa8-b2aa-b3738fe92a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fb0da8-acd2-404b-b7f4-3af9b08ef581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5080e4-6be9-4ab5-b75b-3088d5d5baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6b0a21-ce55-4752-bf3f-2069f3def5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6d5a10-30d5-4b23-9903-70d61392b1f3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc6aa48-1b35-4490-81ac-8c2215d68612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1907eb2-4b33-4a4c-9bbb-aa8ea73446a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ff21db-705a-4afb-8a91-6dcee136194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e9f53f-64ac-4f2a-af3f-ac24d646fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9d7057-31c0-4869-87f8-4e00dd70c66d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4b0113-8c08-4a94-9baf-7188a6a90924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f0deb62-04b3-4d5f-8aae-e0901413f053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9164c5f-3544-4022-a23d-a233258c95a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77d3a7c-d486-48bf-8d82-5ec5b03e185f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9e1ae1-9215-44af-a179-9ae7b6b97995",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce93b499-797a-4da1-aea0-5c7d9b1f7abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cb175a-ff3d-46ae-bcd9-4d2940a4885e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5114f35-03c2-4923-84f1-0b4b0e0e12dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b294d195-1b71-4fb8-adff-e80fcd88edf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1060fe-c932-4ef7-a602-46a5c14074ff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24088d7-dad6-4e07-b530-18c0c9d66e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50b15d5-29ba-47b9-8c5d-115916b3ee7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6669c95f-e16c-49e2-b387-a7a09b498776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ffe967-3aef-445f-9cc4-0d301b867a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28aff1e-8f77-4c74-8a92-c24bfd30fe92",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4bd5bc-e282-4bd7-976b-a616ae819de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132670a2-b611-4e26-ab2d-3224170459db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def4c48c-792a-4feb-8549-6842bb394fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfecc239-ed15-4336-8957-33e33ef6fb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576e2134-14ea-4726-b137-7ba25dd19e98",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c326398d-d4e0-413d-801c-1e494b02fa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703f9751-fcf6-4ab6-875f-cdd5eac1d75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdeee56-295c-49fd-96f9-29bf20e1f5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2f0216-aa7c-4852-93c3-f0a454d16903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380046d7-b808-4c7a-b3bc-79527dd0fb85",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fdf3465-6c16-4ad2-876a-fc39fc8acf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbd9742-e120-4802-b71e-5422588a2278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916495b9-be04-4631-bff5-461cef982152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a612d66-ae71-431b-838b-14ac7c5de30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c560b620-581b-4022-978e-c5d81385e5a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c50a8ad-9610-45c2-b29e-7b2493f1c4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce32bfb-588a-43e9-93bc-4d228a6269d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db694e87-0fa9-4ce5-abca-87803267d1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dfdcab-8a1f-4292-b15a-62e5a0c82394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82138929-3006-4a1d-81f0-43025bc4d538",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87db1a8c-a2f7-4da0-9b3c-cf87df46954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4271349c-6b16-4ddc-a862-5ded9b8ae854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec101505-60c5-448d-8ca7-dde92e396a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f25e81-a0d7-4034-a312-920daf8e761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ad93ec-75bd-4d5e-9830-a25e01c5c4aa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596cfd5f-4a17-4e0b-87b7-bf62bcce6005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe66a308-8125-4d8d-b8c5-a234668a7eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9132b607-f0a6-41b8-a0a2-987738056fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40195c61-8d54-4b0b-b8c6-ac4f19393e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d595d640-4b2f-4bb8-aaec-e18ef7787d54",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb598c4c-b664-4f69-8800-ea9e85a38376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df36d4f-3648-4a44-927a-a364d2376678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6ebe94-0165-4bcb-8bd8-83121f618b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23adaffa-920e-4052-ade7-3c6817bcd47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f773700f-e892-4545-806e-52080679cebe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9601aaf4-97bc-4b09-a9de-759db49e161f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e50e41-5183-4c88-a9b1-cb0ec62d313c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c190bf2a-d417-4a4a-a183-9c44184244fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a68414-7dd5-4bca-b579-70a3daad802d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6018ee0e-1667-43d1-b45e-f7cfa62e74d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651b5839-95c3-4fc7-a008-a037cfadf0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afed961-bc7a-4ebb-9807-50667ab15e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ede843-768a-4255-bdb9-428af47c90b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f65ab3-fe0a-4151-b216-78c265e432aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b617e2f9-cd94-4de3-a3ac-bb6691d2b4b5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b57807-2178-4307-a43e-ea823eeb1094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef39fec-f627-4ca4-a6c8-5c01210c0b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f2fa22-5c34-4fcf-a577-0251251e6523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d989d48-1df0-4228-9501-3e485f4cdde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c84bb8f-b4c9-4e20-b221-e3ce5d9f9fb6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfcd011-15c8-4db0-a68c-4360f5be2d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879479e5-e4a4-48e5-931f-73a0c4ffc079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35612885-ff1f-42b5-ac75-6c31b4bb5522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1e3e90-5c40-42ce-b11c-91346ba4eef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab47d9e-20e5-4aca-b2ea-15135232a7cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8396381-b2e8-4566-99bd-b76e3796b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39c0ef0-e3d7-4811-9d5f-5e365e546a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0fcc0e-2a8d-499c-8b5a-16502618e625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf4f440-8cd6-40a3-a0a2-065c73cd9280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842516e4-41cc-412a-ac16-d28a762675a4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e998e33b-ece1-4fb9-a365-69d9625b01bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3a43eb-189b-4c16-85cf-8d7fd7a536c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150db1bd-6fcb-4f5e-8e2c-d72ae4d96297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b99df71-8601-4f82-89b3-a13530b6d1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e12d76-27c0-4f1e-9001-5c8e32039399",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69f07a7-466b-4dd7-9da8-f4abeff87b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3602c1a3-ee2b-4447-b084-3dbe15ab7a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7190da-a4be-4818-8d29-9736d35a0c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa23f33-9f74-4e55-8bb9-0f2d301c78dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32425a4-d283-454d-a5c4-bd8fd96a489c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d03f6f-06eb-49b0-8421-1122f0af365d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434ba2e2-0b15-4511-a5d4-c021a58d3ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da2a7d5-6587-4c00-bf10-191773d3a89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad2f96c-14e4-4ff9-97a8-817225aed645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900bb278-af76-4af5-8745-2039d46b5a42",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f414c0-f63b-4ae8-b927-720bdf78bb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572cbf5f-42d9-4a7c-89c8-525e78d5f581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4edd560-0eaa-49b0-a743-70ec5bd547b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70096184-a518-4a71-a6ea-220a3dab4f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e373cd93-a58a-46c4-8956-6702d46b0bf3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ff0176-7620-4869-8a6a-f1e54ff72286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ed13d8-c62c-4d1f-9d74-54dee2d60a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e404aa6-f3a7-4393-87fb-c63ee2fa028c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9dea65-84a3-46ac-894f-0ffaea45f246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c75828-abe2-4fca-9cd4-9ae1d3379042",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13220dc3-78fc-46a3-bdef-ca554e882f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239caf21-7db7-4c61-aeae-3b2827c2a250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82022e2-08dd-4d9f-a656-72d4ae40e70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "538716e5-c092-4cd4-a5ac-620c6a943020"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c387a588-2e71-4a37-8f4d-4599797f4320",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2991b6b-52cc-4077-b37b-1f14a97b91ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0827ec-2f1e-4367-acb2-f954a2763c64",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d90b0653-bf2a-416e-837f-7f8eb2264d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d78e90-1fc6-4269-9118-499d9467dabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3ea2f99-c411-4558-89ae-0d0c26b6141c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8580ef7a-d82f-49c3-8dc9-251ae0a64089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c88b6f9-b370-4449-9c93-cdeda7f4965a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d9f7167-47df-4aab-b8b7-d6b363395e3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b276da88-f7a4-47c0-92b4-1b5736a0100b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5542014b-632c-4b59-8e45-04683c3ad389",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0185ef46-da6a-4119-bc84-579e926e4fa3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7e4b84e-83b2-4b6d-92e5-36a9605a5a31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63f766a2-f3ec-4c7c-8fa5-4f2301e14053"
            }
          }
        ]
      },
      {
        "id": "c362c5b3-88bd-4ee9-afac-d49705f4efe4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2bb62891-fd3c-4ee4-b77f-742d6cd85c39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e964ac9-a031-4fd2-b1a9-fa86bf58491c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ab50b23-8651-41d4-b95a-0ab6d0d2bb3d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97bc04f-4cf3-4948-b408-d999cca51206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4615c99f-948c-4670-817d-c1af4399d12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b245cf7c-d5e7-4823-aa2a-adc706f4e612",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb53d4b-8ecc-4aaa-b347-0cb20af4b397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191cb5c5-2aa8-445a-b5c0-a42648eb847a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d686248-b047-40c7-acf2-1edae80c48bc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713cadab-99d1-4da0-97dc-c741801070ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8e6790-601a-4f9d-8f9a-44ed0199e291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed4ac77-8893-494d-8cf2-8288185d751f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2fdd77-84fe-4050-aa25-f22c8a27bc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1334aa3f-b753-4361-9309-b47221c79b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc244ec3-addc-4976-90c3-22b8f0e373eb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290341f6-3440-436b-88be-171fb9a68c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d623e4c-a179-4ac0-aaac-2e5f3549b8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348ed10c-22d8-434c-ab9f-3e5371cfdb69",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4f8331-85b1-4f8a-824a-4506632af4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2ab204-6791-4a72-a07d-994d54841198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9fe82c-a08a-4264-93ec-b86116ec8546",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3b73af-cb9d-4f6f-a02f-300dc8d97e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2df52f-ecfa-48bc-be30-366ece382e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75345916-01f6-465b-9c2a-167a5a99200b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4655d055-b168-400c-96b6-3707d5d408c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20b1a72-8863-4a1f-93db-daf79ecb7c38",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f591c729-e0e6-4610-961b-73699e26200a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7359da6f-757b-42bd-af1e-9d8d5c724d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf722c8f-e15c-43c0-b74f-4f28c3428f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2688aa87-6f08-4f06-b922-8d5ab88d83e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aff08c8-f409-4ecf-854a-fd2202a48eac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fdbea0-b375-46f6-9d04-c460175cd559",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e6a6e7-18ea-4ff8-817c-2a803294e23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331108a6-1a89-4870-a20d-809c656fb8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085950ec-a485-47d5-82fd-88f1fe3fa8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be388c9-96fa-4827-9b28-d1d126c8886a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee24332-b953-471b-8550-56cf3c8b6d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46f937a-ee7e-4cd3-9b7a-a5b330f120be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15031d2f-8755-40ea-9a25-242f0d571174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c08f037-819d-4516-bea6-ebc8d9c3e318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2caa5298-4739-4909-b5ae-a733a69a60f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa9e582-41ef-441a-aca6-2349406fd0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9601429-7861-4b87-b8b0-7361e98373b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba86818-9d9a-4526-9d2b-fbe47438635e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcb9826-14b7-438d-a874-fba4a54b659a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fae9954-d4b5-4908-993c-30d857d4f7db",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a6f517-afdf-4f2f-9768-17ee3d9a0bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c9d7f9-b72e-4f74-b326-d866559479f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f38058-200e-4995-804e-f4108d02439b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee19166-b6f7-4777-a96b-eea212042c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c83fe4-70db-4fa3-b8eb-7680b3cf6cca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dc1b72-4c36-453c-bfa8-9e9115237877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366bc37f-5f27-41f2-8b60-c5b1fe19b139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d7cd24-0263-40df-8c0b-53d1687a8375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b196ea-2c96-4030-9e52-b17cc7a81b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6599f847-6181-4077-9396-d6a936ecf39e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcf54dd-180e-44b1-aadc-35556bc7baad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c253aad-90d5-4cc5-ab92-fd96f1e71cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e8afd9-f7f0-4a30-81d3-04754c8677fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a2a76f-0d36-4d0b-b117-b96a12104faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df91338-429d-4fe5-ab9d-a5d103d03b0d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49adfeef-5e9b-476d-a562-bba4bc033f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be8bcd9-754b-48f1-9c71-e6a1b08f9ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e31581b-6add-4a26-aad8-10ead8a5d1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e438e7-e608-4e64-8a2d-6a0a8251e80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63940444-421d-4834-b7aa-b8e290108fdf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4ed726-33d7-4167-8d13-b5a36d8bc668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64ebe05-f3c8-467b-a25a-cc8a122ff285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106a9098-9c5e-41a2-b599-f97a07ec7d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cb2997-e6ec-4b76-b6e0-d87fa7aa2810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382df3b9-4095-4dfa-bde1-318991f85ccb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc1e137-3280-4fbc-8b67-783ee4aa5ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637d4efe-d8fd-49c4-87c5-858676ddc274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c29e99-cd45-44ab-a5a8-9dac83c393f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdb8a35-9d34-415f-9706-0bb8e096c42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294bde6a-ed4d-424a-b5b6-cdc87d886d34",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55dac5c-136b-4d21-92a2-d18eb5ee21d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70b7fb8-f5a3-4bf6-b9db-e0b7b4d2bd68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96542a2-7b69-48b2-a3aa-c8e6ad1b4eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a8d5b7-6531-4848-924b-c18dae130d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc99fbd-530a-420f-bcf1-9f2d685edb68",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55d274d-967e-4d52-923d-e050ead9afbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e6fa9b-1636-475c-a5cd-9e3c8fa56cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7173638f-f5ff-42ba-b1cf-fc9b3365141a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b14095-c36e-411b-a91d-d71898996dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cc8f74-4fa1-4000-b533-1b4606b652ec",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313bb7bd-7a73-456b-81bc-f4cc2d8ce3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a54f73-67fa-45c6-ab8c-86fa0a5590f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabe4b77-fa13-4e99-9626-077b0a9572b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36239ff-9b3f-48e8-a2e8-33087d0372a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1604ae08-27ca-4e9f-9dc4-50d0014b80e4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b36341-83b9-41e7-bafa-a746b292db1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edc4f74-3dcb-413a-bdcb-b72658148dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b67811-4007-47a6-9070-485cfcdf5bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef1fef7-3a21-4434-bc6d-c2513d179826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06441cd8-0de0-4562-be13-baa3d23fab8b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c662c8cb-912e-45c9-a603-10d668ac624a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56cd370-2d0d-4dea-b972-7e423b16f1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdad80f-439c-4283-af0f-ca6f7341b0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adc236d-e32c-4e58-b0a7-81cfe170b738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff6548b-bb53-45dd-b1b1-67503f49aba7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd96455-6443-4fd1-9b4e-29470b6aab2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c247f5-1f0c-44c5-a746-7e6eb564fd82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b108868-04ae-4571-8d2f-62b11b0a8076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4713321f-1f2f-4f32-84a8-216037cd4e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7d01ab-54fa-46d1-9a59-053ae8a50385",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48aeb69-215b-40d0-82e1-979e7cf04fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b526b924-f49e-406b-9b64-e48dbb7b68f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e277b7a-17a0-45b3-9a68-499e1bbeea7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8d600e-c398-4aee-9239-4e96cad39956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23709bd6-5bc8-4828-86a3-77e50db13bab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2158765-4a16-4fca-b395-6e0fc3629618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c55574c-22bb-418b-99a5-71ec9e7f1fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce03b92-5253-41a5-884c-6b8a86e013ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26cdd4d-70ce-4d60-b1c7-0a13318b6a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71228111-8a39-43d2-be26-9e09a3401b9d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b5be1b-44e1-425b-a980-40cc8a3c1db1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097fa146-30a0-4770-9e60-1c3dde897f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b6490d-8575-43b6-b845-40f18446a8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5632160-5deb-4171-8850-dbd01de989b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2757f2ef-afc3-49f1-b12b-f0e294e38ed9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b90653-748d-425f-9059-c7e7d92d0cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ef10800-0422-44cb-9db2-407e16579f36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b278a6ea-202c-4130-a73f-960d7bdbffaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb13aa4-7bc7-4f33-8e9f-9a4efa3bfd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dcafef-a861-481b-8a34-e74e6462b696",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3db422-b9c8-44ea-ac40-00ef9459fc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df78f0f-df95-48cb-a32d-9d1e64f93bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f058ae6c-9ce2-4241-b9d0-0feb67dee330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef9ecb0-d65e-4d67-94a8-5030c85b9442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5bccaf-7e24-4518-bf44-ae6dc1d69dc9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b7d129-527a-4ef5-8a60-b94a0a2f4d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac461c2c-0be6-4163-8985-88469c847402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23cdea0-3fa9-4716-97f5-5ed68de0f13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d83a663-4f86-413c-979b-806b2f9dc477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea6ea62-8b7c-4eec-811d-4ee3809c9bf8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a092e811-8bb1-45ad-a540-9659491c374a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c966e2e-fc4b-491b-92a9-12680a789e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce82df-aed3-4d14-b2ca-a5c255d5276b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cad0c0-10c9-4b75-b0dd-7d8d0afa2446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769c2f5c-72e2-4f03-a329-5294e53d7d3a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c67ab0-7469-470d-8603-75711738b6e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d327894c-d1dc-4a15-8b8e-421301d69cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7dc69c-d98a-4474-8d57-0c12e4bc37b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa3e25f-5689-45f5-9e85-536d03f4dd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf4c4b6-c563-473c-832a-56ef224d450b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0dd9cec-8240-4086-9cc1-dffae4b9a478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f29f8b82-f144-47f2-8e91-e75cb29fe874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c858ce4-1e55-483d-9ba2-f5c219030312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205f6f10-d8a0-4210-8c16-1e1919398991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db8bab0-9b31-46ba-9baa-464d99794cd6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75da214e-9d73-4305-a3e9-5fe1ae1d2708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc699b1-c9e7-44af-bc83-76d64c651bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe88744-433a-44c9-b0aa-62200352a1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833d9c4c-a1d9-4ab8-a2e9-d38456a58b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7270aeb5-c2e2-4831-8cfe-9114a22116d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6853089-5a6b-4747-a423-99e63d3598d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a07c89-5571-4b15-bda6-bbc554775fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e692f489-fd96-40f3-90a7-8246ed9e8196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e89433-6d7b-4890-b4ff-3258ec5987e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ff532-1528-4f10-a933-3ca507179f0d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4389d1fc-0e0e-4bd8-8164-94146a8826a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf46eb4-12b8-44ab-a17a-5496d7cb38b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a539eb05-e816-46e9-931b-3832073448e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cbc2d5-db7e-4812-9384-d2f688b74c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771d9520-cc96-4516-b3ca-a33d921bde22",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cec6be-cc01-4ba5-8433-307991008e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693e3175-616e-4357-8910-2a9f79b0263d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d6a0a-4066-4d10-95a2-fd95df380eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86102ac1-2e23-4ff2-a26c-26071d38ed04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff50c3e-dc55-4a4c-90fc-dbf273a7d448",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c86d37-de82-45c7-8c5d-a254396ec91f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60fc1fc-d3d7-4ef3-9a1a-37f0692687f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3973ff-f365-418c-83c0-d13b991ee000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ae8bf5-6643-43e2-9d9f-02ab0f05e6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739b2b51-2350-4ca4-8ac0-330fda3a2ba6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b7c216-1215-4bb6-8562-e7a2f4ec6b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59092435-2447-48c6-bec5-0ab58acc9b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4db47f-9fc6-4b54-a6bc-f5d9b89e9f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccb457b-45e0-45b6-930c-2ff9ad46b815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3753d1-cfd0-42a7-b56d-e16a9bfa3c85",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85c313f-9531-4ada-9c34-74db5887c4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6260591f-43bd-4eb3-968b-bb4fd89cb3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941830f1-15fa-4e6b-a366-2804aa98cbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd41f96-5ebc-439c-9434-14f2ba0bdeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b914fb97-61e9-4177-9a6f-21c6842d9d93",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071a5e88-94a4-4ca7-afaf-31f8d4ad1d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34931634-f0af-40cc-a104-2a76f1d94641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b024da9b-a911-4cb0-94de-851fca1fda9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3261d1-3fdb-44e8-ab78-7a3ec1a1ffe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32573ad7-3ce3-4383-bae0-d1a39b1902c1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495fa940-3063-4288-b8fc-4094273eec24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8901c5c3-b912-45e6-838f-47efb0b5928c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0369cb1-c486-44e4-a1ec-5abb7f430d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d12143-efc9-48cc-bdba-1c11d5a84925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e645364-095d-4876-a93b-0633d7101ce2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99faae09-9c41-4916-92c4-2a7a6f6b65c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e4c7df-69f3-43ec-8776-89c31d53e970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3918da89-c5cb-4367-a05f-1ca84c4ab3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1cbeea-9852-4847-b5d7-affb32ca91a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79b1de-fb1e-446e-b024-a430b047c731",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2689b8af-5cde-47fd-8c3f-9c25f470a358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807cc5da-fc57-4c3b-8a21-5d697e6aea83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e68b503-a668-420f-9216-6a2ce041a488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f8d119-5211-42bb-91ea-c3e9b2332de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d845e29-b78b-42c6-9c63-3e8e2332dd03",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05018dd0-9858-4dc8-b365-ecf6b5190a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e626f1-aa4a-4104-8f81-793b70a003c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3b15a4-425f-4206-b9b3-1d3c4cab46f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a023fbd3-b551-48ff-a6b7-f77f9e23717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e51a5b-a30a-4383-9a79-03142bbf2af5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbaed12-d02a-42cb-b853-a860b160817d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadc86f6-8f46-4dd9-8ee6-3f2a0ca3a323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed23938e-b341-454e-8fdb-a8d1f3df84c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69328a74-ae22-4831-9776-64b657792ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d853ecbc-db15-49b9-a0ca-4d05b9540a50",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdbd413-59a8-4670-ba71-fdba508261d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e1c797-2513-4140-ad94-94e939fdb2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fafde0-722b-425a-9219-142d8271570f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74068888-9847-4ebe-8937-2e7a05cd90d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea08b3bf-fe32-496a-89a0-dd035acbc908",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa517dc-1de7-4e07-9f1c-6ac0a7a212dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee87098-93a6-4a13-ac07-86bd5d0d8235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2ef51a-576e-4ef9-80c8-af419b09259d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ad0183-0dff-4fad-8534-48b4a01ec18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ef4fcb-f306-48fb-8aa0-ad573705fd55",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c14700-e152-407e-988c-54f5f21d0e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147ef3cf-7590-480d-bd7e-bd0016466813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89606a0d-8f19-4bb5-bc34-a6011bca69fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6becde31-a47b-4c03-95dd-d61db1201320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c579e6ea-bf95-41f9-b930-48ce7bc61b31",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7568fae1-6499-47e0-85ba-b3cc5e002c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a1cd44-7c5d-4e2f-81a6-9499dfda565c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263b4f52-71ab-4134-9dd1-1357ff4c7e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca28257-8049-4d82-8e2c-2db890b15294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f828830-fb7e-4d49-94bd-44c2b23c3bb7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791c5fb0-5381-49d9-a676-6eb67e34ff18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c8170d-0623-478d-8967-4a5949631e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb90acc-91aa-49e2-b53a-3c5948e20fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b56cfeb-481b-43fc-ba0c-add63c61e0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d7c2e8-6bd8-40b0-9c86-1a608b81c6fe",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e87c92-732f-4d69-b752-7b9ce2468790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98bb33a-196e-4a90-9314-83f99f1a7ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927ec82-94c7-40c4-bd03-183249ce6eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda0526f-625d-4b13-94fd-fa82d8879e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1a2411-62b5-45fe-82cc-32df205b1d00",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2abb4a1-68ae-4ec8-8c83-ae177be45867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8428db1b-c1a3-4149-b4d5-284e2635885b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2359914-e1d0-4ad9-8db0-60742bbfb21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4c1707-f0ac-4224-a38a-ae2642b28fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207ac28f-a668-459c-ac39-07279b711e8e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f228a51-456e-42bf-9714-97399a7acf2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c171d21-59fb-4c12-8ac3-1628189a95df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0203ec5-526f-416b-a02a-44551f27034d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7bdda2-e7de-40bf-8f01-1afa1c02a696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3fd283-c83e-4d4e-96b3-cca2d3635591",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbc2160-a18e-47e3-80d9-e5812c3417dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8bc47c-c3f9-4600-847d-34b0a5ff251b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6248f36-0481-40db-9246-2843e5a786d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7d9e60-f40b-49f2-8bfb-04edf8870c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a366c9-6ae8-4124-9a9a-06dd711e0380",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6f1ec8-badf-47f7-8f31-8a74ae1bb393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844843ef-4922-435f-b73f-d3868531e6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3708ad-9399-4ddd-ac0f-dfa1647c5ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468c2ba6-1e7e-4d8e-b488-228ad8fa0850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e6dee3-9faf-43ab-b763-606837772d45",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3523c07-3c93-417b-9d5c-e5cbd0a95539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88ef243-9669-413a-bb3f-5b1ad917ab17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46749e3-bab7-4ea0-a632-502b175ec36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edffca7a-af71-41c3-b781-399cb4c51753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28906e34-b1e2-4d8c-b865-7b159a3fd4bc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf8babb-d37d-4ef0-aa1d-6d21c20b1d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d569b1-ef34-4cf9-b6e9-dfb6a1c46533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389644b7-c0d1-4702-9bbd-a54f4de5fcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3318fcb-00ba-4935-bd01-93ac2c118751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62b5e2b-5c3c-4115-9d28-2003fba17139",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f8656f-dcd2-403d-9e90-2a7bc5525874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3a19ce-a918-4f46-a973-fbf970c2e468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e5f846-28df-48f6-9e39-e6416316d8d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b54d00-5ad0-41af-9c53-ad05812300a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1b61e6-b5ef-49ef-bbee-a3f025031a23",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b3c2c7-326a-417a-a549-ebb4b29ca8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c603acfc-2b40-458b-b1f7-b1d87b622a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45932a0-c881-4497-b4e6-b5be7c8d8dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef8273f-22bb-4729-ba0f-0ca769992403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2bedcc-bf3a-4d06-a404-1b17b7316ad4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b32a5-a084-4287-ad8a-e234dfd74fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd4b0a2-17a9-470f-875d-8e15bc04b3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e656458d-4ae0-4d60-b8ae-fddf4dde8bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131aa1d9-4cb6-4bcc-9093-e90cd25caa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee37773-2c4d-4d4f-b1a7-c3808016140e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e26b24-5396-406f-aeef-2a897513480a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959a4d08-e515-424f-ad20-230a9755bcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6184e1a-0445-4fa9-8d11-ad585e57e7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e955e3-e786-4e52-8006-c8090cf043d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1c6f7b-72cb-4c0d-9119-fc31167fc931",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfb5535-f257-44c4-b9d8-784d972f71c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189db3c9-78cf-4587-90bf-60e6460b0bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a264cf01-541c-4b0d-849e-c7f96dc329d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a86513-2c76-4bf2-92bd-bc78af03116c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae2124a-eb4e-4359-ab76-7e917824f871",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37c9675-867e-4180-9969-e250d616947c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed6563e-d128-4761-8af9-d3127f43a685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2501e449-3e21-44e3-b771-4d62544b6a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e1e2e8-1c93-48b6-8ad6-32b7edc1a758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ce8636-20d5-4e9b-ae04-6ee814d5caf6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01ef989-2298-4a88-9118-755bd8a11532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "131a7ab2-1715-4750-a603-c4a9d7acb28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10306e4e-c32f-41a1-9bf8-811bc39f83fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a250237-57d1-494a-8cb6-a52a0a716542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac9f057-672b-4b05-9da1-adcc6da05928",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ce8f16-ef07-408b-a98e-0fd33a597261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b3d1e7-fd8f-438c-a1a0-14a13a2f892f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b7d9f1-344a-47ab-b302-f3f5c06ad21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09c4a75-1fdb-4986-946f-1f7484a1ad93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1a3489-120c-4e4d-95f6-e43a6c221a42",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ee5f5c-13cd-4a38-aebb-43bbb250dd49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d78a834-8fd5-4d7d-a0a4-73d0e801dc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417db0ae-4eeb-46c0-85e8-ae8cda5b688d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d03d9d-6e3c-413f-87e8-49092a1c9cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e0fcc3-ce5a-4e0a-ac2b-8201a63373d3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3efd135-ec4e-4074-8c8a-0e7502c4d5b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fef8578-eae3-44c1-bb36-edbf5ef1cc90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726f08d4-a8fb-4e59-aaa6-b2c4a63b9e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8175792c-025e-4532-bd0d-050214a96373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277b757c-eb86-438a-b007-ac6840d79cc8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afccaa6-ca4a-4323-bab0-232c9db5ba7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b21c450a-3d3e-48c0-8bad-685c54d79994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2b970a-e698-4ad6-87a3-9b9143d02606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e610f8de-1a51-44fc-8028-cf3e8770d4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c8dfa5-b381-446a-b502-ae78db7418f2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e05f8d7-d01a-4f58-b8c0-c87d31c9cf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e4fe8f-51d2-48b1-9286-f443d26be125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e302b4-c0c1-4e3f-9c01-b721c81813be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0dd755-23d9-42ee-b668-2ac4c7fc81b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d72384-a57c-46c7-b14d-af8db1290444",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b042237-df96-49dc-8e8a-36516a5e9388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3857d13a-1d23-41ee-b12c-154689318920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244715fe-b51e-4862-95c3-e141a7852de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c118ca11-379d-4bca-be45-01d228e1e5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412f8fbd-e9f9-498b-84be-57c7fc792bd0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a242f57-52ef-4517-81be-3d9cc3d35947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8a6d99-8397-479b-91bd-cd91b495ca7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bf38e1-00f7-4cd3-82da-81c2fb3d8277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b633fbc-617b-45f2-bf6f-17cd4e31362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9196402a-6b0a-4385-a067-72d96c5f623c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8cad4f-108b-48f6-8785-1e85ee74d7a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "353f955a-e318-4f54-8c3e-1b8e97165f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f03ea59-bc0e-49ca-b551-9e27727874db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4cac7a-706b-44fe-8905-d0cd5b1723c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca1a939-73d0-455e-b78c-e6d3e5b5944f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b7994c-5ee1-42fa-a6ec-5cd987da82ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94af6416-e4e6-40eb-b7f8-43313374ff85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "240271a4-e90c-4409-a878-e9d8e682b9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d97ac83-6ab6-401e-92c3-1678c55e6e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41366bbd-1f67-4f84-abdf-098ce74750e4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1336f030-2d4a-4ee0-b424-1e1af0ed69ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94ec95c1-9de3-4c55-a471-5a55ad04ad12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7690f53-59bc-4cd9-bcf4-f474975c3bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8942152-ad99-432c-920d-9420d7b867e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8d0701-2aa2-43db-ba08-07513177eb12",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2ca41-0e5d-4528-a96d-1f5c9e9e2d8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e3c270-b023-4c12-a894-53160e898d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505c7eef-984f-4b81-b833-50d14b847f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc0e8c2-a044-4ec3-a26c-24605b1d49b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcd1b7f-0dd4-43f0-a35f-9b01b44d5977",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65284cc-7c2c-400e-ae4b-47e2ea9f42f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5772cb20-c108-417b-9353-d4d01bc4c66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b19111-8442-4b96-9de5-43292a6024d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b97865c-bb30-462c-a65c-95910935767a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efacd255-8d1b-4925-b2cb-9e84339ac822",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a93ea7a-5f3c-4d3d-8cf7-672dcc8d6eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0417079-fd0a-4bb3-87f7-f477af6f6fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015bcb3e-a6d0-4512-bf1c-540df241898c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca547250-a121-4b1f-afeb-2a2f796b00da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46a025e-8984-4d4d-a7a0-a08481d4b6c5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc9807a-3096-49e4-a042-ffbe3e3ce0a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e4e26b-84be-49d7-b54f-af9ea89d9d44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abaff48-5e8c-4b64-853b-1d55c9bf5c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7d82c9-2829-4e12-85ae-f7e20ad79fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9548d98e-22ec-4aa5-b068-985fe9042cc5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b626c7f-85d9-4ab3-84af-f0da493478e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457e6fff-7e28-4a2e-a0ba-97560368bc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7ae8d0-7d0e-40e5-a15a-a60c70bff1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1c7aec-7540-4c14-948d-2af324f58acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c083d12-2236-4a2a-9eb1-f5bb7c18bb55",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c2f0d4-4958-45ee-9c42-e4e2606e9195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d8a736-b2d1-4872-9e67-c3e02d6533c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e3d88b-9f71-4eac-886c-7b2e11c70d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e5f1e6-b801-4ffd-b0a6-684490f59da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cdbb00-9410-4558-806e-d14ea9c7340c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45eed8e-0226-40ad-b064-eed9fab564ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58cff6ee-2fde-400b-9d59-9d77c0628885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e54c2e-9034-437f-8349-856a04158004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9218992b-f59f-425a-97a7-9178b772af15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a686618e-f0b1-4149-b90a-8187bb3cfeb7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465bf010-075a-43bf-b972-681172e26815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba693be1-e080-467c-a41d-edd173fbf24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aff8899-d0f9-4fad-9918-bd1b679cefbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b467da-080e-4369-8239-90613f9767ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e770cd-c2bf-4d7b-9a6f-1aef56b01e89",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b296eb-bcc6-44a3-a6da-d8ea8019bba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066a3c45-0949-47d0-8f62-415cc4e2fcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333ca3cb-273b-4799-8e52-a51a53759119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bdf67b-d6c7-424a-9b82-54c9e3cd640b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9ee8ff-a2d3-4111-9f6a-7badff2140d6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e745edc-48d1-4f08-90d0-290ca55639ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3513409-4d7d-4cad-9c0d-45c802e3a1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2844c85-3bb7-4b52-967d-913271f1943b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88b143e-aff6-4726-a393-2b01591d9f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881dc769-91db-4097-a087-702173cd35df",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8924411-d4a4-4604-9abc-ecb9bd893a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2ca700-b688-4500-97f3-f83c34977a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75db0760-a8a1-4594-a192-01515b5636a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e969492f-87a7-4751-acfa-d1444c30294a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798b74c3-c58b-45d8-845c-4cf59149bfd6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef5a123-8de4-418e-be83-b710e6f9c380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809e541c-89d9-4551-998e-18c56ba50b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6362908d-66bc-476a-90cc-9c7ca5ee81b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af47515-bc3e-49f2-b3f7-fcba872f7c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4b56a0-2da3-438c-a277-b83a410ad1c5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f9ffc9-9c20-4f4f-a64a-709e0c94160c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175e5e1e-f78b-4195-96d6-cacfd0fbedcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99357f8f-da37-4ad0-a356-81ecb1332f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36396b4-ca6c-47d8-87e2-c4f16e2b7157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d226c3b1-3f9d-4f7b-bf99-03fa38c4dc15",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0900e067-2275-411d-995b-bc2446965578",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b8e0af-8afd-4948-9e1c-13859b31e131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab6db23-13ca-4402-bf04-891ca290916c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab80a2ff-c492-44b0-9152-81c134aa81ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baba2f90-a85f-428b-815b-3bac213047ad",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd98702-89ae-47bb-92e5-5d61d7ff3b58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38fbe856-bf52-4724-a3db-7a93d3b0b733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13995df5-39f8-4f86-9604-b8bf87d580db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071524f6-06cd-480c-962f-bddde9e3e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae6582a-f78e-4daa-896f-3d01c49e3efd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db30f47-c25c-4440-909b-63aa23561686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6d436e-c3ad-4d9b-9d5a-57fac6ffc410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f05357-d9b9-4006-9c57-b17dcf5ef257",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962c5195-c07f-4126-97be-702c5dbd3bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cbfe2d-f9ad-4c8a-a1a0-983906de2619",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74515ce1-890f-455f-96b4-32f35389633f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cadd90c4-413d-47f9-9784-ca02b3915ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386d9b16-1c7b-40d6-9087-85e753d11fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49345aa6-1294-455c-a5ba-d1e5ed9579f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71aace0a-4af4-4a8d-9e17-816d4a4ac808",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f53dcb-9e12-4be8-a743-2e058940959c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3268b817-8051-46ed-a83f-9c6d4c05f3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91084e76-3445-4e45-bbf0-9b0004bd14ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0dec53-88cc-4a2f-b5e4-b2f6700a67dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b44cf5-e2af-45ab-b868-7b64d9062fa5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41769241-1d47-4729-8939-ea1e9d295f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7faecd-efca-4d6e-9afa-afc2033f0d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a641a0-f490-498f-8b8d-b1a5c9762c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26aaae60-b345-4daa-ae43-1d3b262e41c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd0ac2f-03f4-4d20-b0a9-9a0fcfeab8cb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b245f677-fb98-4c31-9082-c24f6895ee36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3171e7-6bbc-4571-a4b4-51232f202eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a2a5d2-e933-46b4-918a-cd654f1e10de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e8f5e6-ef49-402f-bf12-fab6116ba036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96d61a4-8e41-493c-b262-fb74383f641d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab5539d-32f6-43d6-8de2-0a60986790c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8424c899-7484-44fe-802c-4ef541dcf3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dac9a37-fe33-419d-a454-e1ee6b536617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1228cb8a-7bd5-4fac-b25f-b487d1ac0e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a614bfe-c11a-40a0-820a-6900d4c222f9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcab6cff-425c-4e43-a3aa-ac9e9529ba74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ff8c2f-0e92-4d68-9c01-db63b07fea4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf42934-0440-4583-acc8-4cc651886dc1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326f956b-90a9-433a-8acc-daf037379afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7899366a-9077-42f1-9e7a-74f222392b05",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a3a6dd-ba25-4b9f-86fa-77d061cc04d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61afeba4-52a5-4b65-b72c-c7cf7a54074b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c3e959-1a7f-47cc-a097-b9ffc5c1f39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08af1cc0-5bc6-4f33-931f-f49bb0d66eb1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9aefe55-d028-40b0-a0e5-f8f408fb5f31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ddd70b0-0e09-4ab2-b44e-4b1931284a36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28f4b49a-2ebb-4efc-94f3-35ca9a75e7e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94a105e6-b56b-421f-ad89-a4d491008a34"
                    }
                  }
                ]
              },
              {
                "id": "59b88b32-a55a-42e2-b143-108e621e2be1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59fabed2-9d7a-43ac-bddd-32ff3f85660a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14afec3c-49f3-4e9a-aecd-992e48c09603",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "534d5641-824c-4715-a355-d0f0ac6346a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bc8f39-76e5-4108-bf6c-93dd9f82e7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7f29f50-410d-43c0-b6f8-17264a814312"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6dd7dc3-29c0-4cb5-b849-ac3f55c4b8bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa3d8521-3839-4254-8b37-192e7a329cbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe26a4f9-90df-4e40-97d6-926908c08997",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33370bdc-19e2-4404-abcf-7bcd922ff59a"
                    }
                  }
                ]
              },
              {
                "id": "6a8352c2-419c-4f89-9d04-9c394ce8640c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "445fe06d-e013-4e70-90d8-2f562df5b7cf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33692d2-cd2c-4fd2-8c4b-751502b64494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a5256081-90ee-4fa5-898f-0d88b81e3f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a20b14d-515f-445f-85df-fea2cc07fb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a31a68-2dc2-4150-82a0-7290472fe248"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca597207-536d-4adb-b5de-6820e26e347d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6cdaa870-e69b-4d2c-85a5-5b30b30a903a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7438ae3b-b6d8-4a3e-84a9-05e575782970",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "54e1b554-34df-4b6a-a131-3c119eb88cc4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27660d3c-0a05-49c4-8657-edac7b7a652e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a61039f2-e93d-4fab-a4c2-b404d2dc681f"
                    }
                  }
                ]
              },
              {
                "id": "40079167-8c61-4c7a-81f6-4d7b14bc798d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e2d22dd-63ed-47f5-a5fe-98ba0ff1ce0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af7c6f49-3b76-40a2-8549-b9edf220f8d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4967368-fe1e-49cd-948f-4b11f325c720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0db496ee-b9b2-4cf5-874d-cf625be13b97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59aabd57-d76e-47da-97ad-d023782bada9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "88d1b9a1-6a8e-4510-824f-0e7e668aed7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "415c0548-d41f-4fe0-b0fd-61385184e98f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb3e045f-839a-4900-8f70-3857f6d4e626"
            }
          }
        ]
      },
      {
        "id": "a144059c-aaab-4ad4-81cb-0b22811a867e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "83476c4a-8249-4a87-85bc-196fe7d79103",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a43640cc-1331-4f85-9216-0ec75496b259",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca9625db-11fb-4895-8679-b2265e6c2a6c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c875177-e3f4-455b-a666-4aaf04482c59",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "75e0432c-056b-45f3-8fda-9acd893974ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbefc606-dfd0-445e-8584-52f6dc5a6178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "095b4ea2-787a-4a46-9f4c-1e6fd6e0d629"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af42cbce-1de7-48d1-bd88-909a3bc584ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8af0d0f8-30b2-4ea9-8722-2f241fda9522"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d166224e-395e-4b51-90a5-feca9efcd06d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f6b5dca-86c0-4e3b-9b02-b1a318c7442b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0aa46ef9-91d2-4092-afbe-4a631efe7070",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9d0750d7-4d63-4de3-9c91-22546f93ce4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ec48ffe-0e46-4c33-8e04-eee9481f5cfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "400b1c23-7284-44dd-9c61-08aa2a4bdac0"
            }
          }
        ]
      },
      {
        "id": "7bb6d0ee-68a1-4344-bfb0-c6bc96cec572",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "432c3956-d8ea-4e0a-a060-36b1f7deaeb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3fd8ba1-d6d1-43f4-abec-e4dc11795485",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71eaf860-9bac-4c6c-a4c1-845d6b1edd5a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8eedf7a-5614-48cf-bf7b-1f7f7e6cbce3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b9229c9-d423-4f50-be26-e2d4ce931044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8819da-9853-46a3-af1c-8dbb7828b1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39c7d729-a4a0-400f-ac25-6412fcbb6db1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88a50e95-f44b-463a-b70f-b4d47f390931",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcef56c2-52ce-48be-a07c-21ae14b1e438"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f032be2-89d5-4114-b022-0e60fdc7e670",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cf85191-17cd-4953-8a01-5238586794f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6a4534b-a5fd-4d20-a274-b8dd376df780",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c276340f-3272-4e8a-83fb-374b6bc25240"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35168d05-37bd-4ab9-b032-0869b8d2be87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15a97c15-d7ba-441c-aaf6-20d63e79192d"
            }
          }
        ]
      },
      {
        "id": "0905ec9b-bb58-4e5d-af8c-112f86577a26",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d356aa97-7700-41b3-9d04-2e6054529b93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4672668c-ffc3-46d6-a007-4f2eff36c106",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81ad094d-d210-4efd-8c15-84b12c78e0c4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2089325-7ec9-4539-802b-cc84dd710313",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f100f4d5-8c94-475f-930a-e9240efaa04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b7c687-c9c0-4b52-856f-3585e0939407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbcaeeba-1d38-4eb2-ac60-2f4e1d65e206"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cd4ec94-0a81-4e0a-9bc2-a3b15540485a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95a7b00f-1c92-4638-bc9f-b6a8b1b95ccc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06138083-122e-450c-8fdc-24e0e37949d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1735c55-9752-413d-b8c7-354088de83a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba596ac2-9890-4ad6-8493-b4e3a2fdca1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "31ec84dd-877c-4248-a081-ae6d3d1ed553"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf7f3ad0-4350-4e4b-aff7-b421a8220d63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61c54e14-3148-4ac7-ac68-a2b7d2182613"
            }
          }
        ]
      },
      {
        "id": "7cb7a60c-3aa1-42bc-9688-c987a940e2f0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03247895-0645-4ff3-8c24-1d2f0694ba0f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a6f9d75-ee51-4afa-b004-e0cfbc4d7cf0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fe1d93e0-9fd8-4c92-811e-58e836389d6f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c334745-96a9-4ce8-899e-8bb0d3ebd38a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77cdc6c0-4be0-4370-a372-82367ab03bba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.37543859649123,
      "responseMin": 6,
      "responseMax": 271,
      "responseSd": 26.664177169113632,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700959076536,
      "completed": 1700959094417
    },
    "executions": [
      {
        "id": "aa8169f8-13a9-44ee-8b03-47863ec30334",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "716612f6-4829-407c-836e-ed30ee8d38b6",
          "httpRequestId": "3eebd45a-e005-4b23-970b-3704f7c7a0e3"
        },
        "item": {
          "id": "aa8169f8-13a9-44ee-8b03-47863ec30334",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d7f8dfb2-6cbb-4bab-b032-21bf75a8937d",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "88e1a021-5f44-40b8-922e-ce18839c613b",
        "cursor": {
          "ref": "d491bbc3-954f-487e-8f9f-244bee62fb2d",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7118c49f-5c5e-4a05-85f2-e29c5095ee95"
        },
        "item": {
          "id": "88e1a021-5f44-40b8-922e-ce18839c613b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fc7d5414-20ee-4947-9a64-3d1023e8244a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "387836d6-f64d-4b09-bb65-97fef1aaf494",
        "cursor": {
          "ref": "e654f1a8-f311-4564-b690-e1c679059131",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1bd6fc10-2111-4f64-a336-afadcfeb205f"
        },
        "item": {
          "id": "387836d6-f64d-4b09-bb65-97fef1aaf494",
          "name": "did_json"
        },
        "response": {
          "id": "8af1e226-611c-4463-8847-30885425d25e",
          "status": "OK",
          "code": 200,
          "responseTime": 172,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135e518c-cfe6-469a-9931-d9e8528a9efb",
        "cursor": {
          "ref": "517132a6-61c7-44db-b5d0-5fe6dc99e3a9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "010e4d18-e7ee-4f7f-99a6-613e2ac8dc6b"
        },
        "item": {
          "id": "135e518c-cfe6-469a-9931-d9e8528a9efb",
          "name": "did:invalid"
        },
        "response": {
          "id": "56f2e51a-fb17-4164-86c4-091144afb6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135e518c-cfe6-469a-9931-d9e8528a9efb",
        "cursor": {
          "ref": "517132a6-61c7-44db-b5d0-5fe6dc99e3a9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "010e4d18-e7ee-4f7f-99a6-613e2ac8dc6b"
        },
        "item": {
          "id": "135e518c-cfe6-469a-9931-d9e8528a9efb",
          "name": "did:invalid"
        },
        "response": {
          "id": "56f2e51a-fb17-4164-86c4-091144afb6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ff51e6-9304-4d06-aac9-6219325e3e5d",
        "cursor": {
          "ref": "8ac7f661-bd69-4e24-84cf-ce654af55b0d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7c45e001-8c9e-474f-a8ff-72e3f8a92e48"
        },
        "item": {
          "id": "d0ff51e6-9304-4d06-aac9-6219325e3e5d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b0d892ff-5e97-4f3e-bde0-a061bf998f88",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea8f097-1489-44d0-8b97-53f9160f14f6",
        "cursor": {
          "ref": "40229bfe-e3db-46ea-ae83-59312d8b8e09",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "48594bd5-eee5-448c-9b5e-91905d281f89"
        },
        "item": {
          "id": "6ea8f097-1489-44d0-8b97-53f9160f14f6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6f3b49a8-8f94-4675-8601-4cfeef3ea260",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a83a14-af5e-4131-ad1a-9337029e6375",
        "cursor": {
          "ref": "3583c6f5-2e56-4b40-8b43-c3f60df0ca42",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "782d5a5b-6f15-42b6-8900-f21ce67c1beb"
        },
        "item": {
          "id": "18a83a14-af5e-4131-ad1a-9337029e6375",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "291c2d60-ab43-4f9f-a1e8-41a61798835f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6f1a14-5176-4797-a2d7-6a1a016f055c",
        "cursor": {
          "ref": "b2c45a80-bc5f-4d35-84b6-7ef560878b6a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bae0096d-68a8-4c5a-bac9-ff94a687ae5d"
        },
        "item": {
          "id": "7c6f1a14-5176-4797-a2d7-6a1a016f055c",
          "name": "identifiers"
        },
        "response": {
          "id": "3c55beb9-d1fe-4e40-9e10-3e343cab4e33",
          "status": "OK",
          "code": 200,
          "responseTime": 240,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027d9536-fc69-454c-8eeb-710032d055a4",
        "cursor": {
          "ref": "6c83a894-3d8a-4212-a331-9386229e9e80",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f7d70052-9094-4012-8c4a-d5881cd330c0"
        },
        "item": {
          "id": "027d9536-fc69-454c-8eeb-710032d055a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6f7feeac-c28f-46a6-ae46-9dd8525a110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df95073c-100b-492d-8dd2-2c48420b8da8",
        "cursor": {
          "ref": "4dedab82-4a20-4318-90dc-03cf539541a0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1cd7e5d9-1e3d-4c8d-aafd-225fed73983f"
        },
        "item": {
          "id": "df95073c-100b-492d-8dd2-2c48420b8da8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f4a3fb4e-0356-454f-a35b-c240752d7eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41098e48-6fe5-4f4b-9a70-3ed765060353",
        "cursor": {
          "ref": "eb1b436c-bb58-4698-92c7-9b7e5dae1c3a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "77bc1703-9f40-4f57-9df7-f346395f2af2"
        },
        "item": {
          "id": "41098e48-6fe5-4f4b-9a70-3ed765060353",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ecf2c73f-e94c-4893-8341-000e4a3c881a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648c3030-b055-417e-9e7f-15dbdccd1c24",
        "cursor": {
          "ref": "cb0ade2c-3296-4547-a219-80b223acd271",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bf50e85d-be21-4927-9971-901652b1fe53"
        },
        "item": {
          "id": "648c3030-b055-417e-9e7f-15dbdccd1c24",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e4dc553b-0475-4bda-ba5d-d119c850fdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d103808c-0d3b-411c-8ff6-ca6cba87032e",
        "cursor": {
          "ref": "9d1920c3-fa09-4231-9e7e-f3d96550f785",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "046ce511-1d9e-4e24-894e-cb7b97152b75"
        },
        "item": {
          "id": "d103808c-0d3b-411c-8ff6-ca6cba87032e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "667a1e45-666c-45a0-84e2-9e25e9bd0042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1594f4-b0dd-44bc-90a1-aacb40997a64",
        "cursor": {
          "ref": "5c6dc180-3d7a-4192-b702-d82cc269f087",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2dffb576-7447-47a1-908a-81c4c2cdd370"
        },
        "item": {
          "id": "be1594f4-b0dd-44bc-90a1-aacb40997a64",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ae4b6571-40a5-4b92-ae12-d4c25cc9f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daadcd27-7056-4b18-958e-f6b564029a5d",
        "cursor": {
          "ref": "ccdcb625-42df-4677-b862-7b6bbfe2ff3b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0ce3b610-7b9e-4248-aa76-581dc3d2a4fe"
        },
        "item": {
          "id": "daadcd27-7056-4b18-958e-f6b564029a5d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e3bbd3f3-5b4d-4206-a899-4c717d1be485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a1c0fa-c7fa-4027-8277-73408023442c",
        "cursor": {
          "ref": "4444ad3b-108a-47ac-8ec2-55167e1ea73c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "492f4636-f6ca-4501-8acb-fbcbe03bcf1b"
        },
        "item": {
          "id": "80a1c0fa-c7fa-4027-8277-73408023442c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "872d482f-aeac-4559-9489-024fa7234aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b712901f-5fde-41d9-bb21-adb7014491e1",
        "cursor": {
          "ref": "0238f57f-58cb-461b-858c-acab469c1a87",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "702b2492-47da-42fc-83f4-599eb24f82a9"
        },
        "item": {
          "id": "b712901f-5fde-41d9-bb21-adb7014491e1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ab772cb0-a4ca-4d56-a13a-3cd9eef75e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5065feb8-c1f9-4e52-8abd-35c634fc4884",
        "cursor": {
          "ref": "44bad84f-8f1e-4f6c-951f-e59c7172f881",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "132fbfc7-cb68-4aca-819f-c2221d1a34a9"
        },
        "item": {
          "id": "5065feb8-c1f9-4e52-8abd-35c634fc4884",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20b60775-4baa-491e-b891-fde10840e3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14eccef-8347-4c5e-9c04-3f2792d593ce",
        "cursor": {
          "ref": "c56f966b-7809-44ed-884a-a0e10435db0f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1962e651-b2d9-4e83-ac1e-0f7ef23edee3"
        },
        "item": {
          "id": "e14eccef-8347-4c5e-9c04-3f2792d593ce",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ab2885f8-9799-490b-b5b7-1ae91ed8f6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5c7734-b880-4a82-b583-697792f5f9e3",
        "cursor": {
          "ref": "c7823057-24d9-492f-a99b-2c0fbc9c0937",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "808beb35-2b55-42ad-97e6-9c4f33f59dcb"
        },
        "item": {
          "id": "cf5c7734-b880-4a82-b583-697792f5f9e3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5f710a41-4b67-4c3c-90d8-12298a110e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2367b902-f217-4b4b-8388-89b90aabaa1d",
        "cursor": {
          "ref": "562818d5-2b72-4909-896c-6655c9edd5e9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9df37a46-ec77-4245-86bd-fa449dd2ca03"
        },
        "item": {
          "id": "2367b902-f217-4b4b-8388-89b90aabaa1d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "834eb0b8-0fdc-4b0e-99b1-b1017b9a8278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e06dc4-b1e8-486a-b247-3c8325405c47",
        "cursor": {
          "ref": "95c347fa-8920-4ad6-967d-5ef7762e37e4",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2f276e03-c94a-4c2e-bc3c-62af467941f0"
        },
        "item": {
          "id": "58e06dc4-b1e8-486a-b247-3c8325405c47",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ee775314-9916-4617-927a-b9650058c4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76b7813-96c4-48fb-ba0e-2a6d33d0b12e",
        "cursor": {
          "ref": "b7fce1db-9d47-4000-91b3-878071ba7558",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ea4f7b41-bb1f-4867-af9f-37f7bccacdf7"
        },
        "item": {
          "id": "d76b7813-96c4-48fb-ba0e-2a6d33d0b12e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "88b076ea-4124-44e7-a20c-92edc35323e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e5c17e-b437-4b9c-8498-793478cb1478",
        "cursor": {
          "ref": "a35f7221-f0dc-47ed-aefc-c2440f825d62",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5b180195-6509-48a9-934f-5187f37f9504"
        },
        "item": {
          "id": "04e5c17e-b437-4b9c-8498-793478cb1478",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d01b1c7c-78c1-47a2-aafa-a9f85f432dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f277e6-ad5f-4a97-b6dc-f64a2cb59f16",
        "cursor": {
          "ref": "c866463f-606b-48a7-8f83-3ab6856721fc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7bd168ca-f550-46a6-a561-98c6494ad710"
        },
        "item": {
          "id": "92f277e6-ad5f-4a97-b6dc-f64a2cb59f16",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c4ae6c32-1aa1-4733-9a63-aab4a3267ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ff2b0c-e5ec-4e8d-97ae-f936cf60352a",
        "cursor": {
          "ref": "09a12376-b549-4505-a6d7-55b4e81e4b0d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e7328d9f-2420-43f1-9218-ad63d2baa172"
        },
        "item": {
          "id": "50ff2b0c-e5ec-4e8d-97ae-f936cf60352a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5f45948e-15ac-453b-8d54-5eeec6a05b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8c61db-bc70-4b4c-85eb-f67cf4d31ee5",
        "cursor": {
          "ref": "3becd28e-0484-405b-9f3a-62de216f3b87",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "66c54c23-5639-4e17-ade5-d015797ed5d2"
        },
        "item": {
          "id": "1b8c61db-bc70-4b4c-85eb-f67cf4d31ee5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e8357dd0-2417-44ad-8802-b0390c0bdcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a090bfd-91a6-431f-841c-88e30fdbf950",
        "cursor": {
          "ref": "897c8c3d-1707-4fd8-8e30-af68e92c3448",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6371e859-79b1-46e1-b801-cd360c97253e"
        },
        "item": {
          "id": "8a090bfd-91a6-431f-841c-88e30fdbf950",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4ad44dc0-7bd5-4636-b75c-7bd48c83ec1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318c68f1-fd13-4d99-a01a-ca5b07c9f18d",
        "cursor": {
          "ref": "43122ff9-5f4a-498e-98b9-aaa66e1e0037",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "99a3b09f-181c-408b-a9a9-281d7a4fc65a"
        },
        "item": {
          "id": "318c68f1-fd13-4d99-a01a-ca5b07c9f18d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6dbc63bd-8a96-4317-8d3b-4ae50407fc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa92251e-6fad-44c0-a65a-02d0556bc3eb",
        "cursor": {
          "ref": "bf9b70a6-5b81-4dda-9f9c-b9c29d52d5fc",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6e1d8191-41dd-4f90-afc1-a930a5e4b860"
        },
        "item": {
          "id": "aa92251e-6fad-44c0-a65a-02d0556bc3eb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cebbb970-1930-494c-83c4-decdfaee1f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74410e0-b1b3-47a6-8f8f-7807e4c70ab1",
        "cursor": {
          "ref": "30185651-879f-43e6-8833-e2752db74b45",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "16988475-4844-4a4a-ae9c-e875ac67dafd"
        },
        "item": {
          "id": "f74410e0-b1b3-47a6-8f8f-7807e4c70ab1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d68da768-fda2-4e04-a92b-56c0e44fe0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f0237f-396b-42a5-8878-9bf005a02c22",
        "cursor": {
          "ref": "3417e70d-e232-40a8-999e-99a424876940",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f71cdbe1-7878-4de8-b3bc-65b6549ce586"
        },
        "item": {
          "id": "56f0237f-396b-42a5-8878-9bf005a02c22",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ad8c623c-71dd-431c-b546-ae65abff3d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235bee95-05ff-429c-a6f4-c1d13b6cacf2",
        "cursor": {
          "ref": "3c9e225c-db98-441e-bf7f-4e9df095cfa8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "efa216b7-13a5-4c73-b057-84a4794e05fa"
        },
        "item": {
          "id": "235bee95-05ff-429c-a6f4-c1d13b6cacf2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f30b8a12-6b12-4817-a6e0-fef9b6e2fee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5b8250-e5fa-4ab3-ab88-381616929a87",
        "cursor": {
          "ref": "8bff4899-a6bc-445a-a26f-1f6b40222933",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "479cfb98-bf8e-426e-9647-ef6c260b1d0e"
        },
        "item": {
          "id": "bf5b8250-e5fa-4ab3-ab88-381616929a87",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c51a2a1d-6c7c-4a16-b971-762d4666e0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8f824b-949c-4e00-80f2-c95c6d9869fe",
        "cursor": {
          "ref": "83cfe457-ad02-40ee-a9f4-6eb26666eeca",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "db73c208-3169-4d0f-a809-dd20d63a50d2"
        },
        "item": {
          "id": "cf8f824b-949c-4e00-80f2-c95c6d9869fe",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "68d618f9-6cc4-4924-b594-18ec77671fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc5fe91-08d4-469c-b251-836bc7d139d0",
        "cursor": {
          "ref": "19e69b26-709f-4b85-876f-60786be0f2e3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "617c1f61-a6c7-4fef-94dc-50be82f35cd9"
        },
        "item": {
          "id": "0bc5fe91-08d4-469c-b251-836bc7d139d0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "75493e6c-d663-4f7c-b6f3-249fca94b97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc50800-007b-4c5c-b564-fa85170e1635",
        "cursor": {
          "ref": "f274a274-dde2-4b43-b35a-ad88054c2de5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f665287b-8597-4b54-b793-06f8ce380127"
        },
        "item": {
          "id": "8fc50800-007b-4c5c-b564-fa85170e1635",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c816c59d-ee88-49a1-bbe5-bb5afb02e256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30da2bc-f8f2-4197-8014-e31350ba78a0",
        "cursor": {
          "ref": "35e4a428-3596-4c3e-817a-b1653af23059",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5f011f2f-90be-475c-9cce-a535b3dfa889"
        },
        "item": {
          "id": "a30da2bc-f8f2-4197-8014-e31350ba78a0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d6d186da-9008-4d23-acb7-947fe1536c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78adddac-b0ab-46a6-9c27-ee5f2f100ae8",
        "cursor": {
          "ref": "e97d5efb-ca28-47e2-8eb0-f2be81c1ce17",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "99396aa2-dea4-45df-8fbd-2fe0ae70f727"
        },
        "item": {
          "id": "78adddac-b0ab-46a6-9c27-ee5f2f100ae8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7b31a902-e7c2-4789-84d1-e25c0efeff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570767b6-dd6c-4a7f-b4be-524d55375609",
        "cursor": {
          "ref": "bf36f785-2c6e-4c88-9083-f58a504a5d7a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3acf4248-83aa-4503-8b0d-451cc67ac66e"
        },
        "item": {
          "id": "570767b6-dd6c-4a7f-b4be-524d55375609",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "00dba3d9-7b12-4239-9641-a39f1e7d4f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214521e9-d9a1-4dee-9212-81db0b398470",
        "cursor": {
          "ref": "e87e6e04-64b4-4cb9-98d9-377a198cf7fb",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "266fefce-432a-4129-9d97-92b79f429c88"
        },
        "item": {
          "id": "214521e9-d9a1-4dee-9212-81db0b398470",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "de4c1046-2a1f-4ebf-ba21-2b569093f537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dfff33-b8ec-4f23-834c-8771f500b757",
        "cursor": {
          "ref": "5a9e4fd2-6daf-48d0-9627-faf590feae85",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c950e20d-9cfd-444a-8229-83ef43c21470"
        },
        "item": {
          "id": "d2dfff33-b8ec-4f23-834c-8771f500b757",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "59d86de3-aff7-468d-a591-3202d3ea939a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffab6872-3d44-47f6-9709-293880843d21",
        "cursor": {
          "ref": "ad09368a-d40e-4415-be08-12ae663f1703",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "af21280f-133e-48a1-805d-675caf4ffe90"
        },
        "item": {
          "id": "ffab6872-3d44-47f6-9709-293880843d21",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a8b9f5bd-0fb4-42bd-b799-375a19a63794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5192ba8e-6848-4056-a31b-3cf8398f5e04",
        "cursor": {
          "ref": "c20618c2-4a8f-4b23-b70d-85cb27fc3a36",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f92c71d2-5f53-46ac-82f5-a3b8c3538cc6"
        },
        "item": {
          "id": "5192ba8e-6848-4056-a31b-3cf8398f5e04",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b1fc6816-e158-4562-9c0b-675fd9d56f5d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cfd581-9b79-48bc-94c6-c298fe2a0b3b",
        "cursor": {
          "ref": "2a1dc309-49fe-4545-ba40-cc84264896b0",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "48c12bc4-2764-447d-bacc-90edee172f44"
        },
        "item": {
          "id": "d3cfd581-9b79-48bc-94c6-c298fe2a0b3b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9db5e569-755a-466d-b38d-a1f2c39e31fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b741480-4ba1-4082-bda4-387c62d62239",
        "cursor": {
          "ref": "4b2ea7c0-3b68-4a3f-aafe-3349cd3ab36f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bb7fb068-cdaf-43aa-acb9-96803c01e9f2"
        },
        "item": {
          "id": "6b741480-4ba1-4082-bda4-387c62d62239",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d9c1790b-569a-44c3-a7bd-83fa96f798e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c54f4a-5007-4b61-88e1-c1f6894c50b1",
        "cursor": {
          "ref": "d302c3d2-ba98-497f-9464-2a2a43496c67",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "43e8768d-3ea8-4bee-91d3-c654cde59cf9"
        },
        "item": {
          "id": "91c54f4a-5007-4b61-88e1-c1f6894c50b1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "28c73532-864c-427b-977c-cb26964f54b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8941fc3f-a421-4781-9708-4d08fa4a7b6e",
        "cursor": {
          "ref": "f73d2113-4191-475e-8b78-a60938680eea",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c3dace0a-67de-4dc8-9910-09c0ae17ceaf"
        },
        "item": {
          "id": "8941fc3f-a421-4781-9708-4d08fa4a7b6e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee44a6de-82f7-41a5-8097-3a306f405ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abc6425-c836-446f-a7d1-a1f66f3264f7",
        "cursor": {
          "ref": "9b63fbf0-9127-46af-98e6-f60835c96682",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "90465321-3177-4e51-9501-b70522bc236d"
        },
        "item": {
          "id": "3abc6425-c836-446f-a7d1-a1f66f3264f7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2be739c9-b999-44a6-880a-b874a163b496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c087a9a-b597-4ef1-8e4c-ad96919050f3",
        "cursor": {
          "ref": "5a32bd62-f11e-4faa-8e3c-89c5fd6a5b0e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6320d6a1-0183-4834-aca5-b50a7a6434a0"
        },
        "item": {
          "id": "4c087a9a-b597-4ef1-8e4c-ad96919050f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "879ea29e-72a6-4a2e-b273-9eccbc9b53cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34ba60b-6095-4b3b-85de-9dd47e9f9370",
        "cursor": {
          "ref": "349f1d5c-c73d-4dc8-b0e2-7214eb37bedf",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d47049e9-d1c4-4eca-b617-aa86b0763c20"
        },
        "item": {
          "id": "e34ba60b-6095-4b3b-85de-9dd47e9f9370",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "661b0da9-d5be-4c9f-acb9-9582b75f960d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089f3ba7-6559-4a17-9a62-d432ba187931",
        "cursor": {
          "ref": "ae2a486f-8415-4db1-8836-ed2d15cb9aed",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1344d904-151e-4000-b10d-af14a17b4a9f"
        },
        "item": {
          "id": "089f3ba7-6559-4a17-9a62-d432ba187931",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d90f706d-3300-435a-870f-a04078796113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81880b0-33e2-4c8e-931d-4ec3e37bc15c",
        "cursor": {
          "ref": "43307568-ada5-47ff-995d-8e474b004428",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "50482ec1-8947-4356-beaa-6d7205e8c0ca"
        },
        "item": {
          "id": "a81880b0-33e2-4c8e-931d-4ec3e37bc15c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d9a9b287-a4ea-464d-8a73-029b69707965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8249b8f8-6d7f-4eda-97d9-9dd06e52befc",
        "cursor": {
          "ref": "cea74b9c-6971-439b-bf0f-940f4f1a0ceb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "69c79fab-7d88-497e-9cb5-ee4c8828734a"
        },
        "item": {
          "id": "8249b8f8-6d7f-4eda-97d9-9dd06e52befc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3d56c458-7660-475f-b368-5e4ec52aa967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cb0f6a-b9ae-4b12-83c7-15df4c84bf6a",
        "cursor": {
          "ref": "7c69866c-86b7-403d-bd40-95cf04024a75",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8d25d257-9d25-49f0-8f10-d55dadd1098e"
        },
        "item": {
          "id": "33cb0f6a-b9ae-4b12-83c7-15df4c84bf6a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5dffba82-75e9-48d0-bfc7-89283d6b0951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a3c885-7c54-406a-abc5-69a71d7f8e8f",
        "cursor": {
          "ref": "2ba97246-4537-4b82-838b-51003cc12d5f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8d8b5fd2-3ddc-4c10-b0af-48759580d462"
        },
        "item": {
          "id": "93a3c885-7c54-406a-abc5-69a71d7f8e8f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "efe56058-9ada-4e57-9cae-968c5c284f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75a8b6e-f361-45b2-9173-4aa481be9b70",
        "cursor": {
          "ref": "4cef7428-65bc-44cd-af2e-ee385c78e1d7",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "31f3b6a2-f5fc-4566-899b-e0c4be5cbcd6"
        },
        "item": {
          "id": "b75a8b6e-f361-45b2-9173-4aa481be9b70",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6bbcb58-551a-4d30-a821-b8de36b70577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5213def1-b5e5-45c0-b42b-d8d594723977",
        "cursor": {
          "ref": "8ad8b9e0-9227-4ae4-90d0-3daf6da6b8af",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "44bd621a-79f8-451b-a5f7-e11bd44c69c7"
        },
        "item": {
          "id": "5213def1-b5e5-45c0-b42b-d8d594723977",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "25070e80-e6f5-47cf-a3ae-4d54a7397014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5f2435-e683-4c32-82e9-05377a844a64",
        "cursor": {
          "ref": "3c40e716-fe73-4c4d-951b-9814ab222eba",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3353fe83-4702-4209-a187-f75bb14f9d36"
        },
        "item": {
          "id": "5b5f2435-e683-4c32-82e9-05377a844a64",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1631bc07-d8d4-4776-aab9-643a01670782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621f8163-e947-4b39-b18e-8deaa89f5813",
        "cursor": {
          "ref": "4a0d0c35-345a-4c9d-9969-282f84ca2971",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e2109c18-328b-429f-9bfd-9f8e5f3e7c03"
        },
        "item": {
          "id": "621f8163-e947-4b39-b18e-8deaa89f5813",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bf6313ac-557f-4992-a2c7-22a28c12f657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00c9734-8a39-400d-8edf-efc75b959b66",
        "cursor": {
          "ref": "9ef19ba0-cbe7-48c3-9284-89116479cb2f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d73b4c83-fbc2-4ee7-933c-c2e1e20e4f7f"
        },
        "item": {
          "id": "a00c9734-8a39-400d-8edf-efc75b959b66",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f7ae79b3-89c1-448d-a4eb-f209d3366dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2164da63-bef1-43d1-82dc-0c2e9ecf40a3",
        "cursor": {
          "ref": "fa04432b-461e-40c2-88b7-609bea2641d9",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d0112116-dd8e-42c3-bad1-860a1ecfa057"
        },
        "item": {
          "id": "2164da63-bef1-43d1-82dc-0c2e9ecf40a3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a61855fb-210d-43e2-90d9-5cae7268e4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa765f2-f34a-413d-be98-df599280a915",
        "cursor": {
          "ref": "5a220f10-5f1b-4da5-90ca-e4a9c0e79467",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "986f73ca-8977-4bcf-accf-4d38954f8ff2"
        },
        "item": {
          "id": "daa765f2-f34a-413d-be98-df599280a915",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "372b85f9-6635-4dd7-9498-73eabc4d2d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49ae1b0-6685-4520-b550-4e9618bd0e16",
        "cursor": {
          "ref": "962c4ec9-64ed-4aae-82b9-e5f63829c3a3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "79aececf-47ad-4dec-8e4f-08b9a3541fbb"
        },
        "item": {
          "id": "c49ae1b0-6685-4520-b550-4e9618bd0e16",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4c64d25c-00be-4f74-8cc2-528ac9d4f782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93804a10-aa31-4319-bfae-b0fe5931e555",
        "cursor": {
          "ref": "63575e90-0f24-4a67-8579-882e4892a84b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d590b8fd-0cac-4739-80b7-47aeccc576c9"
        },
        "item": {
          "id": "93804a10-aa31-4319-bfae-b0fe5931e555",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d99eec6c-9c50-495a-acb8-bd4710283ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789ba301-1554-4229-9297-5dd41b8d42bf",
        "cursor": {
          "ref": "f61db71d-00d7-470f-9ee2-2d3832f98d8b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8d83a046-f379-4cbc-aeaa-4b0ba82ffd73"
        },
        "item": {
          "id": "789ba301-1554-4229-9297-5dd41b8d42bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "291674da-a5de-4051-8272-10027347c233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fd0762-6a58-479d-9c81-4f4d32239c70",
        "cursor": {
          "ref": "42d791e3-3e46-47a4-98dd-ef6c11d70dd0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "30229f9c-592c-435a-8fd8-3f94c99cd3d1"
        },
        "item": {
          "id": "a8fd0762-6a58-479d-9c81-4f4d32239c70",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0cc8dd60-451e-48f6-b2c2-507d31ca2849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f943a63-3fd5-4891-b6f5-b2611e336789",
        "cursor": {
          "ref": "d0630fe6-677f-4f9c-88ab-ac7417fdf506",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c689cf49-4cc4-4702-98c4-5bf0bc9a1eee"
        },
        "item": {
          "id": "3f943a63-3fd5-4891-b6f5-b2611e336789",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c6042808-b679-4b25-b56f-f0327b2096ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7722c3-e92e-47dc-9172-12ae86100449",
        "cursor": {
          "ref": "3bb364f6-fabb-45e4-87d8-3b8437f5cb26",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ed170d1c-7854-4d65-8a90-7bd5bae42584"
        },
        "item": {
          "id": "df7722c3-e92e-47dc-9172-12ae86100449",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e42d9f41-9964-4238-aa89-17c98fe7a9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7734f317-609b-4ad9-849e-898e3b23a524",
        "cursor": {
          "ref": "2e2e5d16-2419-46bd-983a-2e1f0000be91",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e5d0645d-411f-4e4f-b333-846d4556054d"
        },
        "item": {
          "id": "7734f317-609b-4ad9-849e-898e3b23a524",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fc623a31-83e4-43be-8807-f0b7ef8da808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d44e7f9-149f-4126-be81-b314539cf97f",
        "cursor": {
          "ref": "90b7cac1-a259-4107-a3e0-a026684b3c4b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4246ba5e-ccc3-4d13-a5b4-13a38d79ccf2"
        },
        "item": {
          "id": "8d44e7f9-149f-4126-be81-b314539cf97f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "53b9cb92-e7e6-492e-90a1-2eb3f11ce96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba00ba4-43f2-424f-ba82-8baebfb2b886",
        "cursor": {
          "ref": "ed071d83-01cd-4683-b54e-6d4c8a6d9edb",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1691a419-d525-47fa-8439-045db57be1b8"
        },
        "item": {
          "id": "5ba00ba4-43f2-424f-ba82-8baebfb2b886",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d988fd3e-9b4b-4f24-8b14-7d822c7e4c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905f7334-4fc6-4eb9-8e1e-9080a93c56e0",
        "cursor": {
          "ref": "eedbcd2e-0557-47e4-8d39-c4e2612eccb6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c2672b41-eca8-4d35-a006-a06eb19121d6"
        },
        "item": {
          "id": "905f7334-4fc6-4eb9-8e1e-9080a93c56e0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1001cf94-2337-4d37-a6f6-95cdfa22ece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a2bd56-794c-4526-ba81-d095fe1a5181",
        "cursor": {
          "ref": "0288b7f8-d1e8-4ca0-9c99-62bfd032283e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "93e8c5cc-2d04-422a-8c57-0def0dad9ecb"
        },
        "item": {
          "id": "33a2bd56-794c-4526-ba81-d095fe1a5181",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5b935e5e-6963-410d-8a90-dd8befef4705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6732be7-0b1a-40c1-977f-96d0854873e5",
        "cursor": {
          "ref": "cd1d13fe-39f8-4033-8da9-6ffa8aeb96dd",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d3f584d2-a0b4-4e81-aa31-49dd3e5f66d3"
        },
        "item": {
          "id": "b6732be7-0b1a-40c1-977f-96d0854873e5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6ed37dfb-a0d1-4a9b-a938-9973d811a9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b588c9f-bb9c-4d0b-b3a2-d97117b88635",
        "cursor": {
          "ref": "77310937-b711-4059-89f5-aa7bf119027d",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "467f68f8-af5e-496d-8a22-6dcd5cbb33ca"
        },
        "item": {
          "id": "9b588c9f-bb9c-4d0b-b3a2-d97117b88635",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "73e7b42e-0093-40c7-895b-833665daffc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4863d28d-9a28-4560-adf8-5fdafa9f89c0",
        "cursor": {
          "ref": "d745278d-e236-4c34-ade0-6f6fc78d30ae",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "822e23ed-abba-4159-9beb-6f3785047ec6"
        },
        "item": {
          "id": "4863d28d-9a28-4560-adf8-5fdafa9f89c0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ba8e3f8a-3b77-4560-81de-de43f63e9956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa264cf-4305-49d9-8ba2-be65126ff334",
        "cursor": {
          "ref": "e394d07d-6cd1-4cc4-8a28-41a6479cbb2e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0888941c-5edd-4ac0-90dc-ccc1b73ed8a8"
        },
        "item": {
          "id": "eaa264cf-4305-49d9-8ba2-be65126ff334",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9391ce64-45bc-43f8-b054-68a6b6be8cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77303905-9f47-4b9e-9b5c-389a325d92d0",
        "cursor": {
          "ref": "9888db0e-d232-47fd-8b4f-75894e11e6e6",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0cd0277b-4c19-4793-b402-7c18f7f366be"
        },
        "item": {
          "id": "77303905-9f47-4b9e-9b5c-389a325d92d0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5abccfc5-a84b-4fe6-8817-51a6b48ab11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d860ea3f-fabd-4e21-9786-563a97b1405b",
        "cursor": {
          "ref": "cc3e6f97-64f4-4177-829f-b01b05b8f74d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "395cba0d-1cfc-4f12-96e3-2a2b130fbc17"
        },
        "item": {
          "id": "d860ea3f-fabd-4e21-9786-563a97b1405b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "75006cfb-ca3d-445a-b025-64ec1194248a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba90c131-6cb4-4824-b093-0d3083395c89",
        "cursor": {
          "ref": "8a2f5e9c-7501-4d3e-9ca8-b68073ace514",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fdad3944-5ec6-4e1b-a7bc-159f285cb33a"
        },
        "item": {
          "id": "ba90c131-6cb4-4824-b093-0d3083395c89",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6aacbab6-5301-4465-bbd8-5c7427301595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107ff86c-672b-4e8b-b82f-6c1c52cf553b",
        "cursor": {
          "ref": "bb02ce6b-79e0-4987-869c-35c1379fae22",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d670be25-07a1-4a44-a246-a5d6eb06af5b"
        },
        "item": {
          "id": "107ff86c-672b-4e8b-b82f-6c1c52cf553b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6b1f1438-543c-45f3-a0d2-18ed851b7604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd782e7f-773d-4b4a-89df-3473da4baf01",
        "cursor": {
          "ref": "431c1679-f604-4245-833f-41c937fa3b46",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6d3a5157-891f-4371-baa7-eedcb7ec5c47"
        },
        "item": {
          "id": "cd782e7f-773d-4b4a-89df-3473da4baf01",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "42bbe7d6-40f8-4ace-b108-2feaabc6c045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcff5f8a-a2d3-4c7a-a888-46e367678c48",
        "cursor": {
          "ref": "f1a2c99e-eae1-43d0-960d-49cde85f814c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a92aebfd-cbbe-4090-b924-599110e94ecc"
        },
        "item": {
          "id": "fcff5f8a-a2d3-4c7a-a888-46e367678c48",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "52467f39-b781-4d14-a3b0-b10f621cd8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e204d91a-5cb1-4bfe-8a49-d650e70d1ede",
        "cursor": {
          "ref": "ccee2af9-7231-4c98-a806-3f0e7829f9e9",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f7e944ff-5659-4c55-bf93-536410ff8c87"
        },
        "item": {
          "id": "e204d91a-5cb1-4bfe-8a49-d650e70d1ede",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0fc75803-526d-4e51-b1ff-fbdf77145858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e10172c-e45c-4252-9a3a-fd2d997660d0",
        "cursor": {
          "ref": "d1ac2a89-4eed-4b1e-b545-3e08ac275606",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "78886d75-18fd-419d-8842-f7d3967d3861"
        },
        "item": {
          "id": "9e10172c-e45c-4252-9a3a-fd2d997660d0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fde066e5-dd47-402f-8f5c-e413131edb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fb6ecd-6a41-4968-ac8e-552456608a2e",
        "cursor": {
          "ref": "f399b72c-a94c-47da-8be2-cdd227738eca",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "496bb2f8-d114-41da-9448-aee8fd036c24"
        },
        "item": {
          "id": "d8fb6ecd-6a41-4968-ac8e-552456608a2e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c555f29c-c56f-402b-9b71-f4a6fcc51b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdd86ba-3cd9-4312-8244-5843cf67862a",
        "cursor": {
          "ref": "55246057-c60c-479e-b4cd-8fce564bfb6b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "16655d26-61d4-4f5b-a07e-0fd1a429e7c2"
        },
        "item": {
          "id": "abdd86ba-3cd9-4312-8244-5843cf67862a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "664d80a7-e5b4-49f7-b1cc-e4cb8ea7d4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0aafc5-da0f-405b-a628-b4f3d76e7fa2",
        "cursor": {
          "ref": "37de3195-4ef9-49f5-9124-ca6eaec707cb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3ed95ebc-632b-41dd-8aed-cdab500a5f7d"
        },
        "item": {
          "id": "9e0aafc5-da0f-405b-a628-b4f3d76e7fa2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9c980aa4-b40c-4bea-9f2f-5aa0a3a1e2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a52e4f-f2bd-4c6c-9767-da91d6d0b162",
        "cursor": {
          "ref": "dfcc73ed-d0df-4178-87c3-51ff70f0ef69",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "24e79afb-6097-48d0-b5d4-d16e7eae5a04"
        },
        "item": {
          "id": "85a52e4f-f2bd-4c6c-9767-da91d6d0b162",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a0e4d2c3-0563-4fa2-ae4a-03ef1b51bec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89cdad1-15fa-487f-863e-0348eacbec2d",
        "cursor": {
          "ref": "b67ac2e4-b54e-4ff9-a1d9-351deabb41cb",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ddb76829-4c86-488f-af54-73335327e2a5"
        },
        "item": {
          "id": "a89cdad1-15fa-487f-863e-0348eacbec2d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "de7fd538-ca59-45f9-804e-ebd939d55ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7999787-bf71-4d32-8730-6fad5c0edc18",
        "cursor": {
          "ref": "5bbbf409-eede-47b0-8799-9f468717c5c8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c9ae317-c255-4db2-9996-dd4f1937a412"
        },
        "item": {
          "id": "d7999787-bf71-4d32-8730-6fad5c0edc18",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "933a1e63-1d1e-4945-a3ec-40c03bd4e985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59db59a9-65e0-4ecd-b454-905a5086cff8",
        "cursor": {
          "ref": "7ac6fbb2-8769-45f3-86ce-ce5af96032dc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "eef2e2d6-e35e-4f31-a913-646e6953ccaf"
        },
        "item": {
          "id": "59db59a9-65e0-4ecd-b454-905a5086cff8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "110a3fde-23ec-497f-8eb1-8393a57e7646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781633d9-8f64-42c8-a82a-44eae00c18fd",
        "cursor": {
          "ref": "8b8b5bd3-e1dc-476b-9af7-891eaf2a450b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "764d3855-42b3-4505-82b4-6a5fab6c6636"
        },
        "item": {
          "id": "781633d9-8f64-42c8-a82a-44eae00c18fd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c62b527d-9b85-4c6e-bb25-d7b8438e27c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7f53e9-896d-4410-a5eb-8bdbaebe5cd2",
        "cursor": {
          "ref": "7c5496d7-3050-4628-91f6-6bd998d92ee8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1197ab54-aee1-4f1d-94dd-cd57d3827d40"
        },
        "item": {
          "id": "fd7f53e9-896d-4410-a5eb-8bdbaebe5cd2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "94181f18-6636-41f2-9eb5-abe27ef5015b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc999bfd-3622-40c1-b94f-4cbad38a2ca1",
        "cursor": {
          "ref": "d1853133-dfab-41df-b44b-ebb0409fa45a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "19bdc2e5-7dff-4c0a-9123-1b52adf52edb"
        },
        "item": {
          "id": "cc999bfd-3622-40c1-b94f-4cbad38a2ca1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a6df3b28-ba57-4e5b-b49b-0d73539ac457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cf91f4-94be-420e-ba7f-d43b79ee4adf",
        "cursor": {
          "ref": "91458b14-afde-4d69-afe5-7b8230caa8ae",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f0598ba5-3901-4186-ae3e-c375019ecc6b"
        },
        "item": {
          "id": "25cf91f4-94be-420e-ba7f-d43b79ee4adf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2ba60f6a-9f61-4852-8cbf-ea9e698cc705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a0bc80-1123-459b-96ea-26d2fa930a3a",
        "cursor": {
          "ref": "b14581fa-f640-4a78-b505-33e839c7b2eb",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bef33bd8-310f-4d97-8689-d097663a4fbc"
        },
        "item": {
          "id": "60a0bc80-1123-459b-96ea-26d2fa930a3a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f42eabf9-0d12-4a9d-b9bb-61ae2ed6be7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e5c856-ecf6-450d-9fc8-d4149e9abda9",
        "cursor": {
          "ref": "77bcd3fb-cc17-4cb7-9512-7880982af839",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "81e8e171-e7a9-4db4-a0cf-7cef62078f9b"
        },
        "item": {
          "id": "f6e5c856-ecf6-450d-9fc8-d4149e9abda9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3908fbc1-f323-4a6c-99ba-2b9858a3cd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95758cda-8fce-4e87-a2bc-24bc14f0c681",
        "cursor": {
          "ref": "1efc95ca-4308-41d8-b32f-2b3cf73cbb65",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1ffbfd83-1e94-4df5-837e-8eb99dda2bde"
        },
        "item": {
          "id": "95758cda-8fce-4e87-a2bc-24bc14f0c681",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f25eff63-4303-424e-915a-8b4d8befcb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ba89b5-819b-4872-9b4a-7d8d2a655e9b",
        "cursor": {
          "ref": "bd09683b-d1f6-445f-a440-14dc8b4db8e2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6ccd4238-4f56-44d8-aa7c-3828999db952"
        },
        "item": {
          "id": "96ba89b5-819b-4872-9b4a-7d8d2a655e9b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "10915b83-9469-4543-87a9-3f621cb280a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d214234-8e14-4787-b10f-6cf0fff92630",
        "cursor": {
          "ref": "858eb4d1-9cfa-467f-8872-c79b9634958b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "de744ae4-1f41-409d-9b66-6a1c1d636b2c"
        },
        "item": {
          "id": "2d214234-8e14-4787-b10f-6cf0fff92630",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c89f8449-22f9-4e36-add9-52a394d07f0c",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8f3792-12b5-44b4-8ec4-c28856b3a9f6",
        "cursor": {
          "ref": "93007d1f-e5a7-4b35-ab51-b42f259cd87c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "785dd5f3-c364-4764-9bd8-891ecc9e175e"
        },
        "item": {
          "id": "ba8f3792-12b5-44b4-8ec4-c28856b3a9f6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "58d6d17a-4dca-45fb-bbd1-a4ce6cdc9b27",
          "status": "Created",
          "code": 201,
          "responseTime": 124,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "28de1b32-69cd-4c9f-9033-89d23b9574b7",
        "cursor": {
          "ref": "5c93b8a7-c640-4342-b4e7-3b1b6a67314a",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "333cc72c-51c7-4eac-a93b-3aa19e5dfc82"
        },
        "item": {
          "id": "28de1b32-69cd-4c9f-9033-89d23b9574b7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6c24753a-74cb-4034-929a-b3d6666092b2",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb225c44-509e-4074-bc4e-9cd6fb8ec980",
        "cursor": {
          "ref": "e54920ef-b722-4890-bd6d-d67c753a91db",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8d242a38-32d5-4915-a60f-ce05c736d9a9"
        },
        "item": {
          "id": "eb225c44-509e-4074-bc4e-9cd6fb8ec980",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7a6f92ed-3320-4d19-8379-8b45b97f2c09",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "472736eb-eac2-41f9-bf61-1e32522a0249",
        "cursor": {
          "ref": "afb8d60f-f825-429d-9faa-46d0eaa7ab76",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cfd2600c-6d00-4071-9e87-79886be868a9"
        },
        "item": {
          "id": "472736eb-eac2-41f9-bf61-1e32522a0249",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f54e4f56-b9df-4745-85be-266b0cab0b0f",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c9e2b5-3b73-4cf1-9915-18e9f942daf8",
        "cursor": {
          "ref": "e701671f-e737-48c2-8bf3-10c9563bde94",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6f16ab01-d550-429d-862c-0490bcf999a2"
        },
        "item": {
          "id": "38c9e2b5-3b73-4cf1-9915-18e9f942daf8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2ec79c58-1e7c-4628-97d4-e690f7248d4e",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0a7bcd-9e95-4cbf-899a-d39b2fddeef8",
        "cursor": {
          "ref": "4fe15e25-9ff1-4052-8b3d-d0a8f71219e1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0db962f7-c081-429b-8f0f-2620d56f0d0f"
        },
        "item": {
          "id": "9e0a7bcd-9e95-4cbf-899a-d39b2fddeef8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1cc33fe7-bb7e-4dd7-92d1-98dc8e19a92c",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3d6b28-d119-4903-ad3d-0010421ac36d",
        "cursor": {
          "ref": "9c58ab83-97ac-4e73-8f3d-c2d4662cdbac",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d35f57c1-aa3c-4e8a-86f6-b4fb2cde18b7"
        },
        "item": {
          "id": "ee3d6b28-d119-4903-ad3d-0010421ac36d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c2638308-31b9-4497-a6a3-1a1f7beadf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4393267-3e27-4538-a12f-89f1a3b31d66",
        "cursor": {
          "ref": "349028d6-f067-42c8-ba75-05097a2b196d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8e29cbdb-682b-4ce6-a65b-1eee265622a9"
        },
        "item": {
          "id": "a4393267-3e27-4538-a12f-89f1a3b31d66",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d7d29495-c455-4900-811a-92325379483d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa445df-afb3-49ff-9df0-d9556ea1f598",
        "cursor": {
          "ref": "d9fa6e0d-0358-4206-a950-0d691741087d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4ac9bc0e-9d22-4127-b248-a15d454bc532"
        },
        "item": {
          "id": "1fa445df-afb3-49ff-9df0-d9556ea1f598",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e77df723-8f64-4be6-ab95-87050510e7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b5b2f2-4e91-404a-a837-eb6ee3a51ed0",
        "cursor": {
          "ref": "bd6f8761-09e4-4094-9b6a-9cdcb8cd2ba2",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "68f46234-d9ee-4fee-a842-7b24864d869a"
        },
        "item": {
          "id": "b9b5b2f2-4e91-404a-a837-eb6ee3a51ed0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2322c188-9eb1-4407-9cc9-c3e771d3ade8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b9393a-7b19-42d3-9f2c-00a0a9bea527",
        "cursor": {
          "ref": "264dc2e5-dcfd-4874-9033-e34f7ea11d48",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0bb4a46e-9be7-4d20-a148-ec023be84876"
        },
        "item": {
          "id": "c6b9393a-7b19-42d3-9f2c-00a0a9bea527",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "313859e7-0d00-4bd2-8844-17cd480731c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549f89d0-5371-4da3-88b1-a651e4f09b50",
        "cursor": {
          "ref": "11f2e8ac-ebdf-4bbc-a2f4-d6e4aa3e7109",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f971eda0-e861-4882-ac2f-e563e73a319e"
        },
        "item": {
          "id": "549f89d0-5371-4da3-88b1-a651e4f09b50",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8ca6259d-d684-4467-9c0d-a49972af047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f06da8d-6ebd-4732-822f-8001526abd4a",
        "cursor": {
          "ref": "1b137da4-242a-4fcc-996b-871949ef8e2e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dc99d177-38ed-402e-bb8b-7b40001ef025"
        },
        "item": {
          "id": "4f06da8d-6ebd-4732-822f-8001526abd4a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "64a15a32-98a1-4e1a-8218-183f83d89b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a44b862-32d4-48a2-8863-df45da8433e9",
        "cursor": {
          "ref": "ee2a3edc-65f0-435c-88fa-c5a5cbfc180a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0f4be58f-7850-470a-a3ba-24b11ca30d32"
        },
        "item": {
          "id": "3a44b862-32d4-48a2-8863-df45da8433e9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dab1a4f0-24f5-43e3-ab45-6a4879ea27ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cd8654-cd6a-467b-a42c-d1f1bd47da56",
        "cursor": {
          "ref": "75285023-77e8-4072-a680-a4aaeed43713",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "90297b5f-0177-44be-a566-8191cd9ad216"
        },
        "item": {
          "id": "88cd8654-cd6a-467b-a42c-d1f1bd47da56",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2e1ed713-b939-4d14-a9a1-883d485f8917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60c621f-4278-4db9-a4e1-5c2011390016",
        "cursor": {
          "ref": "52a6455c-7986-4519-b79d-c136b8e94738",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "10095914-cc95-4835-9bd7-efa0939f6f48"
        },
        "item": {
          "id": "d60c621f-4278-4db9-a4e1-5c2011390016",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6459ef73-57ec-4809-8fbe-65996eb2f9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ef8f47-0cba-422a-ba89-3d6c8051dc82",
        "cursor": {
          "ref": "b5662be9-57e3-413d-89d2-d86e6b798aa9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "39da2bc0-ca96-496a-93e0-fdc2222f95e4"
        },
        "item": {
          "id": "f3ef8f47-0cba-422a-ba89-3d6c8051dc82",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "38dbcc61-d262-442b-8303-7d8ad290bd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d46760-38a8-49f6-93c4-b3e3e18d2acf",
        "cursor": {
          "ref": "c82a395b-3f69-4500-96ab-3cf347a55781",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "54f04e4e-fe9a-4100-a12a-3cdbca3d900b"
        },
        "item": {
          "id": "00d46760-38a8-49f6-93c4-b3e3e18d2acf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "47c0b877-3e86-4ce8-b117-0b9f74d83442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67607cf6-e88c-472a-bfe7-0b0c5582a3ef",
        "cursor": {
          "ref": "500adff4-9b7b-4668-887c-1832581856be",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "697817b5-003c-4850-a3f3-8bdbd91bd62f"
        },
        "item": {
          "id": "67607cf6-e88c-472a-bfe7-0b0c5582a3ef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11eecff6-d3f2-4104-acba-555bf2034b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51752a15-b3ef-4b85-8ab9-03ca7c3dcf95",
        "cursor": {
          "ref": "d13e7595-4386-49b0-8aa9-26de5b2cc6e0",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d2463f01-a4ef-41c9-b1a7-fb63fe109078"
        },
        "item": {
          "id": "51752a15-b3ef-4b85-8ab9-03ca7c3dcf95",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2cf39c84-8a12-400c-a90e-e20255700c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c5c16d-f2ed-4c36-ab0a-9d66954a7370",
        "cursor": {
          "ref": "6ded4d62-b7fe-4301-80b6-7456ce98a5d3",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1363c030-ed36-4a9c-811c-33a53c816678"
        },
        "item": {
          "id": "71c5c16d-f2ed-4c36-ab0a-9d66954a7370",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2be2fe18-763a-4359-a661-d53e6ebb619e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f57e9d6-f275-4f0d-b233-197041e72446",
        "cursor": {
          "ref": "a84c5a79-8d00-4305-a192-55ea28418e06",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cb038015-2980-4a39-bebc-73c4d8bcfe41"
        },
        "item": {
          "id": "7f57e9d6-f275-4f0d-b233-197041e72446",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b510261a-53cc-4344-b7b0-c7d1193d5ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1bfbfe-397f-451e-8eeb-e375c9cd00b9",
        "cursor": {
          "ref": "f8071983-2b36-4cc7-a4be-17aa19ce496f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "09df4a7a-f134-4d77-abdb-795d42e39241"
        },
        "item": {
          "id": "fc1bfbfe-397f-451e-8eeb-e375c9cd00b9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2bd96600-5d4d-4e87-a1a8-4376223ce6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4d4538-598f-4627-b54b-9e24abdb9b46",
        "cursor": {
          "ref": "8bb2a076-924f-4eae-a7c3-dd2a55cbe356",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "da4ad585-cf81-49c4-ab93-4ee10431a20f"
        },
        "item": {
          "id": "ca4d4538-598f-4627-b54b-9e24abdb9b46",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01d91da2-f048-4992-a728-2bfde8b50496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841cc9d9-5f84-4c46-bc33-36d622f49c5a",
        "cursor": {
          "ref": "006e7cdc-0133-4490-8445-93d4ec21c234",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1c8cca64-71d1-4998-aba7-cefd70a40f94"
        },
        "item": {
          "id": "841cc9d9-5f84-4c46-bc33-36d622f49c5a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c527f3ef-e68f-4517-97f0-8eb929ae64ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2916328c-3ef8-4435-80d7-7dce42a2841f",
        "cursor": {
          "ref": "1ecd1a12-604f-45bf-b9ef-b42f06192061",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9a75b337-90e2-4bb5-b316-e9901724713f"
        },
        "item": {
          "id": "2916328c-3ef8-4435-80d7-7dce42a2841f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8173aa65-0c16-4a99-b644-75731803c49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea415d81-ba23-4e6f-a33d-bac915889d5c",
        "cursor": {
          "ref": "0739561a-8324-43d7-8f3f-f132b12de7bd",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2f8b81f1-2cfe-4701-9c3a-1652582f0f6f"
        },
        "item": {
          "id": "ea415d81-ba23-4e6f-a33d-bac915889d5c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7b534030-9a64-4f1b-b4ab-e4e649ad5726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51efd609-bf1d-4c61-b1c6-75393d191767",
        "cursor": {
          "ref": "8f19c141-fb91-4af3-91fb-7f750b53ba53",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "84c69c7c-da7d-4a08-a391-595d6bbad291"
        },
        "item": {
          "id": "51efd609-bf1d-4c61-b1c6-75393d191767",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0fae442e-42e4-48f0-b0fe-402ff79fc4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f15b53-b823-4d12-9a17-618af2e6f67f",
        "cursor": {
          "ref": "921e56c8-7b48-45e2-8413-6dbc720fa745",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ec841107-cfd4-4d6c-b000-7a38821a9f08"
        },
        "item": {
          "id": "e9f15b53-b823-4d12-9a17-618af2e6f67f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "81d5f9fc-5ad8-4797-963b-acf183c807f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc44a3a-66d8-45b6-874c-f71b68c0664e",
        "cursor": {
          "ref": "42f3ed08-5e00-42da-b6ff-841aef13baec",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "16cf446d-b184-4dce-8ce8-1df3b6f48f7c"
        },
        "item": {
          "id": "5bc44a3a-66d8-45b6-874c-f71b68c0664e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b648c0b-c108-4eea-97ab-38205fd283b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4283f71-8842-4ba5-9e04-83a24454c619",
        "cursor": {
          "ref": "c1dc5b02-59bb-4623-a997-a8b0f3130b68",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fc97eddf-fbaf-4616-b3dd-33b768e3709c"
        },
        "item": {
          "id": "e4283f71-8842-4ba5-9e04-83a24454c619",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d646db35-df60-420b-8a01-2fe3d93d70b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e138e358-82e4-4b07-adae-8ba78537ea14",
        "cursor": {
          "ref": "10e7b338-42ac-43e1-acd4-7e6931fbd046",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e97e4617-1535-4c33-ba97-07703ac6cadb"
        },
        "item": {
          "id": "e138e358-82e4-4b07-adae-8ba78537ea14",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0572c9bd-fecc-438a-96b7-a88232cf548b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2137e983-5030-4f17-9196-6f3c9013d109",
        "cursor": {
          "ref": "1b5e1e5a-3290-4ee1-9399-4c689c566477",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "407a03cf-314a-4bdb-8a0d-227bf65b0714"
        },
        "item": {
          "id": "2137e983-5030-4f17-9196-6f3c9013d109",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "853d85ae-9f07-42d6-a01b-4f05237b9340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ee448e-4a43-43fd-a26d-c81ceb935743",
        "cursor": {
          "ref": "4434d522-3d5a-4f62-82c9-84a1db17cb7e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4b7b3388-fc2a-4499-a347-2163f935e306"
        },
        "item": {
          "id": "75ee448e-4a43-43fd-a26d-c81ceb935743",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43531819-4a0e-48eb-8838-72ed8416fe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b377953f-6b71-40f8-9471-8f17b24c9e5a",
        "cursor": {
          "ref": "8b09b7cf-0318-43ec-a093-d874085ad261",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ccea972e-5a65-4d54-afac-91dd55af20e5"
        },
        "item": {
          "id": "b377953f-6b71-40f8-9471-8f17b24c9e5a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aff45da4-0ba2-40ab-a232-4a813392f7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88bc0da-ec92-4564-89fc-43810a44d94c",
        "cursor": {
          "ref": "412524c3-5672-43ab-9a2b-96accf60e6ea",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cececdeb-cea2-4b45-a650-e22dde73c8af"
        },
        "item": {
          "id": "e88bc0da-ec92-4564-89fc-43810a44d94c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "57b91430-6d08-4fcd-a02a-98a32416be9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594fec3d-1d82-4fc2-962f-c08de57e1327",
        "cursor": {
          "ref": "4ecd187f-981d-438c-b474-f39ca0c9d70e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2816cdc5-6bdd-49c6-b03f-35f6de9e1648"
        },
        "item": {
          "id": "594fec3d-1d82-4fc2-962f-c08de57e1327",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dfa73999-a356-4be4-94de-04e98866c064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b270fb-3692-4d78-a86c-5edc0b0133e7",
        "cursor": {
          "ref": "38d91d04-9aac-4ec5-9983-efda84b766cc",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "832bf34b-51f4-4392-a104-a9a40c331c01"
        },
        "item": {
          "id": "21b270fb-3692-4d78-a86c-5edc0b0133e7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "be3612d9-78b7-431e-a93d-e0df6bf9b652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627f4e97-3db8-4054-ae7c-ec136649757d",
        "cursor": {
          "ref": "eb644d96-d387-4155-9684-884d019acea4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d69e71ec-06d3-4630-a4b2-d7b5d9e2fe8f"
        },
        "item": {
          "id": "627f4e97-3db8-4054-ae7c-ec136649757d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a6d0413c-6483-4d8d-b5a0-6e1f3236d651",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5616d2db-ab35-48d2-a5f2-cd098699ec27",
        "cursor": {
          "ref": "4e75a1f7-bdac-47a0-a0b5-c5761a2c8c00",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "595a0e2e-1cb0-4b89-b9b6-22268848519b"
        },
        "item": {
          "id": "5616d2db-ab35-48d2-a5f2-cd098699ec27",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "266cffd3-7a91-4ebe-8682-92730622abf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81358f15-00fe-4a8d-a99f-1e9741c3c192",
        "cursor": {
          "ref": "aedc678e-8147-47b0-979b-6e6e43d06be8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fde45035-c4ea-414a-b6c6-02ab8c84efa1"
        },
        "item": {
          "id": "81358f15-00fe-4a8d-a99f-1e9741c3c192",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b612961d-55e2-4acd-8052-b6f8a2e35f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438323d1-fb7a-4dab-9398-e6001645d104",
        "cursor": {
          "ref": "4966bd6a-ad46-4870-b90b-f0a492b0512d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f3b0b07f-e8e0-4e3d-94f4-f7091572cb7e"
        },
        "item": {
          "id": "438323d1-fb7a-4dab-9398-e6001645d104",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "214e07d3-f76f-463d-abda-2c4eec7e23de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbca08d-d57f-4f44-a782-d94de4b987ea",
        "cursor": {
          "ref": "fb919c39-616d-4f15-a155-d57ef423c515",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a88999a0-1444-4e72-b53d-62fa7b42ced4"
        },
        "item": {
          "id": "ecbca08d-d57f-4f44-a782-d94de4b987ea",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "44152571-7d3d-4a7e-a4ba-c1fd65aaaedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885f9efd-3dc2-4007-bf55-8629a415bab2",
        "cursor": {
          "ref": "c7026359-5df4-4005-91b4-f6be536274ff",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "da358fb4-cdda-416a-bdb8-ebc3c7451164"
        },
        "item": {
          "id": "885f9efd-3dc2-4007-bf55-8629a415bab2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9275b095-04c1-4dd6-8784-f731c4dcd7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0ed574-4dd1-4085-99d4-b91427c3414d",
        "cursor": {
          "ref": "bf0c6399-dfdb-41c9-951f-78ad9749d093",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b72aec14-48d6-46f5-8303-6d8a20dcabfc"
        },
        "item": {
          "id": "9e0ed574-4dd1-4085-99d4-b91427c3414d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7d302ad3-9f58-4970-8823-5017760af2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da3628a-09ec-4e38-bae2-07ef66d2209a",
        "cursor": {
          "ref": "b43e3121-bfbf-40b8-8a6e-6f4ff0550b1f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "40b034ad-5e66-42fd-907b-57fcd8b12f98"
        },
        "item": {
          "id": "9da3628a-09ec-4e38-bae2-07ef66d2209a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ed51fcbb-6189-408c-8dec-26d1a8fa8b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f54dcb-eab9-416b-9032-13e33b6061ce",
        "cursor": {
          "ref": "b15c1da2-498f-4575-acbc-603ff8b18413",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f5fc4389-87a2-44a4-9290-b6ae59c13dfd"
        },
        "item": {
          "id": "66f54dcb-eab9-416b-9032-13e33b6061ce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "880f5294-3a83-4452-94d8-974df0b3474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eb15d5-6ca0-4ff7-ae17-3425163bd4e3",
        "cursor": {
          "ref": "4e4beac0-da75-463d-8e2d-efc4f21a6e26",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "57a6ce14-6d0d-46dc-a9ae-6f7d23f8c432"
        },
        "item": {
          "id": "12eb15d5-6ca0-4ff7-ae17-3425163bd4e3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5570d682-976a-4cd5-a732-d55dcf81d998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8f301f-7a53-4502-afc5-ea094dc72765",
        "cursor": {
          "ref": "03e816ef-50d9-4cc9-9ba7-a9a084380d48",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e05e2248-7471-4490-b523-c30c2705724a"
        },
        "item": {
          "id": "df8f301f-7a53-4502-afc5-ea094dc72765",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b70c4b1-b1f6-4cd1-880f-851584fcc5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf251698-0ce1-405c-90c3-0b7b4f980f88",
        "cursor": {
          "ref": "0c399a40-993d-40f8-9edc-26310a639b16",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "57d93661-b256-48c1-aa0b-43b554bb7d44"
        },
        "item": {
          "id": "bf251698-0ce1-405c-90c3-0b7b4f980f88",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d44d7445-ea69-4821-96ca-b0168e42bab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249ab535-fc5f-4178-a6cd-b8272c873d3e",
        "cursor": {
          "ref": "f5d18911-6ea3-456f-a0bb-c514b0a9e1f6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f2211156-f2b8-4476-92b6-06196288a7c6"
        },
        "item": {
          "id": "249ab535-fc5f-4178-a6cd-b8272c873d3e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "be6fbbf4-eea6-488a-9ec3-70bb939d6eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2ab2e3-0305-4f37-bf54-5adc6a9f381f",
        "cursor": {
          "ref": "7416d56a-9d66-4d0a-8024-c07c05099b6e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7c581ace-5be6-486a-9b60-499adeb4cee5"
        },
        "item": {
          "id": "ef2ab2e3-0305-4f37-bf54-5adc6a9f381f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1de4e7ff-2a47-475f-9c62-6ce4065431db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730dbbc9-4488-4297-b3a4-ea5411e55be8",
        "cursor": {
          "ref": "d1c482ff-ab93-4f56-bf7e-a2bc585beaca",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7c15b62d-f4f7-4420-8d0e-8344b5118703"
        },
        "item": {
          "id": "730dbbc9-4488-4297-b3a4-ea5411e55be8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f5e42f00-9c3c-43c3-a4b0-a52a366babbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b1ea28-f67f-4332-ab3e-146d219af665",
        "cursor": {
          "ref": "2390fdd7-7f8d-4677-a1cc-ee60db3a2a7b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2509589b-d7db-4b80-b4d1-d54c5e8fea12"
        },
        "item": {
          "id": "35b1ea28-f67f-4332-ab3e-146d219af665",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "adf68b29-16e4-474f-82bb-5c82f9ea1639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6d5a10-30d5-4b23-9903-70d61392b1f3",
        "cursor": {
          "ref": "c3c0aa1d-f573-4b15-969f-e5fb5cadb44d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b56d7fe8-df33-4c94-b78b-d422da742a4e"
        },
        "item": {
          "id": "ca6d5a10-30d5-4b23-9903-70d61392b1f3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0a2b0e56-7244-46b2-a8da-259fee75c57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9d7057-31c0-4869-87f8-4e00dd70c66d",
        "cursor": {
          "ref": "0487662f-5c31-4b05-888c-81feed49ed09",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "689c5f77-2a54-4ec5-bccb-90d6f5ddaa0e"
        },
        "item": {
          "id": "0f9d7057-31c0-4869-87f8-4e00dd70c66d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d3f2fefa-b313-48b6-b64b-ab1a8ca39e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9e1ae1-9215-44af-a179-9ae7b6b97995",
        "cursor": {
          "ref": "e83634f5-daca-42e0-a756-509e6448372d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "75986671-2e1c-4714-8265-1900d199aa24"
        },
        "item": {
          "id": "ba9e1ae1-9215-44af-a179-9ae7b6b97995",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eef74355-f81c-4cbc-9498-fcc4078d173d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1060fe-c932-4ef7-a602-46a5c14074ff",
        "cursor": {
          "ref": "2e71b970-1920-4f47-b732-4bf2c0f03048",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "024534e3-bdd4-4114-839e-eacbf0ea1472"
        },
        "item": {
          "id": "7a1060fe-c932-4ef7-a602-46a5c14074ff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6f56d91b-ead3-41b8-9734-b5072fabbb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28aff1e-8f77-4c74-8a92-c24bfd30fe92",
        "cursor": {
          "ref": "482e7c1e-861a-422b-81a5-4464e35daa0f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "114f1fde-2ad3-4495-91d8-db44cf762ab9"
        },
        "item": {
          "id": "c28aff1e-8f77-4c74-8a92-c24bfd30fe92",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a4cbf770-772f-4248-b507-0cd169997232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576e2134-14ea-4726-b137-7ba25dd19e98",
        "cursor": {
          "ref": "f1465342-4bab-44f3-b317-8312dc8b561c",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "49c4b699-dbf1-43d8-a9b4-1852ab8a7ffa"
        },
        "item": {
          "id": "576e2134-14ea-4726-b137-7ba25dd19e98",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27ae3e26-4692-4704-8053-ae0c149aca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380046d7-b808-4c7a-b3bc-79527dd0fb85",
        "cursor": {
          "ref": "7df4da25-34bf-4c24-8aeb-ef6a4fa4e4e8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3e63d643-99a6-4d65-85df-ceb5f5badaaf"
        },
        "item": {
          "id": "380046d7-b808-4c7a-b3bc-79527dd0fb85",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "99d7c9fa-f736-4e10-9b25-ba6b680c888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c560b620-581b-4022-978e-c5d81385e5a9",
        "cursor": {
          "ref": "21a6b9fe-d87b-42a3-a91e-c526800089c2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "083b07dd-a065-4aa4-b290-b552206b567f"
        },
        "item": {
          "id": "c560b620-581b-4022-978e-c5d81385e5a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8b2a97e6-25a6-4373-9ee7-2117710c2d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82138929-3006-4a1d-81f0-43025bc4d538",
        "cursor": {
          "ref": "69683759-fca8-4a5d-9bdb-1969260000be",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0e6cb824-6424-487c-92ec-58ca659c12ab"
        },
        "item": {
          "id": "82138929-3006-4a1d-81f0-43025bc4d538",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13a7c278-f7de-479a-a7f0-36ec3d4b9818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ad93ec-75bd-4d5e-9830-a25e01c5c4aa",
        "cursor": {
          "ref": "bcb2b9ab-8aec-4eea-b524-0ed78f3d3f23",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "218878ba-49dd-4d00-94bf-1914320b5f91"
        },
        "item": {
          "id": "84ad93ec-75bd-4d5e-9830-a25e01c5c4aa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f6113d32-5e7d-43b2-ac42-d3756165d130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d595d640-4b2f-4bb8-aaec-e18ef7787d54",
        "cursor": {
          "ref": "c71e9443-abca-45ce-b30a-26cb10070bc5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "47408215-d879-467c-a823-3d15d07660ea"
        },
        "item": {
          "id": "d595d640-4b2f-4bb8-aaec-e18ef7787d54",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f814182b-66c5-4f3a-bc42-205145d4cac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f773700f-e892-4545-806e-52080679cebe",
        "cursor": {
          "ref": "2ce18f03-b86d-41a9-991f-c3e2ed45321f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f51f4eed-501a-440f-a73b-11a42e2505ad"
        },
        "item": {
          "id": "f773700f-e892-4545-806e-52080679cebe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a76eb2b3-f9ad-4b49-8867-dadfe047c355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6018ee0e-1667-43d1-b45e-f7cfa62e74d3",
        "cursor": {
          "ref": "e23a47fb-ddbc-4ed5-8916-31417f495595",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3177f54a-e574-4cf8-a2e5-f9cf446c5532"
        },
        "item": {
          "id": "6018ee0e-1667-43d1-b45e-f7cfa62e74d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5b627092-9248-4d3c-ac67-4e7b8ad57a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b617e2f9-cd94-4de3-a3ac-bb6691d2b4b5",
        "cursor": {
          "ref": "1f646ab1-f7a3-433e-8572-36ef7a9bd6c4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1cc9f255-8d88-40e3-9660-da30d7db3b68"
        },
        "item": {
          "id": "b617e2f9-cd94-4de3-a3ac-bb6691d2b4b5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4d937b9e-06cc-4787-bd92-5eaeead15e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c84bb8f-b4c9-4e20-b221-e3ce5d9f9fb6",
        "cursor": {
          "ref": "789d65dc-8715-4508-b0c1-70d64ee6e725",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d85c5246-b360-49a8-bf67-10693eec395c"
        },
        "item": {
          "id": "6c84bb8f-b4c9-4e20-b221-e3ce5d9f9fb6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b1645c38-fe9e-4758-94e6-592e7ec66487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab47d9e-20e5-4aca-b2ea-15135232a7cd",
        "cursor": {
          "ref": "cd435c66-7ffd-4dee-a01d-fe04925954ec",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "30c11103-a0db-4260-8082-ad97e6820c14"
        },
        "item": {
          "id": "1ab47d9e-20e5-4aca-b2ea-15135232a7cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "345d7f9d-7535-4448-9626-64613ab6bdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842516e4-41cc-412a-ac16-d28a762675a4",
        "cursor": {
          "ref": "1b2c3fc8-b6a6-45a0-80a1-3f1e593c5b0c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5a26c6dc-8611-4548-8dfe-e0077aa8809c"
        },
        "item": {
          "id": "842516e4-41cc-412a-ac16-d28a762675a4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1f7673be-0893-4425-86b7-ac4f6e4ebdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e12d76-27c0-4f1e-9001-5c8e32039399",
        "cursor": {
          "ref": "64f0cb5f-4704-492d-8c91-058418572f72",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3c9f5b73-141a-4f73-8a25-5033c3b4b873"
        },
        "item": {
          "id": "02e12d76-27c0-4f1e-9001-5c8e32039399",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c9f40d32-e84a-4c49-ae8f-3774ee5b0642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32425a4-d283-454d-a5c4-bd8fd96a489c",
        "cursor": {
          "ref": "301d07da-d4e6-46b0-84ee-32c57e2e26ce",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a5512c16-a6ab-4171-b2fb-63e29c9a7477"
        },
        "item": {
          "id": "f32425a4-d283-454d-a5c4-bd8fd96a489c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c632169b-cb5d-4d1a-96a3-ef4210cc27fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900bb278-af76-4af5-8745-2039d46b5a42",
        "cursor": {
          "ref": "0ec08fc1-d326-4e87-a454-5a4d16028548",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5ed68623-8651-4e7d-b97c-89f717ed2a50"
        },
        "item": {
          "id": "900bb278-af76-4af5-8745-2039d46b5a42",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "eda56ca8-bae5-4850-a1f0-14652580b3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e373cd93-a58a-46c4-8956-6702d46b0bf3",
        "cursor": {
          "ref": "f10f273a-3032-4976-900b-1ca160b786c9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c51a19ab-0ed8-49a3-ba32-3892d9c45e03"
        },
        "item": {
          "id": "e373cd93-a58a-46c4-8956-6702d46b0bf3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4c680036-57c2-44b3-9b1c-c789921d31a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c75828-abe2-4fca-9cd4-9ae1d3379042",
        "cursor": {
          "ref": "39f432f2-85a6-46a4-a6dc-232fb420158f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "665cd424-62c2-46ce-ab54-2033456a667b"
        },
        "item": {
          "id": "c0c75828-abe2-4fca-9cd4-9ae1d3379042",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "886d4f19-188b-449d-b8c9-041dd3e1a761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2991b6b-52cc-4077-b37b-1f14a97b91ee",
        "cursor": {
          "ref": "69139862-af45-4f8e-93e5-10a2be78f054",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "57c09f6e-9357-421e-b4f6-a5d5f17a4f66"
        },
        "item": {
          "id": "a2991b6b-52cc-4077-b37b-1f14a97b91ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ca61438-b4fa-4901-8171-ff9206498276",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab50b23-8651-41d4-b95a-0ab6d0d2bb3d",
        "cursor": {
          "ref": "a4263263-a743-43b0-bfaa-a6a724abc119",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5b3f161-30db-422a-8953-7f7b9121c113"
        },
        "item": {
          "id": "8ab50b23-8651-41d4-b95a-0ab6d0d2bb3d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "41719f7e-c47d-4269-bef0-9df8e9409734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b245cf7c-d5e7-4823-aa2a-adc706f4e612",
        "cursor": {
          "ref": "1b6ee183-4f29-4ab8-8f07-cac6ac01d1ec",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f8e8a7b1-1ecd-4a75-a8e3-17de68aa449f"
        },
        "item": {
          "id": "b245cf7c-d5e7-4823-aa2a-adc706f4e612",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a5c7e6cc-6570-4510-9aec-b5519e92403a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d686248-b047-40c7-acf2-1edae80c48bc",
        "cursor": {
          "ref": "ad6538af-95ee-43b9-ad6f-52053da8fd43",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5efa7f8a-1887-4626-a542-7ba7bc9e1f7d"
        },
        "item": {
          "id": "4d686248-b047-40c7-acf2-1edae80c48bc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5b2c9283-29da-43cb-b910-90c769f237ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed4ac77-8893-494d-8cf2-8288185d751f",
        "cursor": {
          "ref": "5d394041-fc98-4e8e-86fb-254491855012",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3c07b1bb-2e0a-4f8e-ad82-ac09a1b7acb8"
        },
        "item": {
          "id": "4ed4ac77-8893-494d-8cf2-8288185d751f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "64a9b949-a449-494e-9133-183d3346eab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc244ec3-addc-4976-90c3-22b8f0e373eb",
        "cursor": {
          "ref": "abba53a6-24ee-428f-b88f-fdd26b36b601",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "414fb07f-d166-4587-afdf-dd43f22a71e2"
        },
        "item": {
          "id": "cc244ec3-addc-4976-90c3-22b8f0e373eb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d9b267c5-c657-480e-9a99-747da63c728b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348ed10c-22d8-434c-ab9f-3e5371cfdb69",
        "cursor": {
          "ref": "95a92ec7-eb0e-4d6a-9e7c-813936732819",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5fbb0dbf-602c-4eec-bcb6-9f3da6bf5a15"
        },
        "item": {
          "id": "348ed10c-22d8-434c-ab9f-3e5371cfdb69",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c9a3c1a3-36df-4cf1-8f81-1f34f50ddaf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9fe82c-a08a-4264-93ec-b86116ec8546",
        "cursor": {
          "ref": "50ee018a-8724-4396-a235-f84141f5f238",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e1e861e9-b88e-4890-8d2b-13a4ebdde791"
        },
        "item": {
          "id": "eb9fe82c-a08a-4264-93ec-b86116ec8546",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8577eb69-7308-498d-94aa-54a36efd450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20b1a72-8863-4a1f-93db-daf79ecb7c38",
        "cursor": {
          "ref": "f6f8bdc3-d810-4618-a8e8-32a600b16992",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "13b5ee52-0104-4699-88e8-97b23f3dd43c"
        },
        "item": {
          "id": "c20b1a72-8863-4a1f-93db-daf79ecb7c38",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c5ea1130-d8cc-48db-a022-4a7e1a67b353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aff08c8-f409-4ecf-854a-fd2202a48eac",
        "cursor": {
          "ref": "0531a056-4f27-4e4a-a51a-d3634fff39e1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "083c42fc-c944-4a2e-a6c9-317a753f1c8d"
        },
        "item": {
          "id": "2aff08c8-f409-4ecf-854a-fd2202a48eac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "087193da-cb9c-4f67-ab7c-3d4ee196116b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be388c9-96fa-4827-9b28-d1d126c8886a",
        "cursor": {
          "ref": "d83f2e05-9f3c-4eec-b002-355bf98fe5d9",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "93dad6f5-e72f-46eb-b8b9-3468b989ddd1"
        },
        "item": {
          "id": "8be388c9-96fa-4827-9b28-d1d126c8886a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "25d9387a-abd3-4f99-98e8-945b51d89702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2caa5298-4739-4909-b5ae-a733a69a60f7",
        "cursor": {
          "ref": "89fc89df-d419-4f4a-8913-7c224eb59dc0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b27b2590-e31b-4656-99a5-8d2bdf7e4885"
        },
        "item": {
          "id": "2caa5298-4739-4909-b5ae-a733a69a60f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4d2b838c-29b3-4944-845f-86ff1b673177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fae9954-d4b5-4908-993c-30d857d4f7db",
        "cursor": {
          "ref": "6ad52b2c-5a20-46cc-8822-3d63750cba6f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ee88180b-b7fb-4faa-94ff-0c02f08e1dad"
        },
        "item": {
          "id": "1fae9954-d4b5-4908-993c-30d857d4f7db",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b0c71e39-5f07-48d1-97b3-f0dd6d57558b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c83fe4-70db-4fa3-b8eb-7680b3cf6cca",
        "cursor": {
          "ref": "fef6e607-9213-470a-9d2a-2e43eb3b2e41",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a40a3b0f-21fb-4a4f-816f-ce4ec575922c"
        },
        "item": {
          "id": "41c83fe4-70db-4fa3-b8eb-7680b3cf6cca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8ac5cee4-e997-4306-8222-9242016e2d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6599f847-6181-4077-9396-d6a936ecf39e",
        "cursor": {
          "ref": "acc4d83c-df69-4d28-bd5b-39c04491c564",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "03fee14e-8c14-49f0-b2c7-1fc37544574c"
        },
        "item": {
          "id": "6599f847-6181-4077-9396-d6a936ecf39e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c966b5f3-8d9b-418b-a5bd-48953b1786ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df91338-429d-4fe5-ab9d-a5d103d03b0d",
        "cursor": {
          "ref": "68e38581-1c0a-4cdd-9ca5-db7d2f7096de",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a3dd72cc-5fa3-4e0d-86be-4421308b1f4d"
        },
        "item": {
          "id": "6df91338-429d-4fe5-ab9d-a5d103d03b0d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "af586b7c-f6c6-49e8-97e1-5e9129194203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63940444-421d-4834-b7aa-b8e290108fdf",
        "cursor": {
          "ref": "e100e074-940d-4fd8-9d4c-8123a2fbce9e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b644e602-bc0f-4815-8c09-7539310e2eed"
        },
        "item": {
          "id": "63940444-421d-4834-b7aa-b8e290108fdf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9b0504ad-495c-4876-aacc-59988ffedbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382df3b9-4095-4dfa-bde1-318991f85ccb",
        "cursor": {
          "ref": "34b97060-9f77-42fa-b1fc-3302c5a010f2",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ba9e24f5-45a8-43f1-a66f-9adf380b5c64"
        },
        "item": {
          "id": "382df3b9-4095-4dfa-bde1-318991f85ccb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f1aaddc2-ea92-41c0-9650-172efb9f1941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294bde6a-ed4d-424a-b5b6-cdc87d886d34",
        "cursor": {
          "ref": "0a4653ed-e482-49a6-873b-63149a03f026",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "195eac36-e73c-4a68-85a3-1e8dec43aef2"
        },
        "item": {
          "id": "294bde6a-ed4d-424a-b5b6-cdc87d886d34",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "76402aee-66c4-4047-90d3-891b4960ed34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc99fbd-530a-420f-bcf1-9f2d685edb68",
        "cursor": {
          "ref": "480ee2a0-cf75-47d0-bd0e-df9f929e7d1d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "02ad3200-cca7-4eee-a6ad-177cda54d342"
        },
        "item": {
          "id": "dfc99fbd-530a-420f-bcf1-9f2d685edb68",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e96a7e10-5401-49e4-a36b-080e930f933f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cc8f74-4fa1-4000-b533-1b4606b652ec",
        "cursor": {
          "ref": "10dbf9bd-036e-42c6-8458-a644bc04fa7f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1d2b7ecd-1351-47a6-b73f-efe86f933a97"
        },
        "item": {
          "id": "c4cc8f74-4fa1-4000-b533-1b4606b652ec",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8e1c5f22-8108-40b8-a931-9aa76fc64d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1604ae08-27ca-4e9f-9dc4-50d0014b80e4",
        "cursor": {
          "ref": "e02add68-18e4-4dc8-a535-cf3febdb6ff1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6b11d596-1c15-4584-bf25-ff75a375ef63"
        },
        "item": {
          "id": "1604ae08-27ca-4e9f-9dc4-50d0014b80e4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "38528032-8c15-4ac2-a3e7-8296eca9b397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06441cd8-0de0-4562-be13-baa3d23fab8b",
        "cursor": {
          "ref": "ef21252e-7751-418e-9367-c37495967b2a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0742d295-91ae-48bf-b3c7-2c71e46d3f28"
        },
        "item": {
          "id": "06441cd8-0de0-4562-be13-baa3d23fab8b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "972f30de-0ba8-411d-8b4a-1eaf25f648c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff6548b-bb53-45dd-b1b1-67503f49aba7",
        "cursor": {
          "ref": "d3d08edc-4eea-4628-b78d-5233d5ed3703",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e2a7eaab-0e25-4d62-ac5d-bc3d3a408efc"
        },
        "item": {
          "id": "5ff6548b-bb53-45dd-b1b1-67503f49aba7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "26220aac-96d7-4ab8-9828-ab7f273f7ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7d01ab-54fa-46d1-9a59-053ae8a50385",
        "cursor": {
          "ref": "c0f78bf7-6a64-4b37-998d-2d6cd83a8db5",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "466f7180-60f4-4346-a043-37b5a18aa0e8"
        },
        "item": {
          "id": "db7d01ab-54fa-46d1-9a59-053ae8a50385",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f5a94e08-956f-4a58-9735-37e0a87629a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23709bd6-5bc8-4828-86a3-77e50db13bab",
        "cursor": {
          "ref": "65bc489c-8495-4dc3-93fc-2d48d2ba8932",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a5fe125-ec74-4049-8067-502df899b4c8"
        },
        "item": {
          "id": "23709bd6-5bc8-4828-86a3-77e50db13bab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "59a50fde-686f-4c0c-a8bf-788f81ef10b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71228111-8a39-43d2-be26-9e09a3401b9d",
        "cursor": {
          "ref": "ffbfe3e5-34f1-4598-adb2-caa6b545b702",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "97ffc65c-1186-4223-84ba-719c6a7b5fff"
        },
        "item": {
          "id": "71228111-8a39-43d2-be26-9e09a3401b9d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "48b2d1d4-8f76-42e9-84c7-83dc25515e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2757f2ef-afc3-49f1-b12b-f0e294e38ed9",
        "cursor": {
          "ref": "305759d0-9a2f-41bf-9c81-c571fe935b24",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bcf9dff0-205a-4419-a57d-9f254c446835"
        },
        "item": {
          "id": "2757f2ef-afc3-49f1-b12b-f0e294e38ed9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9ced532e-dfc4-4b0b-a594-a14d4ec27e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dcafef-a861-481b-8a34-e74e6462b696",
        "cursor": {
          "ref": "15814b47-2b3e-41b2-981d-df6a2f5db547",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "36f994c6-7ac2-4c53-bcea-9811fdf79c16"
        },
        "item": {
          "id": "60dcafef-a861-481b-8a34-e74e6462b696",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "022029af-19ad-4b3a-b6c9-e7386e2f5458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5bccaf-7e24-4518-bf44-ae6dc1d69dc9",
        "cursor": {
          "ref": "42c8240b-c22f-4110-b79a-04eac46ba62f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "54a04dc5-53e1-4342-9694-ff823dbe85f6"
        },
        "item": {
          "id": "4a5bccaf-7e24-4518-bf44-ae6dc1d69dc9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "843bacd4-45ec-4de0-83e3-6259f5b4eb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea6ea62-8b7c-4eec-811d-4ee3809c9bf8",
        "cursor": {
          "ref": "e28b7a17-de73-4e3f-a3e4-4ade731da467",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c29a0330-4a5c-4612-90f0-0b67a1461e08"
        },
        "item": {
          "id": "9ea6ea62-8b7c-4eec-811d-4ee3809c9bf8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8295accc-019e-4a9b-83d0-2a0d32394466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769c2f5c-72e2-4f03-a329-5294e53d7d3a",
        "cursor": {
          "ref": "3d6cacb0-e404-4a0d-b715-b2c957c31a4f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c0c9b13f-91be-45f0-88d8-5a7a281c84be"
        },
        "item": {
          "id": "769c2f5c-72e2-4f03-a329-5294e53d7d3a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "08767169-5420-4c28-a1db-6c2efd331c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf4c4b6-c563-473c-832a-56ef224d450b",
        "cursor": {
          "ref": "fd3ecefc-0069-48d1-bc5e-20aebadb81d5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f023f160-4746-4a52-81b0-da5dd70c7d6e"
        },
        "item": {
          "id": "0cf4c4b6-c563-473c-832a-56ef224d450b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b383f82f-6414-4039-9404-7092e7a58050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db8bab0-9b31-46ba-9baa-464d99794cd6",
        "cursor": {
          "ref": "59876cab-e130-49c8-a8f9-cd93616e034a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "595a2559-2f42-4316-8189-59c5b76f47b5"
        },
        "item": {
          "id": "7db8bab0-9b31-46ba-9baa-464d99794cd6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "11b980aa-384e-426e-b547-b0655f35b69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7270aeb5-c2e2-4831-8cfe-9114a22116d4",
        "cursor": {
          "ref": "2a4355d5-d524-402c-8a23-09a6291b2c3d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c37203a4-7f1d-494a-bc73-7f7ab1f6b32b"
        },
        "item": {
          "id": "7270aeb5-c2e2-4831-8cfe-9114a22116d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e33bce52-b8a6-4d48-8447-542aaa995343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ff532-1528-4f10-a933-3ca507179f0d",
        "cursor": {
          "ref": "c4229d4d-838a-49d7-b543-a59556860b86",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "68185cb1-246e-4686-9a2c-af46664539da"
        },
        "item": {
          "id": "8d7ff532-1528-4f10-a933-3ca507179f0d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "929c75f8-612c-421c-b1ba-9cc4f1412721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771d9520-cc96-4516-b3ca-a33d921bde22",
        "cursor": {
          "ref": "d757e25d-0566-4390-9464-5dc6f13032ee",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c14b1619-6f1c-411c-aef9-e1e10f5e0c57"
        },
        "item": {
          "id": "771d9520-cc96-4516-b3ca-a33d921bde22",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "adc04359-3b45-46c1-bc2e-464be05b4bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff50c3e-dc55-4a4c-90fc-dbf273a7d448",
        "cursor": {
          "ref": "d42eb53d-b981-4abb-8dde-e2c046477f31",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f0860426-7556-4597-9b7b-7954026bcf7c"
        },
        "item": {
          "id": "8ff50c3e-dc55-4a4c-90fc-dbf273a7d448",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "729d2f08-a712-4204-8dd4-24208b36cb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739b2b51-2350-4ca4-8ac0-330fda3a2ba6",
        "cursor": {
          "ref": "6b9fe362-71b8-42c9-9e99-48ed9faa9f34",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a301a4bf-70b8-4744-a639-5879446e6056"
        },
        "item": {
          "id": "739b2b51-2350-4ca4-8ac0-330fda3a2ba6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "51c0ff91-4e5e-461b-a211-845f8ebef3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3753d1-cfd0-42a7-b56d-e16a9bfa3c85",
        "cursor": {
          "ref": "9d515a9a-e925-4060-9698-aa18f21bdd36",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d173da42-91a6-4fb5-b617-649cf3b3be19"
        },
        "item": {
          "id": "db3753d1-cfd0-42a7-b56d-e16a9bfa3c85",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "457375c1-430d-492f-b0a1-182301ea2923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b914fb97-61e9-4177-9a6f-21c6842d9d93",
        "cursor": {
          "ref": "5041f370-184b-43c5-a41e-75919713975e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8e7a4e24-7a02-4fd8-af5a-d97c2ce7d0be"
        },
        "item": {
          "id": "b914fb97-61e9-4177-9a6f-21c6842d9d93",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7f177b3e-126e-4c18-bd8a-369d4bc705aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32573ad7-3ce3-4383-bae0-d1a39b1902c1",
        "cursor": {
          "ref": "f45de51e-5e05-44f7-aa4f-9d147851bef9",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bf03593a-404b-4624-8e47-beec808ba0ee"
        },
        "item": {
          "id": "32573ad7-3ce3-4383-bae0-d1a39b1902c1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e1fb5b69-fe49-4764-ae54-aafce563aef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e645364-095d-4876-a93b-0633d7101ce2",
        "cursor": {
          "ref": "6199be34-e628-4458-a0cf-7259a8f005e3",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "19048312-57d7-4c3e-a347-1c7c67b8f56a"
        },
        "item": {
          "id": "3e645364-095d-4876-a93b-0633d7101ce2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5fa50033-e39d-4fbb-98f2-8869afe3732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79b1de-fb1e-446e-b024-a430b047c731",
        "cursor": {
          "ref": "e6920d8e-bfaa-408d-ae82-2acb42b921ca",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a3020102-7d82-4871-b65d-a933a5d15f0a"
        },
        "item": {
          "id": "ad79b1de-fb1e-446e-b024-a430b047c731",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "92a765f6-5c17-438d-ba1d-70a757bf8437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d845e29-b78b-42c6-9c63-3e8e2332dd03",
        "cursor": {
          "ref": "77ca0301-c04b-4842-9258-1e4ce40d6db9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4df6c0a2-ed26-43d4-802e-2109dde02d1b"
        },
        "item": {
          "id": "0d845e29-b78b-42c6-9c63-3e8e2332dd03",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e5a31d48-9b03-413f-88ca-3a362620a45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e51a5b-a30a-4383-9a79-03142bbf2af5",
        "cursor": {
          "ref": "5da8415c-a271-44b0-ad71-f1007effaf3e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8dd9f474-b13e-4e7f-bc14-3793f2ee82cd"
        },
        "item": {
          "id": "59e51a5b-a30a-4383-9a79-03142bbf2af5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e014ac7c-ca4c-419a-a3a6-ffcff30b56da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d853ecbc-db15-49b9-a0ca-4d05b9540a50",
        "cursor": {
          "ref": "584945df-3907-4d29-8999-9822fbddb689",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a8ba6b4f-58f1-476f-81e1-5deaa81baa7d"
        },
        "item": {
          "id": "d853ecbc-db15-49b9-a0ca-4d05b9540a50",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e89e4d2c-bd0f-46cc-99ec-c48e4e7c841a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea08b3bf-fe32-496a-89a0-dd035acbc908",
        "cursor": {
          "ref": "16e0f00f-8890-4804-bc1f-659dccf014b8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "86ec1cf8-9750-4a8a-a415-67f23bb23e35"
        },
        "item": {
          "id": "ea08b3bf-fe32-496a-89a0-dd035acbc908",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "299513ab-01ad-47db-a1d5-aa9c01a92c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ef4fcb-f306-48fb-8aa0-ad573705fd55",
        "cursor": {
          "ref": "6afc7751-0164-499d-b8ab-98621c04b09b",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f38290ae-dc61-427a-ba3c-bb34084bd61e"
        },
        "item": {
          "id": "a3ef4fcb-f306-48fb-8aa0-ad573705fd55",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9acfd743-cc3b-4950-9d0d-2d0683724b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c579e6ea-bf95-41f9-b930-48ce7bc61b31",
        "cursor": {
          "ref": "ebad83e3-d1c0-4294-b182-d9a3daa37656",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eccedbf1-b465-4401-b5bf-889d2ca25bbc"
        },
        "item": {
          "id": "c579e6ea-bf95-41f9-b930-48ce7bc61b31",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2f4e0087-7b6e-4a66-b76d-a794db8fb0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f828830-fb7e-4d49-94bd-44c2b23c3bb7",
        "cursor": {
          "ref": "340c5d36-0274-4719-8fcd-61b85aca5c61",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b882cb5f-450e-41b5-9256-71e7ae6d3684"
        },
        "item": {
          "id": "6f828830-fb7e-4d49-94bd-44c2b23c3bb7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6b2d19f1-465d-4bdb-a5e6-4ca74cd22e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d7c2e8-6bd8-40b0-9c86-1a608b81c6fe",
        "cursor": {
          "ref": "fa70ccb8-be8b-4991-8061-48472a544ded",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "28030818-fcee-4a01-99eb-943a265dfdf4"
        },
        "item": {
          "id": "52d7c2e8-6bd8-40b0-9c86-1a608b81c6fe",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bdcfc98d-c87b-4f25-a4b6-5560e91787f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1a2411-62b5-45fe-82cc-32df205b1d00",
        "cursor": {
          "ref": "f5074a3a-ac52-4cf0-a6ff-265a681f7027",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7df877d5-2b87-4eb4-89c4-c9d5f695374d"
        },
        "item": {
          "id": "5d1a2411-62b5-45fe-82cc-32df205b1d00",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4637b96e-1406-4f46-826b-5665dea574ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207ac28f-a668-459c-ac39-07279b711e8e",
        "cursor": {
          "ref": "1cefaa3a-8155-4a30-aef5-6edcc57810e1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "74dd4320-5314-446e-a29d-ab1925f82e4f"
        },
        "item": {
          "id": "207ac28f-a668-459c-ac39-07279b711e8e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2dffd744-b488-4c8a-9ad3-40f3de54cbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3fd283-c83e-4d4e-96b3-cca2d3635591",
        "cursor": {
          "ref": "69ef6288-a306-4c9a-bbae-32545c4e7975",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "11bdeff4-aeb8-42a7-8087-6c97d08cf099"
        },
        "item": {
          "id": "ec3fd283-c83e-4d4e-96b3-cca2d3635591",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c1f4962f-ab07-43bf-bfd2-a388ceb07414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a366c9-6ae8-4124-9a9a-06dd711e0380",
        "cursor": {
          "ref": "ec318e98-82d7-44b3-a3c9-d5ab588b23f7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ca3b142a-f6fc-4714-bc2f-b1476dbd14c1"
        },
        "item": {
          "id": "15a366c9-6ae8-4124-9a9a-06dd711e0380",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "036a35c3-d8e7-42d0-9fb7-dfa132e755eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e6dee3-9faf-43ab-b763-606837772d45",
        "cursor": {
          "ref": "45d48476-f682-483c-896e-80e498ba9256",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4e10e933-0b14-4e5d-9a53-75b89ee3152c"
        },
        "item": {
          "id": "98e6dee3-9faf-43ab-b763-606837772d45",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9476c146-dd7e-449f-9918-088eadb09e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28906e34-b1e2-4d8c-b865-7b159a3fd4bc",
        "cursor": {
          "ref": "1d8a153f-5874-47a9-8506-36b5a04bcd94",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e8fd48ee-b272-4d8f-b692-9ec27a72ff99"
        },
        "item": {
          "id": "28906e34-b1e2-4d8c-b865-7b159a3fd4bc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ca2ef4bb-c7ff-4037-975f-8aeec976178a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62b5e2b-5c3c-4115-9d28-2003fba17139",
        "cursor": {
          "ref": "12d7e917-c1a5-49d5-955f-774f0eae257b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0b187076-861d-45b4-a75c-f0216dc238a3"
        },
        "item": {
          "id": "d62b5e2b-5c3c-4115-9d28-2003fba17139",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "835a7692-abfa-434d-b136-66aca1662646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1b61e6-b5ef-49ef-bbee-a3f025031a23",
        "cursor": {
          "ref": "71005671-2819-4891-a9cc-cd7def3b0090",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bcf2164f-c328-4799-af19-8d67c1932f21"
        },
        "item": {
          "id": "9a1b61e6-b5ef-49ef-bbee-a3f025031a23",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "35a8359d-03d0-42f9-baa0-0f8cb854c0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2bedcc-bf3a-4d06-a404-1b17b7316ad4",
        "cursor": {
          "ref": "e48965f5-f765-4436-80d0-4cf5b7ef0394",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6b78bd85-e307-4946-8563-385aaf74d681"
        },
        "item": {
          "id": "cf2bedcc-bf3a-4d06-a404-1b17b7316ad4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "77d38454-bcbd-4abc-abac-4156e101b1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee37773-2c4d-4d4f-b1a7-c3808016140e",
        "cursor": {
          "ref": "925fe416-99b0-46d7-a088-4efb42ea2a53",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3a09dae9-0d37-4824-bbd0-dc7ac9e601dc"
        },
        "item": {
          "id": "eee37773-2c4d-4d4f-b1a7-c3808016140e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d82d07c5-3fd4-48dd-8101-db6d19db5f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1c6f7b-72cb-4c0d-9119-fc31167fc931",
        "cursor": {
          "ref": "8b9be317-04a7-4768-9744-10f09f052006",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9a13736b-0cb8-4cd7-bf55-094676a77970"
        },
        "item": {
          "id": "7f1c6f7b-72cb-4c0d-9119-fc31167fc931",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d92f8e77-6916-4d0c-a46a-47fccc0fc39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae2124a-eb4e-4359-ab76-7e917824f871",
        "cursor": {
          "ref": "b57baf2a-e53a-4a3b-8a84-2dc02dfb11bd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "30fb95cb-4341-4631-8653-0f8300f9ae01"
        },
        "item": {
          "id": "2ae2124a-eb4e-4359-ab76-7e917824f871",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "657833f6-eefc-421d-974b-738614889926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ce8636-20d5-4e9b-ae04-6ee814d5caf6",
        "cursor": {
          "ref": "24812ac3-0176-41fd-9c1b-5aaa4654ebf7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "aec0fffd-02a0-4471-b5f1-7d365a0d1c35"
        },
        "item": {
          "id": "29ce8636-20d5-4e9b-ae04-6ee814d5caf6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b0ae1e9e-f36e-4081-8a6c-151e6d4efe4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac9f057-672b-4b05-9da1-adcc6da05928",
        "cursor": {
          "ref": "aa953a8f-ae03-4e1e-b4dd-248624bbba30",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "15d0937f-f773-426d-ad62-e34eedf04e17"
        },
        "item": {
          "id": "1ac9f057-672b-4b05-9da1-adcc6da05928",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fb1d93e7-1803-4210-9827-002444edb313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1a3489-120c-4e4d-95f6-e43a6c221a42",
        "cursor": {
          "ref": "034f61dc-b89a-49d4-ac7f-f0c9b99e5da1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5272c86e-2be9-449b-9370-b0b87ff3dc67"
        },
        "item": {
          "id": "dd1a3489-120c-4e4d-95f6-e43a6c221a42",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a50873b9-6c33-4807-a70b-e259ba71f43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0fcc3-ce5a-4e0a-ac2b-8201a63373d3",
        "cursor": {
          "ref": "3a998023-88a2-4e0a-a9e2-23b64cd18074",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "57793fc6-7475-4213-93d0-7471e5ff915c"
        },
        "item": {
          "id": "94e0fcc3-ce5a-4e0a-ac2b-8201a63373d3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "55e0d65d-1a46-435b-9582-138ffa24a915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277b757c-eb86-438a-b007-ac6840d79cc8",
        "cursor": {
          "ref": "2a0b9adf-72c1-4ae8-99e6-51ff6a01d405",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "93d3e2d1-2188-4023-b4e0-5147a8ba887c"
        },
        "item": {
          "id": "277b757c-eb86-438a-b007-ac6840d79cc8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a8489839-194c-4adb-9557-19db4cbe6362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c8dfa5-b381-446a-b502-ae78db7418f2",
        "cursor": {
          "ref": "1e75ba2e-ce17-46cb-8afe-398cdb44d282",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fe479b32-7475-46c4-a506-66642e505d2a"
        },
        "item": {
          "id": "62c8dfa5-b381-446a-b502-ae78db7418f2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3f06027e-be0e-4918-bc01-b5b9485a9663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d72384-a57c-46c7-b14d-af8db1290444",
        "cursor": {
          "ref": "ade7bd10-0a3b-4bd9-a9e4-2af19fbe6c86",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b7ab2379-37f9-41da-ad8d-533b6d4a9043"
        },
        "item": {
          "id": "31d72384-a57c-46c7-b14d-af8db1290444",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "55de6eb5-db37-4431-acd4-2ad6f82db384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412f8fbd-e9f9-498b-84be-57c7fc792bd0",
        "cursor": {
          "ref": "762400fc-297e-4c41-b253-84b2a8b1588a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "52063ac1-7b67-479b-8aa5-d2282d2a0109"
        },
        "item": {
          "id": "412f8fbd-e9f9-498b-84be-57c7fc792bd0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "195e94df-3a5d-43be-9bc7-13949304daa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9196402a-6b0a-4385-a067-72d96c5f623c",
        "cursor": {
          "ref": "21d79cd8-e139-4fd6-b91e-97249595167b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c7298fc8-9ef7-440e-8995-c4a50aba58d6"
        },
        "item": {
          "id": "9196402a-6b0a-4385-a067-72d96c5f623c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d22fc89e-e27e-4257-b286-01fbbdf96f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca1a939-73d0-455e-b78c-e6d3e5b5944f",
        "cursor": {
          "ref": "17782360-6c0d-47fe-8026-9a6658eab6ed",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3c5959ca-eb74-450f-a6ef-552cfcd75293"
        },
        "item": {
          "id": "dca1a939-73d0-455e-b78c-e6d3e5b5944f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ddb5b219-bb40-4d40-8585-e070028e50e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41366bbd-1f67-4f84-abdf-098ce74750e4",
        "cursor": {
          "ref": "efb4ca8f-1701-4eb5-9950-18bc8d82190f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8cdd7abd-7165-47e6-95e4-7705581fbb3d"
        },
        "item": {
          "id": "41366bbd-1f67-4f84-abdf-098ce74750e4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "090749a4-1cdb-426e-a550-c61c4a57513a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8d0701-2aa2-43db-ba08-07513177eb12",
        "cursor": {
          "ref": "510ff25e-a339-448f-b4be-d81ba83281be",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d20541fa-7642-46e7-b09b-1aa3adae2544"
        },
        "item": {
          "id": "eb8d0701-2aa2-43db-ba08-07513177eb12",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c5f6f306-05e1-4bc6-9c59-d306c7422840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcd1b7f-0dd4-43f0-a35f-9b01b44d5977",
        "cursor": {
          "ref": "1850aad1-39f8-4096-8e50-adfb8f731e03",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "64ff441e-0438-4881-83b4-510d64a57d70"
        },
        "item": {
          "id": "cdcd1b7f-0dd4-43f0-a35f-9b01b44d5977",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7d11bfc0-daa7-46df-80dc-7d06dda6e1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efacd255-8d1b-4925-b2cb-9e84339ac822",
        "cursor": {
          "ref": "ba3657c6-0590-49b3-8c6d-3d821a5918b7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6e69a6c3-d72a-488d-ad14-026ba9894b98"
        },
        "item": {
          "id": "efacd255-8d1b-4925-b2cb-9e84339ac822",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2277f5dc-8bb7-477f-bddb-c91a272b0a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46a025e-8984-4d4d-a7a0-a08481d4b6c5",
        "cursor": {
          "ref": "9127ee2d-8b83-465f-8caa-69724aee8011",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5a3e768a-a433-4dc2-b584-ffef7e4361e1"
        },
        "item": {
          "id": "f46a025e-8984-4d4d-a7a0-a08481d4b6c5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c583e07d-f212-42e6-bd96-f019d399e08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9548d98e-22ec-4aa5-b068-985fe9042cc5",
        "cursor": {
          "ref": "badadad7-07ee-413e-b9ab-423d01c040fc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3777ae54-8391-48d9-9485-052efa5312aa"
        },
        "item": {
          "id": "9548d98e-22ec-4aa5-b068-985fe9042cc5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1c03b435-a98a-403a-a9fe-4caa1bf3b1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c083d12-2236-4a2a-9eb1-f5bb7c18bb55",
        "cursor": {
          "ref": "f036fb36-21d6-42a4-a5ab-c28fda652650",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8ec6fd3b-e642-4355-9a74-3934a0a5a7be"
        },
        "item": {
          "id": "9c083d12-2236-4a2a-9eb1-f5bb7c18bb55",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2176b78f-a295-4eb5-8406-41f3ef05fd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cdbb00-9410-4558-806e-d14ea9c7340c",
        "cursor": {
          "ref": "0364ae5e-b265-42f5-90c3-17de59efd7f0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "be7a8c3b-f483-4bd3-a87b-24f0be10ad4b"
        },
        "item": {
          "id": "58cdbb00-9410-4558-806e-d14ea9c7340c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "99d2b274-6dd8-4b05-a7f1-bf554f2dc242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a686618e-f0b1-4149-b90a-8187bb3cfeb7",
        "cursor": {
          "ref": "ccd2f178-8e28-42b4-9425-2ac9ee4307ab",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d625c226-c78c-4e3b-935d-863032f8ed4c"
        },
        "item": {
          "id": "a686618e-f0b1-4149-b90a-8187bb3cfeb7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8351e5a7-cb68-450c-9122-fad579ffe828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e770cd-c2bf-4d7b-9a6f-1aef56b01e89",
        "cursor": {
          "ref": "4fbc8a1c-4a3e-4282-b172-9b69c780fd79",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "03dbd5b6-5107-4db7-bdf8-21bef8d571c9"
        },
        "item": {
          "id": "29e770cd-c2bf-4d7b-9a6f-1aef56b01e89",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5fcc6cd7-2050-4e73-8d58-c1b01a7f5194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9ee8ff-a2d3-4111-9f6a-7badff2140d6",
        "cursor": {
          "ref": "0bd0fa68-be29-4848-97f9-429f03b4eb32",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "33497482-449a-44c3-b1a0-ce7f326324e1"
        },
        "item": {
          "id": "5f9ee8ff-a2d3-4111-9f6a-7badff2140d6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "be831abf-c08f-4d34-8298-00523f828467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881dc769-91db-4097-a087-702173cd35df",
        "cursor": {
          "ref": "e701cd53-de85-4f8e-b956-446156834c9e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6d1426e0-285d-4841-87c3-26327131f15e"
        },
        "item": {
          "id": "881dc769-91db-4097-a087-702173cd35df",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0107da2d-21f3-493e-91b5-9518769c4aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798b74c3-c58b-45d8-845c-4cf59149bfd6",
        "cursor": {
          "ref": "8e0decc6-3ca2-4ceb-a7a0-d9cbe012583b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1c765ac2-8863-4d35-8d8d-01cd91be5417"
        },
        "item": {
          "id": "798b74c3-c58b-45d8-845c-4cf59149bfd6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b9bd2ed5-16c1-44af-99df-b79c75c1f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4b56a0-2da3-438c-a277-b83a410ad1c5",
        "cursor": {
          "ref": "c1c243e4-83f5-41bb-95f4-1367389c12c7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dfe86f1b-0a73-4079-9834-f357bded26af"
        },
        "item": {
          "id": "ad4b56a0-2da3-438c-a277-b83a410ad1c5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "57415e37-9482-4a5c-9a7a-ab5f5677d96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d226c3b1-3f9d-4f7b-bf99-03fa38c4dc15",
        "cursor": {
          "ref": "ea3beefa-a90e-47ca-851f-cd0426bd754a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "544f3438-7392-493e-a3b6-b52892c751eb"
        },
        "item": {
          "id": "d226c3b1-3f9d-4f7b-bf99-03fa38c4dc15",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a8d9154d-bc1f-44bb-a35c-e00549d16d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baba2f90-a85f-428b-815b-3bac213047ad",
        "cursor": {
          "ref": "b6740013-511a-4afc-8ed3-57d613051cfe",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3f0873d0-e4a3-43c3-8be5-f1e21ccc7915"
        },
        "item": {
          "id": "baba2f90-a85f-428b-815b-3bac213047ad",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9bacdb95-341e-4409-8a87-5b9d3ca9c0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae6582a-f78e-4daa-896f-3d01c49e3efd",
        "cursor": {
          "ref": "cf8ff305-e651-4d88-87d2-43bc28cb7012",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "68b489f7-f44d-4329-b116-588f5a723661"
        },
        "item": {
          "id": "aae6582a-f78e-4daa-896f-3d01c49e3efd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a392ca31-c81d-43dd-b127-cb6cedbb48ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cbfe2d-f9ad-4c8a-a1a0-983906de2619",
        "cursor": {
          "ref": "3181c361-776f-4041-b2c4-c39967f28a9c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1dbadd6e-b29d-456d-af70-8832f4bc2972"
        },
        "item": {
          "id": "68cbfe2d-f9ad-4c8a-a1a0-983906de2619",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "92f629d0-9334-4923-8ce5-f242a8ff8b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71aace0a-4af4-4a8d-9e17-816d4a4ac808",
        "cursor": {
          "ref": "266df638-cd61-46fe-a084-8f017d083fdb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "179e15c2-c3f5-4fd6-9733-5a908e1a41ca"
        },
        "item": {
          "id": "71aace0a-4af4-4a8d-9e17-816d4a4ac808",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "85fa78a3-7788-477c-b33c-9e2fbbc3589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b44cf5-e2af-45ab-b868-7b64d9062fa5",
        "cursor": {
          "ref": "58fd4b01-b3f5-4378-87e4-dea92ba29369",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8dc54a28-36f6-4a0b-9c44-19335456cf43"
        },
        "item": {
          "id": "67b44cf5-e2af-45ab-b868-7b64d9062fa5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bd303ad2-f39a-48d5-85e0-f60c7e085d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd0ac2f-03f4-4d20-b0a9-9a0fcfeab8cb",
        "cursor": {
          "ref": "2005a36d-9d8b-4573-adb2-b8db10970786",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "21ef0412-de19-4660-a0ab-5a3383f69eec"
        },
        "item": {
          "id": "dbd0ac2f-03f4-4d20-b0a9-9a0fcfeab8cb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "18427577-95e9-415a-8f62-bca8d7c93db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96d61a4-8e41-493c-b262-fb74383f641d",
        "cursor": {
          "ref": "c24c5348-3ca7-4377-bfa0-53ea08912b20",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6f65c114-6920-4144-bc5e-d5eb55b0c79e"
        },
        "item": {
          "id": "c96d61a4-8e41-493c-b262-fb74383f641d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1185048e-9c16-4744-a174-e956d048ebe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a614bfe-c11a-40a0-820a-6900d4c222f9",
        "cursor": {
          "ref": "d261e4af-74b0-4b36-946b-716905c64fbd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0d4749c3-3b9e-4815-9ef7-7017efb56759"
        },
        "item": {
          "id": "3a614bfe-c11a-40a0-820a-6900d4c222f9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e92f1b6c-6897-489d-a43d-7cb7f0cfca85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7899366a-9077-42f1-9e7a-74f222392b05",
        "cursor": {
          "ref": "a50be061-0354-4f6a-87ff-c002e704c208",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5612c724-599b-42c5-8569-5e52778852ba"
        },
        "item": {
          "id": "7899366a-9077-42f1-9e7a-74f222392b05",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e0d8b848-8372-404c-9267-998f194a261a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fabed2-9d7a-43ac-bddd-32ff3f85660a",
        "cursor": {
          "ref": "849cece5-bfc6-48ba-9eec-4eb7d92ddf05",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "818c37e9-422c-48e9-aedb-d0a90b022590"
        },
        "item": {
          "id": "59fabed2-9d7a-43ac-bddd-32ff3f85660a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4f59180e-65cc-4218-8ce8-c1a712ab8788",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445fe06d-e013-4e70-90d8-2f562df5b7cf",
        "cursor": {
          "ref": "2cef7b4f-dd2c-4b68-a891-65ace611268d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "388a3af6-7c9c-4201-9ee1-88fd281e46b3"
        },
        "item": {
          "id": "445fe06d-e013-4e70-90d8-2f562df5b7cf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "830b2af0-3b66-476a-ab17-a068100d1c81",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdaa870-e69b-4d2c-85a5-5b30b30a903a",
        "cursor": {
          "ref": "7e031e38-e87f-40dd-a6b8-0fb48924be95",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e4dff75a-c9f7-409a-a031-e7ce4712a1fe"
        },
        "item": {
          "id": "6cdaa870-e69b-4d2c-85a5-5b30b30a903a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "de7d376a-93fa-4e7a-b8fb-0e5f79333128",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "40079167-8c61-4c7a-81f6-4d7b14bc798d",
        "cursor": {
          "ref": "7003e905-936b-4325-bd02-45dce8126746",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "27221d07-c5cd-421c-9d35-fa4ecaf8a696"
        },
        "item": {
          "id": "40079167-8c61-4c7a-81f6-4d7b14bc798d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "993609be-ef28-432d-bfb5-1e12f96197c5",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9625db-11fb-4895-8679-b2265e6c2a6c",
        "cursor": {
          "ref": "9f29bed6-a4a6-454a-9dcb-8066549e0fdd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf773a6c-85de-418b-bf75-e6305c1be283"
        },
        "item": {
          "id": "ca9625db-11fb-4895-8679-b2265e6c2a6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20c17364-4046-4e16-b154-771e9c72c014",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9625db-11fb-4895-8679-b2265e6c2a6c",
        "cursor": {
          "ref": "9f29bed6-a4a6-454a-9dcb-8066549e0fdd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf773a6c-85de-418b-bf75-e6305c1be283"
        },
        "item": {
          "id": "ca9625db-11fb-4895-8679-b2265e6c2a6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "20c17364-4046-4e16-b154-771e9c72c014",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eaf860-9bac-4c6c-a4c1-845d6b1edd5a",
        "cursor": {
          "ref": "914f2fd4-03ff-4f8e-8181-bad61260f215",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "719e88a2-dc35-455f-9df4-5e7f9e2e54fb"
        },
        "item": {
          "id": "71eaf860-9bac-4c6c-a4c1-845d6b1edd5a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca5422a3-8c59-4eaf-b683-f0d50c517ac7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ad094d-d210-4efd-8c15-84b12c78e0c4",
        "cursor": {
          "ref": "630349b5-428e-4858-9f80-c16a4bb396df",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b939b0c5-0229-4114-aaa6-813030ef274a"
        },
        "item": {
          "id": "81ad094d-d210-4efd-8c15-84b12c78e0c4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b8dffab3-e175-4225-931e-90873f360e76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}