{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2ff30e1b-a846-4d65-ac0b-b1dd682066b7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "11077432-706d-41dc-ad65-68812de55527",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62d44082-5cd6-4458-aa87-9f6e4e9b5933",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75f4a18d-fda2-426d-bbe9-36552209a59f"
                }
              }
            ]
          },
          {
            "id": "3a6a8d1d-c2be-410f-a6c1-f1cbe9371492",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fddd5088-7536-4a26-9d76-7168f6c62402",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cfa05dd1-7a39-43e6-8af6-3bc7bc3f45fb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "304d8ee9-7210-43d0-9761-4dbecf0669d3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "41c97c69-ad6c-4119-b301-10feea5a4b54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4fd720a1-3fb5-4f9f-92ad-92bd4b08b4da",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55b73a11-be19-4e06-af16-97de3a76e674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "868739d4-5ee1-4494-890a-59b55abeeafd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "29a82a3c-ef00-4383-9949-dc1b542c0283",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cfc76c6-dc90-4402-803e-6f9ea09af344"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6e153b6-efa2-47bc-99ee-d567bf4870d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06430387-af6c-473f-9643-dc4d79c572af"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a7d9ba1-e73c-4a80-9406-7c16e31c5626",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f457718d-b37d-44f7-8907-0ea5b31b84d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe71d987-1a91-49f9-ab7d-d52374b51533",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f06f2f4c-cef7-4bfe-81b1-7a20b6bb3b3a"
            }
          }
        ]
      },
      {
        "id": "b7084179-48d0-4f12-ae12-16ff1f786410",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3ada407d-ee77-4285-bb81-c4f27c3b6f20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aee17888-0b6a-44ee-9a3b-231faa286c71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9fe81aa6-197b-4b78-96f7-808c3543df88",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db35e4e4-e7c3-4951-b9b6-6667e9473edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "933299e8-10d0-42e5-8b48-661062b959f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b013e68-e552-42f1-ba7e-292ba20e994f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99773179-9142-4b01-bbda-6fab768707d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16c2286c-861a-4996-804e-6ee061d0535b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faef30b-9600-4363-812d-aee4767a9fcd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023a23b2-5d3d-44b3-9a0e-bcc059427f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cc7ef4f-7db0-4861-9a80-ec262b422adb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41b8b055-b6ac-412d-bf6e-f1697e04c567",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52f80002-2b89-42da-af08-b860ba8c1487",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182a06bc-b272-4edb-9a6a-02c9ec77b77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abb67bea-144d-453a-993c-a9508036eb46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa6240d-50e4-4eb9-8cb8-e086c01f5789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59cbf35-01aa-4867-97b5-9353c635f6c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9a9923b-ba21-4ab5-8cca-034e08872ea4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "469dc45b-d27a-4a6c-a037-7b21c3ad47d2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "576bbc14-76f3-4734-9b8e-82b1ba514899",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0a7983c3-3dce-4882-8f75-7e085b6e332d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9137ea75-0f76-4c7a-99a6-8cca94e48b64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f87f3377-1cf3-4471-a96b-abff24ed08d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cc8cfca-e335-4dd5-9370-030abdeddf90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbc4de37-3353-4426-91a6-ed43869b4c53"
            }
          }
        ]
      },
      {
        "id": "c1cd35b2-80af-4153-b18a-6fa3c4dd8703",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a10a1111-217a-413d-bc23-b3366646e5cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2052b42f-50e7-45b7-8a02-67b6e596f4be",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ccc91d5b-eeeb-4c4e-bc5f-32b9ae650346",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c83884d-9996-4657-85e5-7c1e8ec6c15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e8c102-48a3-4f6d-87b0-4a02029ab726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82ec32c-5dfa-4424-80f1-dc83a675e782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3af2c0f5-200e-4d7e-bd57-dc9401e772bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5d051e-a1fe-42de-b1f2-39879a1979ac",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444c7516-c5d6-493e-b9f1-4b4c002e5f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3b9ffb-289e-4841-8c3b-c12c0c4c15c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b490e484-9d54-4e8f-aa60-08f342c5f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fb89fc5-0f15-4550-aaef-0fba20f0f944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8553e9-5195-4215-ada1-2336d4fce5a1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3ff559-3cdb-4fc7-800f-468e54053b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba19ed0-68dd-4685-af4b-5f48a84843c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dedec0-74f5-4e5c-b730-6f6b9ef58aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd4e3c6d-56d3-4121-a64f-41ac617c8be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5238c2bb-708f-4192-8857-bce76b2f0ba6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6f1b75-44e2-45b3-bf57-bbebcdec2c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4294b02-f430-4959-b034-353a470755a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1731efd3-89bc-4878-9403-9d2661d698a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09b16ce9-a009-4b21-9b58-3d8f3dc7ac5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37b537a-30e9-4516-bd53-78f94a23f37c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13116ae1-9852-4408-9799-0bc7a813deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7ff4cc-c19e-43e0-bcb7-8274123e8c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aec5ade-f131-4a1d-bf46-a848b113b1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d4d017f-ee5e-4b0a-b717-9c73efe17631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53190946-6eb6-4801-a0a9-467066cb1406",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0bc5c0-ac5a-4e20-986a-a2b5cb399ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f500b674-a9ef-4264-a528-0fec323c889b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a619a0c2-f355-4d81-a939-9c32989ab95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "243c0285-0f7c-4d56-9a22-efc56b4e31f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efeb8c29-0126-4030-a613-8f24a2c15aaa",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca32e7e5-6dfa-4ca0-a1cc-b5e0bec8a88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c93d71b-7418-4957-802c-e36e97607f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70259224-edce-42d3-b7c7-bf7f1d2ea019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec74212a-f1f3-458f-8169-f0802366a152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd60b98-b66d-4aa4-aa29-9604b604af41",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeec65bc-1470-4b1f-8353-c41e01e9e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fbcab6-d0f0-46af-8993-2103da68eafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d639326e-ce7b-4cde-af3d-38471ecb57a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f030da5-fc80-4300-8402-6c29c1fece62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed7b007-3963-4875-9aab-dd50db050ee4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa2c440-f61f-47bf-b094-2f79a1d87cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee233544-8e41-4235-8a9f-2aa9ac152140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb13cf22-f710-41a7-8079-4b23e6f429a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fc68a28-139b-4dde-b711-312ad6ab2aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d3cca0-7490-475c-8791-7bc52a876c78",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849fc276-92dc-406f-8e76-ca208c8acd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9d4980-ead8-4b2b-b3fe-c78b628f6e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b968d2-6b21-4414-a3dc-d875f95e9676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16981496-db96-473f-89e4-f16cb311e16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3cea08-1b1d-40c8-9af0-8794e317d939",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828f7b2d-961a-41d3-a3ed-d9bdc46f0eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e1345a-1ac8-4ddc-b524-535b94171405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dbf2d3-015b-48ed-9195-70c538d5688d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdeb253d-ecf7-4761-8133-812e5a514d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f610bcb-d699-4ed4-b609-51b44ebb6218",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984b648c-e44b-4700-a9de-450e144afa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e434580-5059-40fb-bf84-051026599c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaba6d8-699c-4455-baf1-fd96a79fe271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f89628c-b10b-473e-8bbe-74c1ddb72aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22760b3e-8cb9-4d4a-b2f1-16eeae4a09c1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb80e49-6dfb-4508-8b3e-982d58106817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6660d9de-33f3-4b0d-bc2c-358dc07d1684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80ecdca-10af-4315-9742-dadb1737fd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d66dfc08-67e2-4bcb-b01f-8acaa3ea99f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5726dc-a972-48e2-830d-fc39ee9a3ad9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a22b5ee-3fd5-4b5b-8ab3-363b1e08a035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b2d82a-7af4-4b85-9bc9-e3d0d02305a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66491bff-386d-49a3-9872-2e6859873242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1927409d-b343-42e5-a0f2-64378ccdcb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d68d7a-74a7-4bad-85d0-65ca083d39f9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b28b28b-3108-4ffe-80e1-841438f7662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93b8cc7-9bf1-4845-9657-c4c29769256a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f638e5e-dcb7-490d-abdb-e8f9347b4701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d171a0d-eb76-45e1-a832-be07e0a903d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b6dafc-92b1-4385-9203-c5c46511b515",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a924226e-ccfe-48ae-b831-ff1daddb4ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e65ae7a-742c-4bfe-b40c-6ca78a9aab62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff87711-255d-4602-80cd-894dd19accf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b3215c0-591d-48e8-85cd-8cd85593b154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbb2a45-e6b3-41a4-bbd5-63ca5e1b9437",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69675ecd-3bf3-4020-8e33-5b050e1360b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47100bc9-3127-4a82-bf06-ecac827a037c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfff9997-e2d1-4627-8db4-44a1ba9193be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afd65b3b-93e5-44c5-bc40-60128a579bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ff09cc-4a4d-4689-bf68-2335e453b09f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dd0a46-1341-457b-8c12-bf4a674d0f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fcc16e-8482-4190-a16a-b5f551c715a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8597b9b5-2f75-47bc-8877-f112bd55e256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a069d4e-d177-40f9-a18a-cdceaa597de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aadce7-8edb-4e77-9b62-efd9d3d14525",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9315eb-f499-454f-8adf-24e079e40b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2347ed50-01e6-4e12-b140-d726b1abcfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd71f69-fe5f-4283-8131-1d4e2cab2e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f09f49e-c4f4-4d2a-a0b3-54ef5c04dd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae68a33f-4eec-4ddd-9cf4-805d6b3bff8f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5789ef8d-4bcf-44e2-9ef6-491878b5c237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57e7fdb-6f3a-446a-8a1b-db0d281bcd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb54df8-f22e-4808-a340-d7f205917638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "181bf401-2158-4d4c-bd42-11e531295d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff26020-889f-43d5-ba84-badbc7e60084",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafa1513-3f09-4e13-9e0f-30a4062a7260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec831d3-9eab-4a19-bfe4-dbd6523133a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4924a814-a369-4c46-a287-15bf2cbbdafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f854f863-7614-48e6-b130-d931e356c6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9def7af0-b0c7-42da-97a4-184660bb0036",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35686085-ffc0-4398-b60c-d5df1bbb2b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159ad957-6f2d-4cba-bc74-3d4a52697f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed4b10a-ec8e-4340-8d26-1beb12a96c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ac13d9-b032-414d-be22-3182d0c7383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d241c22-9daa-4d0f-8afb-5ea611d1c834",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1201bb-6f4a-4058-824e-4fd67fc0a08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574f5a1c-aefa-4d0d-8166-44714e8945e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adbfaf8-c8ff-46dd-a829-cdf3fe4b92dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c416eb6-8cda-4e67-af09-ec3dc569865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d7d691-eba2-416d-8e74-97bb053c87f6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b820c83-6a57-4de8-a3f2-cb068fdbc91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59ce53a-b1c2-4702-a8ec-3b161b0d7b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e73d2be-85c5-41e7-97cd-c4eb0abf8f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dd0b29-1be5-40b5-bf19-1e8ce9d6b0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea53aaf8-9e52-48ed-b371-a5458a46904c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb235e0-b6b0-48fd-9a58-f8d24d32dd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee936c59-cc39-4597-a27b-ff883c560ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da2b353-0eda-45c3-bce7-677055c384ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba884ab-7bd8-47e9-83b0-03cce343b838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cb1aa3-70fd-4cdf-bd77-b8c6b9a4a34b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47e2858-0e8d-498d-8066-c1892bf3e661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49e5e9f-2767-410c-8e55-00f4a8fb2610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e0517-5f91-4106-bbb9-9f959648c5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a439e6b-b40e-4b2e-96eb-85120673b6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e24242b-1fcc-4819-a460-2cdbfb2215b4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ca8332-39bb-4bce-b29c-235cf59f25bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a3eb12-2aa4-430c-9ca8-1022d929b8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eccd59-6a9c-4cab-8a21-b953b41a1393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7dd878-e408-444a-bcec-2bfd4ee0f202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb81bd63-a392-404a-88d8-9818e91ded42",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fbf8ea-99ac-4c51-8a9d-5a599de0c6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28722495-361e-4ec0-95fc-8c53c3b2d57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a72a9b-a07b-465b-81ff-6a890e8382d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0bce38-e526-445f-98e8-3a33d6d1bded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f366f6-9513-4278-9ae2-5410cff1340e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6c21c2-ba02-48f3-be04-e761a99ebe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1a5d7d-7f4e-4160-b711-0a30c2e47c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af615aa-4e62-4419-a024-51d19ff0b8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37658905-ed31-44dc-9926-d23859ef1b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ca1c76-6703-4850-876c-8293d8dc4a81",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1974be-7f20-451b-8f26-06ce53b0dc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59820f71-7a0e-4f64-b5f8-48284926075a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ddd902-90b5-477e-a2e3-4d9bdf2da620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8277b410-7ac4-45b1-848b-17e6ce97fb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a55013d-7a92-4fdf-9416-1edf9ca65dd2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a1691e-2d54-4760-b24d-96e40c197343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e442aa-63ab-4600-b491-c43c73a04a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b6056f-f94d-483a-9057-f6e6a16d6b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff99b4e-f2be-4741-9391-f5c1da14500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83f4f65-95c2-4fa8-9797-eb4a77635fee",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8185231-8a1e-4ab7-90de-473127473ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b514f2-af67-4883-afb0-bca1d9b1f1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856e7631-7340-4769-8ad1-290483304083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10988015-2f6a-44f8-a848-de3e4b9dba45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cefbe1-c928-4493-a4a6-8e1cb1b6a97d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e5281d-611f-4e42-9047-d1ebd3d1e885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2344b7fb-9231-4221-839c-41aefe6f2a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906c44bc-2562-4cbb-8fce-4fc391eac8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a73ac26-ca6d-464c-a593-1109fea39656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88977c18-079d-47f5-b6f5-b7ff85ca79e3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5142d9e5-6920-48c2-b4c2-a90bebc2dd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26aa741-f588-45a3-a954-6a1130be30e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0622687-3f33-4b82-9dc8-9421a5951b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04bf8962-3331-4b3c-ade1-aad2f8bd83b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b494689f-bc65-4764-be6a-c2be4118a905",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd7e575-132f-4f29-84cb-4b3c31cced55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d5b2a1-513f-4bc0-a238-9bb47bd47c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8469e3-0f12-4756-a7c1-a930fb76c600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6c89a3-69b4-4208-bebf-e1024dc79441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6716ad4-6c05-4ae1-809d-ac590a1c550d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5b1b1b-2e2f-405b-babf-bf8c9a2a4e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "994f1e66-a98a-4f2b-b898-2d7b1a99b150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c72c85-5973-48f4-a89c-00d8f997846d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9afc8b7-04be-40e1-85c1-c26289822211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8838f1ae-6114-4483-b72c-7cd8a6f4c56a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb3a309-8d3a-447d-ac6c-1753956515a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd7693d-1465-412d-b6ae-50fbe60e8dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c9403-7241-4c85-88e0-3850640b9ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6eec20-3567-40c1-bb01-863d5878b450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38df8e94-0f4d-4c02-8c43-537e4d6a3f9a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b220514b-2ef6-4e17-93b5-d64a527cde47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c542302-05ad-433d-9914-f7927d9c8ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4519afb1-74de-4044-a231-1cdddce606fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "efb984c8-fed9-4d9f-b6f3-b8acf602e332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a876641-36db-4ee7-8580-c59aeabb4853",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de85d507-6783-4df1-ad8a-13346ad172f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3a6629-66c2-4126-b6c8-689a3cca6870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f94aec-869f-48a0-80db-795332949135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b84d04ef-e2d5-4c1c-9675-cab533dceb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ff123d-59f8-4c05-9dee-111b7e35c0af",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f52cad-1655-4b99-a31b-4097c6b53c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c355607-57b5-4a1f-b8b2-af2515156c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589a5934-0d55-4fd4-96b5-14bc31d98f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64a693f1-2e1e-4e11-9a61-6fe67ee6afee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6833eae2-4d19-4227-b95b-ba9e7baff95e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a8c2e4-4f62-49f1-a0fc-822b57c33204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0298dd75-a769-43b6-9362-8bf54e74337d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c281b1c-748a-4587-8825-0bce8a61d2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6ce4c8-7d27-4a73-bf39-c641cf3a5da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a57ba0e-6d74-4bcb-97c7-4ef157032e31",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083f6da5-6322-470c-baba-c6ee7dbb0148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1002549a-6072-417f-a78d-93c1615b7233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c9b6f3-cab2-4172-8d7a-163e7ecf5fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bd618f0f-ce76-4434-afb2-b7acc1f44523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbad0c8-a55b-4091-91ad-d47ec9088f41",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb3e464-4ee9-44f4-82f8-66297552a1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134696a1-7fbb-4e2a-94f7-399e5f0c77b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8f8971-d996-4ec0-99fb-c224e36ed52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5332f306-8ba3-42d3-8c04-ce2148bbf612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06e4bae-2ceb-4560-b4f4-03ddd46b8f29",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8994de4d-e667-4209-a64c-adfad2677d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2b9c3e-3a24-4401-b3a8-efd33265e9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9b5eb0-ff5f-4d2c-9e58-851c6e8ec724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c75161-eddd-4c9b-a75a-1ad0d9c4ae0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e4a7e4-dffc-40dd-9993-fd3d573279d1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67283130-fd8a-4ae7-b8dc-7778ece148c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a08175-d0c7-438b-a635-9406fd14c26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edc668e-6907-462f-b951-dc19a7399506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c13630a3-47c6-4855-a0d0-646b544d9cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afea793-a387-443b-a0a5-5e0faa404fcc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9268227-a265-4b63-958e-4f33d1509a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce6eecf-f5e2-4042-bc0f-c51d24de2ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e484dd-a4c4-48a2-b7a4-582d5637a4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f206303-a66c-46e7-b137-9bdb9353fcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b000ea-06fa-46ea-8624-cec672ebf63f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8487dd7e-3725-45fa-8611-0daaeac7ad5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63d9b44-a0b9-4ae8-9860-7bce1ebf53a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e0b39a-ce92-47b7-859d-cc56d1379660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b873b825-65dd-427b-b667-cc5e469b7ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1457101-30d1-4c0a-a581-f1bce41ec1b9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092c3097-ddbb-4ce2-80d4-4bfa50e24e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3874205-7876-4688-957c-98517f89cc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06d8c47-15b1-4a6e-ac7c-a9e32f0c6487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74996e67-8759-4588-9f49-744822c8ed54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef0102b-6417-4f34-a92a-d4d3c3172a9f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7378960-2a3b-4fbf-8896-e68a83ca7fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0404c7de-a75b-4a93-818d-62f0151b125f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a87b300-7ce3-4ef1-aaba-96a6368fe95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62358e65-e346-413d-815b-29f7762785a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9133d2-faea-44a8-9c96-c7707894d48e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664719c9-aa31-44ab-bc25-0b4ef222a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a3b1e4-144e-4d62-8e70-e1a5f275be21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78f45e7-8d0b-45e1-bfdd-8dc0ad84989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01f7b5e0-2f39-42c3-ad4b-b1e6e059d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b147910-6fa3-45c1-babb-d1241854bbc8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f452b32-2cc5-4b12-a57a-2d5fae39c0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1c2a71-3983-4fb9-9402-c66df1f03a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638b83cc-01b8-4bf6-b29d-74df91549d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5630f0-7f90-430b-a143-a9fe65f6cd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13fe211-e8dc-4ff6-b23b-a8b0aee4dc5a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baad84b-c16d-457c-bfed-ece1c2bf0cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa0aaf4-c333-41b3-bf7d-babf466a956c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778dff63-f1ad-4c37-acac-01b285996c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d082a67e-1624-4eb1-be0d-b9a55cba3e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7895a760-bb91-4e8e-a14b-dde38f81358f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b43e2ba-d8fa-435f-9658-7d02094d5df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd32b90-aca2-4e9e-ba94-3a410774673a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76f3434-14a6-4ab5-8c11-45e81ad7651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba4b525-07cb-4981-af1f-415187515b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e68fe67-3bca-49f8-b9db-38cccdb650a2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8782480a-79da-47ad-94e1-2a8198fbc875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fe8cf9-cf2a-4b0c-a78f-0aad8e68cd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd8ec99-c232-443f-ae10-a21273215377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e1ddb9-38a9-4e4b-b09c-7a0148608f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049e2179-e6f4-4426-9fe2-fbcd7ed30c05",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e12e2d-4ebc-4eee-ae06-f2ac1fabfadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba36ebd-e4a7-4e0a-9af8-b21f2a79a3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9370b29c-2012-435f-b24f-f4a77eabb282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b346b7c1-ea6e-40f6-84d6-95bd2a1e62ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0291d529-c969-44bf-b514-045618ab1ae2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6458a5-ebf1-4ca3-b632-c2d7af237d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f40cf91-5512-4d93-a9e6-2bce2b1d0de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d9defe-24a7-4799-bfcc-271468aeee48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "53f552aa-182e-4d7d-9aae-65dd02472c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13f0724-92af-46db-9f67-a9a63852693a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8e7e89-2f0e-4cce-9737-ae9e6e1ff584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27ed97b-e1c9-47c3-95c9-7a3fdd5e0ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ed1d9a-6125-4f46-ae8b-a5424df9f43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3de27ebb-e753-420f-81b8-94375dc220d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f638a5-a256-4b46-988a-b616893e43e5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9514de-1793-4870-915b-9b6983ddf873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b9a1b7-8140-463c-bf1c-79ed9cc3122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ffc91a-980b-4956-aa62-38bc2025da62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8575b0d4-ec6f-4111-aee7-6272e59cefe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dee5f9e-74a7-426b-b836-5d406b39e242",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e53ba35-6aed-4c98-80bf-0063c2200dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a984a995-f0a7-4b9d-ada8-bc8f9bfca375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ff8738-4f37-47e9-a29e-92c563516245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bafd82ef-4fe2-495a-84ce-967ad8740485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1962bb-149a-44f4-92b8-476fa46d21a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0043c09-36b1-458b-b345-874b42673d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02bbb636-4e27-4d79-a645-c4049e771495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3207d643-2d82-4b64-a7e6-a35d9570e750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c88c41-5c3c-4ae7-a3a9-0a6192f0e977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce9a9b-e1c3-4097-b37c-6d527449078f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22917d7-df0e-4191-9f75-9fb4858d1925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a32415-1227-4cfc-b2d9-66b20f2eacd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f67aa2-5d18-49f9-ae7c-9dd411670eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "65d34bc5-85a0-42c1-9cf2-502a44a21261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b87336-4926-4ecf-b060-a47389f8ad41",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144cd905-24c4-4a75-9dd1-32be3c04fe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb172826-1ca1-4d57-9f41-31fa59ec75cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efee374-07aa-4cf6-9a1f-99614290374d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ce7161-e0eb-45c0-beab-beb164d551f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bb6f84-d8ad-40a8-961e-aaea3351731c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad3f83c-ba0c-4475-89c2-b86809f32085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c749baed-c625-4a4b-9486-30bdf5030598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc67e283-ad9d-4e76-be73-cc2665bf7dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bd054b-3519-4946-a115-9e1252c8ab99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950bb2a2-894c-46c1-94d4-98d56b5546e0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a61132-140a-4442-ba00-6b385cbadcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf55df1-52de-48a1-95fc-7123eb2f1701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71f396c-f06d-4b34-ad57-11356824e640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97758b73-9fc7-4004-b2ec-91e559529e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86446c1d-f816-4eae-8313-1a5ac3a94c4d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd271a0f-d4e1-4691-ad5a-7d9fecfe4e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9409f32e-5dfa-4085-9edf-0fcc2095582a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae18981e-ae97-41ca-893c-30491a4cf757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c30e9121-00d4-42ef-ae1b-bafe3ae16881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead0dcce-5f7d-4c68-b5f6-ecb8198c61c2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77656b9d-f077-434c-802f-bb21b3bea013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e56c7a-ab8d-4667-a576-2b73080ee5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfba3b9-9e1e-45cd-b40f-acbea4a26286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5e6e96-5fd5-4dfc-8934-a8ac960136cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5992304b-dd25-4f1a-9ad7-e2145150a8cd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9fba73-2fe2-45d3-985f-fb5bdb240172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801fa456-287d-4211-ace5-6687d95cabbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c393e0fd-1dee-4b00-9199-4e4ef1a21a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40e499b4-4681-4c74-8fed-3f3e8b8e908c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2dc509-4434-4387-923c-4a1f6390e4c6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b780e45-5428-450d-a214-3dcfdcaf5d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b062a1-9231-4eb9-9062-240ebaf23ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6733a9f4-5ed6-4701-8607-2ecb0a2f006c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ec4776-172d-43cb-b641-a3629b5420e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20232459-7d07-49f7-b7b5-5420ba69e85d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c160a56-b30e-4869-907b-7df4f87c538e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67036b2c-4475-4337-bfb6-7cf5bd3a8920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e51e030-de8b-4721-93fb-3c574359addf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "898b1aa4-5a9e-4854-9010-9926f8a4d1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d44040c-ce1c-45af-924d-e1e97d41ba6d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b850de-bb84-48e4-99d8-3c385c26676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf55a68-d0d3-4037-84df-11c7c6a4ce5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2881c09a-37e6-45cb-82e1-68adb2df35b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1c1f85-a56f-4bd6-9604-d5611051897d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499d0a56-0c38-4bfa-87fe-cfbed39977e0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e55a14-6a7c-4c81-9154-de0b1a0f769d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c992a56-967e-48bb-a557-1431b33009e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8df993-409d-4cdf-834a-0dfdf70b66cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a72637-4ca7-4420-a9f5-8ef9a4812fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85e9f78-cc2d-486a-a227-279cd0766978",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364f12c5-c3dc-4df1-9a68-447caec655a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60b96bb-bbdc-4c24-8fac-84799a299692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494a170d-bc26-44bb-85c8-7ef8916a8715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "906746cb-ed8c-4219-89a7-0b88a974333a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfb82f7-238f-4f97-b931-2d06aabcac61",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a58ec-11f7-4f00-8c24-54bec96f1ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aaadb08-a95c-45dd-a091-30371266aee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612e027f-b739-4218-89bc-5fcb2095566c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36a7654-3484-440e-b206-85fb8e870aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fad2dd-7382-4667-b9a7-19755182b089",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bc8d60-4410-4c2b-a85b-f1704a97c756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a23fc5e-7b78-4636-93e9-1e0847741371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039adbd7-e06f-4939-b37a-26f7d41e362f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "299811fd-3506-4619-9924-135417816b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c93f3a2-359a-47b7-bcb1-9485670abfa3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9478f812-d15e-469e-8272-f6a6d4f42f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d75151-28bb-469e-873c-a0d76643b4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27356013-a8f4-45cf-ac40-6a349de2d7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7abf3f39-8298-4429-947d-319068bff39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a6a121-77f9-40d1-a684-4c08be66e63f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5e8c18-0e00-4c92-abdf-14c4fbbd7838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e665c82-c6be-4c26-a86a-f5bf88f769b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac93ee6-bbd1-4fb1-aa67-e44e4eec3184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc6144d-2b99-4274-b92f-378102e89fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af9c6f0-b2cf-4f98-bdd1-fe2762ebf4d8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bec4069-15aa-4643-912d-5bb35558b5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8beaf1c9-c523-4401-98e6-a581cd127efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21555afe-5c46-485a-b70e-71f10024a778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a7eb9c-511f-41c5-8183-4e0946f6dc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158b5e7f-f425-48a4-8ece-e4bced130871",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129f1eb7-5cb9-4c5c-aeb3-93cf8964c0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedd38b3-ca8e-427a-a377-c55891d65c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328c99a0-8c51-4039-a3d6-0b6705440815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79be9ed7-bd19-4e3c-9489-c3a99f5c9478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901b840b-05aa-42c4-bc90-54f21b600b9f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c6a561-2987-4fa0-a9a7-b6c85b6e9709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1945388e-7456-46a8-871e-5d820e6376f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12d9beb-235b-47bf-b5f4-5971d50b514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b384c87b-06e1-4060-b2e2-a3393e76694e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5668f2-6452-4312-8619-bae54764e9ec",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90cd3c0-45db-419f-b20b-ed076d11c863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d4d43b-d0d3-4291-8cca-3156f84165d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1309de8f-418f-483b-a846-1020bb02e4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c99e8595-9a32-4d8e-a8bb-3e43a1409d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bc70d6-f5cc-4cb9-9f0f-96b9919a3084",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3083ccf3-07af-4741-987f-0d6a18c2b3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf15e3a-6d11-4afa-b020-38f8834db602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8991fb72-e3bd-4cb1-b734-ca7838aff27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e505b7-067b-4493-8f33-cc774e19a43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19cab95-d550-4701-849a-bc1f57cf2404",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b34c31-4384-44fd-b2ae-de4717d962ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee0dac9-c81b-46cf-99ac-290dc42ff077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0360ae0-a9e9-4797-9db4-995aee726570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b269b8d6-7d7b-4f5b-a4c3-85edfe23c628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbf84b4-4b98-4dd0-8706-a1635744564e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181ac4aa-645c-4059-83a2-701656bbd8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30bdfe41-dcb0-4dbf-824a-0e438a2b2180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6a5f44-7253-4339-a96e-3306d5db0a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eddb9cef-c346-45cc-abb7-26dcfe3f7a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e0fee2-bb67-46cb-aa78-4f7d02d464c7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a242191-244b-4224-b8a8-d1b8d077fcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c98b72-f82d-4317-a64d-58bb03de76b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275f8bcd-800c-4ed7-8930-86ab19193bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "123206d6-301a-4834-9c94-03d05e720608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ce5796-b563-4c80-83fd-4723f7511a69",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba85888-8699-4ba9-942c-46de8200ff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "125af0cb-e7c5-4064-b041-851dc97ce8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e575ac-4356-4901-b03a-4edc3b4760e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8ca2f8-c6e9-435e-8ffc-21d2d7356f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55bc647-e4a0-4a14-b0f7-7d83ef4b8e5d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb62d919-4495-4a98-b61b-41970b4ee313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2a6b37-1512-43be-8593-4399ec3d22c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32014df-811d-4341-9471-b2a2935b5d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "996011da-2bc8-45a4-b0bc-f521ad6c9e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7a47c2-96d8-4b66-9015-3120eb8e95c0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34538a45-07af-4b8c-b396-8f60b1c776cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741919cd-1500-454b-aa86-0f7ec5a62e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180c9291-a35f-422d-88c5-9b55375d0bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6b5548-6fc0-468b-938a-75377486251c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51ca5f3-5cf9-4691-aeba-1a2de69f51ae",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec784f40-b981-4c8b-93e6-c9117fccaaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9036c543-0964-4467-97f8-81a991441083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0843107d-1953-4c79-a6d7-f680428c4f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ac3ca0-0758-4cda-9ee2-ae435a5fa7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390c9f3c-42de-4920-8105-3f4c15706c2f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d00e09-e3ca-4ff5-84ea-94cf7c0dd8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05715659-e43a-4abb-ae35-a57af8df3864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a018512e-ca57-4f0c-a2d7-42541bf53b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea58d32-dd23-449d-a7ef-22577c66d0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87714cee-4f92-4ecb-9697-76a235b8ace0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd99b23-6830-40b7-8c44-9fb8940e129f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b250282e-8de7-4867-b949-ffe7b5ed35f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6ba25b-31c7-4082-9c72-03fbd22f4493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eef67dfd-d245-4e1d-abfc-9b3f5373b783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bc893d-1cd1-4dc6-934e-c3cffc60d943",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f53fd3-43e4-4026-9a21-42d37501398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e9dbcb-ed56-4e93-b67d-b10eb4607587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c11b0af-6cec-4011-99d5-6911beb07d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd2ea20-08bc-4a35-a82e-bfa4de4d0753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade68c1d-9c05-4692-9b03-12d4fb0d8f63",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f10311-b3ad-468f-bfd1-f3b0571b9635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ad464128-d8c2-402e-8c04-8fc765d8c5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df272e78-0f22-47ba-9ff8-1ec6ca401c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3116a91c-69d2-47b0-84ca-2911b5188c0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "357878a2-9dd3-4053-878a-d0083f7857f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1b7b9d6-d649-431b-887f-4ddaae45c681",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9557a1-a858-4086-a662-bc3502f87d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5abb053f-32e6-4d9d-9bf3-808b50adb000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4d2128-9045-4808-a123-18db57eadce2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea106e7c-c91d-4e77-b613-9f3120fe75f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f806e97-6e00-4972-8e10-8fae9a7af5a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29e3a013-fb31-4586-83f8-969efcc3ecf3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a937bc9f-9925-4372-9fc9-a3f8dab2786f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a847fbbc-8a4a-4f8e-bdc6-8676f4609bdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7677dcd6-7ccd-4cc3-a7b6-514e4a4dc348",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8090109f-c1e7-410b-9b7b-30cd20caf1c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "57d681b4-c0b0-4fb6-b62c-e6f2313f98e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c51903ad-d6c8-495d-a20b-c0a23341a72f"
                }
              }
            ]
          },
          {
            "id": "01a639d9-0365-47a1-acb1-6004e4e0366f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb6756ca-7311-45be-aea1-b183268521f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9da6a732-8cb6-4af4-99a4-781b30d66608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74bceb7a-92e7-422d-80f2-8368544455a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e796339f-5761-4b81-b61e-ecc9b46d368f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ae6d582-c757-4340-8469-9bd9284fa7e9"
                    }
                  }
                ]
              },
              {
                "id": "4e07ab13-d10d-4a4e-a5dd-cece0d4a1b4c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16667736-8b6f-4c35-abc6-3faeac48ee70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bf7bb2c-c531-4ff8-b907-49c609f1bd8b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "650b7ca3-c7df-4804-99f8-da4adc55e1db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ec1feee-f1cc-4d25-b3a2-cbd800edc831"
                    }
                  }
                ]
              },
              {
                "id": "36f7aba8-6da1-4730-a68c-a7bab06c97de",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "264fdff2-225e-4521-8e9e-a0fb300423f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cefb9a40-9785-4b3d-9872-5e6dcec10ac9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e7a96fb-8094-4a43-ad13-624a60651ca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05afdfd9-f2b7-4ca8-9328-032aabb87e6a"
                    }
                  }
                ]
              },
              {
                "id": "67603833-35d8-490a-bbd7-bece99ec0013",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c503cdad-da92-46ab-b7b3-d861811557ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1dde068-6401-48da-ba11-a11a4a0a71aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eb3d396-0533-4338-919b-b72db8ced924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "96aa3afd-fa42-4acb-9a40-baa7cac1c85f"
                    }
                  }
                ]
              },
              {
                "id": "73ed3840-0a4d-49ab-b079-a50e356ce15b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "176a3b08-0174-4fc1-a4aa-32bda2090806",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52bb1748-9e01-4813-8f17-0d521d4da244"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc9d156d-8efa-4da7-ad7f-8c92d1f31755",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a1205c46-cc83-425d-b0a6-fa209e550808"
                    }
                  }
                ]
              },
              {
                "id": "adbbe80b-c9fd-47c6-856b-4c0de5ce72d7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0246d7f0-82b1-4889-a7dd-e8b17b8c2ebe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a33377eb-37e7-469e-98cc-9879f91331a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82a12b15-1f0d-450a-8cec-a9ee8b10882a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32722040-3595-4f84-b1ac-8d70f83b4493"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c434e242-03a9-4ec1-8819-7738e3fe3ecd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6862cbf-0550-449a-b476-584578a9ce3c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ebb50d1-af80-403f-825a-5dfe1a6a91cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40effc25-e482-4a89-8b48-6ffab3772983"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "451fac83-860b-4790-a4a4-e6e277a73ce4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b4bc3470-70d0-4424-af84-09e9806b07b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "167b6b3d-7f62-4e35-b697-46a4967d2b8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc6be062-de6e-4722-affa-5cf26d34a6b8"
            }
          }
        ]
      },
      {
        "id": "6bd09d4f-b5b0-4e2e-a8d9-ed81253da37b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c785efe7-b1a0-4efd-8151-655e7d501cd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2cb7550-3ef9-4794-8430-eb7baee7b613",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3eb22503-86a8-4b30-a546-63ae01d0fc3c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f27a818-1071-444d-aec5-418554e42bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f6492a-b5dd-40ee-97f9-407a974dc0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a51f80-f10b-499b-a5c7-058ec868405a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf0cfbf-abbe-4e81-a123-c33f286a216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2dc84d-9e66-4b65-9216-ba51ba5109e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5329e3d-135c-4e83-b76f-0b41f5143cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2eafc7-447c-420b-9431-f70893ac628f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2d0656-fd5b-4201-b360-761e1b8dfe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ed0ce5-9ca8-44b5-94fe-249d97cf5df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80b68fd-3d5b-4714-9625-466084459cd4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fc0de0-9f3b-49a1-92d4-03f7cdc79596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03d97a7-4ba9-494d-92d5-31a8dd40caa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0095a03-357c-4a19-8ac1-e4082adb4cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da97a796-858f-45fe-900f-eeb3268b0fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b9bc31-d5b5-488c-b745-f819afc578aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a702ac83-28a4-4f4a-ad68-e4f0ab424467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe14066-f783-4191-94ac-9f5800864138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f46685-0ae9-49f6-a488-ed3a177d1115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "254f70d4-0691-4d53-98a4-f54ada3439ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd59231-4c43-4e0c-ac4b-66f5a8c10c00",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469278bb-c1bb-4fef-a14d-ff1923e2d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c15f8e4-af50-4a62-884c-fc50305cc891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f13274f-f59e-458e-8687-ccf0dc325399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53eddda4-81cb-40d6-980d-b39dbdb7dc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9363d365-b1cc-4445-8359-59f7bb50cd51",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bc1abd-3d78-4406-8541-9547f91146df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3950513b-7f52-4e39-9a83-85c9d1a93d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92397437-9feb-4616-8a62-0e71f6c249cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9bc138-5c72-4535-af3f-2d1fa1909897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aca22cb-6dd3-48e4-bce0-e0dc9063670f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb763623-d4a9-45ec-a4fc-de2474c1a8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95902f5-9cb1-4f5e-8a8d-2e228d0423ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb24987-3c5a-4635-b091-8af1a11ce16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3b8da9-13ea-4092-b921-b98e0367268b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110cc3ef-c3a0-4ec1-be58-aa51d8d47345",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771e48db-0d65-4ab9-afee-5f2b0c1a6fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178cd77f-9279-41b2-b7e8-7605c253ed45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90895e0-f6e2-44e4-9478-471f89aacc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6cfba7-7724-4966-891b-9d6de3540f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3854435f-ea82-46f1-91f2-fa3aacfe2a2d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fbcab8-51bf-4fed-ba5c-3dedd9ff6f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541ad8fa-3516-48b6-a445-347d02d612ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610ae9b9-9edc-4acc-8ae7-49cd8d267205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d8677f-9067-4046-a31c-768064569245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ea2d1a-f3a0-42bc-8c2d-a7e25daef34d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5de0711-bd46-49ed-b9d2-e62c80992050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b7ef90-1aec-4b61-967d-a004f673d38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e6d97c-6a18-466b-961f-fc6e62c4df6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e523f7f-1d64-4816-ace2-2a03a4817418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6f2d03-aec7-40e0-8391-6a31c1218917",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ee62a3-84c7-44d6-b1da-82cf7f1c0da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90420d26-72ec-4206-a603-e6f88b537be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c627570-f360-4bf6-b2eb-6906f1190283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0a2a0a-7c7e-4c2f-9df4-3a5f23f0d509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40d92b9-4fc0-4f8a-b4cf-e5e7ca21b4a6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430e8f16-1417-4527-bef1-285ff5a225af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3892fe8-001c-44a1-863b-9fb2048bd6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081053ce-191e-49df-9560-ba6ffe9c966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df19b98b-39af-4714-9593-d6db9fd3bba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1c1cf4-f3b2-4e75-a7bd-c20a6614d479",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47784488-532c-4d82-9a46-e4381726f29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30df5f42-b87a-49a6-8da9-a4216cb06d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d337127d-e291-4e89-9139-9ff6e0772c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5521bb-6809-4cc3-bff9-f453f56261e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb9820f-e04b-47c0-a344-1e2a08fdbcca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7442bbc7-15c9-4dab-a837-604f50993ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe80e5d6-ae00-4231-af4e-eb719a1f236c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b176a93b-66c4-459f-8e7f-c1d9aedd62c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "40efcf69-ae53-4a8c-b213-7d133c61e616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2286c7-40d1-4922-998c-2ac5d3fb711e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb8fbe7-4848-492d-bdfe-8c9ee25291a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64ff175-04ca-4cc8-b77f-03222d5b14f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6a924f-1cda-48aa-bb6d-75905f767249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e35a68-3cbc-4b3c-b9d8-46237f9c7c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3087a7a-539d-40eb-9f50-58e4c824075d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc919815-0357-487f-92ca-b616acc8b7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf05ed70-c766-4a67-8c0f-d8ca560b4b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936429f0-2707-4bbe-b564-0381c028ae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a208b89-1742-40df-bd92-e847636d3a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a386e20-0e7b-47fc-9cb5-b1abc3a4feae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb471dfe-1541-4783-9dcd-d44e2ee42383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f1ec0a-4d54-4ed3-bba0-bccd172bd4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fcd5e0-dc60-4a9b-9810-955bdef24dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5a7c03-731e-48d6-b13f-c866fa4becf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a05dd9-7de5-4648-a0a9-4737511d9f2e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d898432-00b1-4002-92a9-a98800d8d78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b088c2a-4908-4a04-b30a-8f7acad4d8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372937f8-d613-4371-9671-80e71a058b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c04b41-faeb-4ada-9de6-b8fc3797ef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8eaa13-e2dd-4fa9-9057-df08933e97ef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7555d56c-8d84-4426-81cc-a5d5a2e6bbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922e8b39-9bf0-47ce-bca1-1032514a601c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199388fc-5ce2-452e-a52e-89acdc741678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00b2206-abb9-4242-b4a1-7880f687bfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e98058-84dc-4828-8817-9ecdc7830288",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861227d3-1ac1-4d55-93ba-3f043d9b9106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca1d7a1-7510-45b2-8bdf-4aafc0b703fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45901e5c-7bde-49e8-a0e8-fd10ae30e60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6d5197-a663-42ef-9dbb-0546b5be4afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0155d5f7-e5d9-4198-95fb-76625d66a2c4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db25e0e5-c4f1-4279-bf37-d1157d86162b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33121962-9a8b-4153-8f0c-405e70df521b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234ca6f8-ce3a-449b-8b27-9988593d0dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f67983-e917-4be6-9102-1c6a0b59cdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7121abaf-964b-4af8-b18a-163845dde51c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecbaae2-d0ca-439c-9816-b136db77cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fa0f0c-d922-4a25-a688-2310dfcd06be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4095c49a-6517-47e4-a737-d0415b397b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b8f9bb-f7c1-4304-81d7-408e1a9d5dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6d9cf9-cd8c-4f42-a6e4-88bf4e8cd973",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3535e709-b347-4886-b6d9-a79157410b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9941ce1e-fa9e-4fde-9598-0a0f3108ab4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041ab0bf-60ce-4012-a51b-e0107c6b04c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ab3c97-b685-4f40-9812-606ac7a824ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a405f5-2b86-472a-a71c-bb73a4b57e89",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0132636-aad1-4e85-a0f4-3f196c7b0e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccd810b-5e0c-4e05-87d9-abd9e54e6d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955e2d67-ed82-4f03-a20b-c1cd0b62bc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bda6a071-e629-40e8-b650-febf4c354163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007d50b7-375c-4b11-b184-babb50bc319e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e38b54-f211-4b0d-8167-dd788bf19288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63605cac-0586-4fea-a269-9c8e19ce4b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708d8965-9baa-46dd-8bfc-22b37df2baed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b10c147f-8db6-4b16-89e6-373ddb3c8c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de553a7e-5205-4545-a5b5-f71feb75f6fc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c88941-3dbe-4da8-8751-8e79c71dfdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f527a121-495e-4c37-8733-4f582521c118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2c0eb0-141f-45c5-95ba-ca4b0d376895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "829ee478-220e-4a5b-bc30-9129fb132104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81ce4cd-e596-4a23-a4ad-3643e69d6dea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f978da05-f437-46d0-9df3-1dfa3d0dc427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea3774c-5761-40f3-8e0c-d89823a6853f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257de993-010a-4e08-bea8-50cceb786e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8215b53-0f08-4e9e-975a-f8a6a7aee32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6ed2a5-68e0-4435-82b6-7317f9c0abab",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa379011-2eb4-4210-a984-eecf97ec8074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893678ea-71f7-4145-9203-bc613d3e6f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a052cdd-ba95-4a2a-8600-a377e896f996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0fc832-ece8-4db3-aa11-25a293c45e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addd1471-22b3-4c9f-807e-1a57b369a0aa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06979f8-4e57-41ec-82ae-e52f80a47c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0e330b-b89f-41a3-83e1-258112122bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da402f99-86f5-4f15-a4d3-dc130569baff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23e2984-3669-4c2a-973e-d9e45a6dd0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dea8ecb-3cbb-4a40-b078-d06a0309acde",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041201e2-b702-4d7f-8e90-084b91366e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8314a795-317c-41ac-a4ef-2dcb4895cd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8988a7-0419-4328-a020-9f6353a73323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761efb27-2cda-4158-90d5-43e022bad9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece3cd9a-77f7-4aaf-a9be-75f426e69482",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353a663-6917-419e-949e-0c61f215f58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe39385b-f791-4823-a5be-f6fd1c600573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b5709a-3052-4445-ba8a-b055fecd20d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7cd6a0e-d88a-4662-b6dc-01b03988bfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16906c8f-20a3-4af7-889e-07e09dac64ab",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafe22f4-cbcb-4cc0-96cf-9ee7007d8393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729aa098-cb25-464d-9904-a51210ff89b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed95417-8898-4ef8-ac77-5df86116c8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f784ba3a-3ce5-4a03-978d-e191aa7551ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcc8e076-711e-4575-a451-d30281e8e10a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32431c83-8415-4db6-9d40-ed8be9ecc63e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88101263-e505-46a0-a4d3-710bec8a69d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6de144ae-f1e9-4613-8078-04b97edf46ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be419323-381f-41fb-bd80-50af91be51d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d5bec42-e96f-4204-9d36-eb633d5ed98c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2858c68-159c-4805-b108-cd444f8be10c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8a7091c-dbb1-4350-a438-6771ba92d3fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb417639-acb1-49df-ab54-b15f722f68bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bea8874-ccf8-46d2-a94a-9cc5b317894b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15727be2-eb11-43c1-833c-a12559703e39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a80387b1-4b5e-4abd-8e15-518a87e15505"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "694cd04d-3bee-41ce-8663-e4eb3b8ac6f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f23d4e4e-81c1-4585-bb8c-c48620bdd894"
            }
          }
        ]
      },
      {
        "id": "b763ec68-a53b-491e-baa1-4708febad035",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d8ed9bad-15a6-45e4-ba39-c1fa28e33b65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c583186b-51af-43d8-bf72-da28c93e3ee2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2fc78dbd-7313-47bf-8f38-d0c100b99dd3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e32549c-e054-426c-9ffa-18539d409db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590bc822-9b00-452e-acc0-e950bb18f764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b3a4d7-f105-4a8b-bcac-196c365640b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3757517c-9858-4905-98fb-635e25514bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1cf1a8-23a7-4de9-a8c9-0890a8667881",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6459a040-4ffa-471a-9402-39ffaddf1af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb51c26-530f-4c54-9a5a-065591a4c710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dfe5bf-abc9-43fe-93b0-346dc419e6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0019513f-5cd2-4f74-b37e-a3f4242a62ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57a6cee-d7c3-4a7c-9d65-ddd0cd565b0d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddce8505-df6c-421f-9c62-04bab43c3771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e43db8a-e572-4fbc-867d-f75a8ccfcd94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4062b2-2b5c-43d0-8980-5b6463de7379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccda205-162f-4a77-b8f0-c68c4d96c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b95acc0-5d1b-44b2-bf48-0071b7f7f19a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76953993-7050-4fcb-b4eb-d7da994e56ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb5594d-cd51-41e4-9ea6-0ff1786b070b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21a86c5-86d4-45ad-b923-3f069cc588bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d869243-6f09-4e43-910e-05905f898458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d65310d-8922-4b59-8fb8-4aad42d99a32",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44250583-db80-4694-9c1e-8a3662d67b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5968a7-a8a9-4252-9abc-ec920a97db4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e353a09-0dd6-4f22-bfee-fdf96b57ad05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70acb0d-b8d8-4c1b-afb1-6ff179474552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8affca9b-a0a1-416f-afc8-640aae4b23d9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55220920-ef5d-4544-9560-321378dbc098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bcafc4-7d4a-49b8-b953-dd504ce4f00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a9e290-685b-4c55-bc13-c18debe5d884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42249471-c1ff-4d0c-9f16-da6725c69e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03003409-82ff-4d18-8bd7-e3d77af970b1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d28444c-de41-453f-b599-69172a08ec36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902515f7-e4f9-4a8b-8016-9fd3afba4fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05c0ace-64c7-4ada-afc5-bdc0a9aed2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "842bf899-2017-4134-a04c-c7073bb33b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb833798-879c-4149-94fe-1b7d5fef13fe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d7bf0b-0f55-41ad-95ca-12e6ccc31a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0a030c-399a-4a84-a2b5-4f12ec119637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e38e69f-a502-41d5-9795-0306c23176c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bafb7f1-c33f-4ffe-adb4-cad3a54f0c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9f7385-f2ac-4f04-9398-8bebe85c9658",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550e66ed-c9fe-4015-b86f-1cff511017e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32053208-8a78-4b15-9c2c-b923ee95a6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9118edd3-19c0-4501-93bf-e6ec176c2b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67328a62-d6a7-4a0c-b661-5e05243b6cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fd2d0f-a8b2-4e1a-9478-193261cda2ed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc4a42-5b62-4c29-b00c-7401a74c8f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb7d35e-285d-4f51-a81b-9c48aaa14664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6557ba18-4b43-4c24-b49a-08e1e797be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae121852-6bd0-4315-8da1-3f254b184ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c0ee2f-a59c-430c-b7c5-a313ff0b1826",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0fbd4a-7a17-49c5-a98b-83baef53156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8b6f6b-297e-479d-bf1e-29a7b079cc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16035f21-3682-4d71-a133-8184a3a4a6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "86cc774a-2194-4f9b-bf72-f3a8b957a9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29490ef6-0806-4c9a-96b2-7b967070b1b7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c06a3d-34cf-474d-b8e8-dbc37505188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744e3cf0-9052-49fb-be34-c2fb5fbea182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12394a17-d566-4602-983b-7b2c9ad9e727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc35b32-06ae-43c0-a2ca-c6ea51d443a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a8bbd2-cd61-49bb-819e-beefba13cd9a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a94af2-e302-4156-9b3f-c6cb1e4ea33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08aff48-9c29-4881-b069-8b165292af96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c01eb9-9d0a-48cd-bd21-761c85beea95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "246775b1-7fed-4b50-81b2-78e776111dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d782979-e4c2-45a1-9784-f123800f90af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0536c5eb-90db-4d83-aae3-dbb2c5a67cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1a1eb1-a7bc-44a6-a6ae-bd6660aa0a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c0f44e-b410-4f58-94b3-dc659b510192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "733ec872-da49-46c3-8f5b-6d8b333d5829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfa8f9d-4f89-44f2-a9d8-ecb8a98a7a58",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2967da9f-23d2-49a0-9e2b-b93584550b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7a6d6e-f379-4d5d-93dc-7b49bb111c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d29f9a2-f0bf-481e-82ef-70685d78d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6efa76ff-a196-459e-924c-1995ea397092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d1c8ad-4182-4654-9f3b-178940ef3ac8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1da16ba-6719-44e4-8257-cc50ab28fa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024aa0e9-bb9d-4cb0-877e-759be1802ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be63299-ca62-4a01-8ca1-82b8286df0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f886296-e7a8-4dec-8b2c-5b86afd8fbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b4ff4a-b190-4621-a016-b58948d5131d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6fe3b3-09ea-45e6-8438-d62a2b5bd891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c27d20-76a4-4461-b090-392d764fad16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34602d0-d95a-4d11-b487-fc98c3009426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35b2853-5509-4541-860f-3ad7a5bed172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53b02a2-eb22-4e05-8bc8-e4f69e1052f8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f88c2ab-7907-480d-9f8b-d0d678f22642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31d6a0d-5b94-421d-808c-7e13592bed2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bc62c6-1001-43f5-a520-a00eddb16293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d73a34a9-dcaa-41dd-8257-140ff62fcd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c080ec8-1383-456a-a17a-0a66f1030af2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a03412-671a-463f-bbe8-ba21d118600d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5f964a-b8f9-4760-9ad2-a64a82dde929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eada0b-e8ba-4e22-bbce-fd3d4bc6b000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583bf36b-1fe4-44b5-a76c-94a849e10420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e650d9dc-c374-4cd1-b2d3-65db8bf05973",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61040bae-b572-49be-9727-2c52766d4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa58c99-a73e-4b9c-a220-e7e12ed2f8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10360c24-0e4e-4dde-89b6-1957985acbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61d9003-84d4-486c-9bb6-2806664365f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e941db8-cd54-4958-a76b-5567c7273ec8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68562086-cab5-4b31-9fe3-035974659825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce94e60-739c-4d93-9005-25b39c0a3648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381deebd-2336-4aa0-aa9d-89c76b94bd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "087c9f98-947f-4154-bba7-f4a7cc1a0c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a8f801-faa1-4692-bddf-6c98e8197653",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913cfa2d-046c-4573-bfe9-f69e81976cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cc64d9-8398-45b6-b12a-bcb16a1c13a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee694382-c91b-433a-a80f-cff41635e870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d16f5b-64ec-4488-870f-200105b20043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7767a0-81b6-431b-8c54-a1048a1c40d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f70c7e-077a-4085-beff-21104b704f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db795f5-8b80-4c56-9e8b-7748382e6bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cbe5b0-59af-40ad-9214-74ecae08a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4837ea71-9ba5-4232-bb72-d61085921906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4838f817-11fc-4194-b454-7b2587a2bf4c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0305e183-269c-434f-a57a-f3fb9c40cb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d10a00e-e678-4f58-b6d3-e0fd1e262395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4dbf33f-9e5f-43a4-8747-d5b9d16abcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ad630d-fe83-4bb7-9ee6-83ecf474b190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25535feb-ba04-482f-948b-315eb947f5fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211e15e3-137b-4dae-bdd5-330e39d4a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56938261-3b67-4bfc-9c56-dff9f7ab1cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67989e0a-39c0-4dac-8379-de2f1a349a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f06224b-88f3-4de5-a852-d12c493cac58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ad05a0-162a-49f8-9b5c-db7d814a42b4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8184aaca-b9dc-479c-b3d7-e8de80ce7315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd1c118-24a9-493c-83fa-eda024dbd381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdf2183-26bc-46eb-967a-563eb4d82daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfc62c5-4d21-41fd-acd2-ba859c0286f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aea6bb4-4a19-4d65-8d79-00edb66eecdc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8515d1-3165-4d6d-8b8f-d61f3b440c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d569e1e-0366-4eaf-bad4-83fe1a00e29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338e0135-7900-47ab-bf07-23457a396225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00727e18-d2e6-46ef-b82b-08c3d2d8a67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9effd2-fb57-4e8f-b433-71edadcb409d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0c4508-1177-4288-b046-3df504688897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb09980-b09c-4ab3-935d-0f7db8c618e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae98fb8-4f47-40e8-8d7a-c4ff38dc18f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "231fa96e-471a-4766-b07e-87a3fcf197c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34c07a2-c5e2-4665-92c0-895f3f7d5862",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b934fe57-58d8-41ae-8682-0cdfff85d083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a350637a-de99-4de3-8d53-b01a84ac25a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d13899f-22f2-4c75-8ac4-2c2a783a027e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b5ae88-5afa-4a99-b9b6-310e9cb11703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d40805-898c-4226-be64-21de4286c5c1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b5c841-9a93-44b7-ab30-a7de435b1105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d516585-2654-4b5a-87f3-2086f9f2b1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13a334c-9c6c-42ea-be50-2fe59e2b8234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a84c61a-7acb-481c-94f8-3fd22c563c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3067ff2a-c1c7-4171-9b1e-63ddc48c6484",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225ea132-d250-481b-a1bb-52372b47ff70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77649530-8f04-4735-b1e1-fbb20eceb73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b13a939-0944-49b6-81c5-296d896794b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b6802f-7aa1-4dda-b4c1-aec7b027801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24287ad5-7ba4-4cbb-970b-db65c06d508d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad12dcf-19c5-46e7-a975-2566439d844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c121621-19df-4d45-b69e-e70b76b2a0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aa1f44-4fb6-4152-8450-a5aac86e215c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f979f8-6a92-497f-9ae0-6862e8028b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dd8d04-96ad-4641-bc19-19aabda600d6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de291de0-7529-4c61-b68d-a3ef53982503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e7b6e0-6e51-44b9-936c-96382cde7560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8def89ca-1f08-496d-a50c-d58695409f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0123c46-6db5-4cd1-b637-ba377117b6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abac9f29-e9c0-4b40-9d1a-60e010633929",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d787372-54b5-4cce-bcb4-3af6cb374a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc69147-0e8d-4533-bb2c-9f4baa09883a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe230a43-f3b1-462e-b204-549640e51b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae89a10a-ca55-4e24-bd48-873dd28b8355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee0eb6e-82af-4cfe-92d8-24c21e609f8b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa931589-e670-4699-894d-91cd804dc776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ea8f88-1e8f-4ce4-9456-2971267561f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12faa0cf-9491-4fb0-94a0-2441e6403760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c2abca-e7f1-4aea-85f9-f4631bf26e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1d4e07-8d42-430b-ac78-89c8d207ce84",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623a1b98-54f8-43fb-8eac-ff17e1aa1650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb3b155-6d53-4f4c-bd29-2dca89a54f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6450c0d-86c3-476b-bafe-ac6642b64d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fe13fb-6809-48af-be71-fa12ca798bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b069cc2-c77a-4a4e-ae96-d7316b8adb83",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44020101-a5d4-4414-88a8-8933f9218a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025bc743-38af-41cd-b3c9-05d78e0c77b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a131c9-5670-4025-8b77-018d450228da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b035229b-5c43-4459-b3fd-2794ec5364cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8f118cb3-bc30-4d87-ade2-a73fb5ffc84d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77677cb7-f839-4151-abe9-686007390a05",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05c8475-872b-47a9-bf1f-dba78bb4de34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "05c81d97-b4e7-4f8b-b9e3-5732404e8fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0115d6f0-e393-4ba0-8f64-15fec5e6c07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31b043df-6a8b-4751-be7a-e36bed064f25"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e42051d9-2302-4b74-a4af-f495ec84cb33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd85c05a-959c-4dbf-9ab5-439238cdb857"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70e56d4c-cc8d-45df-a051-e81a68d78992",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c75ee791-7a35-40bb-99ae-02e035728017"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ef4625f-116a-4504-9338-390138d678b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e16a6c4-5258-40ab-9ada-75c3bec52ac4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bce9ea7-ae72-446b-9e29-4e1e81d98941",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28bfe552-e811-4c71-ba1f-e3b92edad0aa"
            }
          }
        ]
      },
      {
        "id": "61518a47-5954-4d41-bc62-675524836b89",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "64d998f3-8d33-484e-8f91-50e9ea9a6e7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "735fa02e-0e4e-42ab-aeab-3f16da3b7597",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5db7c2c1-a815-4366-ade5-cd4a5881e139",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644517ab-1bbb-49e8-b479-f28575a40bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf62b69-f102-463b-aeec-9c361f9b74f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f684a628-b857-4b6a-987b-3c4d948fcb25",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87e0fdc-2a48-4584-86c1-631f853a656f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748d752a-890d-45bc-a3d2-13128bc34ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c5dd0e-6417-4520-8db0-9329dac99344",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91380c9-8462-4377-8740-4f3f9bfdecde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0ffe20-8b1d-4e57-aadf-639219d2ac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ba694b-077b-4ca8-97e3-23fb9e566cee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4227b19-2a15-4cdb-974d-e8f943b0fc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73f7d59-d22d-4c2c-9762-4086e619c79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b619f091-451f-4735-a66c-7a94b8d36989",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a42103-9fc5-4579-8c74-25502a0609d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0549c1b5-8b08-4fa5-a565-12522c536ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc4a648-f62f-41c2-a8a5-5e42bb19436f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e322ba-c792-42f2-bb15-d99994be38d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834c9ce8-6c09-48ad-8b37-d06ac49bd6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c267ab-a2f1-422f-8319-1a8a5de2f809",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cb6a9b-9dd9-476f-9457-8cadde5a5c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f27f10-503a-43ad-8714-0f1573dd9be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba6e804-0fef-4968-a3ca-7d3646ea53e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0d1976-7031-4bad-8e5c-54fdafcef005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90f2c18-be4b-421a-b009-9b9fcbe43a67",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d74aea3-c0e5-4eb0-bf1e-af15d466277f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef664e9-0ff5-42d1-97f4-7f7e662d194a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2435e598-35ed-48f8-ac7c-717f4906a9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc445bdc-8ef6-4dd1-9954-1a72f7670390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3101742d-2eb2-4b83-a770-56522624a59f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dc91bf-7633-4b82-85f1-b8587008d4aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6607d4cc-d9fb-4c98-ac74-012624864946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bec48f-85aa-4e0b-b084-b1cb5faabfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9597f3e1-44a9-4c70-89eb-49142e06fb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa710a4-4aa1-4f1c-bc46-788f5d7b9299",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50b77e3-eee5-4e18-8cc5-603df434f5c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce36808-927d-4d26-a857-93fe4fb64577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9efa00-56b8-4821-a214-02985d462232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b73a731-61ed-4e38-8450-7517d476dec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad653090-021d-4c34-8451-c97b162772ad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb97b68d-e656-48ec-ad0b-a9aec2021f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b584d83-5f0d-48c6-9d38-635b8c7e92f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851ab53f-e769-4c33-a119-75306be92895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a350af-5f18-4007-babe-6dde50f1a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb942f2-3557-4b7b-95c5-07f2f9f4c742",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f73e99f-844d-45b6-9aa1-7d3b7344f061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a467aa-c849-4363-b163-7db877fee082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a58a8b1-338d-400e-9149-8ef94418935c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6801d3-74fe-4c4f-b97b-8e042e06aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eee4b5-4040-4d67-a74b-df28f71cbdb3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b521c0-b897-4e2e-bb10-bcd8591c21f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e80304-eec8-4d2d-8fb9-52e9f1783f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5090827e-c92f-45a7-890f-78dad29937bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbac519-22a3-4f27-9420-7cb8359825cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481ae44c-2113-4abf-abaa-3d8cf022bd55",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826ab25a-880c-460f-a89c-0e646483f630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1440c910-3c3f-44e4-a12b-510d172efb54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e602ed-da61-4ff0-8560-15392ce71b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69e448e-779e-4cbf-aa59-f32ca42b90f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482e0102-6231-44e0-b84a-331502cae743",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d813e27-6a0f-4697-8a92-bc66061be862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4d23101-9068-4342-93a5-91ae1e57897b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08454857-65e6-41f8-9a91-5930d71896c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e086a444-f6b4-4e70-92c7-9b4cd75aa6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f501e468-4c40-4e88-b6fc-bf53ed9d46e5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16ce810-dcb5-4cfb-a6b3-c8624e80f3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97d9b7f-2e68-4f73-baf4-c2752f360dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b441eaf3-0322-4e07-a12c-16b40d0b8e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cd0a73-83fd-4250-99f9-e53455277466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d27399-684c-4150-9048-ce155c25bdaf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d028c560-a27a-4674-830f-9fa90a08de4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eb3bf2-f9a7-47f8-875d-1d148cc62300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730ffc9a-f657-43c8-b0bb-c934a5253d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6daf5ac4-f8e1-4a2b-90d4-9cc3009b6f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d407e82-839d-4cad-9ab3-47460ab0af29",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb67804-3fe5-4158-9a7a-e0310698446d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bd0ee0-2d3a-4b47-ac3a-ae7964805b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2efeadf-722b-4266-a738-12a1d83ef4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e7dd81-3cee-4498-8dd3-50e8c4646148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f19dd9-9b13-4b5c-a193-302dcc99c6ef",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc51dce-bb7e-43b5-bb71-f91791357f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1556e10f-6755-4f4e-99b2-b49e7c3e9cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948295a7-b3ce-4891-a0b0-f0dd66bf7d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02fa2d4-3704-431d-aeac-8a8abd0ba5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30389966-53f1-4f86-9605-4a5330cde3e4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b1001c-d77e-4f2a-810a-2c9d424a5838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55791f51-14b0-4bd7-9fde-4bafbabecf94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad7207d-8469-4d2b-9319-0b0463f9ca0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b282401d-d242-46bb-af2e-632570686076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d55b64-ab51-48f3-9080-f5557ccead8f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba395c69-99db-443c-bd28-86e2d9bf1417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b784d319-7c36-4728-bf5b-c36a5dd1be46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bce6087-dea9-4a53-bc73-df69ff7d9994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65300d94-f418-4a0e-be9a-41120186a321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09687fce-fbc2-4bf3-8c52-809a8f4b2d5f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c769b5-1e22-4ef8-aae9-f9dea2d69a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a21e0e1-adb7-42bd-b2fb-39d43c1ffd59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bfbbdb-d2e8-4ae7-82ad-c09718508655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d793bf-45e4-4b2e-8fc5-b5645a6e95ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87b4f6e-4fb5-407b-bc9f-9a2e4e568fd0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075e9a0b-4613-4ecd-b6d6-1a3c282188a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b9c868-8389-46cb-89b1-db99287d9431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd946f7f-2fa4-4336-9194-7d2c36f36bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d842d3-d6b3-4d0d-ad46-64e90593ee0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5305a333-28f9-400e-844d-4ad9fd5be98f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570ce7a9-2d81-4bb5-adec-92b9b98a1f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a7c48e-155a-4e28-9839-64a6b22c7dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40ce674-787c-4161-82b2-b096aa1d0465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b4612e-383f-4dd4-ae0a-3cf257db4349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6fce79-44ff-401e-8b82-12e6530d6c22",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74082854-0cf4-4fe6-9117-270d56669d7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b203448a-8557-4766-9025-c6e5978c438b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713cd55c-4a2e-4152-ba2a-65fa2d00e536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8820cb21-7bff-4ee4-8f59-3e95e5d60c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8a10f5-9f62-41a6-a367-b33e302b05f4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc64138f-045c-4e52-a406-b44e5364cd89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "579c5ad1-09dd-41bd-884b-9f5ba5ab3cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6893e7-265b-4d3b-b7d1-7ceafdf0cc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5a07dc-74a7-49b2-9c50-d21b3da53874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435f6250-8111-447e-bfdc-6705df5dbbdc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84240382-40cd-4bbd-8dd3-e77ac4fd1343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdff0b51-c1cc-4fbb-9e18-378932d64dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19661d9-af42-4472-8534-6c3d027cbbdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7504c34-8e38-4e1b-b2c3-c0578c8257f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3326e25b-15b4-4289-b4f0-5d4c643be6e1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fc4136-df1d-46ce-84de-6f7cde02d4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924fecc3-50c8-481c-8977-f3dd3ae257fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ef5c8f-a17a-4324-b7bf-754499102fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdaab97c-6eb6-4ed7-a29c-9baa4617c8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09891f3e-cb78-4cba-8b0c-c022d4cd9693",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98e700d-8326-4607-8447-3ae3a4edbe67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "649580ec-e712-4519-b703-ed0064eb614f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b198c65-32f2-48a9-aabb-45991e124411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b881b040-9382-43fd-ac2b-501d860d3e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08a4b79-3edf-4314-800c-8ae91777c52b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6511f13f-7a1c-4aab-be4c-7536661954d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4a0d88-0e27-427d-9f1d-c357a461ce02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80032e5-6dea-466e-8020-44b944f65040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69273fa1-2d7b-475d-a91a-fcf02d6adfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d948b27-4f54-4b34-bed8-74d65e0b6ca6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f313fd73-5768-4207-8f38-a171594fd3ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a7c928-fe17-4711-9d1f-452e67e51e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed3af1e-f1b9-443c-adec-b8ccd921353a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2682c939-8f6e-4f40-86ae-81378980a3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4e6461-8a0a-4267-9153-90d28e725148",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3a536-0bdb-48c6-8204-1418937ec1e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b6e975-db05-4b04-9888-944d3b25a4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe101e-1f2d-4def-8ceb-d2e2074acd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6417c757-009a-4cad-9ec4-076df48c7a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9075209a-e6a3-48cf-801b-2bd93fe23137",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa47260-1dd3-4b54-8e73-2aa7eabf05b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689c071e-c8ee-4c6f-9e1c-9ca53c43a3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fef5c4-f510-421a-a4ef-9906f04c1be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e99e76-a7d0-4793-a212-58dc6124e5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc8ca1d-18b3-4caa-84e6-c0c3c9da502c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0eec36a-e34f-4654-82f9-8cd13ff874a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f2e0f1-44ff-400d-8324-38b457177628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0386ac80-66bb-415e-b85f-685435ad1498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f40dc0-ed29-4883-be14-73bc08c880d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cd9828-3d5a-4577-a802-42cf7c3d02ac",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443078f2-85e1-47bb-89f6-bd2bb11e56b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d900fb90-e80f-45bb-92e7-82ee834a9735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07da8319-9c93-4767-b0cb-5e01bf1c7f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416d5d07-d3eb-4e8b-86f9-f12c8a22797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a0d614-ca4a-4bcc-9a45-e9f10a4035ab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d8d748-ba9f-42f9-bed4-85d4a681c0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133d3906-ff5d-49ba-86b6-0a29fa9d4f95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf9403f-58d0-4131-9e6e-da386eb45914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a09738-fa3e-4900-b222-551440b87ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0033ce-08a7-47a1-8989-0556e9c2bb96",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b3978f-79c6-44e4-9ee0-7d582e764a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61daf65f-d60a-4727-9628-77e5e0f7e2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de727105-fd88-4d2c-a4c6-514e583946b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18afcb46-dd2b-497c-b553-605984304097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cb87cb-15c3-4ec6-bcdc-e70e12c0613e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc537ed1-3f09-4ad6-a2ef-d072aa55e8f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d861316e-b96b-475d-9e6f-0e6d84c0622b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e7cb52-1541-43f0-8111-7eb67761ae28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86e16ca-b705-409f-a340-1eb7d11fddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9749d1-c370-46ad-80f1-957ae83d9efa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd200ea1-16e4-468c-87eb-169aadfd84db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa336ed-6fec-4b90-9f4c-aa1e85623228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3a71f0-3c95-4275-90bc-872b46c9f685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c25320-5436-49d9-b133-ae3bf482c4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c39089-b7e7-4026-8844-eef25e6d4b4a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129f831e-a9bc-4a94-9610-e3908c621d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056e0309-c342-484c-bfb9-bc0ed5ea6e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef02a01b-b590-46ef-87fb-655cc4793825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b7ace2-6f96-480a-a93e-2c059458bc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7746778-def0-4829-a5bf-afb389e7bee3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e89194-a513-4a18-a4bb-69de9f94d1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7244cb8d-5434-4de9-846b-8c48aba887a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f609e81b-3bd9-4f1b-aeaf-6ca2089dc5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed8fa04-e3a7-4564-8285-da069dc31c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beead68-505c-45d2-ba4f-420198d99e71",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7574effc-8a0c-4033-a10d-0f79d70d3477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3ee9fa-80eb-499f-b882-3a6202f1ec01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f76abf-54fd-4034-bc3b-221bbf777bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83859241-49ce-4c15-b18d-71a4a497898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8932ea-eddb-47ce-bc61-162f5d77cba6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9c20c0-9116-4765-8e47-85454643bfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91192ad6-de4c-4a87-85ec-1829a83c910b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9666ce-6038-4993-a587-46969e2f289b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3744d4b3-7041-4ffc-9ac1-815262fe948d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cb89b3-993b-4b65-8977-eeb824d5214f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03896560-f4a4-4e75-843a-e1df92b73e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2941cbe-7b80-4e96-a909-677d5afb243c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c024acfc-4b11-437d-b0f6-2996de1dd3c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669162d3-9963-434b-9d51-21627cf49d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f6e0a8-317f-4e69-a726-cf5ca6323ecd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f61c05b-f2f9-48b7-a132-c72d85ba9256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fad630-f263-47eb-bba9-20ec7e8dcb48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dfb105-1739-4086-ba19-fbab802115fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a188d2-7bb2-4db7-939c-e5d223cc6049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbcf72c-49d1-4c1b-934c-dcf51862ee01",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be7343c-9c9b-4690-80a6-1c03478eba8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b119747f-45bb-4728-8890-6dd8a66d7ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a045b5-b073-4a51-97d9-ee7f0ddd165c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8844a717-5fb1-42ec-939b-7edb1efab6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48a7f85-7e2c-44ad-afc1-01175cb5c35c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d88404-7103-46fb-8a0b-c3a78728e9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4949dc5-a99a-452d-adb3-f39b6167b974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c1cca-6058-47f3-b197-cbf067402f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fecb38-4346-46b9-a741-cbad0908aa8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c7d0ca-1f80-43bb-b1db-77a4137c9e62",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00316c0-60f6-4d68-9a76-89d1764d8892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0b799c-ba28-40b4-afd4-4f8e005d8a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e76ac16-3a6f-49dd-aace-0037a8555ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cc7fa4-5d78-41c6-b5dd-81d12fbba409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f2485a-37df-4fb9-a90a-043a995f8de4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746b1222-c1aa-4790-8f7e-f906ce915b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e5bd98-8aee-4a43-a70a-cdbc8dbdde80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0852d121-e0d1-48be-b946-de01ba52ef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29bbdd9-5f6e-47c5-8654-ba042f2c5280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0248560-e21f-4705-9700-de2405c885a6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc618a14-0283-43eb-a9a6-b00d538fd323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b687aa8d-734b-4288-97a0-9d25cc5e2852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c517c205-5e08-4ebd-9e39-9a8e3a1b8ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cf0caa-424b-4c96-b2fc-04ebb71660b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1eac593-4fda-4521-9f98-6a2cd0445152",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a0995b-0ff8-4444-acef-7324e01c1ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0044b0-d7c1-46eb-a719-2f3f93ee88b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909335ab-38d1-4aa9-89cb-5a04b88c9623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558c976b-96ed-4a2a-be60-0eba639ee3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4d692f-bb8b-40e9-b8a8-efd8e682d3a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e413da28-17d0-4ab3-b3f1-80c0abbd3b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316d790d-0c66-4036-80bc-a267e122f5b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b83e6-7678-4816-ad35-066459bb7be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154c6e50-5914-4e10-bee3-dc1d18d5e3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491f7e30-4fdf-4f22-8145-281660d017c7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7367b467-e8e7-4e06-a0ca-0bd6989e68d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d20472-3ba0-4020-aac6-f3d198d18b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c05d4e-c9bb-4919-9ae0-bbaea23e8db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fc0d54-d135-4e93-bcad-7510c444fe2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ffe069-f978-49f7-afc4-428f50a00d42",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbd0d15-84f9-4414-a584-1bfe111b184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f23189-022e-4406-a5ae-479dd9a2e985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c9e6f4-a92f-4a20-9fdd-0547c3a62e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3dc41b-47a9-4546-955d-00aa785b2852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d111ac87-867e-43c4-b288-8f47d32dcb4b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c9e0c8-4a48-43ba-86f4-b31531823af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f698a77a-7d1a-4766-9daa-c465489b61cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da15cdcc-2b42-4b63-83fe-528d330412f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd8470c-031f-4b56-ba23-a7e455a54020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287b46c3-51cf-4e30-9ef3-d3065a94695d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718ca391-33fd-4790-ad1b-555acc5ea173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1660fb2d-b46d-40aa-a45a-456c639bf855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8ed017-b90e-4f27-bc38-92e79ff13ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4a0def-3265-4ba2-b540-968b39b8d6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ff8b0a-2042-41c3-b8fe-e0c26c725e3e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e763b04c-5f4f-49a6-a24b-054728c106a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61a7e8d-3e67-4277-b3f1-00695b52f833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d845b005-1b7d-4af1-b249-40cb66bd95cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db24a1cf-9c8c-4d09-b916-1d67634186a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf230a83-d3b1-4c90-bf82-d3447edf667f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d480cfa-2c2a-4203-9ab8-d1f5f2249c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12744ad-32ef-4a9e-8978-9d52fe28c88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f662588c-453b-47eb-8d5f-617e4ecbb8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6ddeb0-43a5-40f9-8a3d-2deaf09c1709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ec6d2b-409f-4f49-a1c9-ad21dc3c17e0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a1c306-5534-485a-87a6-78758d628712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240b7849-766c-494b-9edc-af4c3a8257dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42dd429-e07d-443c-b0eb-8e9bc9ffc326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d2f7e3-132b-47bc-83f3-34bd57c0d82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb814c4-5c34-4516-b384-b7b6e43b1e07",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc7f68b-f51e-43cc-a5b5-40f2723a3894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd7389e-005a-42e9-bbde-e257f90d3057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d9c3dc-570f-4a17-a36f-83e70b99247e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fc8513-8569-4d01-a0a3-72155a73bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8b1812-e514-4ca8-a5a6-3462cae894d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f422436a-2710-4049-8e18-5d0f981d392c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810bcd18-af78-4b31-b156-d05fb1701552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c390d090-ad46-4fd4-b6aa-0910272c03a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a08d476-6b6b-4744-a692-a06d506b54a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02eda41-e648-4fb0-8a5c-94128f09940d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11767def-0acf-4d50-8661-af04c2f4991b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec78181-1544-4292-ae79-31361a43c243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9423b126-bdda-4c3e-8440-2ee3858287ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19336280-1035-44aa-aaf3-a176c06c5ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeec5db-ddb6-4de8-90c9-5e853ba7f533",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a266df4-cea6-441a-b833-f00cbec9a160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e6a3d9-6a15-4ca0-984a-2e8d69ef3a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2700b4b-48d7-4482-868c-075465102797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b972f9-d56a-42a7-beff-ecf7e141854a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fcc78e-214a-4eea-88be-21e3497f23d9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30964d8a-cb0a-44f7-a297-81f5c792586a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71011f08-18aa-44a1-8164-b9611c0b1199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e47660-aa93-4a07-bd72-c60ebe73092a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa6ad61-fd7a-4531-9c2f-3a8b11c593e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b3b81f-8361-4e08-8c25-480c38e32bc7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae61e4f-73f9-4e23-8607-7ea1aff510a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded23648-e582-4e43-9f31-5133b8f48145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9874d8-883c-4803-9907-664c0763ff4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e320baeb-a777-4c4a-ae70-c161e0fcdada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff33903d-90ea-4880-acff-d53a143ee9d5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bd646f-91d5-437c-ab06-a3982100e2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe4e058-61b0-4bec-bee2-e591d0e59651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fb94f4-419b-49bd-be60-8d41308ab98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6dd985d-70c4-4ee8-9536-357802f518f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbfcc44-01d5-4bd0-adf5-1f509c359124",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2959bfe-6a49-4c74-a28c-b0bdbb872b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54196e52-c717-495e-9f01-475e8840d226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d62464-a65b-41ce-8f65-1a474974fe52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23696eac-4f0e-46e0-b1be-764c2b7b4a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0352f115-1d05-4259-9bae-5b5ce87b9f32",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3de2e8b-96bb-4ec9-b597-46631836f554",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d85f94a-fa11-4d81-bebd-e189aa2d5db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c46ef4-c917-4604-b277-a9fd8d331a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895b65fd-ffec-45bd-82a4-fd93392ead98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176937b1-363d-4bbc-b028-572a621a9ff5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0abb7d-a309-4aec-a48d-65a0688f6d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d13236c2-72e4-4a6f-8bcd-49d6ec3269b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39819ec-774b-4414-a271-f9e22211f033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397b8284-5ed7-4923-9610-78adc67b0eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bcb13a-8579-4056-8b38-a4a32867ad2e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d32e373-08a1-4b66-9b70-09ee5b1f800b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7780936-3ffc-4377-bf19-5c0b573c79d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac341b48-eea5-436d-a19b-4dc9cc269022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573aea78-0e48-4a57-8d98-9c55ac099b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dc3956-0a30-490c-8fdc-f8f7f934a5b7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7030caba-564b-4436-8d5c-5828c853bc0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102ff2b7-9b0b-4cd7-b039-e388ddbf0a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480ba518-a559-455a-a353-fad0e2ff3140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90b7c8c-1ec8-48bc-80a0-b61b676d91e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487df001-5f18-4061-9d34-85a049b12147",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f079eb9c-de2c-4ebf-87ff-84168438467e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7cd5e7-d71e-4b1f-8540-0a2c6d8c2c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bd45d9-a39e-4e9b-b226-041685dc6e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba725be4-9192-4800-9f8b-2b02e00c91df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de867af-cccd-43b1-8b03-290939a6c4b2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9737016-6efe-4227-aec7-443cec9af16e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ff6d1a-b08a-463f-8f97-bfd7c46ec083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9448a45d-3e56-49ec-abb7-9ccea783a09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ec9f63-f4e4-479f-974a-e5f154275f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840c5d17-95a1-4777-911a-0568c36d2373",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c2ba5a-9870-424a-9d83-c31a1ab867fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9918f227-bcfa-445b-a059-e1b9dc045b0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40329821-52bf-45f4-9227-658b77da6739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda4091f-9366-4747-8631-fcbc1e1e3a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186036b5-13d6-4072-b852-1920041d7f18",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd409931-11fd-457d-a278-fbe5c0b59eb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3e2943a-3d97-4312-891d-9f77d3e571fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc243e2-6a8c-44e5-871c-14b76263a339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3e4941-9fb4-47bb-8631-cd154790c63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a066b7f7-01c4-43bb-afb4-d18f74368427",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a187d548-53d8-48f0-93b5-f0ae841cd7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8059300-460d-4696-9b5c-12f7b5ccf2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee26c987-d37d-4141-ae37-c79f0a7f8200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a653cc5-a085-4b73-abfd-1297aeec279d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd68b6e-e459-4f85-9fe2-ea1aec77e49b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa30374-3b7f-4856-af0c-ecaf543f849c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8a7dbd-daf7-4e4c-85c6-6833795ea2a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66aae03e-9dd0-40ea-9769-76dbe541eb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21026d4f-3b4d-4d73-bf46-b37ba151e838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f052886-456e-4d93-948d-be453be58179",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41a5a6e-7c6e-41c5-8bd0-d580f547c973",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3928e31d-c406-4ff5-a874-d83c4354571d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6652ee-2b51-4e3b-be25-134a0c74507a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875c314f-5421-4491-9612-a2134e65ffad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca4e490-61e1-4107-9cca-2dba6b9ff3bc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769bd25d-f70c-4c95-8659-6a795a6b6906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9662f729-36ed-4d4f-9ecb-bd585cc1fff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0423c87f-4526-49ad-a1c3-8fbe4a9c2f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa8b27a-12ae-49e2-adc1-ab0eebfe6777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64fd527-bc01-4d93-a260-e10627a7480a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811242d8-5601-4dba-81cf-610f76f57785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f39d4eae-2e21-40e6-9ead-576fda126559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e44547-bee7-48e8-b86b-6d86ed7219ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00be8d31-ee89-419a-b2a8-b23b1aaaa47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17547226-2918-4431-87ad-31eeb075ce89",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95ae252-5a7a-4550-892c-c3c1eaa38acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7628c347-f460-4a58-a4d7-30983944b3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997cbb2c-645a-4278-8fdb-b87ff757f33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19518ac5-ca57-4c74-9644-21f6ce71f089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41000d5-2726-45d2-8e59-f7b53f6b33e7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4b4245-7bbc-4c36-a91e-4a2898a55da6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82bc611d-c56d-4ef7-88b5-3656c48226b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4d0698-976a-424e-911a-77d5d0e6c29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2526f8-7e3e-443e-9db3-a62d85291024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9669d34-1523-4620-8d02-06a619086200",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363b8eab-45b3-41e5-b32e-2ee81f2d0243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a254418f-5135-4d8f-a12b-21dd16e12857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c18f96-6fc8-4b7d-8f86-5f0b445ebc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13e4595-adb1-461b-81f6-ae3c6fe1e9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784bb331-2682-4535-bf34-682d8fe18b8b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc97ce7-0669-4c32-bc8b-7ec1fd5deaf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9aae4df-c6a7-4e70-928c-ac23db9a9a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef09622b-869c-47fa-ada5-37b290bd287a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ea1a76-0fea-4363-a379-a063a4fc5bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f5faef-99de-4df7-bd7a-ad2d245147d5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad22066f-95d3-4cde-a679-a182f2273da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4538cb-554a-41e0-a351-218c94ef4afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b356405-eeb2-4014-8ffc-9bbdb1dc9411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f60480-3dd0-4a77-9baf-aec6c8bdaf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd123aa7-f5e9-45f8-9744-afcd6624515b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca44124-e97c-42ad-b9bf-8d56c3d13ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32bdbca1-a951-4ee9-8b52-a800f0810a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b841dac9-8c15-478d-9fb4-4abda912c724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a70b6a4-9a47-4dab-bf94-c43143745883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f33a94b-615d-4237-b47f-bed830f85141",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa9d12c-6b20-430d-8d98-8a783c6ba541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28511e4-90f4-4a55-9f56-a2352575455a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ed44b1-55fc-4817-bc8b-d3bf44719a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad8d0b5-2848-48e3-acf4-24a86b6300ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da516c-281b-4bab-ba34-a950bf48a561",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93f7480-10af-47cc-affe-4d3aced4e86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c305d0b-9f84-4a9d-b4a4-12007d98bf38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36c9e63-e37f-43f4-8574-0c67d0f2fa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584f7e87-102f-4243-a0ce-f9248f921b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82149248-3942-466e-8cc1-7888320f3a62",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9979b32d-5572-467a-8f22-819f8aac0fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e784d20-6f4a-4c24-960f-fd268eed0d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e86ad4c-66ea-424b-aa0b-491ed3608e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68952f7f-ce6a-4678-9ca7-b4c08d724851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f0b140-50e4-4e5b-ab07-858d89717ac4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1d0606-d4a2-402a-97df-b0a902907a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7117a9d-c240-4a9c-9249-2e5c1592ec87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8160525-5b03-40ce-8dcf-92fd31226cec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2132f8d9-57bd-41e6-899e-b912c52f4113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59d953b-79b0-471c-aa50-cf53dda4f51c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7601a-3efc-4239-891a-95c704878091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbcb8140-46c7-4789-9d5c-80b4f29d0ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e150850-0041-43c5-93a9-b75c0591f300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2801bba-074e-41d5-8c25-02471dd67b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a33971-776f-4051-bec7-b94714687929",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dbcda3-1567-4e91-91cb-fbccab38d6c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f600484a-5ac9-4802-930c-664e96ad0d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73da17f1-bbfd-4429-85d4-6123c29781be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18337de4-2ef2-4644-b337-de0585dbb0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac615f06-87ad-436e-b424-50917aa48b77",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4830b7d3-f9c6-4cbf-9394-157458233c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bcf7e98-5dc1-4dc8-92ad-f7854e5925d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba1ade9-5284-4741-9bbd-c0ff94cf1474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1aa2466-7913-492b-99e0-0cc1ad3c9205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc85793d-85dd-4def-a856-ce999d5d79b6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af29d6a3-eb9b-4b79-9a47-ae730356880f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244d1ada-b7e1-4171-b533-601daa21fd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c539b053-0346-45bf-926d-ec118e8ebd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7aa545-cacb-413f-be0e-368cc754e3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb17df1-b617-4a3e-97bc-7686dce545a8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfc2a60-970b-4176-9935-5ffba04dd7db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3e88d5-b3bd-4481-afdb-408ec4228010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5950c5-cf05-43c4-b6ac-561028f9fc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414f736e-3dd3-46f9-bc4e-5206b0b61020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c384e7f1-edb2-4d7b-83aa-7862181a7e87",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a161ad-9fcc-4811-af6f-af036bd4f928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d087249-0de5-4fb1-969d-810c74da84b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8828c855-7089-4ba4-a206-329620df075b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a09aed2-df8f-4589-87d2-f48d1327368d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b66653-9183-4596-8e97-89c784289450",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f432af99-95d6-4af9-9ba9-ca562ebbbe76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef66c95-0aa5-4fb9-8570-0ad907b7d3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad73722b-dde4-4dda-925b-20c421cc56f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b06dfda7-df8b-40b8-97f0-5fd508fd3089"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a816bb7e-baf9-46f6-8323-d11ccdab4060",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3294eca-7e78-45f3-86a2-c1eccee750bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "290d1a24-9e29-464d-905f-6714871014d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42b71582-0c51-49ab-a3af-29c77469d7ad"
                    }
                  }
                ]
              },
              {
                "id": "6f65ec98-935f-4d89-b3cb-d4114a0454c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f9fe981-3d75-4f1e-947e-99eaa2ab6730",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f142074-76c2-4cf8-888c-c1ae8cc6ad59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ac7c81be-40b0-46e4-adbf-ae38351af8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b017227-71dd-4256-9357-00d9518d77a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a458132-1db6-42a0-96e4-04df4a05fb86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b554c20-328f-4cc4-bd1d-82e71b741fcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e8755a0-98b2-4e5e-95fb-d3ad8faa3476"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcfedc72-607b-484b-ad4c-b6c04676c389",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "109fe96d-6904-4ee1-bd66-da0b0ef1aaec"
                    }
                  }
                ]
              },
              {
                "id": "e46507c9-5304-4577-a71e-8d20570254a2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dd33838e-e402-4735-acbb-7f248bb6aa33",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9edf695-1b9b-43a2-b73d-4cbf21275833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6c52978a-e1a8-452c-b3d8-57f5c825103f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27333bd9-973f-4dce-9374-6b5c488f6765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220853d1-646e-42e8-be50-90a3f81254f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eb4411d8-fa81-43b6-831c-46af3ecd3d45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9206187-33c9-46d0-8b6c-96f8540b6674",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2fe7347-8017-45ce-9598-2768945521b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8cbcd36-cad8-4e1e-8580-72351be5f03d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a191e59-8f83-47d2-b260-2b8890b0a10a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51084a72-a660-440f-a828-3324251b0269"
                    }
                  }
                ]
              },
              {
                "id": "e3df93d8-bab5-4114-a3ed-b5b41e0b0c7c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60381953-f3be-43e1-b850-1980dcee4c2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b63656e7-2165-4ff0-8e34-ad5850e0d577"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb6c6dea-da4c-4623-8451-ca2b18bc6da7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eaeef39-e7f7-4706-bd91-26fc4b84b56d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f763ab0-764b-4cd0-a1b7-8faee9b1b00c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5ab6202c-a5e5-487f-a171-9084b6727052"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7470e9cf-55ec-4c64-be7a-f8cf25b16e09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12840023-4f6a-4701-bc8c-bc93cee03e75"
            }
          }
        ]
      },
      {
        "id": "d229de43-1e3f-40d6-be75-247e08d773a6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "22c10ebe-2a3d-492c-95ed-65bd9f050227",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a46cd426-982d-47f6-8a08-641293de689a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e79a191-dafb-4cdc-b520-84c916db1674",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d185fb-6701-45cc-8401-a13ebdc17b14",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fdbf0709-3e78-4243-9ffd-e15ae7bbf600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279e5771-9bdd-4ed3-a8ed-9bbe08695b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24e43eae-1e21-4fc1-941f-29ce09fff6d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf11e1f9-5ebf-474e-ba2c-d2c601b314a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27394170-a6ce-48c7-8508-51fa8564b469"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8a69174-ee98-4d73-b5a7-9cf0f91aa85a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e90b4cdb-730e-4fd3-b0e8-53693812ac25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ece4d96a-d499-48b9-9be0-1bdf9bf4141c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "248945b2-041d-4d4c-b1d9-c80de250c09b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "946cd5a8-f841-48e7-800b-9f1f20d81bd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c02cc15f-a3a1-42e8-a778-f7edb4016a83"
            }
          }
        ]
      },
      {
        "id": "c0e08a6d-1d21-4420-85e0-570d6354c519",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d8978945-1e3b-4910-b477-c27528410a3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf72393b-c01e-4c07-ab3a-30b1b8c6db41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba6e66d7-459a-450e-80cb-bd693aba8197",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada4f5cf-14d4-48c0-aa82-fb9e2c777a09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d149914e-d6f8-4e1c-bfbc-dac491da1227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d31d0f-ecb5-417b-8961-950a312908fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c5f5116-9ea6-4524-a46a-4fda4e188161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e6bd256-7e65-419b-9290-20af252483d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "168565ff-748a-4199-833f-91cfaac5b15b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4814ee51-a995-4ebe-91ea-3d12ff852bb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14348ffe-a1a2-4696-a4c5-9b49eb213a91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9129f1c9-2be0-43a1-afed-2dd4dfc91e40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8768a80-94e6-4160-af03-392809e1cbcd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "565572f1-8c02-423a-b1cd-5d2520a8d156",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c76b12f2-3a87-49af-928c-c584c1c16987"
            }
          }
        ]
      },
      {
        "id": "b33d1c36-378b-4a78-9e84-66135b53dc12",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "de6fdfcf-73c9-40c3-a5df-4578a2d46f2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d447e17c-4df3-4c00-99d1-21b9f8994996",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a46fb650-59c1-4efe-b599-2cf4bd0f4032",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbee528-27ae-4347-91cf-ec2924696191",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ad1b21f-5ce8-4864-84cc-48c7f5b9b23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93265a1-67dc-4dbb-a1e1-4e3239a5d0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20080942-43d5-493a-84e0-e74b2a252893"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de230830-d963-4e8d-ae41-2580f4c780ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fef8b445-e75d-45b9-87e6-8278464e9b55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae36c9ce-ab09-4fb9-b48e-597a0538eab9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c0188c2-aa84-41a9-9b77-447cc43969a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12e7dc3f-0db7-47a2-b0ca-95761c174e30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9b47947-802f-4f27-90ad-5861219c6455"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7228da1a-28f7-4c8c-b921-e45a38cee338",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "121d8ec8-10ae-47b7-95be-13d42b7b656c"
            }
          }
        ]
      },
      {
        "id": "5c733a43-c559-4063-b268-61de99e6e7f9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92cebfae-6415-4ffc-ad06-7f112059799d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d485ac3-23cf-4ee4-be5e-96c9c5da6c89",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1113871a-fd66-4f2e-bc07-6a1a5e401001",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "196015a4-ef0b-4fe7-a9ea-bb2fe709c85b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9d860fc-0ba1-45bb-8eac-d265c33bd231",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 214.83450704225362,
      "responseMin": 6,
      "responseMax": 6586,
      "responseSd": 418.89745132282286,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689813696539,
      "completed": 1689813769476
    },
    "executions": [
      {
        "id": "11077432-706d-41dc-ad65-68812de55527",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bd4e9062-6fb9-4411-a946-8e06e3d93fb2",
          "httpRequestId": "97f439a9-65ae-4da6-a486-b561962421f7"
        },
        "item": {
          "id": "11077432-706d-41dc-ad65-68812de55527",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "564351c9-9df9-412f-befc-a4b5c379a10e",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "3a6a8d1d-c2be-410f-a6c1-f1cbe9371492",
        "cursor": {
          "ref": "74f68c08-f125-4bf5-8e39-8ad5314a9aa5",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cc3d7586-d536-4054-a41d-35874cdb6967"
        },
        "item": {
          "id": "3a6a8d1d-c2be-410f-a6c1-f1cbe9371492",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "06948e8f-f00f-44a5-a145-667ba56f86a6",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "4fd720a1-3fb5-4f9f-92ad-92bd4b08b4da",
        "cursor": {
          "ref": "95a9c4a2-9e2a-47ac-991f-d636d15e3eb6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "25eeb763-e22f-4401-b299-d19252355413"
        },
        "item": {
          "id": "4fd720a1-3fb5-4f9f-92ad-92bd4b08b4da",
          "name": "did_json"
        },
        "response": {
          "id": "a7f030a6-857e-4f63-990f-1be11e50b75e",
          "status": "OK",
          "code": 200,
          "responseTime": 1183,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe81aa6-197b-4b78-96f7-808c3543df88",
        "cursor": {
          "ref": "4954a0d3-44a1-45f8-8487-a0f275f900ef",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2f45c4e5-b2ed-4b59-b3e2-83e4a98b49b8"
        },
        "item": {
          "id": "9fe81aa6-197b-4b78-96f7-808c3543df88",
          "name": "did:invalid"
        },
        "response": {
          "id": "f053459c-a185-475e-9522-000939ffa2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe81aa6-197b-4b78-96f7-808c3543df88",
        "cursor": {
          "ref": "4954a0d3-44a1-45f8-8487-a0f275f900ef",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2f45c4e5-b2ed-4b59-b3e2-83e4a98b49b8"
        },
        "item": {
          "id": "9fe81aa6-197b-4b78-96f7-808c3543df88",
          "name": "did:invalid"
        },
        "response": {
          "id": "f053459c-a185-475e-9522-000939ffa2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b013e68-e552-42f1-ba7e-292ba20e994f",
        "cursor": {
          "ref": "1cb38f54-c7a0-4a4a-9ace-64d34da945f3",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1b5a4b8e-a0a7-460c-9990-951e6a86b37c"
        },
        "item": {
          "id": "1b013e68-e552-42f1-ba7e-292ba20e994f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "81d8f088-c703-4052-a9bf-c84a6262b78e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 326,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faef30b-9600-4363-812d-aee4767a9fcd",
        "cursor": {
          "ref": "ecf9b03d-683b-4f35-a767-f71fa8ddfb4e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09b1609c-39a4-408a-8e0e-15e095ee1f12"
        },
        "item": {
          "id": "7faef30b-9600-4363-812d-aee4767a9fcd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1752d8da-d2ed-4cff-8ecc-63e819982cad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 361,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f80002-2b89-42da-af08-b860ba8c1487",
        "cursor": {
          "ref": "3cf90981-5590-48cd-b9a5-ecb7b8f5f4fa",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "49e5767f-428f-4ca0-a44a-6190af8dcf96"
        },
        "item": {
          "id": "52f80002-2b89-42da-af08-b860ba8c1487",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6f0fb3ec-26ef-4b83-b3d2-0a12b29d6764",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469dc45b-d27a-4a6c-a037-7b21c3ad47d2",
        "cursor": {
          "ref": "b0d3bc56-2ef8-4b51-a2ea-03193949efb8",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3b0f3195-1089-4c99-9e23-84558e8320d6"
        },
        "item": {
          "id": "469dc45b-d27a-4a6c-a037-7b21c3ad47d2",
          "name": "identifiers"
        },
        "response": {
          "id": "3d22c4dd-1636-459b-a3aa-92f5c9eb825e",
          "status": "OK",
          "code": 200,
          "responseTime": 1198,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc91d5b-eeeb-4c4e-bc5f-32b9ae650346",
        "cursor": {
          "ref": "e298081b-aac9-4430-954f-109e6ed86d69",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "807b62ca-257e-44ef-b7e6-9b17cc1b0cee"
        },
        "item": {
          "id": "ccc91d5b-eeeb-4c4e-bc5f-32b9ae650346",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f8592961-a288-41a0-9ff0-a8f9872443da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5d051e-a1fe-42de-b1f2-39879a1979ac",
        "cursor": {
          "ref": "3a404599-b5ae-4048-9600-e4a04d068e8a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ea73e6c8-6612-48e8-a853-e505893f2b72"
        },
        "item": {
          "id": "7d5d051e-a1fe-42de-b1f2-39879a1979ac",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "87966c85-ea4a-4e23-afd4-9da058c572e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8553e9-5195-4215-ada1-2336d4fce5a1",
        "cursor": {
          "ref": "3e898cdb-7833-452d-8775-25620573543a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2cbfa078-5d60-4244-a67d-3cb0da4aa74a"
        },
        "item": {
          "id": "bd8553e9-5195-4215-ada1-2336d4fce5a1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c332d2ab-2e0b-4e68-95e5-78221e13a93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5238c2bb-708f-4192-8857-bce76b2f0ba6",
        "cursor": {
          "ref": "29956e17-ad22-402a-b327-fbe359612143",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "24f565c5-233d-4d1b-94d4-a3c5177004b8"
        },
        "item": {
          "id": "5238c2bb-708f-4192-8857-bce76b2f0ba6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cf3cde48-c3c0-4745-926b-7e46bd497c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37b537a-30e9-4516-bd53-78f94a23f37c",
        "cursor": {
          "ref": "a6da5a84-3afb-42d4-a307-a8b288056b90",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b969bb0e-f805-48dd-930d-d6a9293da6f9"
        },
        "item": {
          "id": "c37b537a-30e9-4516-bd53-78f94a23f37c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "18ca236c-18d6-470b-90b2-2e89158d0ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53190946-6eb6-4801-a0a9-467066cb1406",
        "cursor": {
          "ref": "f12571d7-071a-477f-87ee-a56a6f94ab91",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6d568cc3-fad4-4a81-b65b-fc5d264a1da2"
        },
        "item": {
          "id": "53190946-6eb6-4801-a0a9-467066cb1406",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "26d7e80e-29e9-433d-9c26-d9b2f393219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efeb8c29-0126-4030-a613-8f24a2c15aaa",
        "cursor": {
          "ref": "544aa2f7-9e93-4d0d-a557-4435a45415c8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8de9dcd4-ed28-4fbc-8f2a-a12acbc9f0ea"
        },
        "item": {
          "id": "efeb8c29-0126-4030-a613-8f24a2c15aaa",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "324ac2bd-bf1c-46f1-9a52-eb93f4821eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd60b98-b66d-4aa4-aa29-9604b604af41",
        "cursor": {
          "ref": "945af5b8-7d9c-40cb-b465-b1f7202dbb0a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1a143ff7-3e00-45c4-b21a-7e866320d085"
        },
        "item": {
          "id": "cdd60b98-b66d-4aa4-aa29-9604b604af41",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7b5efc17-12f6-4b87-a248-24e0f1a87180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed7b007-3963-4875-9aab-dd50db050ee4",
        "cursor": {
          "ref": "728d49d6-d89b-4a29-97c3-cfbc89656a57",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c09a68c3-398a-46ba-9fc1-3508722942bd"
        },
        "item": {
          "id": "fed7b007-3963-4875-9aab-dd50db050ee4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "96527c0b-0bc6-4b47-a9db-f47a25774b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d3cca0-7490-475c-8791-7bc52a876c78",
        "cursor": {
          "ref": "1f62c265-08a6-4a7b-bdfd-8d1ca190435e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "74ebbf22-007d-4b12-aab9-bce224d5b063"
        },
        "item": {
          "id": "17d3cca0-7490-475c-8791-7bc52a876c78",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2da4640f-763a-4dcb-9e55-f3d88c5788c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3cea08-1b1d-40c8-9af0-8794e317d939",
        "cursor": {
          "ref": "d1178351-e108-4367-8703-8c1597509bfd",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ede259f1-64b3-4641-99a9-4baed237d6da"
        },
        "item": {
          "id": "8f3cea08-1b1d-40c8-9af0-8794e317d939",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "48f90e62-8903-48a9-9c1c-1feec078358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f610bcb-d699-4ed4-b609-51b44ebb6218",
        "cursor": {
          "ref": "e62258b6-7b2c-4da8-ae9a-36d6ad09984b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6d7f2118-f701-4f94-9683-ca442057fb44"
        },
        "item": {
          "id": "8f610bcb-d699-4ed4-b609-51b44ebb6218",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7f119698-f0f0-4690-b3ff-74bbe3d60639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22760b3e-8cb9-4d4a-b2f1-16eeae4a09c1",
        "cursor": {
          "ref": "96c87802-b760-49e6-8aea-90e5cd0aa67d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5d3d4327-6034-47bc-b1d2-c0bcbc93c8f2"
        },
        "item": {
          "id": "22760b3e-8cb9-4d4a-b2f1-16eeae4a09c1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "18d50036-eef4-47d7-b875-8aeaa4bb86b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5726dc-a972-48e2-830d-fc39ee9a3ad9",
        "cursor": {
          "ref": "cc9085cb-f9e3-4c3e-b58a-3f4f5b1ee1b2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cda0a4cc-3c33-4a8f-95a5-42ce43ab39cb"
        },
        "item": {
          "id": "df5726dc-a972-48e2-830d-fc39ee9a3ad9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2227988a-9220-4e5a-bb3f-e2964bbabfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d68d7a-74a7-4bad-85d0-65ca083d39f9",
        "cursor": {
          "ref": "5c6936da-30e4-436d-865c-e4ebb80675c0",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5849cfc2-995c-4573-9b2f-ca7f7e59535f"
        },
        "item": {
          "id": "78d68d7a-74a7-4bad-85d0-65ca083d39f9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "945015d0-9f29-4389-9185-c46ab5b893cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b6dafc-92b1-4385-9203-c5c46511b515",
        "cursor": {
          "ref": "6276326a-fd48-4320-8395-ed4a720f42f8",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c0aa59aa-db53-4ea4-bfca-6bfe2dc63bc3"
        },
        "item": {
          "id": "a9b6dafc-92b1-4385-9203-c5c46511b515",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "efaf00fb-6e3e-452c-bba7-196021456dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbb2a45-e6b3-41a4-bbd5-63ca5e1b9437",
        "cursor": {
          "ref": "f862d753-2c88-4371-88cb-b0f29800c4f3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5a9e7096-3fe4-47a0-a24a-69473d403394"
        },
        "item": {
          "id": "ccbb2a45-e6b3-41a4-bbd5-63ca5e1b9437",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4224d9a9-f1ef-493e-a6e6-a7db48b85766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ff09cc-4a4d-4689-bf68-2335e453b09f",
        "cursor": {
          "ref": "e37d38b8-7d2b-468a-b0b6-48f7760f2363",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5f032a6b-58f9-4d45-8339-85b9e024f060"
        },
        "item": {
          "id": "e6ff09cc-4a4d-4689-bf68-2335e453b09f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b978bfe4-6277-401e-91c9-5975fde24008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aadce7-8edb-4e77-9b62-efd9d3d14525",
        "cursor": {
          "ref": "aa3d59ab-9ee5-4fb4-9f5e-a0c33caed29e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "822a0c5d-c145-4ac3-8c20-9aed7699b0df"
        },
        "item": {
          "id": "40aadce7-8edb-4e77-9b62-efd9d3d14525",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7988ba3d-e23a-4b68-ba28-3209f8443f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae68a33f-4eec-4ddd-9cf4-805d6b3bff8f",
        "cursor": {
          "ref": "829f7293-c1d3-4507-b87c-0b5464b42be3",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "249882c1-1e9c-464f-9581-591aebd0a4a4"
        },
        "item": {
          "id": "ae68a33f-4eec-4ddd-9cf4-805d6b3bff8f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1c2350e5-04fc-49ff-823b-0c130eb6535f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff26020-889f-43d5-ba84-badbc7e60084",
        "cursor": {
          "ref": "805b81f5-c5f3-4bf9-a71f-ec67801b79c1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "10dbd431-7209-4f79-95da-7e005283222c"
        },
        "item": {
          "id": "5ff26020-889f-43d5-ba84-badbc7e60084",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "35d84e0d-4f38-40fb-b82d-b95770c87273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9def7af0-b0c7-42da-97a4-184660bb0036",
        "cursor": {
          "ref": "46995133-ce8c-4346-a733-98f982296c32",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fcbd4937-8db1-4fe4-980a-3d4ce2a47257"
        },
        "item": {
          "id": "9def7af0-b0c7-42da-97a4-184660bb0036",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "159790b7-86bf-40ed-b574-99215cca1bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d241c22-9daa-4d0f-8afb-5ea611d1c834",
        "cursor": {
          "ref": "268161ed-b340-4de5-b905-52d44dceee4e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "15f2a80c-8628-4123-bc67-f839d427c6ee"
        },
        "item": {
          "id": "8d241c22-9daa-4d0f-8afb-5ea611d1c834",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "58c05b03-3dff-4ccd-97d4-2a5e69221c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d7d691-eba2-416d-8e74-97bb053c87f6",
        "cursor": {
          "ref": "932d1d04-de34-4817-b090-621af249f642",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "59b855a4-8416-4c2b-ae3b-667eadcfea62"
        },
        "item": {
          "id": "94d7d691-eba2-416d-8e74-97bb053c87f6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ad907bd3-ed1a-4c8d-af92-e316b8b8295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea53aaf8-9e52-48ed-b371-a5458a46904c",
        "cursor": {
          "ref": "b73d60b3-f4a3-4a03-9ce8-6d47d90ec447",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2c34d195-6373-428e-90cc-930009c65055"
        },
        "item": {
          "id": "ea53aaf8-9e52-48ed-b371-a5458a46904c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "36a0de9e-6e9e-48c2-8cd3-f1ae4b42522b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cb1aa3-70fd-4cdf-bd77-b8c6b9a4a34b",
        "cursor": {
          "ref": "d4ff26ac-efb4-45a9-b586-a7d29afcc340",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "59b87c9e-88b5-471b-8fc3-08de006f2e7c"
        },
        "item": {
          "id": "21cb1aa3-70fd-4cdf-bd77-b8c6b9a4a34b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "696fb999-6934-45d5-96fe-61d65b5603f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e24242b-1fcc-4819-a460-2cdbfb2215b4",
        "cursor": {
          "ref": "f0c5e40d-90ca-40c3-a4c1-03d6aa70972e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d13bd78f-3bdf-4698-8355-ed42c76f2fc5"
        },
        "item": {
          "id": "0e24242b-1fcc-4819-a460-2cdbfb2215b4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9ae01ea7-4f97-443e-8ece-0c79b7e090bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb81bd63-a392-404a-88d8-9818e91ded42",
        "cursor": {
          "ref": "2e409bea-28ed-4d4b-afe1-ffdd584c2ccd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b554e52a-d26a-4a36-9a04-0596bcc1eda1"
        },
        "item": {
          "id": "bb81bd63-a392-404a-88d8-9818e91ded42",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "50799b7e-c92d-4f6e-99e5-b16279b40bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f366f6-9513-4278-9ae2-5410cff1340e",
        "cursor": {
          "ref": "dde3f61d-bb6b-48dd-bfe9-984bedcc01da",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7a14b3ac-9607-40e8-9f7a-7a9e2495e1db"
        },
        "item": {
          "id": "c1f366f6-9513-4278-9ae2-5410cff1340e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "24ae92b0-6f4d-4613-add2-ba5140fbe3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ca1c76-6703-4850-876c-8293d8dc4a81",
        "cursor": {
          "ref": "65ab02a3-a251-4639-8287-ba0db9fc7537",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e14bbe5c-d1d5-4a80-8c11-6cdd985c99bc"
        },
        "item": {
          "id": "45ca1c76-6703-4850-876c-8293d8dc4a81",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fd63db23-622c-4a4e-94fc-44f5d6fabd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a55013d-7a92-4fdf-9416-1edf9ca65dd2",
        "cursor": {
          "ref": "41928d0b-6e4f-4a79-b6ef-9b92b1c24820",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "20b96b69-c90a-4366-867e-1ddcc3085a0b"
        },
        "item": {
          "id": "9a55013d-7a92-4fdf-9416-1edf9ca65dd2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "02007020-091a-4b91-a73b-db8d3ba5dda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83f4f65-95c2-4fa8-9797-eb4a77635fee",
        "cursor": {
          "ref": "4450ba5c-84bf-423a-932f-972d37f4aab4",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "03427fe3-ca3c-4918-a16b-27f18adf073b"
        },
        "item": {
          "id": "c83f4f65-95c2-4fa8-9797-eb4a77635fee",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "049d0c60-6d68-4428-912d-e12824ec92aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cefbe1-c928-4493-a4a6-8e1cb1b6a97d",
        "cursor": {
          "ref": "654a12ab-3bbc-4150-bb71-c2443ee7d8c1",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "986c8962-4b9c-41e6-b400-1f7ecea09317"
        },
        "item": {
          "id": "74cefbe1-c928-4493-a4a6-8e1cb1b6a97d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b2c0604f-70a3-4965-9faa-097bf2c6d6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88977c18-079d-47f5-b6f5-b7ff85ca79e3",
        "cursor": {
          "ref": "daf5e2d9-d579-44b6-b780-2b1e2c566ba0",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "02f0c6a4-9d48-4ebd-9854-df4194f97eb2"
        },
        "item": {
          "id": "88977c18-079d-47f5-b6f5-b7ff85ca79e3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "649e476e-a7c5-4e96-b7fc-a658cb0e9070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b494689f-bc65-4764-be6a-c2be4118a905",
        "cursor": {
          "ref": "122ccded-2bf7-4e9b-8e38-f9c7b6dca888",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e64e1efd-9e92-4cb2-b236-ceca04499e98"
        },
        "item": {
          "id": "b494689f-bc65-4764-be6a-c2be4118a905",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "155550db-0401-46c0-b7f3-fceb6f4217ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6716ad4-6c05-4ae1-809d-ac590a1c550d",
        "cursor": {
          "ref": "cdf3104d-dae1-4982-8cdf-8290db5204a5",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6235635c-8b29-428e-8e3f-7856aa9ab422"
        },
        "item": {
          "id": "b6716ad4-6c05-4ae1-809d-ac590a1c550d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "444e891f-c3dc-427e-b5c0-52af4220b5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8838f1ae-6114-4483-b72c-7cd8a6f4c56a",
        "cursor": {
          "ref": "da5ba36c-d361-495f-94ce-1526e8f83307",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d28666ca-21cc-484b-b03a-d7f979136d21"
        },
        "item": {
          "id": "8838f1ae-6114-4483-b72c-7cd8a6f4c56a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d149a3d6-cbfb-49f2-8a55-fcd1e6892ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38df8e94-0f4d-4c02-8c43-537e4d6a3f9a",
        "cursor": {
          "ref": "f1f4f691-7ef6-4c55-b1dc-c238cd46e559",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2c71684b-1c5a-4b24-8ce3-3ed9abe56553"
        },
        "item": {
          "id": "38df8e94-0f4d-4c02-8c43-537e4d6a3f9a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "276a94c9-562e-4c94-ae1f-da6205ee2f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a876641-36db-4ee7-8580-c59aeabb4853",
        "cursor": {
          "ref": "d83163b2-4826-4c61-b07d-f5ac48516dd0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "930c2ee3-220e-4a93-97e9-7e50720e3a0b"
        },
        "item": {
          "id": "2a876641-36db-4ee7-8580-c59aeabb4853",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aab75a98-4c59-461f-9cc1-c5693e065a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ff123d-59f8-4c05-9dee-111b7e35c0af",
        "cursor": {
          "ref": "c8f01370-5ce4-4f33-9b31-35b466a35dbe",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dc0ffdac-86f2-4d14-bccd-4de8a352d370"
        },
        "item": {
          "id": "b6ff123d-59f8-4c05-9dee-111b7e35c0af",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "77aeba4b-45f6-42eb-a121-dc308e8e0672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6833eae2-4d19-4227-b95b-ba9e7baff95e",
        "cursor": {
          "ref": "d72d9677-88ac-4c4b-810a-7cf4d93713e7",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d8e6c303-fdbe-45f7-b826-5986f789b283"
        },
        "item": {
          "id": "6833eae2-4d19-4227-b95b-ba9e7baff95e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0ba25f8b-c187-43f5-a822-85c1f161bb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a57ba0e-6d74-4bcb-97c7-4ef157032e31",
        "cursor": {
          "ref": "685bb11e-f9f0-4935-bd64-b9f33ee1c509",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3081a863-cc2b-4fa0-8ec3-aaca74e5f629"
        },
        "item": {
          "id": "8a57ba0e-6d74-4bcb-97c7-4ef157032e31",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "60c1c2ec-4a7c-4764-91f4-6f96a57cc465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbad0c8-a55b-4091-91ad-d47ec9088f41",
        "cursor": {
          "ref": "343eaaae-59f1-4000-84b1-fbd99d306758",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "879f707d-cdbe-4882-a2ca-55014c500eb0"
        },
        "item": {
          "id": "cdbad0c8-a55b-4091-91ad-d47ec9088f41",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8368e592-fabd-493a-8912-3fffa4787edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06e4bae-2ceb-4560-b4f4-03ddd46b8f29",
        "cursor": {
          "ref": "8331ef3c-0813-4d4f-904c-123422f60cd5",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c729f0c5-1527-40c6-af94-25414d424122"
        },
        "item": {
          "id": "a06e4bae-2ceb-4560-b4f4-03ddd46b8f29",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f33a27cc-e29b-47d4-a4c1-f73fe876ce3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e4a7e4-dffc-40dd-9993-fd3d573279d1",
        "cursor": {
          "ref": "11e72649-364f-47fe-b173-ff5f37e0dd03",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d8de932d-7540-4fcd-817c-1dd2b71a0ea9"
        },
        "item": {
          "id": "99e4a7e4-dffc-40dd-9993-fd3d573279d1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2a3d7239-61f4-4481-b1dc-c3893f57d3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afea793-a387-443b-a0a5-5e0faa404fcc",
        "cursor": {
          "ref": "ea4c0b11-e772-48c7-b7bc-f9a98961166c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "22984073-c6e1-41b3-8085-7cfd8e77ca92"
        },
        "item": {
          "id": "8afea793-a387-443b-a0a5-5e0faa404fcc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "15d4443c-82ae-4d9e-915b-6bd896989df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b000ea-06fa-46ea-8624-cec672ebf63f",
        "cursor": {
          "ref": "6879d224-8d60-4ab8-a45d-690037d691e7",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b0b07b23-b92b-41b2-8383-2ed2bd45cab3"
        },
        "item": {
          "id": "f6b000ea-06fa-46ea-8624-cec672ebf63f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3a5a8117-3aa3-4ba0-9aa1-2724e1ed4095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1457101-30d1-4c0a-a581-f1bce41ec1b9",
        "cursor": {
          "ref": "120d61e7-0d90-47cd-b9ba-d10d49793e4a",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "79af81f5-ca9d-4b8a-b565-ee7623999d23"
        },
        "item": {
          "id": "e1457101-30d1-4c0a-a581-f1bce41ec1b9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "048fc04a-be5d-4995-92cc-acc5f3fe4111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef0102b-6417-4f34-a92a-d4d3c3172a9f",
        "cursor": {
          "ref": "62de143d-e195-4e7a-b0e3-889132ab874e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "dd660de3-4b67-4b95-aee1-a2e5cb14c532"
        },
        "item": {
          "id": "4ef0102b-6417-4f34-a92a-d4d3c3172a9f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "18a4ac57-5e06-4451-8604-509efd3cd0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9133d2-faea-44a8-9c96-c7707894d48e",
        "cursor": {
          "ref": "2629f3a5-07be-4764-bf09-fb61f4e74c9b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "311c334d-c38b-441c-bb5a-bc841aa7605f"
        },
        "item": {
          "id": "0e9133d2-faea-44a8-9c96-c7707894d48e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "117152d5-2c7e-4869-8a85-cacd854afbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b147910-6fa3-45c1-babb-d1241854bbc8",
        "cursor": {
          "ref": "dbd68ddc-be9c-469b-bf59-6e5a2e32e953",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2b04a191-f87b-4a22-9ffc-91a37157d5d1"
        },
        "item": {
          "id": "6b147910-6fa3-45c1-babb-d1241854bbc8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e414b73d-9a7b-479a-a177-da3f363de568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13fe211-e8dc-4ff6-b23b-a8b0aee4dc5a",
        "cursor": {
          "ref": "de35e6ab-ec9f-4fc5-99f1-77f9ddd0e856",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1eb80c68-7ba8-4fbf-a841-372926eb8ebd"
        },
        "item": {
          "id": "a13fe211-e8dc-4ff6-b23b-a8b0aee4dc5a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "08ce3500-9cbf-4b66-9ad7-1280b522f2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7895a760-bb91-4e8e-a14b-dde38f81358f",
        "cursor": {
          "ref": "35654b4c-03a3-42b7-a783-1daa8d105c8f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "502349b9-911c-47c3-81dc-839f1821caa5"
        },
        "item": {
          "id": "7895a760-bb91-4e8e-a14b-dde38f81358f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cd955e87-6aa7-478f-9417-314e87fbe37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e68fe67-3bca-49f8-b9db-38cccdb650a2",
        "cursor": {
          "ref": "6e44e787-5c42-48c9-adc8-5c5c30096c86",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1209820a-7d8d-4bee-aada-f35123f5c0e5"
        },
        "item": {
          "id": "9e68fe67-3bca-49f8-b9db-38cccdb650a2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0420d13e-bbe2-4466-858c-93cdc12b08ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049e2179-e6f4-4426-9fe2-fbcd7ed30c05",
        "cursor": {
          "ref": "2b4a7713-cd93-4a76-acca-aed06c237adb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "57109f13-9702-419d-a245-bb181ae60ad6"
        },
        "item": {
          "id": "049e2179-e6f4-4426-9fe2-fbcd7ed30c05",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "454d6b75-027b-434f-a119-0ddc4cfeb06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0291d529-c969-44bf-b514-045618ab1ae2",
        "cursor": {
          "ref": "19e3b55a-cc0c-4374-9b1b-5ab09a95365c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0b1c9f26-5e6a-4318-b442-40dffeaaaa09"
        },
        "item": {
          "id": "0291d529-c969-44bf-b514-045618ab1ae2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2416f1cb-8129-4c27-ae07-9b38a230336b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13f0724-92af-46db-9f67-a9a63852693a",
        "cursor": {
          "ref": "073c089f-9be6-4a03-b68a-3cc8ce99b9bf",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c766a3d5-713d-4f2b-abed-71ff687c76c8"
        },
        "item": {
          "id": "b13f0724-92af-46db-9f67-a9a63852693a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "82af28bf-c943-49e8-aa8e-9e9ecfa9e5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f638a5-a256-4b46-988a-b616893e43e5",
        "cursor": {
          "ref": "19ac9616-d5d1-4f42-bb69-51370c63cbc9",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6499f4b8-61c1-4f9e-beb1-bd7018cc9e4f"
        },
        "item": {
          "id": "13f638a5-a256-4b46-988a-b616893e43e5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4e116014-8b1b-4d17-8d63-24df58cf8a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dee5f9e-74a7-426b-b836-5d406b39e242",
        "cursor": {
          "ref": "f54d213c-9995-452b-ba86-a939dabe4696",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "625c93e1-8798-44d0-96d2-16ca5eb4580d"
        },
        "item": {
          "id": "4dee5f9e-74a7-426b-b836-5d406b39e242",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8052633c-ee0b-4f62-97d2-fccf3a92d3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1962bb-149a-44f4-92b8-476fa46d21a0",
        "cursor": {
          "ref": "7b69c8fc-f94b-4ef8-b1d9-a07f6ae3cadf",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ec86b8da-5c9c-479c-b0f1-0fcff5371485"
        },
        "item": {
          "id": "5d1962bb-149a-44f4-92b8-476fa46d21a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34d49ab3-3a28-41a7-bbed-cb4dc2fdaa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce9a9b-e1c3-4097-b37c-6d527449078f",
        "cursor": {
          "ref": "adb13f36-d4c5-47fc-9aaf-f836f74ebdbe",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "54046262-a86c-4905-9eee-408775cb3d7f"
        },
        "item": {
          "id": "dbce9a9b-e1c3-4097-b37c-6d527449078f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "20d49e99-f15e-4385-bef4-68fcfaf3b940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b87336-4926-4ecf-b060-a47389f8ad41",
        "cursor": {
          "ref": "86427efb-5cae-4846-a942-c149bd465b96",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b5a824a3-9b88-4a41-8d34-7735f0182a35"
        },
        "item": {
          "id": "71b87336-4926-4ecf-b060-a47389f8ad41",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7fd23f0f-0578-4316-88d8-d05d35bba57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bb6f84-d8ad-40a8-961e-aaea3351731c",
        "cursor": {
          "ref": "75da81aa-7012-4604-b79b-f6b8cf26ba7d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "92bcc398-f570-4fd2-ac88-c1278d606c40"
        },
        "item": {
          "id": "74bb6f84-d8ad-40a8-961e-aaea3351731c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "948edca3-a6cf-475f-ae36-09b826fc880f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950bb2a2-894c-46c1-94d4-98d56b5546e0",
        "cursor": {
          "ref": "4288c197-54d3-4dbe-b8f2-e3ffdddf425b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2a3d58a6-14da-4da5-95ab-73ee3681a2fd"
        },
        "item": {
          "id": "950bb2a2-894c-46c1-94d4-98d56b5546e0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "28d11154-9144-46db-8145-a73ea86bef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86446c1d-f816-4eae-8313-1a5ac3a94c4d",
        "cursor": {
          "ref": "2331b772-aebd-4fa3-9c47-b53cfb89069f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "335761e7-2144-4aae-9573-3c8081dfaf30"
        },
        "item": {
          "id": "86446c1d-f816-4eae-8313-1a5ac3a94c4d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55f0993d-74e8-4417-8696-b6c6b37e8fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead0dcce-5f7d-4c68-b5f6-ecb8198c61c2",
        "cursor": {
          "ref": "d2a55612-c876-4546-a066-df45c4bc0dbb",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3f98f7e2-631d-4efc-abbd-10343ee388c0"
        },
        "item": {
          "id": "ead0dcce-5f7d-4c68-b5f6-ecb8198c61c2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "06bdf159-1b99-4d49-ac9e-0aaf62fb7846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5992304b-dd25-4f1a-9ad7-e2145150a8cd",
        "cursor": {
          "ref": "bbe3a571-ddf0-4d14-bfcb-847ec790ceb2",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f43ff259-847e-4dad-8574-e403ac0650f4"
        },
        "item": {
          "id": "5992304b-dd25-4f1a-9ad7-e2145150a8cd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4bc0df07-7cfc-4618-889c-b82b11cab2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2dc509-4434-4387-923c-4a1f6390e4c6",
        "cursor": {
          "ref": "fb1eeb1b-405c-4556-b2db-26340d430e9b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "063fae25-c4fa-4827-b141-9c426b91a90f"
        },
        "item": {
          "id": "3e2dc509-4434-4387-923c-4a1f6390e4c6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "db7a4109-b1d8-4735-b93f-ec74f40cbc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20232459-7d07-49f7-b7b5-5420ba69e85d",
        "cursor": {
          "ref": "e7df9140-d1c6-45d0-bd29-080bf00b046b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "09f2342f-dd93-4d05-9193-089910e1448c"
        },
        "item": {
          "id": "20232459-7d07-49f7-b7b5-5420ba69e85d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f1d390d3-69b2-4930-be7c-f0750d8d19eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d44040c-ce1c-45af-924d-e1e97d41ba6d",
        "cursor": {
          "ref": "d2c9c1e6-0d6f-4e7e-961e-a1e0cd99ac99",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "32cd2aa1-c721-4c9b-81a8-3319f68784d3"
        },
        "item": {
          "id": "2d44040c-ce1c-45af-924d-e1e97d41ba6d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e6fcc9b-b8ad-46bf-b93b-5e38e23fc444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499d0a56-0c38-4bfa-87fe-cfbed39977e0",
        "cursor": {
          "ref": "ec783d86-7274-4a19-a5a7-1af772f4dea0",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "082f9e4c-c0e7-477e-967e-87c01aa1e7f6"
        },
        "item": {
          "id": "499d0a56-0c38-4bfa-87fe-cfbed39977e0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d685aa5b-33ca-463b-8382-932aa1c612d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85e9f78-cc2d-486a-a227-279cd0766978",
        "cursor": {
          "ref": "e9e900d2-f9a2-498e-8cbe-000ee213df76",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "70fb89bc-0407-489c-b04c-704227d1287b"
        },
        "item": {
          "id": "a85e9f78-cc2d-486a-a227-279cd0766978",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "38b65350-d73e-44a6-b754-41c99f26f93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfb82f7-238f-4f97-b931-2d06aabcac61",
        "cursor": {
          "ref": "67936bcb-bcba-47a0-8885-831dbe15f959",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e1986324-4482-4d4a-a470-653a7e9b2d60"
        },
        "item": {
          "id": "fcfb82f7-238f-4f97-b931-2d06aabcac61",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0b4d8244-9b50-471b-abb7-68d18a61d5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fad2dd-7382-4667-b9a7-19755182b089",
        "cursor": {
          "ref": "7e66979f-7790-4660-b7a0-b31ac2f81348",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b10da5e-7296-484a-917d-96f8a99e749c"
        },
        "item": {
          "id": "a9fad2dd-7382-4667-b9a7-19755182b089",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6f2dc73a-156a-48b7-af7e-df7bd8ed2a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c93f3a2-359a-47b7-bcb1-9485670abfa3",
        "cursor": {
          "ref": "cbd54faa-c919-4c23-ba60-d23979fa68ff",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "53d070f5-9a8c-4a63-8be3-94c4046cd6f3"
        },
        "item": {
          "id": "3c93f3a2-359a-47b7-bcb1-9485670abfa3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7714ce3b-0ca5-4484-93fb-30e70a5bdae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a6a121-77f9-40d1-a684-4c08be66e63f",
        "cursor": {
          "ref": "17768a18-e10b-45f3-90dd-d25493c3c3ac",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ba3618a4-bbc9-4033-a3a0-a89cecd6afbf"
        },
        "item": {
          "id": "00a6a121-77f9-40d1-a684-4c08be66e63f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "40586887-14e1-4bf5-b50f-af12fc677048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af9c6f0-b2cf-4f98-bdd1-fe2762ebf4d8",
        "cursor": {
          "ref": "eedc245e-f48e-4b11-bd5e-9326578bec16",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "44a6ce88-afcd-48dd-ae1b-ecedd00ea2d2"
        },
        "item": {
          "id": "6af9c6f0-b2cf-4f98-bdd1-fe2762ebf4d8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d41c433d-1e94-46a7-b172-c12285b5b401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158b5e7f-f425-48a4-8ece-e4bced130871",
        "cursor": {
          "ref": "e8d9c731-6374-456b-9f12-f5dd485214c2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "808e6be7-c4c8-40bc-88a6-1d33460025e7"
        },
        "item": {
          "id": "158b5e7f-f425-48a4-8ece-e4bced130871",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0a820fd5-e971-4741-81f3-0df186bc7576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901b840b-05aa-42c4-bc90-54f21b600b9f",
        "cursor": {
          "ref": "6a471351-614b-4f8b-ab5f-a9ba7a853541",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "68830bcd-0f39-4b5c-9725-0118691fb1bb"
        },
        "item": {
          "id": "901b840b-05aa-42c4-bc90-54f21b600b9f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b47c5018-178a-4c4d-8fe7-68e78131cf90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5668f2-6452-4312-8619-bae54764e9ec",
        "cursor": {
          "ref": "cca3d1ad-1775-4406-aa99-b0cabeeb5fcb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "78b451dc-e54f-4af3-9842-13e477843154"
        },
        "item": {
          "id": "3f5668f2-6452-4312-8619-bae54764e9ec",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "59ad0acd-fdf1-4390-93ea-83ec211f1b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bc70d6-f5cc-4cb9-9f0f-96b9919a3084",
        "cursor": {
          "ref": "d0b61ac0-e253-44ed-a2c1-4e92833b5827",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6c208cd7-1a5d-4255-bd1f-cde28184c407"
        },
        "item": {
          "id": "a8bc70d6-f5cc-4cb9-9f0f-96b9919a3084",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e127a208-790f-472e-bf25-5edb578d70f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19cab95-d550-4701-849a-bc1f57cf2404",
        "cursor": {
          "ref": "9a425988-3908-4a88-83a3-3c53b904a89e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "554e810a-4f53-4da4-984a-94066a9c9ee8"
        },
        "item": {
          "id": "a19cab95-d550-4701-849a-bc1f57cf2404",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0da78b68-27b7-4a98-a03a-3586a9e3179a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbf84b4-4b98-4dd0-8706-a1635744564e",
        "cursor": {
          "ref": "7f19d676-3fa7-4dfd-94d2-b96ae9b2d50b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fc83e052-3156-41e1-b7cc-0059bfb35974"
        },
        "item": {
          "id": "0fbf84b4-4b98-4dd0-8706-a1635744564e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "53b53d67-941c-4756-8445-ee74c882ef79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e0fee2-bb67-46cb-aa78-4f7d02d464c7",
        "cursor": {
          "ref": "19f928fd-82f5-4a2d-80cf-b84b29c9992d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ad98836a-bd88-4073-8264-ae6d90e40e96"
        },
        "item": {
          "id": "14e0fee2-bb67-46cb-aa78-4f7d02d464c7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5a29130a-c241-4cb4-8e47-5735340f7b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ce5796-b563-4c80-83fd-4723f7511a69",
        "cursor": {
          "ref": "b2d5ce98-cd74-46ea-95f8-6daa43c6e7f5",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7a3932e8-bbd3-45a8-85ba-4edeed3f1440"
        },
        "item": {
          "id": "62ce5796-b563-4c80-83fd-4723f7511a69",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "af1b3a78-e8dc-4251-8766-28ab3747b4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55bc647-e4a0-4a14-b0f7-7d83ef4b8e5d",
        "cursor": {
          "ref": "d0e92837-5e0a-4c8b-9666-be08403bd768",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c8135cec-66bb-44a7-bff0-d939d558aa2b"
        },
        "item": {
          "id": "a55bc647-e4a0-4a14-b0f7-7d83ef4b8e5d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c9cd878d-87db-48cc-adcb-b13396b19975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7a47c2-96d8-4b66-9015-3120eb8e95c0",
        "cursor": {
          "ref": "3ea7d96d-cf38-4a33-a47f-8b6eabf75dab",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "047744b3-a644-4016-8971-91cd0c1e69f6"
        },
        "item": {
          "id": "5e7a47c2-96d8-4b66-9015-3120eb8e95c0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "428dab09-d579-4bf2-84bf-31062787ec30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51ca5f3-5cf9-4691-aeba-1a2de69f51ae",
        "cursor": {
          "ref": "668977ce-dad4-4802-abb0-bd117c7622fd",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c0c8cddf-ab17-4fa7-8656-d79591c54501"
        },
        "item": {
          "id": "f51ca5f3-5cf9-4691-aeba-1a2de69f51ae",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "582d6e5a-7818-49e3-9537-5a2f4790ca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390c9f3c-42de-4920-8105-3f4c15706c2f",
        "cursor": {
          "ref": "89bd7f32-6c29-4ff3-8d60-010607daf3c2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3ebbc7bd-dc74-4ee7-bc48-7fd623096373"
        },
        "item": {
          "id": "390c9f3c-42de-4920-8105-3f4c15706c2f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f4c7f152-0f83-4dc2-abfa-0196a45c0df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87714cee-4f92-4ecb-9697-76a235b8ace0",
        "cursor": {
          "ref": "5e2524a2-981d-40ef-8fbd-01d5afb10b40",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "609644c1-1f92-4588-9680-d71b1c1af943"
        },
        "item": {
          "id": "87714cee-4f92-4ecb-9697-76a235b8ace0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e5de2be1-e5ce-414b-8525-262957b6d07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc893d-1cd1-4dc6-934e-c3cffc60d943",
        "cursor": {
          "ref": "c3f9c3d3-025c-4e01-aef7-1e87c243b871",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c1dd5ad2-bfda-4b66-8bd6-4027c30a7996"
        },
        "item": {
          "id": "24bc893d-1cd1-4dc6-934e-c3cffc60d943",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c6f441b8-1fb7-4c85-aba3-a560e74c8ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade68c1d-9c05-4692-9b03-12d4fb0d8f63",
        "cursor": {
          "ref": "90367c2f-fa70-405d-acb3-40380236280d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "777a788a-544d-406d-8aa3-92583b06c8d3"
        },
        "item": {
          "id": "ade68c1d-9c05-4692-9b03-12d4fb0d8f63",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fdeb7809-1d8d-45a2-aa03-0b22e48337bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b7b9d6-d649-431b-887f-4ddaae45c681",
        "cursor": {
          "ref": "0a1a227d-c7b7-4362-8a44-411a2761d3e9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bed52b22-7e9f-4558-a617-f4ff2b44b706"
        },
        "item": {
          "id": "f1b7b9d6-d649-431b-887f-4ddaae45c681",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "45680eef-257f-4555-9295-1da2b7e95015",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6756ca-7311-45be-aea1-b183268521f7",
        "cursor": {
          "ref": "6e06f3aa-5e47-4d5f-b69c-d5fc14fb78c4",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "61e1febf-783c-4acc-898c-8436a737ce99"
        },
        "item": {
          "id": "cb6756ca-7311-45be-aea1-b183268521f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "50d15bd9-4b99-4ec3-85e8-5df0b5056ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "4e07ab13-d10d-4a4e-a5dd-cece0d4a1b4c",
        "cursor": {
          "ref": "ab086d5b-43ad-473c-9d9b-6aa29d3ce52c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d1c06991-8b57-460a-998a-3e65b8192d07"
        },
        "item": {
          "id": "4e07ab13-d10d-4a4e-a5dd-cece0d4a1b4c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "15a3ad91-d617-43d4-9186-e3ef6d768447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "36f7aba8-6da1-4730-a68c-a7bab06c97de",
        "cursor": {
          "ref": "f6fd964a-3abe-4852-b9bb-8ffe0979a6b3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7a441819-2ef4-470b-9b2e-af577718391c"
        },
        "item": {
          "id": "36f7aba8-6da1-4730-a68c-a7bab06c97de",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6e44048f-8a9d-47dc-97db-4acf22d8b0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "67603833-35d8-490a-bbd7-bece99ec0013",
        "cursor": {
          "ref": "872d9594-6775-46f6-89f6-c1f4a73f5033",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3445cc98-a842-4e56-bb40-770b34057396"
        },
        "item": {
          "id": "67603833-35d8-490a-bbd7-bece99ec0013",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2ad3b778-b7e8-4fdc-aa7d-68dac4f38ebe",
          "status": "Created",
          "code": 201,
          "responseTime": 6586,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ed3840-0a4d-49ab-b079-a50e356ce15b",
        "cursor": {
          "ref": "ef2cb021-3e81-4a68-8376-9be59120369f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df44533e-d4d9-4bac-bef0-cb7343d47eb5"
        },
        "item": {
          "id": "73ed3840-0a4d-49ab-b079-a50e356ce15b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "832bf5cd-ca83-4b94-96e0-b84c54ef3610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "adbbe80b-c9fd-47c6-856b-4c0de5ce72d7",
        "cursor": {
          "ref": "a26023e2-1be0-4527-9278-7454a71de1e4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c47fefe3-0581-4d8e-83f0-2c84ad5ac01f"
        },
        "item": {
          "id": "adbbe80b-c9fd-47c6-856b-4c0de5ce72d7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b15048a6-cdbd-4348-b93b-5f693db262c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3eb22503-86a8-4b30-a546-63ae01d0fc3c",
        "cursor": {
          "ref": "e663f332-0a69-4fe8-b479-611a39c4e251",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5404345a-3be2-4d98-8ee1-765178a68ade"
        },
        "item": {
          "id": "3eb22503-86a8-4b30-a546-63ae01d0fc3c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d795225d-0f1f-4224-aba7-888a479e2255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2dc84d-9e66-4b65-9216-ba51ba5109e3",
        "cursor": {
          "ref": "26ee8175-061b-44e7-a516-f7475ac373bf",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2729eda2-1ba5-4b88-9b07-f6697e7d64fb"
        },
        "item": {
          "id": "8b2dc84d-9e66-4b65-9216-ba51ba5109e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c9e78439-b141-4837-9966-3347c8178fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80b68fd-3d5b-4714-9625-466084459cd4",
        "cursor": {
          "ref": "88bfa9b8-48fe-4057-84df-cb9c9303338b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e6726593-96ed-4f26-af51-1e2d45b05d4e"
        },
        "item": {
          "id": "b80b68fd-3d5b-4714-9625-466084459cd4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e5d28d59-a349-4fbb-9e12-e44459a24c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b9bc31-d5b5-488c-b745-f819afc578aa",
        "cursor": {
          "ref": "1edf1efc-ddc5-4217-9670-7918a027e3f9",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0322e0d4-20bc-44d8-9cf2-3bd503e674a5"
        },
        "item": {
          "id": "e0b9bc31-d5b5-488c-b745-f819afc578aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4178ed65-0752-4145-8712-d53dfd2651d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd59231-4c43-4e0c-ac4b-66f5a8c10c00",
        "cursor": {
          "ref": "cbf1b0a0-d0a7-482f-a6d3-284956bb8a03",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "40f7e517-72fa-4228-9d52-1a011ebb098f"
        },
        "item": {
          "id": "3dd59231-4c43-4e0c-ac4b-66f5a8c10c00",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "80835323-6622-403a-8843-b5f2174d2798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9363d365-b1cc-4445-8359-59f7bb50cd51",
        "cursor": {
          "ref": "e64c8646-08e5-452c-9591-eb4cc07ee165",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4e6b9fd2-e266-4cc0-8b50-49a8cc6ff920"
        },
        "item": {
          "id": "9363d365-b1cc-4445-8359-59f7bb50cd51",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f1e018d5-2449-4ba6-916a-99e1be3e3adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aca22cb-6dd3-48e4-bce0-e0dc9063670f",
        "cursor": {
          "ref": "691a0dfc-0591-42a4-8a1e-1630ccb692cc",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec16f824-a877-4212-94a8-e954dc8c8228"
        },
        "item": {
          "id": "2aca22cb-6dd3-48e4-bce0-e0dc9063670f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b7845612-b831-4346-a349-fda40b5a142f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110cc3ef-c3a0-4ec1-be58-aa51d8d47345",
        "cursor": {
          "ref": "5fc9adea-4e5b-4f0b-9d13-1eac7b50a7b4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4a0bed47-68fa-41ec-9e5c-0041d616cc25"
        },
        "item": {
          "id": "110cc3ef-c3a0-4ec1-be58-aa51d8d47345",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7a97c6ba-a7de-4e78-b4b1-fcc72b2f831a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3854435f-ea82-46f1-91f2-fa3aacfe2a2d",
        "cursor": {
          "ref": "d65cee6b-5e29-4acb-8281-49563bf6a0c7",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f7317614-8daf-408f-92e4-a7c71adc1423"
        },
        "item": {
          "id": "3854435f-ea82-46f1-91f2-fa3aacfe2a2d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a00dff4-c8da-4e10-9a3c-1acbf8a3a31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ea2d1a-f3a0-42bc-8c2d-a7e25daef34d",
        "cursor": {
          "ref": "87465f30-05eb-4ab8-af62-c51cbdcfea4c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "034290fa-591e-4a10-b858-e96ebcbc2c1a"
        },
        "item": {
          "id": "99ea2d1a-f3a0-42bc-8c2d-a7e25daef34d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a86a373d-7f83-452b-bf3e-292c88d7a04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6f2d03-aec7-40e0-8391-6a31c1218917",
        "cursor": {
          "ref": "10470c19-7b33-43a6-8a22-f10d056058a6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b8768a39-b5ed-4285-bf35-53e9c5198990"
        },
        "item": {
          "id": "cb6f2d03-aec7-40e0-8391-6a31c1218917",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3a4a51b2-45c2-4f31-aecb-c66efcae9e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40d92b9-4fc0-4f8a-b4cf-e5e7ca21b4a6",
        "cursor": {
          "ref": "33d7260d-9adc-4c5f-b05a-0bffcf7aa38d",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a50aa2fd-da37-4c7d-9dcd-c30f22273b73"
        },
        "item": {
          "id": "c40d92b9-4fc0-4f8a-b4cf-e5e7ca21b4a6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "40fb1b43-a234-4052-b8b7-30049e1fb79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1c1cf4-f3b2-4e75-a7bd-c20a6614d479",
        "cursor": {
          "ref": "96d69caf-c097-41fa-adf1-375d78b3f4fd",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "39cb1afa-4c84-4b46-9014-89580a9c3ca2"
        },
        "item": {
          "id": "ad1c1cf4-f3b2-4e75-a7bd-c20a6614d479",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e6a6e4c0-be29-4d72-a5ab-6b35a66263d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb9820f-e04b-47c0-a344-1e2a08fdbcca",
        "cursor": {
          "ref": "dc86162a-6f1b-4365-9efa-389552861497",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a38a5fab-f319-492e-aff9-d9625f6fbe52"
        },
        "item": {
          "id": "7bb9820f-e04b-47c0-a344-1e2a08fdbcca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bef89e93-2422-4e43-b6ec-26b0d64c6e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2286c7-40d1-4922-998c-2ac5d3fb711e",
        "cursor": {
          "ref": "3ce20295-dd19-49ef-8272-bc434bc8401a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea1ba682-fada-4510-a5c6-e96fc3d27db3"
        },
        "item": {
          "id": "0b2286c7-40d1-4922-998c-2ac5d3fb711e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f709ee21-2c95-4179-bfd5-44ec15bc4b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3087a7a-539d-40eb-9f50-58e4c824075d",
        "cursor": {
          "ref": "63d1d736-b1e6-41bf-9348-6e0cf9790b5b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "839223ff-9add-402f-94f2-e124d44c288b"
        },
        "item": {
          "id": "e3087a7a-539d-40eb-9f50-58e4c824075d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8ed59011-1fcb-4753-b818-3ba9050c397f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a386e20-0e7b-47fc-9cb5-b1abc3a4feae",
        "cursor": {
          "ref": "adcbfb14-0ff1-45d4-8255-37db60b1b30a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "91ef5caa-3312-4118-8866-f8bb47617812"
        },
        "item": {
          "id": "5a386e20-0e7b-47fc-9cb5-b1abc3a4feae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3abe0511-6ad3-440e-909a-5fae0c7301f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a05dd9-7de5-4648-a0a9-4737511d9f2e",
        "cursor": {
          "ref": "60b7b8a8-b5c5-4f97-9838-ef04a6da7da4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e7c6fd83-f9f1-431e-b9ff-d66db41bd716"
        },
        "item": {
          "id": "40a05dd9-7de5-4648-a0a9-4737511d9f2e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e11221e1-38d8-4df7-8f76-395f0a9c28bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8eaa13-e2dd-4fa9-9057-df08933e97ef",
        "cursor": {
          "ref": "90303fa3-6536-4e72-b5a4-eb4d886f2cc7",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "86e5bdfb-db0a-4a09-9900-2752bbd134a3"
        },
        "item": {
          "id": "5e8eaa13-e2dd-4fa9-9057-df08933e97ef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c53ead93-df87-4c9e-a3d2-8b8255d86c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e98058-84dc-4828-8817-9ecdc7830288",
        "cursor": {
          "ref": "8c0cf071-f31d-41a8-9925-0ac258c25d4a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0d237717-7402-4030-a8ca-8c70341a234b"
        },
        "item": {
          "id": "91e98058-84dc-4828-8817-9ecdc7830288",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7cd43b4a-f49e-4352-9e68-5e337e6a75f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0155d5f7-e5d9-4198-95fb-76625d66a2c4",
        "cursor": {
          "ref": "19f7ea6f-3f62-4e07-b7d5-7ecb2cf0c9a1",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ed94c3a6-9e11-414d-b810-8fe4a6643ebe"
        },
        "item": {
          "id": "0155d5f7-e5d9-4198-95fb-76625d66a2c4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a36255e8-1cf4-40b4-9c30-284b53bd9f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7121abaf-964b-4af8-b18a-163845dde51c",
        "cursor": {
          "ref": "386a089c-9b5d-4126-954e-ced585e9d54c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5f1d0157-dd19-47a2-ad16-3ef7775446fc"
        },
        "item": {
          "id": "7121abaf-964b-4af8-b18a-163845dde51c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f3a0b42-9032-45b2-a504-e36a8e1ebd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6d9cf9-cd8c-4f42-a6e4-88bf4e8cd973",
        "cursor": {
          "ref": "5f211638-99bb-49a2-814c-49a4dbdc332e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "98432b06-0693-44ea-8551-cedec4c4630b"
        },
        "item": {
          "id": "fe6d9cf9-cd8c-4f42-a6e4-88bf4e8cd973",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b375f021-dad3-460a-848f-4f1ffb5be641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a405f5-2b86-472a-a71c-bb73a4b57e89",
        "cursor": {
          "ref": "58d0f46c-0d47-4407-bbf9-456d6652414d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6064ca08-998b-4269-83b3-b2fb227927c9"
        },
        "item": {
          "id": "19a405f5-2b86-472a-a71c-bb73a4b57e89",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "20f812be-c760-4461-b4cf-f50e963ff7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007d50b7-375c-4b11-b184-babb50bc319e",
        "cursor": {
          "ref": "bd4bb56c-9b39-400c-9c7e-ac6242936ca2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3a37187e-b7a9-4b3e-91d1-439fceb8b0ea"
        },
        "item": {
          "id": "007d50b7-375c-4b11-b184-babb50bc319e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7e45065e-d34f-4b17-897a-0b008516c486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de553a7e-5205-4545-a5b5-f71feb75f6fc",
        "cursor": {
          "ref": "f0b6a5f1-eba2-429a-8ed6-b705d1be1126",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e9036766-d3b2-48ea-9d5d-951d754212d5"
        },
        "item": {
          "id": "de553a7e-5205-4545-a5b5-f71feb75f6fc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "537aa0d7-ec0b-40a5-b64f-1485de01b2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81ce4cd-e596-4a23-a4ad-3643e69d6dea",
        "cursor": {
          "ref": "e25e86ab-e4cc-40df-9875-a46d5e39ee9d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "74d4026d-d6fd-4acf-9cbd-42128beacc52"
        },
        "item": {
          "id": "d81ce4cd-e596-4a23-a4ad-3643e69d6dea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7f51050a-88e4-4cd1-9903-9df711ef5fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6ed2a5-68e0-4435-82b6-7317f9c0abab",
        "cursor": {
          "ref": "c9e14755-3213-4f1d-aa84-412ff90767f1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dbd1d074-2fb7-4315-9202-28f7f34f866d"
        },
        "item": {
          "id": "4b6ed2a5-68e0-4435-82b6-7317f9c0abab",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "748f90d9-e667-4db4-9f58-44e397db21f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addd1471-22b3-4c9f-807e-1a57b369a0aa",
        "cursor": {
          "ref": "91729763-1357-431f-bb6a-802c23099805",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f5f02758-737c-420f-b514-400259386b39"
        },
        "item": {
          "id": "addd1471-22b3-4c9f-807e-1a57b369a0aa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2ae62ed0-5171-49fc-985c-a7ee589d78e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dea8ecb-3cbb-4a40-b078-d06a0309acde",
        "cursor": {
          "ref": "38a2b161-c0e1-4625-9eef-1e0eb8df7339",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "19660876-1c1c-4836-8b45-d3b93e991557"
        },
        "item": {
          "id": "4dea8ecb-3cbb-4a40-b078-d06a0309acde",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "235263f6-eb3a-4750-aa9d-58e667bfe524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece3cd9a-77f7-4aaf-a9be-75f426e69482",
        "cursor": {
          "ref": "730dbb93-ed3e-4fd7-bc97-4174da6d4dd1",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a29ee116-bab0-409e-92e5-f042e6c3673d"
        },
        "item": {
          "id": "ece3cd9a-77f7-4aaf-a9be-75f426e69482",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ad659b02-53ef-4d51-9c39-4bbf259ca158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16906c8f-20a3-4af7-889e-07e09dac64ab",
        "cursor": {
          "ref": "d1af8b87-3ae7-4a7a-8d47-166d6f67eb15",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cd368384-7724-47f6-9fab-9244f21ee088"
        },
        "item": {
          "id": "16906c8f-20a3-4af7-889e-07e09dac64ab",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fa5f0890-2305-4ab7-a273-31d32ac776f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32431c83-8415-4db6-9d40-ed8be9ecc63e",
        "cursor": {
          "ref": "a29d0fa2-5adf-4a98-9a49-4c5453b8cc2a",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "29fcfd13-6771-41f4-8196-19b2645fb03f"
        },
        "item": {
          "id": "32431c83-8415-4db6-9d40-ed8be9ecc63e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "386f666f-9c44-41a7-ae91-95f9d498d292",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc78dbd-7313-47bf-8f38-d0c100b99dd3",
        "cursor": {
          "ref": "6e6cf22f-b4d6-4a31-b039-17ab0c1c5dac",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1c574d95-6fec-4c2c-ab1e-c9572e0bb831"
        },
        "item": {
          "id": "2fc78dbd-7313-47bf-8f38-d0c100b99dd3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "82674ea7-2430-4674-940c-b1dea6f92c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1cf1a8-23a7-4de9-a8c9-0890a8667881",
        "cursor": {
          "ref": "3efbac83-5ff6-42b7-a0aa-2106f39b6182",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "54481c00-438d-4fdd-a350-5852418b442c"
        },
        "item": {
          "id": "1e1cf1a8-23a7-4de9-a8c9-0890a8667881",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f4332a2c-5256-4794-96fe-da2b67a35975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57a6cee-d7c3-4a7c-9d65-ddd0cd565b0d",
        "cursor": {
          "ref": "2b70bc29-cf7d-4ec9-88d8-23b08d595e65",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "33a831c4-499f-442f-b70e-cd4b2b7fd48f"
        },
        "item": {
          "id": "c57a6cee-d7c3-4a7c-9d65-ddd0cd565b0d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6b0445a-bd0f-4d63-a2c3-521722b504d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b95acc0-5d1b-44b2-bf48-0071b7f7f19a",
        "cursor": {
          "ref": "14cb74c1-657d-4aed-a38c-51d295f3a062",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6a1b45bb-af3d-4db9-9f55-f42f8489330e"
        },
        "item": {
          "id": "2b95acc0-5d1b-44b2-bf48-0071b7f7f19a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6dedda45-627d-4569-9d06-6cf55be3ad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d65310d-8922-4b59-8fb8-4aad42d99a32",
        "cursor": {
          "ref": "6e3cefd5-bfd3-4464-bfd8-5d2a5e97618f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1feaad0b-159f-4211-9e06-95ea4c4feb40"
        },
        "item": {
          "id": "9d65310d-8922-4b59-8fb8-4aad42d99a32",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "04efb9fb-d540-4258-ab57-4e80123a456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8affca9b-a0a1-416f-afc8-640aae4b23d9",
        "cursor": {
          "ref": "02b4fed9-429c-478e-99e3-d48350a693ba",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d178bf97-12cb-4d5a-a799-f652c31c7b55"
        },
        "item": {
          "id": "8affca9b-a0a1-416f-afc8-640aae4b23d9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "87a9839d-9acc-41d2-ac66-19eed1e0490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03003409-82ff-4d18-8bd7-e3d77af970b1",
        "cursor": {
          "ref": "dd930064-97b3-4b7d-8db7-205e484b0739",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d44c9d1c-b1dd-4007-b417-7baf80377a32"
        },
        "item": {
          "id": "03003409-82ff-4d18-8bd7-e3d77af970b1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2251c20e-9d90-4a5e-bd2f-c8ef880b112f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb833798-879c-4149-94fe-1b7d5fef13fe",
        "cursor": {
          "ref": "02a4f376-ca04-48de-a5c6-7dffae56abdb",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "028ad7c4-c1ce-4dff-a871-a0fe6bd3e4d7"
        },
        "item": {
          "id": "cb833798-879c-4149-94fe-1b7d5fef13fe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c21c2e6-3e7f-4f2b-9c3f-fc6f5850f545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9f7385-f2ac-4f04-9398-8bebe85c9658",
        "cursor": {
          "ref": "ae49a7fc-40dd-4643-9d38-44d221c1f572",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b478f500-5b12-4908-9b5c-155eb5486cd6"
        },
        "item": {
          "id": "4e9f7385-f2ac-4f04-9398-8bebe85c9658",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ea177a79-b308-427f-bb38-3d74e3dd64b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fd2d0f-a8b2-4e1a-9478-193261cda2ed",
        "cursor": {
          "ref": "595b9d5e-ef6c-45f3-a8db-f208dd383214",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "52743c5d-4cb0-48cb-bd16-ca05fda2ca67"
        },
        "item": {
          "id": "25fd2d0f-a8b2-4e1a-9478-193261cda2ed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "836d48dc-4962-40dd-a78e-653a21b27877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c0ee2f-a59c-430c-b7c5-a313ff0b1826",
        "cursor": {
          "ref": "ce150ff7-1764-492a-90fa-edea82931783",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0f6b83db-04ad-47de-873c-a259263d8dcf"
        },
        "item": {
          "id": "47c0ee2f-a59c-430c-b7c5-a313ff0b1826",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "228dd531-5d3b-4011-9194-510e897ff25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29490ef6-0806-4c9a-96b2-7b967070b1b7",
        "cursor": {
          "ref": "0be8b275-4aab-4a31-ba06-22ef86180dfd",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "109aab6a-bab4-47a9-a3b3-ab81fd3b78d7"
        },
        "item": {
          "id": "29490ef6-0806-4c9a-96b2-7b967070b1b7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c110fc73-d7eb-42aa-802d-218ae1603624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a8bbd2-cd61-49bb-819e-beefba13cd9a",
        "cursor": {
          "ref": "3fac5a41-c821-409c-9b45-c0f62d938869",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "194ed46d-7903-467c-8aa2-acc039bdb485"
        },
        "item": {
          "id": "59a8bbd2-cd61-49bb-819e-beefba13cd9a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c96a53d9-44e1-431e-828b-fcc024641d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d782979-e4c2-45a1-9784-f123800f90af",
        "cursor": {
          "ref": "f604cc05-ea32-40ed-baad-b8e691034ed5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cb340a2c-4d4e-4b97-90ca-6a5d4e0dedd1"
        },
        "item": {
          "id": "6d782979-e4c2-45a1-9784-f123800f90af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "25436025-3889-4160-b1d1-180e8a651d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfa8f9d-4f89-44f2-a9d8-ecb8a98a7a58",
        "cursor": {
          "ref": "af0c52a8-75da-4f01-8e98-47e3bdb131e0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "525a2efa-3a5a-42b9-9908-7542505e18c3"
        },
        "item": {
          "id": "9dfa8f9d-4f89-44f2-a9d8-ecb8a98a7a58",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "befc9274-9445-477d-8712-1b7a64ea008b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d1c8ad-4182-4654-9f3b-178940ef3ac8",
        "cursor": {
          "ref": "eff6a234-957a-48a2-a9b8-c7277a807542",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f02cc862-884e-4205-8d4d-ae6a3564d71a"
        },
        "item": {
          "id": "e8d1c8ad-4182-4654-9f3b-178940ef3ac8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a7a8edd2-c333-4dce-ae61-5abbdb370561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b4ff4a-b190-4621-a016-b58948d5131d",
        "cursor": {
          "ref": "bf62049d-fd0f-4ede-ba22-8f6d9d826ff8",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "23c30c3d-33d3-4d50-88f8-8d3a13857fd1"
        },
        "item": {
          "id": "b4b4ff4a-b190-4621-a016-b58948d5131d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fbc2ec48-5b2b-4f6f-baa0-58b151d8ca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53b02a2-eb22-4e05-8bc8-e4f69e1052f8",
        "cursor": {
          "ref": "1dc8e1db-efe5-47da-9d3e-c312b896a837",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1cb87832-f05c-4d4f-9815-bb98a78a223e"
        },
        "item": {
          "id": "b53b02a2-eb22-4e05-8bc8-e4f69e1052f8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c055e36a-8878-4a16-bd6e-f4729204742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c080ec8-1383-456a-a17a-0a66f1030af2",
        "cursor": {
          "ref": "0b58c2d2-fa4f-4760-9203-5007c830d699",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f2aabd44-636c-49a3-bee5-0fe7bc1f8cd2"
        },
        "item": {
          "id": "8c080ec8-1383-456a-a17a-0a66f1030af2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81043023-3097-40cb-8918-bc27fb58c931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e650d9dc-c374-4cd1-b2d3-65db8bf05973",
        "cursor": {
          "ref": "5366178b-7cf3-4a42-bbbf-fc93e8a218a8",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a777f7a0-b7c2-46ef-b269-1c87fa6b2fba"
        },
        "item": {
          "id": "e650d9dc-c374-4cd1-b2d3-65db8bf05973",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5928ac92-4575-4b7f-a829-f77fba120010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e941db8-cd54-4958-a76b-5567c7273ec8",
        "cursor": {
          "ref": "f45ffdf0-81b6-4b94-a6bb-be31274632a5",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "78db5d5c-31d1-42fa-a0ba-e123190ed256"
        },
        "item": {
          "id": "4e941db8-cd54-4958-a76b-5567c7273ec8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5ec44f61-a925-4181-807d-edecc87089d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a8f801-faa1-4692-bddf-6c98e8197653",
        "cursor": {
          "ref": "a2e74f14-e714-4141-a9eb-edbc9317d054",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6899777f-d948-48ab-b87b-c74c41e241d1"
        },
        "item": {
          "id": "f6a8f801-faa1-4692-bddf-6c98e8197653",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0bca6532-56d9-48b7-a729-8b3d1891ed39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7767a0-81b6-431b-8c54-a1048a1c40d7",
        "cursor": {
          "ref": "58b8a06f-2f9d-47cb-8630-57c1e1833b84",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d971f118-39ac-426a-8754-0366cfd99e87"
        },
        "item": {
          "id": "9a7767a0-81b6-431b-8c54-a1048a1c40d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "31afc10a-bfdd-45a3-a8cb-1eacb612dfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4838f817-11fc-4194-b454-7b2587a2bf4c",
        "cursor": {
          "ref": "f7c192e6-5e6e-4a4a-a09c-1d780dac907b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c0cde4a3-bd74-4086-b7f4-ee1634a5bbc3"
        },
        "item": {
          "id": "4838f817-11fc-4194-b454-7b2587a2bf4c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "79701481-3fba-42ae-bbd4-98b29aa0f479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25535feb-ba04-482f-948b-315eb947f5fb",
        "cursor": {
          "ref": "5ef50365-c666-498f-9f08-08808b3551ff",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9b520f1a-e9b8-4992-88bf-5aef23ea042c"
        },
        "item": {
          "id": "25535feb-ba04-482f-948b-315eb947f5fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "56745294-5a7d-49b0-a91b-0f11a4530a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ad05a0-162a-49f8-9b5c-db7d814a42b4",
        "cursor": {
          "ref": "a52d40ba-7d55-48f3-92b6-bde5dd63bb49",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "80ad35ce-8086-41ef-b7c0-68937ebe1ab0"
        },
        "item": {
          "id": "76ad05a0-162a-49f8-9b5c-db7d814a42b4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07845361-450b-46d7-9c98-80909bb29be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aea6bb4-4a19-4d65-8d79-00edb66eecdc",
        "cursor": {
          "ref": "706e8d9d-c770-428b-9638-9956bd8b09ca",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2a292973-e68f-48ea-b786-8fe434ec2ccd"
        },
        "item": {
          "id": "3aea6bb4-4a19-4d65-8d79-00edb66eecdc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cd62f812-9574-40ca-b1de-87a6f74cc7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9effd2-fb57-4e8f-b433-71edadcb409d",
        "cursor": {
          "ref": "d87cd6f7-d13e-4272-80be-80fd6370ad0f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "88fe8673-b1e3-44e9-a8bd-ef85b9eca05d"
        },
        "item": {
          "id": "5f9effd2-fb57-4e8f-b433-71edadcb409d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ffd819cd-d5f5-46ef-8683-1bb00c9ecfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34c07a2-c5e2-4665-92c0-895f3f7d5862",
        "cursor": {
          "ref": "abcf91ee-d551-4a74-a02f-82029e43fc0a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "399a3bcb-71d5-4f6b-baf7-1eea7c963907"
        },
        "item": {
          "id": "b34c07a2-c5e2-4665-92c0-895f3f7d5862",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ba8a2d66-f537-4b5f-a0ca-5b631eb87e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d40805-898c-4226-be64-21de4286c5c1",
        "cursor": {
          "ref": "be5c9ba9-ceb8-4d12-8d70-27f32f519864",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "03643e02-57e3-4420-a083-c8d10ecf766b"
        },
        "item": {
          "id": "03d40805-898c-4226-be64-21de4286c5c1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a03b0078-d9c6-43a9-b8a8-259b59dce67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3067ff2a-c1c7-4171-9b1e-63ddc48c6484",
        "cursor": {
          "ref": "38d5c255-24c6-48db-812c-d78fe05703f0",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "26126dce-92fe-4535-b4ba-220c4f4bc864"
        },
        "item": {
          "id": "3067ff2a-c1c7-4171-9b1e-63ddc48c6484",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7f190339-30a1-407a-86a2-04369bdef66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24287ad5-7ba4-4cbb-970b-db65c06d508d",
        "cursor": {
          "ref": "816ff8f7-dad1-4840-895e-65825d563203",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bad4cdec-25f4-45d9-a98f-6dabce078de6"
        },
        "item": {
          "id": "24287ad5-7ba4-4cbb-970b-db65c06d508d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3cfdb8ca-b61f-47c1-b438-202da5bd40c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dd8d04-96ad-4641-bc19-19aabda600d6",
        "cursor": {
          "ref": "28323fa1-c28b-468d-8faa-a8b3cf2ca551",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b34f9c98-b5f0-4627-a166-11831ebcd3ad"
        },
        "item": {
          "id": "27dd8d04-96ad-4641-bc19-19aabda600d6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "736ad8fe-4019-4290-87e5-f924bc8c1da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abac9f29-e9c0-4b40-9d1a-60e010633929",
        "cursor": {
          "ref": "96469600-4a99-4753-b090-cbef37d0ca2a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b5563cab-413c-436c-9c2a-b90d50408045"
        },
        "item": {
          "id": "abac9f29-e9c0-4b40-9d1a-60e010633929",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "281e919e-26f4-406c-b837-f53585a04218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee0eb6e-82af-4cfe-92d8-24c21e609f8b",
        "cursor": {
          "ref": "d10f3c0c-1ceb-46ce-8302-f11b54eb566b",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ac33b65c-3d0f-49ec-9348-8b85f32a803c"
        },
        "item": {
          "id": "0ee0eb6e-82af-4cfe-92d8-24c21e609f8b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5a4b5b83-a95b-4fd5-9ac6-663e361bcd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1d4e07-8d42-430b-ac78-89c8d207ce84",
        "cursor": {
          "ref": "f0edcf60-d515-4038-bc96-ae1b836ae979",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "59a5f69c-7c73-44d9-bb07-8515f45635ab"
        },
        "item": {
          "id": "cc1d4e07-8d42-430b-ac78-89c8d207ce84",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a606a6b0-d6c6-4885-9ba5-4b7ffb377637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b069cc2-c77a-4a4e-ae96-d7316b8adb83",
        "cursor": {
          "ref": "43c6fa42-d54c-4583-b552-05d5dbb4a801",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "157fb67c-90a4-4f9b-8cb7-7569235ec6c4"
        },
        "item": {
          "id": "0b069cc2-c77a-4a4e-ae96-d7316b8adb83",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "075d2b24-23c0-4459-b187-41c7ab58cf15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77677cb7-f839-4151-abe9-686007390a05",
        "cursor": {
          "ref": "76bcc8d7-ce88-46d9-9a80-6d33d00946ba",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6c1165a1-6992-470f-b068-f8f7a5e50395"
        },
        "item": {
          "id": "77677cb7-f839-4151-abe9-686007390a05",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d844e40e-7fe4-483a-bd13-1151ac61ec26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db7c2c1-a815-4366-ade5-cd4a5881e139",
        "cursor": {
          "ref": "4f6e6b4a-2187-41a0-a264-7fd0749897dc",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b171fd87-a1ea-4cab-8451-0ee58a7b7fb7"
        },
        "item": {
          "id": "5db7c2c1-a815-4366-ade5-cd4a5881e139",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1c72d1f8-01cf-48d8-bfbb-df5ff291cf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f684a628-b857-4b6a-987b-3c4d948fcb25",
        "cursor": {
          "ref": "8140806e-b59a-4237-b520-73c28ccd61f1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "36f3893a-1792-4aae-b59e-7d8c474baec8"
        },
        "item": {
          "id": "f684a628-b857-4b6a-987b-3c4d948fcb25",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bd03a171-8ac2-43fa-8c14-77ae0d05d724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c5dd0e-6417-4520-8db0-9329dac99344",
        "cursor": {
          "ref": "c2a3c09a-5572-4d18-ae1e-b7d32a56dfb2",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e7d69646-77f0-4be3-8072-7e91739d9c4b"
        },
        "item": {
          "id": "29c5dd0e-6417-4520-8db0-9329dac99344",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "598de6e8-7aa4-47ab-a3cc-9184c4d18d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ba694b-077b-4ca8-97e3-23fb9e566cee",
        "cursor": {
          "ref": "bc9db9c7-3edb-416d-816d-a266ccec1d28",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "12ef527f-642f-4799-8230-0f6f22381048"
        },
        "item": {
          "id": "57ba694b-077b-4ca8-97e3-23fb9e566cee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3eafa832-0ff9-4ef6-98b8-f822b37edc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b619f091-451f-4735-a66c-7a94b8d36989",
        "cursor": {
          "ref": "9646889d-00b2-4c05-b609-1ce99cebd179",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cc0e0f16-f655-45f0-9d8b-33d3634bfd86"
        },
        "item": {
          "id": "b619f091-451f-4735-a66c-7a94b8d36989",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fb8e229c-788a-493d-8eb0-52e1ab691274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc4a648-f62f-41c2-a8a5-5e42bb19436f",
        "cursor": {
          "ref": "31ccd814-3b08-43dd-bf12-7b5b3c9313d3",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2c11b5ee-6e9b-4784-a632-b91fe0db0e3d"
        },
        "item": {
          "id": "7dc4a648-f62f-41c2-a8a5-5e42bb19436f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "566097c5-63c6-473e-a738-e8e2539ace8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c267ab-a2f1-422f-8319-1a8a5de2f809",
        "cursor": {
          "ref": "545040f3-afdc-49f7-b3dd-fd485914ccbd",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "631f1f8a-581c-4684-bb8d-9787ade08fce"
        },
        "item": {
          "id": "e2c267ab-a2f1-422f-8319-1a8a5de2f809",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "70bc0380-ca6e-4bdd-a6d9-b4374d4f4b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90f2c18-be4b-421a-b009-9b9fcbe43a67",
        "cursor": {
          "ref": "0a6dd148-ff6a-465e-9c22-cdda3888da21",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d7d181d9-9a9e-4bbf-bb42-8919d83127a2"
        },
        "item": {
          "id": "d90f2c18-be4b-421a-b009-9b9fcbe43a67",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "34a0061a-bc08-4fa5-827a-8a0159bc3de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3101742d-2eb2-4b83-a770-56522624a59f",
        "cursor": {
          "ref": "c0987e14-cbb9-41f9-8a20-d4c965d7c5ad",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3f33db59-1849-46a8-8487-5263b300067b"
        },
        "item": {
          "id": "3101742d-2eb2-4b83-a770-56522624a59f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bba3bdc9-c4cf-4640-b7fd-59c5c0a9e018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa710a4-4aa1-4f1c-bc46-788f5d7b9299",
        "cursor": {
          "ref": "ccdee457-e8e9-4b2e-9547-83632ed138cb",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "544504f2-ea7f-42aa-bb0d-38b136bba2b0"
        },
        "item": {
          "id": "efa710a4-4aa1-4f1c-bc46-788f5d7b9299",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dc548c0c-e399-4076-859f-71bf4049c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad653090-021d-4c34-8451-c97b162772ad",
        "cursor": {
          "ref": "1a9ca47a-6733-441a-8487-a6d6e0389784",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "14531cd1-36ef-450e-83e1-f79b4aa92a9c"
        },
        "item": {
          "id": "ad653090-021d-4c34-8451-c97b162772ad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "85bc53bf-8af6-4596-9378-0dbaf0cd7ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb942f2-3557-4b7b-95c5-07f2f9f4c742",
        "cursor": {
          "ref": "9e41fec7-f784-4d61-a481-aa5450152a40",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "39ade8f4-4298-4e6a-a606-9f79c62c79f4"
        },
        "item": {
          "id": "6cb942f2-3557-4b7b-95c5-07f2f9f4c742",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8c9a4c57-7541-49bb-8e61-4eef72e56183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eee4b5-4040-4d67-a74b-df28f71cbdb3",
        "cursor": {
          "ref": "fc81e3be-daa5-4c0b-8136-bc1ebbf7a93a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ad2db672-0a46-469a-a8d2-9d4b7eda85bd"
        },
        "item": {
          "id": "e7eee4b5-4040-4d67-a74b-df28f71cbdb3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a271ac44-0f98-4a2d-b9c2-0383ed56c401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481ae44c-2113-4abf-abaa-3d8cf022bd55",
        "cursor": {
          "ref": "c7006695-56f3-4a6b-8738-7b7ecffd911a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d58f5d30-9d59-409b-8e09-29687b333b30"
        },
        "item": {
          "id": "481ae44c-2113-4abf-abaa-3d8cf022bd55",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a0ab7dfa-7dea-4e81-be63-9a81479dfc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482e0102-6231-44e0-b84a-331502cae743",
        "cursor": {
          "ref": "f0321d9b-d5ab-4f84-928c-196a54e765de",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "70645ece-0b3b-4061-a67e-e23afbc886f0"
        },
        "item": {
          "id": "482e0102-6231-44e0-b84a-331502cae743",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6dc8b495-c4c9-4b5d-aa9b-5ba17b09596a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f501e468-4c40-4e88-b6fc-bf53ed9d46e5",
        "cursor": {
          "ref": "1127a814-64cf-470b-a1e6-300cfcd8c449",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "90a1e3fe-cdf2-4999-9117-662920653ebe"
        },
        "item": {
          "id": "f501e468-4c40-4e88-b6fc-bf53ed9d46e5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8abc2cd7-ea4b-490a-aa22-40b5f89395ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d27399-684c-4150-9048-ce155c25bdaf",
        "cursor": {
          "ref": "57015298-a5a5-4d60-ad69-33774a7a5110",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fe02734f-9ef8-486c-8dde-2d31b5029266"
        },
        "item": {
          "id": "34d27399-684c-4150-9048-ce155c25bdaf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6cb0a627-ad72-4cf0-be67-3af7a81056e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d407e82-839d-4cad-9ab3-47460ab0af29",
        "cursor": {
          "ref": "2c6c03a4-9572-4d97-a882-014931bffdd5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5fb8a568-bf05-4610-b0f0-feddf043705d"
        },
        "item": {
          "id": "2d407e82-839d-4cad-9ab3-47460ab0af29",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d12b944a-cebf-4831-b13f-05f0d24454f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f19dd9-9b13-4b5c-a193-302dcc99c6ef",
        "cursor": {
          "ref": "1e2fbc1a-0794-49e0-bfc2-2e9cd7c05018",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c3ea811-f5e3-4992-8b8d-16f82fad8a53"
        },
        "item": {
          "id": "31f19dd9-9b13-4b5c-a193-302dcc99c6ef",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b3cb79d6-04d6-4d83-b197-36f42461171f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30389966-53f1-4f86-9605-4a5330cde3e4",
        "cursor": {
          "ref": "e3b414cf-b053-49ba-ba55-bb31dff18732",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d329b338-4c46-4530-aa14-75fe6926cb87"
        },
        "item": {
          "id": "30389966-53f1-4f86-9605-4a5330cde3e4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7c7eb239-b001-4159-afba-9d17f4ce2ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d55b64-ab51-48f3-9080-f5557ccead8f",
        "cursor": {
          "ref": "b8d6a2f3-3888-4724-9861-a3f6eff98991",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0bb5ef5a-8cca-4383-97f1-f04dd1db4fcd"
        },
        "item": {
          "id": "d5d55b64-ab51-48f3-9080-f5557ccead8f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d88597d9-4c90-4acb-98fa-aff9011a692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09687fce-fbc2-4bf3-8c52-809a8f4b2d5f",
        "cursor": {
          "ref": "2114a68b-0fd5-498b-be94-a169fc927478",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a5614d85-92fa-46dd-8e93-f146f57cae66"
        },
        "item": {
          "id": "09687fce-fbc2-4bf3-8c52-809a8f4b2d5f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0d303f5f-2d82-4a57-a05a-ddbf0dd4b104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87b4f6e-4fb5-407b-bc9f-9a2e4e568fd0",
        "cursor": {
          "ref": "bc8edb81-0ecc-4005-963c-5c2e3fc48ce5",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f29456d9-3544-470b-aa21-04c1c685cab3"
        },
        "item": {
          "id": "a87b4f6e-4fb5-407b-bc9f-9a2e4e568fd0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ca741f39-281c-4dda-9cee-b98d7fb2f666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5305a333-28f9-400e-844d-4ad9fd5be98f",
        "cursor": {
          "ref": "b526000b-6973-425d-ae13-932b1402180a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8f1d2926-2f57-430d-9e11-a1d578e56d3f"
        },
        "item": {
          "id": "5305a333-28f9-400e-844d-4ad9fd5be98f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b9350dea-bb0c-43b3-83e3-2a948ddb8f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6fce79-44ff-401e-8b82-12e6530d6c22",
        "cursor": {
          "ref": "97d48ca8-65cf-4d22-aa8f-8a0674bc6543",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d94a2dea-e55a-4350-b9f9-328b2836b188"
        },
        "item": {
          "id": "3a6fce79-44ff-401e-8b82-12e6530d6c22",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ce035ae7-87b3-47dd-9191-8d54ac73f658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8a10f5-9f62-41a6-a367-b33e302b05f4",
        "cursor": {
          "ref": "c928c8c3-c3ea-458c-87b8-d99fab2d5a0e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4d20f715-8f02-426b-8858-b62fa83ee9e4"
        },
        "item": {
          "id": "0f8a10f5-9f62-41a6-a367-b33e302b05f4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4397d3a7-ef08-4167-a0fd-1eea1d6f4143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435f6250-8111-447e-bfdc-6705df5dbbdc",
        "cursor": {
          "ref": "1ea11b12-2d09-40ca-889b-50877ba55caa",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "28d2ee22-8123-49aa-af5b-1dc8645bafae"
        },
        "item": {
          "id": "435f6250-8111-447e-bfdc-6705df5dbbdc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4a54fda4-b171-4c15-a718-90fe0dafd8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3326e25b-15b4-4289-b4f0-5d4c643be6e1",
        "cursor": {
          "ref": "da50bb18-ea0a-434c-a0b6-b224b256c3ff",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cf7e3423-0edf-4b1f-8d18-4befd011cd42"
        },
        "item": {
          "id": "3326e25b-15b4-4289-b4f0-5d4c643be6e1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "98fdd31e-7aad-45ab-b9cd-710f1d5b44b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09891f3e-cb78-4cba-8b0c-c022d4cd9693",
        "cursor": {
          "ref": "87c8eec1-82c7-4784-8ad4-2656ab717249",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2df766bc-d35b-447e-bcac-8697df8949b7"
        },
        "item": {
          "id": "09891f3e-cb78-4cba-8b0c-c022d4cd9693",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "052f64e9-49f4-47f5-bd0c-825d6ae12ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08a4b79-3edf-4314-800c-8ae91777c52b",
        "cursor": {
          "ref": "4fdfd235-d37a-4eba-ba3f-cd08bd708337",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a8cdc4c8-57b5-4af2-9fb4-7a005e515178"
        },
        "item": {
          "id": "e08a4b79-3edf-4314-800c-8ae91777c52b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "12f3c146-26a9-4a51-8866-edc5717f2b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d948b27-4f54-4b34-bed8-74d65e0b6ca6",
        "cursor": {
          "ref": "c9b1c373-14eb-40b3-8df3-c3237dab575f",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b1bd7cf5-a3d3-4968-871f-611dbbb16279"
        },
        "item": {
          "id": "9d948b27-4f54-4b34-bed8-74d65e0b6ca6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6ad0060f-6d92-4f89-8bf2-4cf5598f11ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4e6461-8a0a-4267-9153-90d28e725148",
        "cursor": {
          "ref": "d048484c-ae0c-4c4b-b31f-03f70d96198d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "49bce5c7-ef62-4476-a50d-7e8a4c1cc514"
        },
        "item": {
          "id": "0d4e6461-8a0a-4267-9153-90d28e725148",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bfa66abb-c5bf-4d7e-9a76-9eb2576c0e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9075209a-e6a3-48cf-801b-2bd93fe23137",
        "cursor": {
          "ref": "8a5045e7-e77d-4ca9-b6bb-60e1015ddf28",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ec1bdb79-4c5a-4f3c-ae28-3af3b45dcaa2"
        },
        "item": {
          "id": "9075209a-e6a3-48cf-801b-2bd93fe23137",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "52e4620d-f76a-4dd0-8a69-fc3345058010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc8ca1d-18b3-4caa-84e6-c0c3c9da502c",
        "cursor": {
          "ref": "3684871b-f71f-425f-9e87-9e312c419af2",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4d57ce9d-2ccb-429c-a22f-3641016e2e01"
        },
        "item": {
          "id": "9bc8ca1d-18b3-4caa-84e6-c0c3c9da502c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d159aa3a-86fe-4c03-af2a-dcb05e50932c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cd9828-3d5a-4577-a802-42cf7c3d02ac",
        "cursor": {
          "ref": "d32a7508-bab8-48bd-b0e7-1f98d68e45c8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93ebe9aa-c3bd-44e1-80a8-41253e994ae2"
        },
        "item": {
          "id": "a3cd9828-3d5a-4577-a802-42cf7c3d02ac",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d481d92c-5b4d-48e3-a9a6-026ec3d25f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a0d614-ca4a-4bcc-9a45-e9f10a4035ab",
        "cursor": {
          "ref": "5ec9e60e-ea49-420a-b6e1-d3c01aca0632",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2bf1b1d3-4c98-4b64-b635-b71d32349ec2"
        },
        "item": {
          "id": "30a0d614-ca4a-4bcc-9a45-e9f10a4035ab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ab4a08f5-dd94-4362-b84e-ddebcc32d045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0033ce-08a7-47a1-8989-0556e9c2bb96",
        "cursor": {
          "ref": "1dcece98-8b88-4627-b310-02a70542e392",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6cefac44-f547-4f14-8479-a58daf1959fd"
        },
        "item": {
          "id": "8c0033ce-08a7-47a1-8989-0556e9c2bb96",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cc305c87-b39e-4210-981e-c476ff5396d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cb87cb-15c3-4ec6-bcdc-e70e12c0613e",
        "cursor": {
          "ref": "37af4795-f396-4db8-8ccb-ad7b8974d912",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "84718e1a-b856-4bc7-91f0-b760fbbd426c"
        },
        "item": {
          "id": "b0cb87cb-15c3-4ec6-bcdc-e70e12c0613e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "302990e0-528c-4e79-bd2e-a3c8c2337897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9749d1-c370-46ad-80f1-957ae83d9efa",
        "cursor": {
          "ref": "92fa422c-c988-4e3b-8550-eeda9334ad81",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6397d1e2-214f-4ffe-aa47-4505c8ed8c43"
        },
        "item": {
          "id": "be9749d1-c370-46ad-80f1-957ae83d9efa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89fc64a6-e32c-4632-be19-e62237742182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c39089-b7e7-4026-8844-eef25e6d4b4a",
        "cursor": {
          "ref": "ba851baa-140c-4b24-bb35-3b5edfa53a90",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2abab6f9-abb6-4e8f-9a93-b9646d0e9427"
        },
        "item": {
          "id": "c9c39089-b7e7-4026-8844-eef25e6d4b4a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e5a6257c-5ef1-4e22-9d8d-8a3bdac075e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7746778-def0-4829-a5bf-afb389e7bee3",
        "cursor": {
          "ref": "18ae7b8d-81fe-4570-a869-bcad523fa830",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3c345842-c32a-4fef-8bb1-9c4d04561ceb"
        },
        "item": {
          "id": "a7746778-def0-4829-a5bf-afb389e7bee3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a83a6824-c34c-4306-b9d6-da248ac7ba82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beead68-505c-45d2-ba4f-420198d99e71",
        "cursor": {
          "ref": "616cb499-de70-45ca-857b-bf6f89876f58",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "98481e68-5886-47fa-9ae9-cf962d0205e0"
        },
        "item": {
          "id": "5beead68-505c-45d2-ba4f-420198d99e71",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2a5efc8c-4e37-4d8f-878f-202cbe1cfbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8932ea-eddb-47ce-bc61-162f5d77cba6",
        "cursor": {
          "ref": "f75a16a2-b3e6-46b4-8adf-0e11ecda86d4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c3645dbd-e256-4c11-8d54-12ec45d35848"
        },
        "item": {
          "id": "4c8932ea-eddb-47ce-bc61-162f5d77cba6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a37fa6b9-cc78-40c3-83d6-17cdc719233b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cb89b3-993b-4b65-8977-eeb824d5214f",
        "cursor": {
          "ref": "7530ede0-0a1e-483c-b42d-812684874187",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e0c766f9-5bf0-47fa-bcaf-a9fc11c482a8"
        },
        "item": {
          "id": "84cb89b3-993b-4b65-8977-eeb824d5214f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "75d4e93d-f619-4d10-8eeb-6f3a77c751f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f6e0a8-317f-4e69-a726-cf5ca6323ecd",
        "cursor": {
          "ref": "1b7d0388-385e-4638-ad9c-24820bce28b4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "24373b62-8136-4d18-a72d-3f28a1d8a0a1"
        },
        "item": {
          "id": "a0f6e0a8-317f-4e69-a726-cf5ca6323ecd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fb610502-7fa6-4af4-831a-fbfe89e30e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbcf72c-49d1-4c1b-934c-dcf51862ee01",
        "cursor": {
          "ref": "2ebf9742-4443-4f52-a5f8-816046ac3eca",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1ab944a5-8851-43aa-be6f-d2270bd7d70f"
        },
        "item": {
          "id": "acbcf72c-49d1-4c1b-934c-dcf51862ee01",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "913f424b-0bd3-4ed9-b647-edd3e941a26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48a7f85-7e2c-44ad-afc1-01175cb5c35c",
        "cursor": {
          "ref": "3e9ee888-fef4-49e1-8a05-5eb0c4429e4e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c46c8768-bf72-4e03-bacd-721f1f2df0ee"
        },
        "item": {
          "id": "f48a7f85-7e2c-44ad-afc1-01175cb5c35c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "80cff332-9944-47e6-8fb0-d0f7c0dd8c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c7d0ca-1f80-43bb-b1db-77a4137c9e62",
        "cursor": {
          "ref": "08c23c09-42db-489a-8e32-b9ddae489883",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "35afd222-a969-4b68-874d-96f3b8edef08"
        },
        "item": {
          "id": "37c7d0ca-1f80-43bb-b1db-77a4137c9e62",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9b0d694c-6909-4c31-a354-6928334ef9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f2485a-37df-4fb9-a90a-043a995f8de4",
        "cursor": {
          "ref": "92ef2f1b-b40a-4d4d-ab8d-c00acefb4756",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "90e60a11-ce11-4ef9-811c-f70f3cadaee7"
        },
        "item": {
          "id": "86f2485a-37df-4fb9-a90a-043a995f8de4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7bcfc865-798a-4885-8ea8-37a87ab228d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0248560-e21f-4705-9700-de2405c885a6",
        "cursor": {
          "ref": "68a940f1-9cab-460d-9c46-6ee72971c9be",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b827918d-8a40-4349-85c1-f186dedf887b"
        },
        "item": {
          "id": "f0248560-e21f-4705-9700-de2405c885a6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "652eb432-6d3e-4bbb-8b91-9072d23bb4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eac593-4fda-4521-9f98-6a2cd0445152",
        "cursor": {
          "ref": "530faa9d-1f12-4654-88ce-c2b923e12c7e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "706422bd-b58b-4756-8928-42866b99339b"
        },
        "item": {
          "id": "a1eac593-4fda-4521-9f98-6a2cd0445152",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "23c94501-6259-4029-b4d7-d2dfff9845d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4d692f-bb8b-40e9-b8a8-efd8e682d3a9",
        "cursor": {
          "ref": "d9914ebb-6ef3-442b-98ae-5817ba38dee1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2c0873b4-8996-4c9f-9fb2-73c745bc6557"
        },
        "item": {
          "id": "cd4d692f-bb8b-40e9-b8a8-efd8e682d3a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aee8113d-0c80-4084-9382-7b297ae7b482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491f7e30-4fdf-4f22-8145-281660d017c7",
        "cursor": {
          "ref": "b45129f2-b353-494c-b48f-734a1f4cb811",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c6871a73-e360-48cb-8e09-1eb85ff89654"
        },
        "item": {
          "id": "491f7e30-4fdf-4f22-8145-281660d017c7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "35a35ba8-68e9-40f5-ac8c-111058edca41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ffe069-f978-49f7-afc4-428f50a00d42",
        "cursor": {
          "ref": "ca1bfba1-4d7b-4be1-9855-2a50980f386e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "12dd6413-0967-443a-a0a7-5582459ed155"
        },
        "item": {
          "id": "73ffe069-f978-49f7-afc4-428f50a00d42",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e2ba54ac-2a9c-412c-b194-7253fc9bc2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d111ac87-867e-43c4-b288-8f47d32dcb4b",
        "cursor": {
          "ref": "ea07d6e3-d81a-4b1a-9033-62a5d2a3f553",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f91230eb-a19c-4e6e-aa21-05bcee9f6685"
        },
        "item": {
          "id": "d111ac87-867e-43c4-b288-8f47d32dcb4b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e32f0aea-172e-4aea-80a5-bb9b509df73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287b46c3-51cf-4e30-9ef3-d3065a94695d",
        "cursor": {
          "ref": "1c196510-b0af-4c8d-adca-1b393f539bbf",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a7ac5c4b-4cce-467b-a240-1e85c3893d03"
        },
        "item": {
          "id": "287b46c3-51cf-4e30-9ef3-d3065a94695d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "17286ebf-39ae-46a3-b65f-0982586d5ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ff8b0a-2042-41c3-b8fe-e0c26c725e3e",
        "cursor": {
          "ref": "87a23e96-6c14-4036-a109-83fa55b83e32",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bffcb708-89d7-40f1-bd7d-ccf4ad552a0c"
        },
        "item": {
          "id": "a0ff8b0a-2042-41c3-b8fe-e0c26c725e3e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c542dc4b-967d-4d4f-93bc-1899678a3f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf230a83-d3b1-4c90-bf82-d3447edf667f",
        "cursor": {
          "ref": "e4e0c502-b420-4003-8117-239d3d0eb111",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f506a9d8-bf89-4482-a91a-6ee0ca75bcf3"
        },
        "item": {
          "id": "cf230a83-d3b1-4c90-bf82-d3447edf667f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b65b8b2d-0180-4e55-8b72-438d1c80d41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ec6d2b-409f-4f49-a1c9-ad21dc3c17e0",
        "cursor": {
          "ref": "a0b0bf9e-b694-4c1d-8a21-e23447df180e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6a9ffc02-bbc6-4584-827c-7d2730c794c7"
        },
        "item": {
          "id": "36ec6d2b-409f-4f49-a1c9-ad21dc3c17e0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f8fadbdb-64cf-4aec-a026-34bd6eab1e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb814c4-5c34-4516-b384-b7b6e43b1e07",
        "cursor": {
          "ref": "21e089fe-56cc-4745-9637-1af16fec8606",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "efea3e31-fee6-41a7-b34d-3c25001936d2"
        },
        "item": {
          "id": "8cb814c4-5c34-4516-b384-b7b6e43b1e07",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "12f0091f-15cf-411c-bdfa-969aa2224079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8b1812-e514-4ca8-a5a6-3462cae894d6",
        "cursor": {
          "ref": "e7cc2b67-9752-42a0-a6fa-54d7e4707d32",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "51ad5fbf-5614-4567-b53a-b95cc9166b7c"
        },
        "item": {
          "id": "1b8b1812-e514-4ca8-a5a6-3462cae894d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7179ac65-3761-4779-af26-06b07a8a79d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02eda41-e648-4fb0-8a5c-94128f09940d",
        "cursor": {
          "ref": "2fa62c9a-10c7-44e5-823d-c96bb8fe255f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2cfa95bc-91fe-4c4f-9f96-b13619003e84"
        },
        "item": {
          "id": "c02eda41-e648-4fb0-8a5c-94128f09940d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8c538f70-0005-4da4-95e0-1da5a5860450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeec5db-ddb6-4de8-90c9-5e853ba7f533",
        "cursor": {
          "ref": "82dd0bc5-2e24-47a1-9438-c045e8a11d45",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c504669f-b567-4088-8195-64c98cfa551e"
        },
        "item": {
          "id": "ffeec5db-ddb6-4de8-90c9-5e853ba7f533",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "84fe9112-06cb-4eac-af69-5160c65d52ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fcc78e-214a-4eea-88be-21e3497f23d9",
        "cursor": {
          "ref": "f61d4f56-eb83-4caa-9389-245807452a68",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "127d94cc-5507-4223-8f51-1ce10d9d6fa1"
        },
        "item": {
          "id": "c3fcc78e-214a-4eea-88be-21e3497f23d9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "19e9550f-eed6-45c9-b0eb-2553c14cbbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b3b81f-8361-4e08-8c25-480c38e32bc7",
        "cursor": {
          "ref": "82964092-db42-4863-b677-60c4ed772b2e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4eba6ad3-daa2-4001-8e62-2d14a6e12425"
        },
        "item": {
          "id": "e9b3b81f-8361-4e08-8c25-480c38e32bc7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ec891821-f570-40cf-bba9-128815220e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff33903d-90ea-4880-acff-d53a143ee9d5",
        "cursor": {
          "ref": "c671a2c8-3195-44c7-a53f-49ae4bceeb4b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "675da9ef-1ddf-4f89-b4eb-0c5bb873038d"
        },
        "item": {
          "id": "ff33903d-90ea-4880-acff-d53a143ee9d5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "33e21001-2098-4417-a6dc-b22cda2c668a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbfcc44-01d5-4bd0-adf5-1f509c359124",
        "cursor": {
          "ref": "a407d892-a28f-4ce1-85d2-0772e2cf7c30",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fe3e5574-cf94-494e-9ed5-dae1b138b6ed"
        },
        "item": {
          "id": "4cbfcc44-01d5-4bd0-adf5-1f509c359124",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "db1e2c31-7054-4621-b23f-fcd57d74198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0352f115-1d05-4259-9bae-5b5ce87b9f32",
        "cursor": {
          "ref": "7cefecb6-c718-4792-9a43-f5f686577855",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ec1008c1-c878-4291-b25c-bb5996cc6677"
        },
        "item": {
          "id": "0352f115-1d05-4259-9bae-5b5ce87b9f32",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dd969cb0-16aa-48ea-a803-583cd9936722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176937b1-363d-4bbc-b028-572a621a9ff5",
        "cursor": {
          "ref": "95fd0ec8-b8d6-4a52-a53b-4287db10491f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4f26c959-dd35-4aa5-ae50-80ca6ef9f168"
        },
        "item": {
          "id": "176937b1-363d-4bbc-b028-572a621a9ff5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8b295d25-8cf4-427d-bd36-7b0376e4942b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bcb13a-8579-4056-8b38-a4a32867ad2e",
        "cursor": {
          "ref": "5d6c1d13-a5c3-44be-8fc6-06e4bf2c4a25",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f003301c-c941-4e4f-b1de-bc7212e6775f"
        },
        "item": {
          "id": "59bcb13a-8579-4056-8b38-a4a32867ad2e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9322f5f9-db2d-4acd-b90a-5ff115e9d699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dc3956-0a30-490c-8fdc-f8f7f934a5b7",
        "cursor": {
          "ref": "351be41a-3868-495a-9a27-47f7fd8c0418",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "24e5f21d-4a7a-463b-a590-092b09a7b8d5"
        },
        "item": {
          "id": "37dc3956-0a30-490c-8fdc-f8f7f934a5b7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "014761a2-7a46-44c1-b104-525ab3a84cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487df001-5f18-4061-9d34-85a049b12147",
        "cursor": {
          "ref": "4a95a863-2ff2-4013-b0f7-185d97f344b7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4a8e5221-4628-420c-8ccf-2f2c15251d4f"
        },
        "item": {
          "id": "487df001-5f18-4061-9d34-85a049b12147",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "639a4b63-c6b0-4c71-ae3c-0dd91d992098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de867af-cccd-43b1-8b03-290939a6c4b2",
        "cursor": {
          "ref": "21e381ee-3cd5-4894-85ac-cbc95eb7f36e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ed086be2-5e16-4cb7-af6c-6f7bcd66e9c8"
        },
        "item": {
          "id": "6de867af-cccd-43b1-8b03-290939a6c4b2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "30a86443-5a7c-4257-8c8c-492bce13350c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840c5d17-95a1-4777-911a-0568c36d2373",
        "cursor": {
          "ref": "62a5470d-b9fc-4dc4-a6fc-71866c87bbff",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "aef8b080-3dd3-4ecd-99ee-ec09672962a8"
        },
        "item": {
          "id": "840c5d17-95a1-4777-911a-0568c36d2373",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "408abdb4-6da7-4df3-8057-419484519473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186036b5-13d6-4072-b852-1920041d7f18",
        "cursor": {
          "ref": "fa6dbbed-7898-4e2f-861b-93a4b98ce408",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c3f0b8b5-dfc4-40c5-b94b-7386862e9299"
        },
        "item": {
          "id": "186036b5-13d6-4072-b852-1920041d7f18",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a58803ae-839b-476e-b48c-d5f0a1237ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a066b7f7-01c4-43bb-afb4-d18f74368427",
        "cursor": {
          "ref": "89f50135-03b0-4586-b270-0ac1160924d1",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6f61084f-fe73-4d1d-81a1-5e2680667c9c"
        },
        "item": {
          "id": "a066b7f7-01c4-43bb-afb4-d18f74368427",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f348dce7-61b0-4198-98a0-70b2e32f5101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd68b6e-e459-4f85-9fe2-ea1aec77e49b",
        "cursor": {
          "ref": "b61f7eb4-dd3c-4a27-90a9-dcb4abe9b4e6",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "483524c5-9942-4c84-9dc7-65819e6a3c96"
        },
        "item": {
          "id": "6bd68b6e-e459-4f85-9fe2-ea1aec77e49b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "07108462-577e-4332-a177-152ed1dd7ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f052886-456e-4d93-948d-be453be58179",
        "cursor": {
          "ref": "09959920-d7fc-4c44-b734-773b259f3282",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "28049755-9dfb-4741-94c1-0365bfe64289"
        },
        "item": {
          "id": "2f052886-456e-4d93-948d-be453be58179",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7d306b19-af97-426c-84b2-99d34343d985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca4e490-61e1-4107-9cca-2dba6b9ff3bc",
        "cursor": {
          "ref": "55b42656-98f7-429e-b667-7ad358f74135",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "851b3285-8990-4096-961f-959a03faae86"
        },
        "item": {
          "id": "9ca4e490-61e1-4107-9cca-2dba6b9ff3bc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b3763805-cbf1-41a4-8410-efd9602cdd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64fd527-bc01-4d93-a260-e10627a7480a",
        "cursor": {
          "ref": "21169012-d136-4826-b67d-8590cc98e468",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bee14f2c-b949-4ea5-acde-dbb63d53c4c1"
        },
        "item": {
          "id": "d64fd527-bc01-4d93-a260-e10627a7480a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "26e31fbc-79b6-41f8-8ff5-24add829c690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17547226-2918-4431-87ad-31eeb075ce89",
        "cursor": {
          "ref": "879c89ef-ccd2-47af-8af3-dc34ab80c0ec",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "8e15d100-2ecf-4b3d-9969-bf876d5e1ff3"
        },
        "item": {
          "id": "17547226-2918-4431-87ad-31eeb075ce89",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "73f3752b-886a-4e03-b91c-6e7e8c1337a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41000d5-2726-45d2-8e59-f7b53f6b33e7",
        "cursor": {
          "ref": "beab076a-ffdc-4e12-9e35-b1f578b32fc9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b883da52-0d5a-405b-bd65-638e8750ad67"
        },
        "item": {
          "id": "b41000d5-2726-45d2-8e59-f7b53f6b33e7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d3ccae0f-8bf9-4520-8957-8752735f7e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9669d34-1523-4620-8d02-06a619086200",
        "cursor": {
          "ref": "504defee-b704-491a-8ce4-2a07687780be",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "265e3070-5e3d-452d-b75d-c53057c59d3e"
        },
        "item": {
          "id": "e9669d34-1523-4620-8d02-06a619086200",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e31caa3b-50c1-4fe5-acdd-a4b646289a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784bb331-2682-4535-bf34-682d8fe18b8b",
        "cursor": {
          "ref": "4c0cabc9-9c50-467b-b42d-11fac9284ce2",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "799e030c-67dc-4f5e-b0c1-76abe1f2c31c"
        },
        "item": {
          "id": "784bb331-2682-4535-bf34-682d8fe18b8b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b55e0613-38fb-46d2-bcc8-0f09dfd8796a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f5faef-99de-4df7-bd7a-ad2d245147d5",
        "cursor": {
          "ref": "1a5aee36-f1c9-4a33-86d3-043444aa3b2e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d7536881-c555-4fc3-9279-1e08b4102919"
        },
        "item": {
          "id": "49f5faef-99de-4df7-bd7a-ad2d245147d5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e9e325a1-d6d4-4f8b-ab92-d7cca31b8abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd123aa7-f5e9-45f8-9744-afcd6624515b",
        "cursor": {
          "ref": "7f3c9e39-4d32-4734-8992-a974a42b650f",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3c92442d-59f2-4991-9010-dd09351f0eb9"
        },
        "item": {
          "id": "cd123aa7-f5e9-45f8-9744-afcd6624515b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "40e3699e-0d37-4920-9ff6-ad65d7e0ac84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f33a94b-615d-4237-b47f-bed830f85141",
        "cursor": {
          "ref": "9900cc00-6770-4597-a548-f9dde890eb7f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a0732568-6038-4056-99c7-5a0a15c6b7b5"
        },
        "item": {
          "id": "1f33a94b-615d-4237-b47f-bed830f85141",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1c0ae155-3fa9-455e-ba65-14ff748ea00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da516c-281b-4bab-ba34-a950bf48a561",
        "cursor": {
          "ref": "83799f28-5977-4af6-82c1-fe791772b960",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b2e3bb91-e878-4ff2-800b-b5c2e9f8de35"
        },
        "item": {
          "id": "68da516c-281b-4bab-ba34-a950bf48a561",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "42077022-36a7-45d6-bb29-2f3fcf47b961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82149248-3942-466e-8cc1-7888320f3a62",
        "cursor": {
          "ref": "51750dfb-c50e-40d5-ab43-03b6b6d16161",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7d1c95f2-be95-4007-b37f-01a4799bdad3"
        },
        "item": {
          "id": "82149248-3942-466e-8cc1-7888320f3a62",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "eeb6c27d-6845-4dad-a7a4-5145b9db82e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f0b140-50e4-4e5b-ab07-858d89717ac4",
        "cursor": {
          "ref": "d9b18b70-2f7d-4b97-99b6-cf7b90cd37d5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ea7850b4-2cdf-40e0-bdc2-249dc097007b"
        },
        "item": {
          "id": "97f0b140-50e4-4e5b-ab07-858d89717ac4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "72b5460b-5789-42a0-8712-efa8701378d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59d953b-79b0-471c-aa50-cf53dda4f51c",
        "cursor": {
          "ref": "4003a226-361b-46e0-b26d-c6c974c631ae",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fa196a7e-b32d-4405-96d2-93a95427cda4"
        },
        "item": {
          "id": "a59d953b-79b0-471c-aa50-cf53dda4f51c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "be91f4a0-7616-4f5a-a9ab-e15f7de44d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a33971-776f-4051-bec7-b94714687929",
        "cursor": {
          "ref": "24f3a9c4-48e9-44e2-afbf-1aac5dd2b6ea",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dd7555f5-a82f-447c-8644-d5e9bb02f0e6"
        },
        "item": {
          "id": "a7a33971-776f-4051-bec7-b94714687929",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8d444b4a-176f-4ff7-bda1-ceb617652fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac615f06-87ad-436e-b424-50917aa48b77",
        "cursor": {
          "ref": "da3a2a21-bac3-4b32-b747-e24b936969c8",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "27dab5ea-6c0e-467d-bc76-968d03113be0"
        },
        "item": {
          "id": "ac615f06-87ad-436e-b424-50917aa48b77",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f7f6049d-8896-4abf-b43a-13f1c2fc04cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc85793d-85dd-4def-a856-ce999d5d79b6",
        "cursor": {
          "ref": "4632de9d-4d5e-4163-99f2-7886f3d0be5d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6dcc1f3d-f1c1-447a-9991-cca944b3692b"
        },
        "item": {
          "id": "fc85793d-85dd-4def-a856-ce999d5d79b6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "72965bc1-8b3f-4898-b0b4-0c0b28fb7da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb17df1-b617-4a3e-97bc-7686dce545a8",
        "cursor": {
          "ref": "71dd4165-c5f8-441d-9d41-8513e3ef9cc5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0027ba50-769b-4cb9-9bab-8ed8b763b312"
        },
        "item": {
          "id": "bbb17df1-b617-4a3e-97bc-7686dce545a8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "89fdd6c3-4ed6-4d1a-b929-27f4ba704da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c384e7f1-edb2-4d7b-83aa-7862181a7e87",
        "cursor": {
          "ref": "d24cf96f-04cc-42f6-a3fb-23ac3e32258d",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8a83438f-30e7-44fe-ade6-612e4219b4cf"
        },
        "item": {
          "id": "c384e7f1-edb2-4d7b-83aa-7862181a7e87",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1834b87c-7af0-45e3-8027-7ccd84b79605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b66653-9183-4596-8e97-89c784289450",
        "cursor": {
          "ref": "50a262a3-743e-4e12-9ca8-0423144bff4b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a962d343-0e02-430f-b0f5-2b6d8acbecd1"
        },
        "item": {
          "id": "95b66653-9183-4596-8e97-89c784289450",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c25d740f-9637-4178-94c4-3702985986fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9fe981-3d75-4f1e-947e-99eaa2ab6730",
        "cursor": {
          "ref": "45f0f9f5-5898-4d5b-9306-d35de7609247",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "09a05021-5cbe-4ab2-bcbd-0f134420f189"
        },
        "item": {
          "id": "7f9fe981-3d75-4f1e-947e-99eaa2ab6730",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "50d59fd6-ca75-4ada-beba-020836fc1b89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd33838e-e402-4735-acbb-7f248bb6aa33",
        "cursor": {
          "ref": "0f984b59-7547-4192-8edf-692621b33a54",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4516f849-23b8-4c2e-b4f1-d74b2f407e3c"
        },
        "item": {
          "id": "dd33838e-e402-4735-acbb-7f248bb6aa33",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "09172acf-ea37-40fb-91f6-fb6c1a4e90b6",
          "status": "OK",
          "code": 200,
          "responseTime": 184,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9206187-33c9-46d0-8b6c-96f8540b6674",
        "cursor": {
          "ref": "0962fa4c-7a9b-4682-b299-d0037173ef12",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0cd1e6cd-f107-46a0-856c-8a4d175f54d3"
        },
        "item": {
          "id": "d9206187-33c9-46d0-8b6c-96f8540b6674",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2624963f-9f55-43c1-a049-238feeee364c",
          "status": "OK",
          "code": 200,
          "responseTime": 1452,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3df93d8-bab5-4114-a3ed-b5b41e0b0c7c",
        "cursor": {
          "ref": "7846d0ec-6c93-44d4-8938-db00b3b1a336",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6df916c6-9a81-46ea-8797-8ea31c844983"
        },
        "item": {
          "id": "e3df93d8-bab5-4114-a3ed-b5b41e0b0c7c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fe4b375c-c52f-4c25-84b4-90df97c90710",
          "status": "OK",
          "code": 200,
          "responseTime": 1691,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e79a191-dafb-4cdc-b520-84c916db1674",
        "cursor": {
          "ref": "4f75c8bc-7e74-4f3a-9536-429344dafa16",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "28d63b69-99ab-485b-a90f-3e832d3fcd27"
        },
        "item": {
          "id": "4e79a191-dafb-4cdc-b520-84c916db1674",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "777eaff5-aa8d-4338-a111-360e8338d71c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e79a191-dafb-4cdc-b520-84c916db1674",
        "cursor": {
          "ref": "4f75c8bc-7e74-4f3a-9536-429344dafa16",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "28d63b69-99ab-485b-a90f-3e832d3fcd27"
        },
        "item": {
          "id": "4e79a191-dafb-4cdc-b520-84c916db1674",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "777eaff5-aa8d-4338-a111-360e8338d71c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6e66d7-459a-450e-80cb-bd693aba8197",
        "cursor": {
          "ref": "22bd91f7-4c11-4148-9e53-ad752d37c900",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "371773f5-6169-4a1c-b6f5-75f335ce0cab"
        },
        "item": {
          "id": "ba6e66d7-459a-450e-80cb-bd693aba8197",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "32bb8c74-cf89-464f-ada0-e6a05824b59c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46fb650-59c1-4efe-b599-2cf4bd0f4032",
        "cursor": {
          "ref": "5459f540-f3c9-4d42-8e5f-68285a887e93",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8d7d1b25-474c-4b99-b829-e80a3d4234f1"
        },
        "item": {
          "id": "a46fb650-59c1-4efe-b599-2cf4bd0f4032",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e0b722ba-4dfb-4b12-9ac5-ea08eb262080",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}