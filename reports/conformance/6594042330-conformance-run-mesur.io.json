{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "40bd7c1e-50ca-4a5f-a58a-678ec92028f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cac72cd0-b05a-48c8-9e81-a5dc23a437bc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f269f796-8074-4fc6-86a7-1b61a23c084f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "daaf9719-4ecc-4e8c-a11e-baf676919390"
                }
              }
            ]
          },
          {
            "id": "6899aefd-71e8-4539-8efd-90b60d35ea47",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b8d0a9f-62e4-41c9-ac97-7c5c8be65f7f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57a1cb83-3855-4140-a456-023e56ae5a41"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a908161c-fc30-4031-ba92-145010d0f217",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a3744d3-2098-486d-8118-44927f404d01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "faa16fe8-6800-4b60-baae-65f1d6f146fe",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3cb227b-b0d4-4a59-a250-8f81f51962a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "108607c8-6348-4f1e-9bfc-dbf130e67de9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dba7daf4-f830-40c8-960c-e167ce3aa0e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "641c7422-5780-4bb5-89dd-bb10b97efd1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7cd809fd-3ff0-4549-b18e-8627de657136",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8357264-0f0b-45b2-851f-ce2482f51410"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f8a52c3-a70d-42c0-9606-9c9c1fc020a2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "60ad87b3-1811-4c6b-9e94-7d406db10e7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a24fc1fb-a3a4-4728-9932-d469a381b5c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61259a8b-4e6e-48e4-a2db-e57aaacf2a33"
            }
          }
        ]
      },
      {
        "id": "d902cf34-b20c-4108-9b4e-8cf80d03f866",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ba616431-5922-4212-8594-01abad6286f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edd77dbe-3292-4d2e-a178-767262af92f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "15ee71f8-4ca1-4aad-a530-3fcb810c082e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3274a5-2242-4135-a254-b399fd45b9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a58590c3-45cf-45b9-b2f6-db90522c7493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548bd7d8-24e7-4bb3-9950-e7aff31f8ad0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf47f47-f526-480e-8715-a80aa2c48df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea4abb06-2635-4fd1-9112-89ffa63f7e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a795ccf0-a418-4ff2-8a47-aabc58738d42",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3639a28-e6d7-440a-b9b5-443d7f746bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cc66cf5-fab7-41f8-ab7a-9ab1d8495440"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "808cf327-631d-4cf0-b1c6-3ed190d48e6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8d071de-2a97-4326-b45f-f4ba2c3db83f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132e67b-b0fe-4384-a397-f2f8f8695bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "235786fa-f730-4109-a421-4b9fff8c8c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ea3ab-ba55-4e8c-b3c0-89789b42972b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e51228-0f51-4826-b366-d2bc03e1fdde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d458790-f816-49ec-9fe5-c7c6edec9d9b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "782e8ea1-c1be-41a0-947d-63f3304cb11d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9869433a-36b1-4f71-8543-670008cc28a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "db3ddf67-b1fb-470c-b3a0-8d9983bfd4ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ae81b46-0664-47d9-8f46-dedaa61b5257",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0fc61223-c2bc-4ed2-b86e-cb025c1d3cd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "675f4581-6260-495d-b43e-abc84794387b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ba03ef7-64a8-42a5-b2c5-8278e002a17d"
            }
          }
        ]
      },
      {
        "id": "373f2167-a7b8-48e9-be9c-9bf9d95fdb86",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0f605d3e-5d3e-448d-8ce7-d0b70afa5053",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24014fd1-c65c-4f4e-819d-3c5463a99ffc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d9d7b5e4-3b9c-41eb-9791-721683fea1ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69798fb-7114-4eb4-926f-a48130cd91c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0634172d-983b-4f7a-b597-9794955682f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfffd4c-8431-4dfb-a1e2-6e119e68ae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2d337c3-0de3-494a-9919-310abedbfcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1230bff-6423-4dab-99e3-ed7e12c4f0ea",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c73513-f97c-4df0-8fc9-0960d784ff85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd610e7-07e2-445b-afff-af9de840d986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae52b992-8947-4888-ba35-e59994a957df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ab359cb-4d26-4513-a3e8-c61edda7dfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7c3996-d3e1-4b0e-8abb-a524cd163832",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b262f6ab-5775-48ad-a950-3b3f1ea7617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519b45b7-9c9b-49b5-8d0d-906d54d01279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86847cb0-c718-4ab1-ac79-9d38d2f9342b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c339c76-be79-4d0d-8d5a-f61c8b5547b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d225f88-86a0-44d5-a223-35e4ab43b38d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e611de-0323-4786-a5d5-f1308cb04f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1d9929-322d-42c0-9ec9-51d322ad8542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f88bba5-6518-46d5-9253-4a6cb7575277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "357b077f-5177-45af-bda3-477d08468f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26693aef-b976-4407-80f3-0e1e30b5d1a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94937f2d-2ebb-4fe3-aa2b-fb7e73c70ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec6c97b-f518-4f56-84d4-0cffbe4010f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a78bbbc-32b6-40a4-b01a-14a55c16f20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7c1ff7b-29db-41bc-8d4f-156530c2ea06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca50ef9-5700-498d-917c-8c6108bf0bbc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be48f6bc-0b5c-4917-9642-439250c4fa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa16c10-937c-486d-9a8b-7a674797c4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6881a651-886a-458e-a839-4ef9d2714554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3002f05c-aed8-4333-a811-71663c21fa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf305a2-5b5a-49fe-837f-25836b5e3c5c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62a9234-4c57-4d58-a8b5-96468de2210e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27292025-056f-4d47-b5de-315c6656c276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfea920b-ea0e-4691-a38e-c0750d7c7cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbc61853-0dac-4cd0-9061-444255e12f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab47304a-1e80-47d1-97a2-ea5e174e87e5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486106ef-296d-4371-adb5-aabc86d434a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a13eb27-5e61-4954-8b3d-6f39194c2d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bea75d8-55fc-4784-a496-b6ce3e720095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a508696-49d9-4fe0-9da3-0fee62543c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10107415-15ba-4270-ab33-c3b0fa271d87",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3df823-4b66-4589-9fc6-ea1df1fc9822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b649e1-5b0d-403b-824e-f1739b9e250b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63411f18-e481-451f-bf1a-50682abcb21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63f497a3-494b-4dea-811a-de1fffc88b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd8e9ff-6681-4740-a497-52a4e9878530",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ba9646-5f1c-472b-bdbb-34379dfb2f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986b361c-341c-4b8a-ac1f-470f49a7233b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feeefe5-c0f0-4125-9d4b-ca86cdb26720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b0dce23-2c57-4dee-b8e8-258ad29bb7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c7b099-b93d-4b74-a8e8-e5ccaccd8f5a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a30f966-40a9-4921-88d3-1bf75ded6804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c0ba75-7e19-468e-a705-c40626f7c22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af745d5-a3c6-45df-a017-55e938339bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a43111af-a179-47b4-ad7a-cbbd6f4e28de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2965c516-e655-4033-af89-3f965001aa13",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699424ff-19a0-4a44-9699-da2d619a12ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa459870-5a7b-4a87-a028-9fd464e56668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feef476d-6989-42ba-89bc-89e389a20fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2ff1fd5-2fcf-4921-8e84-8b22613bfbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd72ef8-9df2-4fe7-888e-6d2844b78887",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e714fc5-b116-42b0-b99e-a831a7bb05f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdb0f6a-fe1a-43bd-8d8a-5e90c5ec18a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bfe4a5-ae26-488a-b845-93493db097e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df56c52a-3b87-4725-8c6b-a6ae379d9d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e96f142-d4c0-4beb-985c-8fac53966da4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71c29d7-201e-4142-9163-f2bc3e7d5e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eec5fde-3cc5-410e-885a-387c518888e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf2a9b2-eb26-4d7f-8c42-6d7be99df5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbdc93a1-8cc2-4e8f-8ed5-227c49389f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9eecb4-5b57-4e70-9194-f3723d7b1bf3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2c4a44-eb62-46f1-af07-2a8616d715f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97afe60a-b6d6-4f4b-bfb8-49b16a8a1cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e5d75a-b768-41a4-ad30-c1804922ff6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87cf21ca-ddbd-4c44-a5da-a064818bad16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f90af7-6344-4a53-aa72-7f68d51bb9b2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5ef8b2-4cee-4776-bc62-3e453cab21a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e3ec8f-604b-4dfe-bb27-36cc032dce3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634a5ab3-b29f-4445-a798-cda7f9aa6ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c422c5ba-f1ff-4768-b92e-6e0ebbe2e5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a57a20-65d7-4a3c-ad34-4d28bd43734e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff63b927-96de-4861-b487-2aba60565328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a76aee2-a4c2-4a60-baf0-500d9c16e705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f063112c-8cb2-43c7-8765-54051b308319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a28cc5d6-fc78-4a63-afd3-9741b91f5588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94849f8f-a4af-45c2-b7dc-d7cfaefda360",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e644c77b-8f1c-4052-b941-bd64b6cac7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256a04af-8ee5-4846-8ad9-0dd351765d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a22904-59cc-41e9-b43a-bddb09117840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b54d20f-dce6-48e1-88d7-5a418150e4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73e1777-d8c9-44bf-b1eb-49ef5ee856b0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b32554-2c6c-4287-aad9-bfb141a91b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6619831e-95e4-467e-b2a6-fdbc14a59ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d720a039-4453-4630-bdb5-99d062b78b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52877291-f4cb-4e31-b49b-8fb193bcef52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2949190-04b4-4cf9-ab23-6d16a798126d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451f34ef-c42f-4a3e-88af-e8f22ac08c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3506819d-bd1b-4e3f-b767-4887380ed581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d5c273-0c89-45e9-9d4e-7187024574ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03025a86-2ec1-4358-88bf-d79453fb93e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce4bde3-c47a-4410-b572-7ad4312086b8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db4010-387c-458b-93af-8e2d221d2464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc39a431-3c0e-48f3-8411-3f92988a8d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d6e9e7-4d30-4860-bc59-f901cabf5fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe318005-77f4-4b8f-bd4a-9d233420fc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7fb683-f465-496d-b862-4dd525a67ac9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b643a84-96cd-4730-b1ad-703700b8f80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c523408-a07a-4da7-8a93-0aaf69b4a935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97861841-833a-492c-acc7-141c127fc87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8172d007-c7ac-4744-a4a5-8fa045ddb23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632558f9-118d-4f42-9f8e-bf163ba2b875",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a295ef99-87b9-402d-a4bc-15cfcfa6d227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71857cce-72ee-4a08-8561-20c502c9457d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489949b5-56d3-4089-a7a9-3a40e4969c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65a9ac64-1ecb-4bd8-8b91-09b581056394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04ecdf1-0de1-48ce-a71a-984e1cee1024",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546016c2-c122-461e-b64e-3a5b75ba97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79686764-0703-4d3a-a0e3-2402c7037b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f820a7ad-750c-4142-96d6-5e9f0a7f4cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "51edd05b-1be0-4ed7-91d1-c3680c9d5f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c542446-459b-4510-bed2-8143f49be80f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c72792e-b041-42b9-b4fc-3f2c76b2fe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1c684a-424d-4255-8de1-3ad7c796054c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8d8e62-b960-4a71-b22a-096e754a07b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06454f79-1077-42a0-acd2-d44a5c439e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37aa0723-991d-4fa0-be5a-86ab56c3ba46",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92328c4-c688-4131-b045-c8ef7677d65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0b2d15-f1a2-4423-b56b-2ec18b9c9305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de100fa-5629-4690-8ea4-e6a7b885b647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf8e431-2d85-4a91-a211-32821de6cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6a841d-32fa-4aab-b61d-5370b6136eae",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1973cb9-2e5f-4160-80ee-286876d1998f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d5f174-d033-4ea9-abef-822275567564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a6bf15-060d-446c-96ad-213931ba27aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94a06d26-c388-4706-9661-4e3824fcf79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314ac65d-ab04-4089-9f14-5b57bca1dc90",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a464a11-5149-410a-a51b-df4fee697fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bff70df-66bd-45e0-a811-31c77af13d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1593f0fc-1b6c-40d2-9b06-95338e834fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "875719a8-7403-42f1-aba4-6a5872b0a210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718d1a5b-6fcb-4c0a-8a12-9a070e9da099",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24ae863-4fc3-4ce0-b1a2-83eb8af537e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9ea251-ac29-4b58-bb17-4446b1eb6f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56987bd2-9561-4daa-8ac7-44671e22f2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b472df-e45b-4271-acdc-f0570e1fac64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2e9d39-68b6-449d-b71d-667d3d66d1cf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09607a1-56e5-487f-bab0-7d8440138304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17cfc70-df15-44e2-b9ca-abb7a995570f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5757edad-480f-4788-9dba-2146709720d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "815ce006-d30a-4a56-901e-bdd03e56bb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471760bc-a0d1-47c7-98b8-f121382f0476",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa081bb-8421-449f-9efb-ae458015e3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11810ca5-6615-4ed6-8265-5f94517c8178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05b1076-8aac-456c-9432-bc5c6665c798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eefdea8-869a-46dc-90bb-328b594c083e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7172a389-1cfb-4d47-8499-f506d521b6e2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d617e37a-601c-4529-89f6-64eda1d0f67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2823b6f-df72-4576-ab87-137210080fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bce7948-0e38-4c9b-bb9c-0e4314b4dfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28783eaa-d800-4fd4-ba71-3e3b2de87af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac91530-1750-490d-89a4-f8e0cdbc527d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8ce53c-1f0c-44b3-97ec-2cebbc00fed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a0196d-3eb3-42f5-a0fa-4e3d150008fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cd9dcd-4bb8-4698-9953-eccd2155ceec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9092be-a2ae-42bb-951b-92350075f4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e197e9e-e0a9-4a2c-8f0e-392e5b1cf94b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3438831d-3b94-4989-aafc-905a727c28a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab71321c-334b-4617-bfcd-14c2c1b803d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c438993-71fe-4c91-8236-43cb0ea78191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eddc4319-f0d3-4b4c-8dfb-21c177dce8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a851c13d-9f23-4b47-8442-dfa7baad72de",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5007be05-587e-465c-91e6-95f9499cf736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548f8331-411a-4cf9-9607-f2862050b562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e747dd16-dc7c-4419-a45f-f871d452bd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "42e48366-abba-4cb2-9573-58caf88e41cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b247c0ea-ad63-4f7d-9625-3c9efde80d10",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adff8f6-6025-4d49-9816-733b1d30871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "441377b1-7792-4738-9ef9-03c06311e0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad7eb40-a33a-4bcf-a86d-332ad4aee357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b93af0e6-7cc5-4e8d-8a1f-af2bfcd88c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeebe86-8a11-4f0a-95c8-0807013b51ff",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aba1f12-1538-44a0-a45e-f23bc09482ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7ff8be-0347-424b-b206-337f5e8b8c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ea121f-fde4-4369-a1a1-51ddb34d0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74496a05-9c1e-4eea-88ab-2557398381b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fec41a-fc36-44e5-b5af-06867094dc05",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7a21d3-c084-4510-a8dc-7c4abe4e2f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b51fd18-783f-4c70-88ce-df9e71f350cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac767719-93f1-487a-9e53-8867787c4515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1322540-e5a9-4f2e-9d07-6d22c32f1b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b18f99-d210-4633-be5e-c501121ca458",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c79fd7-8d40-4fd8-a2ff-a7f97e2c1f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b73117-92ec-4850-b04e-79cb33f243e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7554059c-4287-40af-b23d-9968fa19baca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5d5ac5-2ec4-4577-93d8-dc2d97f28b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf009ae-2537-4c1e-a77d-10d8c7592399",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ffb2ad-f73e-4710-a5f2-78cbc0af7f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f2bb71-0e55-44c1-a71a-a16c8cad72d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d078188e-d8c0-4ade-957a-b973fdf00eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80d0f22e-ddc4-4c9d-96ec-8cc6025ba822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c771d3-f8c3-4b41-a03a-6c018a8efc86",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a2f361-8d4a-4289-88c1-eca73faee036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffb85f8-d8a2-496d-a3b6-985902d447e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58342eba-b650-4164-a44b-d2da2f114f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9efa24db-3d36-44b5-bd9a-5005eb168747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8d7d34-b1af-492d-a980-ccf89f115eba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc328734-aa6d-4f03-8fe1-63d021a30e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e279e0aa-24c7-4a3f-a5c4-bb03bfbd4858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedb8db4-5b1e-468d-8dc2-f868d85ab4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "69e7a829-06be-4343-9413-78fcd1115206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6bb2c9-4661-4d0b-b5dd-b4564950cc80",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd79406-0b32-4cd0-9695-ddc096bad632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d725da62-e52f-479a-a967-95501355834f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb6550b-77f3-4085-9106-1112edc742c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9bcec5-ac41-419e-9304-a6f5e6febb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa34fc4f-4646-41e3-8332-3eab8e6af7f9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3555d-630b-440c-addf-bc2434a739be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cda9bee-eb36-4888-aafa-628a263954bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a592273-1379-4e6a-8352-478b2b0c7cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a629798-c090-4f90-a386-9980bc387b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03f3c0c-0660-4e13-a8d1-094d94375a65",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af24476-3f46-4bfd-b4fc-655f1ae0ca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48b3da7-5e88-46bc-8f8d-b4d0adf551a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d30585-681e-4e67-b917-46904b3405ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6dc380-3684-4d27-a18e-9d7a0668d983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd0e64e-3dcc-4349-84df-73db7e284ccb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1e39ca-9fbf-4666-8448-c8c8fd4a10a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61987cd-934d-4e38-9fde-ace57fdf3a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f43fd80-f4dc-4f99-b57c-6e3f7bbc1a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4a8bbc-40c5-4d2b-a5bd-da1c51278d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247c6d24-4f69-4b07-95f4-d6200f3229d4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d118cdb-dc9a-431c-abf5-7d556c5f67e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13942359-14e1-4718-8149-7d706987cf1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25529ac-e398-4841-a387-0046147e7b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0db828-f359-4f1f-936e-a4804004d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefb47b5-d29c-418f-8f1a-2486e6452874",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb66d48e-bc0a-4a07-9b12-d1d5f230074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56e5bc8-c634-477c-9770-a83840d83151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391391e9-207c-42b2-a9f6-a5a5a7e7d7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a008bab9-d4a5-4328-ad21-398cbdb74740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0718e33d-2571-4a89-b649-1c0e943201ae",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984f7bf8-957e-4d0c-8479-af4db5e0039a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0c5671-d2bc-45c3-a6ee-ceb36796f7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b8b496-8f97-47fd-b03d-fb3a249d064a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b116ca8-fcb1-464f-b258-cc424d2aa3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c709bc-cc2b-44d2-99b5-d90fe2f17cce",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040a167a-f5ac-449b-b662-e3e2616684fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e696730-6655-4d7c-8943-4789491b0274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d85c1a-c0d7-4889-bc01-0d096a4f3bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b557b5fd-a5ad-4c95-b14e-cbb5e25f4836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb8fff9-627b-42f4-8b49-37ebb5c7e95d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d783b4f-0aa5-4fe7-9291-823b1217d47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d1b5c5-abbe-45cd-ac3c-6927718112be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd72d7b-5047-48e9-b1b9-6e70eea9ce62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfd965b-ee28-4af5-9416-1f11bca9023c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d25ed-5ee0-4511-90ef-b813a4270c91",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c006ec-7838-4ddd-84aa-d7688dbdc44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a61ec6-b5ef-481b-bd0d-8a79ebdbe630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcf319d-a7e1-4aa5-addf-0f1a5ab9fe88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7780e1c3-d795-4a99-9808-e81d7efeb3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d047bf10-ca11-43a5-ad5a-4fa5ef73d467",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abc8c41-1972-4ed1-970a-c4a8c3a34aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52308c03-0fa9-476f-bbd9-1fd039ae7913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3b4edf-f0a5-4880-a707-9f4e09168648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0966b72-2544-4462-9b50-de463ab9d5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d63231-d77c-4a1a-823e-0589e6c17bd7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2b5a46-a33c-46cc-b6ed-b29d43a649e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7ed9b4-3060-433b-8936-303bdc4921a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5607fb0e-f519-420d-b0ea-600916e539e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e5a016-e310-497a-b935-13abb3e7de99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2cb92e-d57d-4028-996d-84b602cbe062",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed714ed0-dd23-489a-bde9-c6f5c58b4199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c03ab6-0312-43a4-b0fb-15a139c3442c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fa3c50-79d3-4c60-8673-5d3e462a6844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5953e45e-47b2-4004-a071-26abcd610022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f362dc85-9121-4168-af8b-f1523e0ac85a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b425487-29a8-4514-97f5-7cd78348a684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac16ba99-d1be-4997-b8b1-4e9e416d3cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c71a09-7cbf-4c22-a191-141c75f5412d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c3718f-0b24-488c-bdb5-1cead364f24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac60402-ecf6-4b1f-a343-b25f059d73d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343d9d73-87aa-48a5-baa8-f9116c6e6b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcf30e8-79e9-4ff5-8a8b-570815afeca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fd70f9-3bb8-4852-b817-40d155a31df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfaff783-8f5b-4311-b0f7-b89ac4302646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89845bc-f7d3-4399-b41c-3caae9562ffa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734e21d7-2457-4536-af19-f1b183b5d2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551e0579-7c1c-4188-a905-31f003e15305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e525572d-b923-4d03-ae1a-ba9f194f02b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c644049c-9516-4606-85ab-3e567beb3ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5bcca7d-9d4e-404f-aa4e-7983bc80e476",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf25a504-924f-4e61-ab5b-a3eed385d376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34916a5e-947d-42af-a397-5b98afa2a3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8b896a-6b42-4320-80db-353ecbd5ae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e858f64-94ab-417c-8425-5da4a9e8f593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872b4a4d-b718-4dd1-85f1-4276af237bfa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa06c3d-593b-4829-9d17-23ca3ba67a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1185eec4-c8be-4415-922f-0a8fa08543c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c853410-bbb7-4caa-982c-f0ca325b3ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec41878a-a1c6-4af8-a595-d2ec0cf42cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c70bbfd-a151-434c-aade-ccd463886794",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec993d78-d8c5-4ecc-bfa4-054a4b27e7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63e70f1-ad5b-4b9d-8085-116e4787dc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e526b658-c392-411f-b7e0-0fcbefaea661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31d34b83-de74-4e97-be39-482209555c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9ae252-b487-4aef-b45f-a40d1ecc938f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14561c07-b68f-4ff1-bf3b-925e3600b9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a016dab1-7853-4e2e-a4b4-262099be62d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbacd27b-d319-41ad-bf5b-c060da62117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "515b6a14-b6b3-418f-9ca9-2c34c6a4d6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31bcb72-6c37-4726-bd87-b21ff9e7f8af",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13049896-ec92-412b-9bbd-882bc7725418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d3de3f9-8054-476d-94fa-8f3f2b312fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647b2220-44d6-4475-a9ef-d7a107459af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffb3bc3-1165-497f-a7c1-85a403d621cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcb0564-8f58-48a8-9943-b51ef99f422d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7087f0-e7ee-4ba3-8541-6c6277ba9ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496a43f2-a9c6-463d-9a64-cab8c2964b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31c02c7-81a7-400c-bb94-e50fa60c17c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d305e7-b78e-43c0-9bec-9bc61cf1fd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b6f18c-882c-4705-8a4c-a4e7d9b6e4f5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfc6be4-4585-47ca-b96e-35094459e8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7653bd-c675-4561-b8a6-e3eab8d27baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7136bc48-66c5-488a-9db1-bd1e30f9c1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02dfe11e-59dc-4b5d-b0da-05d4cda51227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc5806f-a06a-4eca-991a-f6f0238ac458",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154dcb7c-3f24-4774-a20b-29361ed2441c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dc3cca-2487-4cc2-b63b-6e0abc540b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbe5098-7f30-4d30-8a1e-d30f2088448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02458f35-af76-4824-870e-00f208dd6cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d79326-0ab9-4d81-b74b-9689472c087c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f6c090-af5c-4993-b383-3eb847d5146a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b1cfb3-b8ce-4df9-beb0-8d5f530ebb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca51a6b9-df70-42a6-b278-bca585c95398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd9ff43-ee25-44d3-8546-35ac5e563717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f15889-eec8-4b12-b6e4-43e5f85deb4b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765b146e-2014-4852-b313-d0652a97fc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaddc01c-88d0-48a5-973f-ab92650727dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8f46c0-5101-41b1-978a-11b30edf5ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f764375-1b11-4a09-abcf-e7b6350eeb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c229a2a-6a91-4987-8889-5c457eb18cb3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a639c7-e1ac-49af-b4cb-c0e906af53bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffffa58-74f7-4c2e-8b20-cbfe9340c990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511fe6f5-cb9b-4865-97d3-037b60e5f00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "56995b18-f41b-48b2-beea-bec271ec5cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4c2512-1091-464d-889a-7e9bd30de9e0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f9fc49-b28f-4090-83af-b906c89dc51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaaf7b25-07a6-46ec-89bc-d295d4d4ed24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27517354-a83e-4ccc-85d6-5fb636e6a855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebbb805-9370-4837-8207-37c8330c6071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2160927d-e3cc-4dad-9765-905903a9124a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8f5f86-28c5-4d67-af1b-6281f791b88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aed0b05-75bd-417e-9381-07133d2d33da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b29c32e-63b9-449e-bb19-efee2b16bcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b52695-65e4-4388-8bf0-677299a3bb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2474494d-df31-4261-8900-811269a9e897",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1780bff9-3aa8-4262-ba61-0ecfb1e5a0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb69fd9b-51f7-4b39-ae14-d37772daf3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a7e22f-ad82-470e-9668-79f75b04e5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f1bfc6-bf80-4891-be76-ee6eb79f27fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a8b699-757e-4b99-a372-8a88dc4b03cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a3650-f1a3-43a8-9491-1cc728b83ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f584555-8225-41a2-81f2-a0534af4a382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8705731c-2d51-44a7-ba8e-6267cb9989f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd29de87-ee4c-45e6-a7af-6609008a3ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9060c4-fdfb-40cd-81e3-8e63e4085126",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c536d53-7115-4a5d-b5db-b2a91326d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1dd532-8dde-4f06-b3f4-cc36661c3a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b456b6-fd3c-4e23-afbe-f030da9f82bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99714ca0-4820-4a46-a460-c45de7647c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55b395b-b0ce-4ea8-8bc3-b2cb494e4bcb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034d6d4f-f332-4839-abb1-43361c3f4923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d504b24b-4729-4b55-b06c-f94e95141445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d7cb24-0a8e-4589-94e8-a6290f4218be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "289be904-a020-49a3-8773-004ec0ebe0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9b0790-1913-402e-8c55-947192aaccbb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60084c1e-2bb5-4c50-94bf-b078da5ed4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbc636b-1adc-4f2a-858a-57c98df63ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f5800c-246f-40bc-a9e5-45ab1d5b5220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6200ae73-1ff4-42b4-9070-e7d71b9827f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddc7231-76f2-4943-846e-6c509b634610",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f9e21c-1538-43a0-8fc5-3d54ea249430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3689ed2-ab5e-4218-a423-fff35f30a834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c42f9b-94a2-46d3-bde8-8ca0e55edce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaebaf86-f6e2-4ee7-a6df-6229562a4cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76184c2-ddbd-48cb-9817-f25731489089",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77535279-f68d-4356-b2ca-198768e94596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc29dac7-70fd-44f8-a0e1-ef8c730f57b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985a2c56-0729-402a-970b-a922168b6cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18a7dcf-c44e-48cc-8613-1fe04f163aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b47bdd-1556-44da-b5ac-72ea2bc61b6c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcfbf17-9b4b-43d7-b77a-8dffdfe85e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5402b6c9-dee0-4a1a-861b-14496ce21ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a87af01-4caf-4af5-b284-1ccf16578f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7aaea0b-ec3e-4505-9e69-75dfb8fa2eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c1abd8-72ba-44f8-8340-bbb841afa8de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b38dad-c25a-4acd-b47a-8dcdb68e2c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45402a6-e9a9-4dd8-b6ed-b9992dc00fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2caad05b-5be0-4d54-bff1-79eb63e7ac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1f8296-5900-479d-a076-dc92826b86bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b569bd1-2498-4407-a845-b28e544a866c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cead874-a512-47fc-ae4f-b90f0a3fa8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de6be6f-9fbb-47db-aa06-1ef837a80918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb9f8f-4844-4f98-abbd-de480ec53f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11bee67a-a934-4c2c-913e-39eacda0b611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb5f4da-6175-4cbc-a7c2-c8372d8198ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a909a8aa-3126-45ea-a826-dca310a70c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60c1ca2-1d43-4490-bc29-d348017e3b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b16f2e-62a9-4eda-a031-0a910df07b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbed1594-7a1b-4b09-af07-7ceab0445b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e878b669-da53-4ba7-b9da-2db53298d572",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a85b0bb-4f8c-4a3b-9a5f-d48d2260778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be08635-8456-44ae-9c02-7d1748b076b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11128bcd-3ec0-46d2-9a6e-c60c231cfe84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f7ce36-8a82-4425-b737-4c984fe1ff79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf38be4-2e49-4f8e-a84a-0b969242949d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba986d-d568-4b03-8c16-db936da22860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc8a1da-a08e-4d3c-afb9-a0f101ade903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9bce12-a347-47f2-a79b-a09a8be8fed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "183613a9-3285-4627-af7e-619012203abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c825579a-4779-4da9-a9aa-f7a111a885f4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b8c87b-08b5-4065-9e7f-d617b486eb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc08248-c0b4-45b5-b643-9f1054829d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3581f4a6-049d-487c-a08b-ae4083c247a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3b75e1-ae4c-4e1a-b6c0-ebbe91d5fc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2756d7bd-da76-4441-9c39-30f0bbd158c5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19a2505-537d-4b05-b2b8-8fac6a67dc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05cd32b-5905-4020-a4c6-3f1da61a40ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4ae65d-fa99-4574-ad8d-fff16fd90778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7689dc82-4170-492f-a600-33b62dc0e9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dc2d6a-b56e-4dfd-9c5d-49991f50d76e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64763f1-f03d-4725-9552-252000891a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833e2c30-25b1-4319-893c-4f8554b408a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d984d557-baa2-4dc0-a354-529dad0f5c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7655edb0-02b0-4fac-ba47-47a8baf604e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9518194-66ac-49dd-8fbd-765fe6c176ec",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa91da4-0d92-4e4f-afc1-8bfb48d67b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc6e5fe-7a76-492a-9084-1cfc36e1f7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff1a9e9-2cc1-4ee4-8acb-bea50cf99d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91ba6cb5-7b85-41a4-b407-56058b31a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455f6c50-5ad4-41cf-b0b9-b7cfb752c394",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce4352d-d687-4b97-8fa1-6bdd8dda9c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0cdb05-4fdb-4589-b2cf-dfbf6b153fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9febe0e3-e69a-44fd-8e89-d7b77b884788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15480944-ea9e-4764-aaa4-effcff5e9ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e612fcc5-d887-4545-92d4-9919bda6228f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979f9a22-6648-4558-a6ed-d6d7125c97f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebb9240-4763-4381-a648-0b6b76d06a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7124deb7-854f-4932-8080-fdb304b47c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "120a2c18-61f7-42cb-bc1a-6045d8f396c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1960928-1fb2-4180-a6ac-b8db342372d7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d49dcb-1bf5-4487-9333-1bd24b6dfb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd555b88-98c8-4ec4-be34-72f1c2c177c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c584ef-591c-4455-86dd-45c4aa263e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "06f1e161-ae78-43a7-b6bc-d0a5fc7337b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3478f9cd-614e-4d14-a550-a180f4118ace",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41061943-da98-4bda-aa70-9abd9c270ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3970b619-a1eb-4c95-928a-9b241c9e5561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07960d2e-5185-41bb-a6ae-f33a89284fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b30b3bf6-760c-471a-a389-42f1ce746964"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9f125d14-e4f4-4be1-bde5-18d6e61da659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "548db2cb-453b-4e28-9a0e-f5e090910282",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18b507d-46ab-4c41-820e-2bcc07bbb247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c092da7a-de06-4869-96ae-ad2a48c3c0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d78d5a-28af-4a80-bcc8-5cc43a75baf5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71fc51f5-4a69-4d49-a29b-38bc82e58c60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "327fa794-489b-4ffa-a475-ae86c136512e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f6e8f96-96c2-4d3c-af90-b86fe2421d3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24ed553f-9db6-4901-8f46-8dc48d86d165",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f291dfe-e720-4917-8d22-a0c135759c03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d94dde0-8524-40d0-b9cd-0042eadf0c85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea198bc0-97aa-41f5-b5e5-da90724f9718"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "369340ea-c9fb-4eb7-aebe-6b49ecf1dbe0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "33abc0f3-ba40-4bca-8f99-d92222e560ef"
                }
              }
            ]
          },
          {
            "id": "7e1ba8a4-bbfd-4761-91d8-2254f5c91b44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3cdc62e-e1c5-4cd1-89bf-71106d474aba",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2b93002a-8207-4f68-9eb4-bfc09f014f84",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15460e0d-6579-4f43-8e3f-fdaedfbc82d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8fee234c-5835-4957-a97c-098024f3c897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d75798c-146b-4af8-b90c-b3bfbb610c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8898656-58fe-4f4f-9951-74c784a312ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c269bc9-df89-43c9-843f-271ceca650fe",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ea95426-0175-48f3-8338-9a4d1a501558",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "262f7076-b383-4a0c-ab9a-ae5255977333"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c1f8e65-8281-47fa-ab32-c5b783b4ae36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1b632c1-0ad6-4989-a0bb-a60a6479b70c"
                    }
                  }
                ]
              },
              {
                "id": "a0ab9282-d31f-483e-b13a-52e89d1a70e0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "339c1715-e54a-4a19-9e3a-a4aec65905b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "991abde0-a882-49ae-a2e4-3042be0b0806"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65299df8-c74f-4b8b-8eca-021cce782a5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9018d29d-eda6-440a-b8bb-9e8150892fdc"
                    }
                  }
                ]
              },
              {
                "id": "b330977f-080f-452b-88c5-c8e2ad349d2e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e72038be-a1f5-4527-ac4a-c3295c531e7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ca5834b-00e6-41e7-9a67-c20c5a61a27c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f0ac217-fca1-48c5-b428-8bca2467b383",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af20a872-3eaf-4aba-a41d-d284bd5a6e06"
                    }
                  }
                ]
              },
              {
                "id": "821c7726-63b1-420c-b105-2f0ce60a1de3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "163f2243-9231-42d4-b015-0f006e66beb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "787671cb-d757-4807-b5b7-cf70066ba54e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e5ebc19-bc28-4783-a6cd-7dba39dce9b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "08c40c6a-067d-4ced-9ac4-85b2de639b05"
                    }
                  }
                ]
              },
              {
                "id": "491037af-b149-42c9-905b-bbd0c4bc9e39",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "865b3d87-11a5-4a6b-b68b-b207fcd065b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c25d07f4-29a9-459f-af8e-1f645c4bc537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1a4a4e2-fa9c-4ec1-b8bf-c40949c82c65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "64d5a66b-2cad-434b-bae6-a0b424f137b0"
                    }
                  }
                ]
              },
              {
                "id": "49de2fb8-657a-47cb-81db-d6807294ab2c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "becfccd1-a286-493f-ac5b-5580fca7f215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ce91d11-87b3-4bb6-bbed-937843442351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d190ef05-7e54-405f-a6ca-da9e25eec257",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a05e0b5-87f0-4006-91e5-a17fa97c4a3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ecaf071d-5122-49df-a89a-5a1e07a3c6c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "879a258c-0836-4896-aabe-b0c0dbf05a7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1068cce-de1a-4e4c-aa3e-65b900078606",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "001c3225-b960-44bd-8cd8-8496bde45348"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecf6d515-74af-482b-913d-c2433aa671dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dd0f9375-73bb-4455-a60f-caadcafb0056"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "457468e2-0b0b-46ff-8593-ddccdcd77e2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc801042-bd57-4920-b3d1-3cd2ca31ce32"
            }
          }
        ]
      },
      {
        "id": "d0b015c9-a5c7-4e0a-8732-f2df63996b0c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aad3c5f0-8678-4725-9038-052c6b7693e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2dc888c-5457-46c1-bab9-115eeebbfcb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95bcb755-46d7-4830-98bc-6e6837a38810",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ffd273-a7af-44b2-883f-48b397bdb409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739f9bae-4cc1-414e-aa49-b0f85e67b98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6be0a21-b8d7-477b-b5bb-3be84e316e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e1f803-9568-41ff-984d-e2bdbdeb1362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d485ed7-41cf-4570-9079-a0b0a2e12f22",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5f172e-5174-4fe1-bdac-d97f76c854b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a55c211-5d1b-4c37-a64e-a65c579e12da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260e96ec-01c2-4493-8550-c4bc49eb5d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2480571-2f28-488c-8c93-d5cddae6d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae42658f-b172-49cb-a556-4d4a489039c9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acb2bd0-9a43-404d-81c0-dd57e70738f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7d61ea-df23-42d5-9348-3b60f47fc927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1e1e10-403f-4f94-873b-56bdbcb73f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe004af-e332-4e8c-a955-eb32454bfcaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7751eb89-2a0c-4c3b-b6ee-d0f485d969c2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c20bcc-8ed2-48f1-aedf-d7d17f91cb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aab6340-b1d6-4e67-b737-a6e05c921b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e26fd14-15c0-469e-be56-f24a0ef798ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a026d473-b0f9-465b-b724-eaaa7dcc1ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b67a9bd-c483-4216-b6fd-37d609d0b88c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14887b83-2745-4a0c-b575-855beb742546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c1f992-5093-450f-90ae-2cf876130b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13f3212-bc3d-415c-8028-37fbeaabee4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26bcc0c7-9254-4448-87e1-8d2500452ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6238629-b3cd-4603-bcc3-a4bb92a81451",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4417c19b-5035-4262-b945-6c8cd7124f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba433e6b-b899-4937-955b-102652997d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144f7ff9-cfc2-4f42-8716-9a1689ef0235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e21deefc-2f24-4518-950a-e250f9389359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc7252d-13c9-4a9a-8658-91d375c6065c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162b432c-3dd9-4b30-9d77-e0ff6dfa6785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59c2078-fb5a-4212-b7be-58557db55d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0fffbf-cf9e-44a8-bf34-46b4d39fbb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b7e96c-f47f-46c9-98aa-9a5ee6994f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a598cd93-6a7c-4d8e-812a-52316f1ad4f7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7281e3f1-05fb-4495-a621-be6958454032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a5c23f-48be-40d3-b316-b74ff754fa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65365d78-c155-4af5-b4b6-a016620f9883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf6f5f6-b97b-49ec-a6c3-750b43ed138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52f596-e72e-4d14-b9e6-043c97664442",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa0547-b40b-430f-82d1-9b681665568e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f8b5f0-92ae-420a-bb89-153c9ee6c4b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ef7e2d-363a-436e-9fc8-8fcd066f0582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db3b5fa-b0ca-4437-a287-d89cd41b0a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d09fffe-f594-47e7-97a2-6f26a2949539",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c19b0c3-77d5-4db7-bd02-12c39521bf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7f85ac-d773-4d61-9e12-37e326fc0686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ca891f-a612-4977-934e-77d854043c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c025424d-5fdc-431e-b2b0-eca957f39891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84a45e3-63cc-4921-9f4f-7dcf2582d74c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c587973-01d1-4688-8477-be0c09397767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a262f61-ccf9-4ef1-8e14-aedb9485a7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5ab9d9-3321-406d-ac35-06b5d010578f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc51835-eeae-4e56-8ace-3d2f986c6d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8be042-6ebe-4615-a14b-440b343f52fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3645805-63ed-40bc-8c76-1f8cd1725a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b269b5-fb10-4212-b22b-e48ae7468451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa057a7-f707-4451-b277-063da8010cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "149fe1c5-6f1c-4bfb-9c95-0c4dbe9c74c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537ee1aa-d5b4-4a38-b475-414125476f90",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25f5e83-7661-4cb7-a80d-dbc486b478ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb475e16-ef1f-4baa-9efb-3e40b9834303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312caa75-b3ba-427a-838c-b02c4f716b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4300b485-d23a-482a-bce8-3435cf0ca386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6c0226-5b00-4218-a0cc-e69b8492bcd5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dd394b-7937-4d9c-8e00-b5bf396ba6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2dc8f8-4a01-4e5f-a1ed-c3903e64dd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96608dd2-e6a3-4f7c-a975-8f44fc533be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "571b97e0-29da-47ad-b75c-ae78c969b753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c5983c-3738-4b9b-b568-1feb2df033d4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae96459-516c-4cdc-8e7c-03e6f9a9516d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7d4d6b-1af2-4bef-aaf4-4eb1668900cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c748bf3-c5de-439c-bfa9-a04a36b56fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5afb2ec-ed4a-405d-8e7a-a5c79a5d13c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1002871b-30cc-4a15-8557-06297b397aaa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bcf5d0-79c8-46bd-8b25-a7a82eceab60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e1fa70-78da-4f55-9806-842e72e078ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c657e4-7249-4e61-9aea-f2003f2ac63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec602da-5f11-46b4-8c9f-0aab015cf123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ae7157-a79a-428e-acff-24d79aa35233",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80736c5b-2a5c-4dd1-a392-3cde4f7046d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c659d2c-c553-40d0-b2ab-9902412d78c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69117eff-e841-477f-baa4-5421e8d886d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9aa184-9a40-4789-944f-d7b544ba2130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511c4717-f731-44bd-9ad5-7180eae30f4a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c5c3a9-f7c8-42bd-bf1e-851890f228fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc662d6-53ac-40f2-9639-1e92d5d0a054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b6d7bfb-66d9-49b7-a7bc-5e46202436f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90a46309-038b-4496-b1d8-87c060277dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb82f5e4-88e7-4caa-a61b-af0d907c874e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab64bfe-b223-4564-a55d-d84bb02add33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bddd10b-875a-4f13-88a0-be0051a2976c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4923529d-58a5-4aff-a791-38e764bab83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e0f740-4fb9-4e12-9529-1c669df140b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e332bac-1202-4431-8d0d-f33a22305933",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d39a7-ae60-4939-bda0-235cdebbd06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b34e05b-def3-421d-8e22-5b43e480918b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f0be3c-8332-4d7a-94d7-553d956f7377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca01a63-3589-47f9-b01c-9c884d625fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb3c10f-8eb2-4f31-a4dd-ff59a3a95ca9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844fe1c4-83b7-4f70-bec5-17e4a4178c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0116c076-1f76-42e0-9ffa-24605c0735d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5586f84-67d7-418f-bee3-19802fe96897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7fd9f4-748f-4e1f-beea-79af7d8fe85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f58075-9781-4e41-9d1d-75b791fa5bea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f78554f-baa6-4c71-b2f0-b29e395bcebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a414a2c9-58f2-4ded-b0ce-5a4fe4fba6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452e1652-4382-4b51-a16d-6659c7604699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c037f000-99c9-4527-a007-0765e5b7d18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cbadd8-a2bb-49ca-9129-7aa878933005",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01878b7a-5087-4db2-ba9a-ad03d7426242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3faef9-d5b2-408b-9ec1-3ff9415a5892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47c547e-9228-4e07-b40c-266d27a6fa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c87393-a46a-4d51-9d11-0daffb5bc5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feffb60-66af-40f5-a0db-4ef996d7b7a2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae534b-2259-4d1e-a96e-b0674d28b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b44c11f-357d-43c9-890b-b203dca23f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba8262a-cb40-4b87-8c70-93acdd57df97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c98bb8-752b-4b0d-8b6f-ae2fbff9d74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09d23ea-7b7b-4619-a67b-33921de81af0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2485aaf7-7303-4e8b-a09e-a5ed82211a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24df71bf-18ac-401d-9ea4-755e1b7162bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0365739e-adfc-4a09-9dbf-a69be9bd8688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abae1736-419c-42c9-b65d-b36478dd5cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6df033-1631-4d3a-a6cc-aa8ece65dea4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a938d08-ec81-43e8-83b0-662a1d28cee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf298a6-f0c6-43ce-a3e3-8fde21d8f418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190a4bab-1068-4d45-8a38-fc98f0815050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "730e8698-d0aa-47b3-9b7e-3405e809f1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d080ef6c-0918-4dbb-b9fc-775d38bf8469",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b100d24c-5209-4cc1-8bcf-6607e6bf6178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03661d65-0cd5-4c02-b94c-ca61ed4c064c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a28a52e-9e8e-400c-9baf-b686066c77ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dc116f-7df3-4149-8b06-c9b4ca25e3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d7b338-3e5f-4940-a2fa-4525d5279217",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260f958c-2769-4415-9e3f-ca8098e568b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae73d5e-7bb2-4878-a804-b23bac247fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf68374-0d38-40e0-bb94-7528d9424a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c08dea-44de-4603-accb-d07217c6268c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78711abd-259f-426d-80a1-b99ea9c2cd6a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2f7ee2-61a3-4c1a-ae6c-4c0d2ca106d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af3eb99-e821-4084-85a8-2815393b014a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa93e22-2372-4ed5-a79d-6f0d636b0855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6a0275-de79-46dd-85fa-38a1e28bb316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ee10c1-22b5-4fc0-b6b9-0bf9fe0682eb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddd5b88-36cf-40af-ae5d-bce43e2303e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b203a0b-cd0b-4bb1-bb5c-95a89f68611d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3f0838-b704-4c60-ad01-343df7474923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad55ba0-0f25-4967-89cb-12143105f39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4d3290-e98f-447a-a0c8-8ec16ce1a9b1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64ad301-6b75-4e73-8838-f690f7485a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddaf560e-2245-4070-9a8d-4069d86a78f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737126b5-6fa0-43ea-9fae-957405a8ffc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a277778-5326-481a-bf14-204a6382e09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20264831-9f63-473d-bbe6-73b61a27647b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e9ec1e-c27b-4a64-9c5d-d6e56c7a33ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33f0d78-f8c9-4646-ab38-794f21a56be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debc1886-ba50-48b2-9a39-7b2b4991bd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c19135cf-4adf-485f-bbfd-62f5bd565cf8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ddaa3a0-4a43-456e-a9a2-19f5041eaa2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f00989cc-8393-4614-81ac-b95adab6b655",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b3d021-c9ab-4b37-b0a2-3382e700342f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad35c4f-dd6a-41d8-b9b8-bfbb21725ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de77fc8-b294-4c22-9adf-2d85dc5d5b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9b7bfcd-6ccb-409d-aae3-102298b58745"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e47c41a-b3c6-40da-843a-9efae54c73d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22e78db2-cff7-4a6b-9ed6-85f2e9cd4557"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23a6af81-640e-4431-abdf-22f89e0e5d26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb40e1a1-395d-44e9-8719-dc77bfa683ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa78429b-2ef1-47e8-9eab-5fd23bb7ea68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed50503a-0082-48f5-9632-9c5a117f0211"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4aefc2d-770f-41b4-b04d-5fc159b39ad5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e137c5d0-042e-41a2-a10a-67fc689e9730"
            }
          }
        ]
      },
      {
        "id": "c3e1b1e6-5547-4ae8-abc3-38145916fc8c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4983d06e-9bb4-4128-bb02-8a06b5ff68b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a34f0c0f-75bf-4702-99a4-dbfb4df7a329",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd99d8c2-324b-4539-bcea-8891440dfbdb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87f96e8-6859-4445-8ec5-4bd26106edd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb0f7fb-e1d9-4fee-af37-1c2fcb9ec5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28ce6a0-81f8-4d87-b177-2cc189721266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3899b1f6-9277-4516-bb92-745510b3b591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40ae53f-094a-4330-87fd-2b555d57101e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408f4227-9252-49d5-9cfa-99306a3c5458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66dbe24-8210-4806-a475-7e788a952f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34b215e-7c6f-4f10-8f22-ec286fa75816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "933f2500-6fee-4141-9326-8fa0b38e548b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487894e8-d96e-47eb-9925-8a5b59112960",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b3397a-fb23-4bea-b9d3-ebd42fea5dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f679838-4df7-4220-8333-de3157d71c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7ff3a1-7e6b-4eeb-bd5d-3ab6d15173fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b289ef-932e-4641-a778-f0236c4cb1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1887ae9b-39a9-4403-9f9d-9c01b78625a1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cfe9d3-9df1-4d76-a78a-664e852c7d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2278be1d-443f-41ab-9165-065477d49c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c11f093-ed73-4a83-81fa-d527e621f7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0ca28d-d07e-4256-8d64-cf491063136b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bf1e66-bc05-45f3-b0b2-84cd66e04e2a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93edb79d-b09a-4f32-bad1-5466d082b3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0329c68d-35e1-4fd0-af21-14265881e761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14966cd1-3b76-4d02-910e-a480816a4efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1f2daa-c5cb-47ba-8d10-88112c0476f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35989da-41d8-4c31-abf1-036941fd7e27",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bce029b-6f1c-4e8d-a7c5-fe87d5e615e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d504ffe1-f788-4c20-aec4-a14acd9612f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f873063-e1d4-455d-84ef-5c692bb27406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b092c3d-cb0f-413c-a9a6-cc37ba49306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94081623-1399-4de0-aba8-6ad30cd57159",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae077ba-3668-4504-83e6-de0640d8caca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a460386e-4f9f-4e1a-b634-2c4e94d525a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fedc784-e719-4c7e-86c4-7d833e2bc32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bade36f-336b-4ec6-9cb5-cee3b196f4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4f4644-dfb8-45bc-b0da-9ded0b32b8e0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bcd385-b615-45cf-a74d-842ba8adfe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a07529-422a-4754-ae9d-eaa9ad1cea9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa04b562-905d-41cf-a356-1ba0360123d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dde7a977-318e-40b0-965e-d0419a2a292a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a32a3ba-2c7a-48f4-b05d-976c3dc67041",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2fc8b1-c885-42c4-8c1f-41387a08b440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da1756b-6c25-4123-ae67-2416f5a1d47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cd9c45-3109-498d-bb7e-1562b6fc9737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7004c6e-3845-448b-9fe0-7680b874face"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0d7067-5bba-4e37-8b99-a2a13d6c07a9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b2dae0-bb04-41f4-8cc6-37bd6e7d52ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358be66f-5e3a-43eb-8288-2789f11873ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7a6f70-d2d4-4a8e-aba5-a9e02396dfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6077be-0b9e-452c-b480-d7245106f790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f2664f-d816-415e-87a8-70801b66c5b2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7542b9b4-be73-412e-b271-fa464a3d9d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64178d45-bb18-4277-9fa7-790f06efce55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668c2c3d-8a1b-4990-98f0-efd8e18dbc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3687aaed-dae1-4e82-a573-16d840e3fbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d085167f-130c-4bd6-9492-61c96815f1c4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b78bed-f002-411a-96c0-47008adad17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ad7a30-0143-4fd7-9fc0-784aa3efaa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fefdaa1-ba99-4fa5-b500-8b0c1db30e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed8e88f-5d4f-4991-a6ab-10e6753fe357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e156b8-ab74-4740-a418-b26111a3e400",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbb95a7-bd34-4843-8c4c-4e059c13e59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f902bba-c953-4cce-ba17-ad39f2ba5dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2777da99-8486-4068-8fac-d0a940760cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "191dd19b-52b9-4e13-87d8-fe38a2e1725a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dfd075-e43d-4fd9-a866-c42589e1c78a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41984447-baeb-42d6-b5e9-e59f15e5eb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fbe39e-101e-4d88-8806-9e49fcda7868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e625bafe-d5f4-444d-8ee7-bab1610afe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "02984b3d-5847-458e-936c-0a6f84ba2793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802f97e6-5ce9-4bc7-8078-8243b1791b0c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ec8f47-6fc3-47c5-8f3a-60522b803c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9f41ea-22ae-4b92-b2d9-fcede877c560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedbc8f3-d6bb-48b1-9fa3-4e3173a8b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5080d47c-050d-4e40-8fef-4c391c1bb114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acabf669-0c1d-411c-8b74-252a35144886",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5450fc4-a5fc-47d3-b125-8f132ba44c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd78d47-9ff4-40ca-bb93-d1dccda60bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384f1b14-e195-4310-910d-552493c50aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "23dbc46e-8120-41b1-9fcc-c03969d14f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e98ac0d-1c4f-4688-8fd3-dfb67d077d41",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210dcead-d7eb-4d5d-bdb2-e43a385e8d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b0e74b-87c0-4661-b599-6c58b5707b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b86b96-5666-4eb2-989b-8779a0968515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f57b92b5-3307-4229-9036-25906e62b6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc52eed-9b44-4a50-98bf-d6c37fa29a16",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f50abb-6559-4afe-b5ae-95f6b8ecee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35d8285-0ee5-4647-95ac-8c6b285cb35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d73b5e-d254-47e7-94e2-e6c90cde5c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3248c076-cc92-44d8-92b9-49677aa02100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc2b7bd-5f93-453a-b2a6-76b557c953ba",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69702897-45ce-4175-b8b2-71ccacf6d363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5a550b-0168-43d3-9617-7164020dcf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71485208-6bbc-49e5-9147-0103d08b02f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d27eb1-481d-423a-a7cf-11aa73c1386f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4d83f0-3586-46a2-a867-47b02f9f3817",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7957fe35-c538-4d0a-bd79-7e859ff9edff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62afdfe-87ec-4b47-b2b2-65743191a545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411549fa-39c5-4728-9e8a-4c55e5064f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e57617a-58ef-43f8-afc8-00c2791fc6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e25c45-db74-414e-ad4d-c57228f36ef0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859c1a71-482c-409c-8761-f02fe37a8be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b4ac19-a24d-43fe-b925-7d7ab3fc6e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6432ba79-8cf6-4ab6-ba32-d04fdfe2c2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c73a07-041b-46d7-ab6e-bfb579539b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c685565-243f-486d-bad2-f16e97fa568d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea3954e-7873-471e-ac8d-eb5356146cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb28556-55af-4f38-be4c-dcb05690cf33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef178a3-cf04-45ea-8252-dc5db2fd1d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48f83ea2-1dd8-4915-aad5-fadbc7dd8c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8f6fd4-6126-47cd-8017-ebaadbbca5aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f278a46e-9cc2-42b8-88a1-0fb270edbe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3419a84b-7dc9-44a7-83b2-5c4079d9228d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2ca62d-99c2-48cb-b5ed-58fee8305f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "780c446c-e887-45b0-8786-68e353d6c0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1e1dd2-b183-425e-a28e-0b288d8a15f6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75343c40-d0a2-4d40-a03c-c7e5dc68853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52be63d-d053-4398-9ec6-f139625d315a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8f4310-6c15-4108-8f25-46a8b0eda426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d730de1-6d41-4628-8128-f97aad2b8d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00306c36-ffcb-46e7-bb7b-389137394dd7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8cb27a-6e7b-4af0-a122-cad8ac91744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0bedbb-e310-419c-afe4-237cfd1680bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7255ea3-aa02-4e38-a8b0-acb199f92b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "434921b6-56ca-41b1-ae09-21400879ff92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4018a89-94eb-4dfe-9ffe-304bdee2234e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af77701-5f61-49cd-9b72-c9a3cd86192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9027b8a-6303-4008-ac1f-b57e678c745a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21c019f-3dfb-4de2-a76e-4e34d77e0c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c116c73b-eed7-4652-b62b-4da91ca3010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1f5280-32a2-4dda-8f7e-ccc4dc44b91a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed534e28-fe29-4d76-9040-b71b9947c356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d2a39-4344-4b0e-8cec-c7c311c88a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85e222d-0612-403b-b9e1-ad5f3a8b350a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce631c8c-2fc1-4659-9734-90a4053adea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e06d172-4f30-436b-bc1a-cbc98d401d65",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267ed672-ebe8-4b68-8065-740183d9c4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291cfc43-be45-473e-bd11-ce7c9a90b5c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d418c0f9-1e20-46dd-90ec-e4424b15e21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a1ed77-be35-4e54-acdf-7741bb15427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b69a31c-12e9-458c-b887-fe29c84accf5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab59a69-5e09-4a0f-8d6e-4a72d5d4e2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd365d1d-9a75-4f1c-970f-7bdcb579d559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d04d8c3-01f7-4a02-9c01-c34caabbac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc04324-66ff-425c-8fb4-4f029c093841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570e957c-f54f-48c8-acf7-82d7cab33893",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9703a69-a9af-4ad5-86fd-cd69a306c5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbea23db-a073-4d4d-903e-5c551a50afe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5588d3-5a9f-426c-b2a1-390ec7a3e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2f29a8-29d0-47a8-8840-294a88df0c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2d383d-261e-4af5-9d87-24149e94992b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa9233c-9ce2-40c0-840d-63e142be03e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ac2b20-8d92-41e7-abe9-daed7b385613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af501b1c-5e6c-40c5-8f8a-03d9f5392108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3312ba61-5961-4a5d-aed7-10789d21b251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8907d42e-4c7a-48dc-a2f9-2e6a3a900944",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3564466e-f95e-4ad6-b4e0-ae8f1c74513a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3159af-fbb1-48ca-9e83-e45403597bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e520f32c-b995-4628-b8a0-c004bd9db947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cb65a6-b4c4-4320-a1dc-98619f1ef232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad56b859-0e6a-4a9c-a6a6-e5ca9b65bfaf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af25c23-95f2-4eeb-bc5d-3c6a17e8c79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc4e547-40df-4e60-9408-32350b7a0f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d3f2ad-7254-45d6-86dc-0be94a2af3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94dd7226-904e-42d7-a9fb-d96a2371c818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e31db5d-ff82-41cd-ab1d-e14c81a0b381",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eb87db-fe3a-4626-914a-dd06389e5cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38dc35b-42aa-4a15-91ca-13084cdb8963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af904a7b-7193-4513-8856-6327d686d4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d81172-1f87-4b0c-a647-1dcf7d0606eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c65947-af2a-42b7-9c2e-8087586be430",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bced91-3c43-446e-a25a-063314bb6636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024afb8e-f789-4790-a835-911d6903995d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a43ebc-8f6c-479f-bf2f-c6987fcc093b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "220a969c-7986-4384-acff-ac909729f7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d39539-b9e1-4d64-ab65-fee3aa4b3901",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3d95a5-f999-4df3-8595-c11135e8e61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bdbd9b-a9eb-457a-a25f-75bf7840f76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1890b2-4337-4f9b-b6a6-5dde0be9d2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bfab68-ce18-4599-bd5e-f3b9282c9bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aa6b36-0566-409f-9de5-7f55eae341af",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e1cb62-818e-48cc-bf38-a58f181f7a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ada757-25a1-4817-97e9-a748b7949257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306edbe0-83be-4a90-b63a-13a8010835a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5504f6-4fd1-424f-b6c6-53829da146ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5568ceb2-b5b5-4f95-b46a-df4cb1fba7b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f157c40d-82d7-4cb4-aa42-97428192a4ae",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308c0c0e-78d2-4947-b95b-3b2f859c354c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ed4786-c21a-43d0-aafa-2f21d8b0d722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd480e1-32d0-4902-b868-08af344f0686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c292a4db-9494-4e19-b39d-1b28731ae0df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8feb277c-2545-43db-a095-5c37f89ec46e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d8d01a0-e26a-45ea-8859-d8810910cfa6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99296684-d960-430f-8474-53cdbe0561ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac0296cd-dcb3-446a-a317-0b4182e1ef55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcfd0697-473e-49ec-8f22-6cde54a0fb32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9162074e-f14c-4496-844b-c4eaa5de95f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cd71145-f904-4c55-a620-70ac401fb163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ffe574b-6edb-4b12-b994-8ac55ae746a0"
            }
          }
        ]
      },
      {
        "id": "820fa092-02ad-4c3b-a5be-beb58903f543",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "01f9761d-a7c8-4433-91a6-1088b44e28f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6903e50e-b244-4b1c-90c6-e44f83f265a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09bdc8f8-b058-4948-9d28-261bdc0c26d9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af800b41-e253-4688-9b97-a201358b5ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea220e06-20b5-4473-949c-4f09601c4641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c28959e-262c-47b9-a8cb-8fab3e3efea7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42181dbb-9eb3-4733-814e-76f976430a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a33eed6-9fc3-48eb-9e98-daf2dd293dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b341b2-1c7a-4904-9687-3e6b11f44ffc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c55549-659a-4b4f-a47c-109b8b919f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b2b048-a676-43c4-b683-5eb991df4cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d665f19-5977-41db-97cc-76a94aa834dc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca89735c-19eb-4891-8587-59f1c4694462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231cdb97-8d31-4215-ac6b-15f0818a64e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b41ed1-398f-4e46-8a30-61ea9c412738",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb2f87c-14d0-4e21-88c0-aa8ac98248b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8bea59-c9e7-4e6d-bdec-e0741417ab2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a92693-64d5-4cf0-bf09-dcd3a3605d81",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140452a3-539c-4be0-bebf-bfa0c26452a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fd98ba-53eb-46b3-a9da-b3ceeb33ea56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84043b1b-3e60-4f2b-baa5-73dd57b486bd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ba9ab-6b19-4cf0-952d-9bf7d0f94563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5947461-81c4-4048-b73e-cb8cd8eb996a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6c9da5-2759-4fa8-ac51-0f88ff4b73f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4948bca4-4028-49ba-9425-688069cbec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30ed4e0-de66-4a84-8095-cbc209c1e100",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19981646-ca20-4b7b-9c08-30868a4b3bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7d6b18-6b32-4d5a-80f5-a17a0d8e293a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60102629-2cb8-48d0-b930-22d0632bbe0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c155c8d6-a9b4-4a0c-a768-c72fb28e157d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18e4b6a-0b90-4013-9471-bb70266f7e06",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441e3604-09f7-4643-b89a-e9800dc882cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825a8fe7-2733-4e14-b9e9-6f3e344533ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97e1ccc-1e7d-496b-9b62-91920c3cd115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f832ed80-e892-4fd4-8f51-0c25288f15bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e33edc-30ce-494b-b50e-1ecb7a5d2dfc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4908b8-a3a5-44ed-9531-3d917cd44520",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9b2b17-2d9c-4f2f-a8fb-aa91778496b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d26887-d3c3-44a0-b5e2-516f67a11284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2241d012-8189-44a6-87df-466c704f76de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089f734e-9bde-40ba-aeb2-2e154f15a6d6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447c7ff2-92c7-4cd8-ab72-170ff098bd6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc498c52-dac3-49cc-ad1f-99696815b84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b318e6a-8137-4f00-a003-06b1e100db45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e94577-7216-4f1b-bab9-4e588eafe108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52c9810-2e00-4a7b-8531-6a5a7241a224",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b4cd8a-b4a4-4a56-bf42-432e34bcb610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d49ae1d-38f2-448b-8327-d3f73ea0f20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbf107d-3f04-4cd5-9135-00b70ae86101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b933a6f-0ee1-46d8-950e-401c03f185ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8217d3bc-fb0e-49be-b252-1c2e79363263",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab691120-5e91-4df1-8b3f-f0bbd4292057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90ea90b-1a5e-4f7d-b90f-b67ce5f2125e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1146d6aa-5bcc-4315-af95-2f3c9645465f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b010a0-73c7-4df0-b8d8-6edd3d53420b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b5e2a0-f431-4aeb-be98-a340ec37da1a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d605c3d-80ed-4fef-af19-3d1b660d99ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8938d066-2460-43b9-a61e-b5ab14722716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a894619-ab3e-4dcf-a917-a56f2cb0ed32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb88981-ea62-4282-a517-4c0c905720b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a47ccb-e74e-43cd-bb9f-3c822124cae7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aa6da3-f4bd-4859-9356-23dda8749ef4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b296968f-c2cb-439f-8180-fe38ef96cc97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15de9b1e-246e-45ff-a993-246a037c1790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadc0450-3771-434b-a234-3d9b9d8eab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d5bfa8-97ef-45f5-aa90-0b4c765bd128",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2717e9c3-f46d-4b21-bf1a-aeb97b64a978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbcfcb45-d6ac-4953-9129-2f02300ecb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b71ebbe-2765-40d0-91ea-23a85afb62e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcbb0cd-0468-4780-b198-da9035629846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa480fc8-d257-4a60-bc96-357716838800",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5194455-7c10-4707-829b-46186dacf67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f934ca63-cab8-4af9-80b3-9e103d2851c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db8142a-bf28-4d9e-bdbf-a480e82969df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dc4038-8bc8-4758-b836-80a79a5f2d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccde179-d4bb-452b-95ca-3ef942743e58",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872a64bb-0d87-4ce5-803f-b995c8934390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2c037a-ee40-431c-a165-1e22e07b0bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1f79c8-c586-4b31-ac46-4822d3251f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d739d4-06b7-4537-af32-7aa95f08a1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd37fde3-165d-4320-a931-30e0af182667",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dea62b7-417c-47f2-924d-41a4e543b341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0f1f17-7628-4ef1-bea6-60d720062a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e1c09c-c00b-457e-aac3-79c8e19da63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2290e302-27e2-4d90-9bde-30e247e24043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba7d215-4624-469c-83f1-8e550ae39524",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02562250-6989-42ff-b5a9-ad841a8294b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabec671-41ba-4192-b7df-875d6c99ca3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a346b917-fad8-4a05-8fe2-775e682f00a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842eb7fd-3d49-4744-a0ed-e0eb50611f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d070a819-ff7c-4e99-8d36-b8ecd6dd27fd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b491939-8423-4ee6-a113-d96d8992127d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b506b72a-416f-4bdf-866a-518f0f23bc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963efd76-8c82-4d78-a530-432366928396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5941c06a-e8e4-4c99-9f91-6e6443856f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df337311-0f6d-4be4-9207-3c2669629eb4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b976e456-6ac6-4f3a-a6ee-41491883144e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ab9c0a-72de-4a17-93ed-24a9b4698ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a30c9c3-1b67-4ec6-b244-9b07cb54de85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacbc728-5fda-4be3-aeeb-0cc6fdb3943d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c769c53-55c4-4233-97be-590e016394e7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6283f1b1-67f9-45e5-acfe-d57d436b55fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f40d507-2148-4eba-988e-3f46551ce1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e281f8a0-e953-415b-97c4-91d387ee4988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca079729-9816-402e-96cf-6625cd3f847b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41f6e72-9eba-4a16-b6ec-4e109cc6661f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca1a366-3960-4d23-920f-4cafc3e9b5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79a22210-1dfa-4f0f-91cd-d67aab13faa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71dce8c-4288-4c3f-8359-7aa77452e7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5272be87-5a73-4877-8516-2700d774462a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57b33c2-e0d8-45dd-9c39-ba6f737d8891",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2f3046-2b51-436e-b63c-e889521569f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5d451d-b652-498e-9f1d-58b5b1cd113b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28bfd80-22cd-4a11-ac19-c2c7a9708288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3758f018-ca43-43e3-b0c7-17ca54b190c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f839ff2-283b-471b-b806-8dbc0821e29c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696e4894-f134-452f-9f33-d415b72c5af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd780e3c-2dca-47a6-abde-665ede7766ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fb46a0-a9bf-4408-af5e-412e099d924a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f94265-d200-4858-8bf8-1e8193ef0bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc354909-090f-46a1-9029-30e4b0a655ac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a87560-f4eb-4842-becc-ef9a72307148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d38a6d6-0064-4670-94ec-fd8a76ae2aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52fd645-99c4-4027-a546-40080f6cb51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b85192a-f401-4cee-b18a-5459311a213e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650f9cb6-e983-4da2-b61a-3b4a67efb642",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cba7f4-a3fb-4597-bd87-405a34d7e952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e43408-952e-45be-8084-958ec33a33fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2068dd06-7e52-4726-9e78-a7b963bbd83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b757f5f-dcf8-4e0e-bd37-e860e2728ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0af32c-19f0-4cff-a8ac-c364201d695b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaffcc1-df96-4795-b9b5-9595b17a19f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3dcc97-58ff-4b3c-befe-87953dddd88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955ad0cb-386c-43c4-8943-02400bbc55d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2b023b-8387-4147-baae-eabd86472b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a317c6a3-83db-4cc4-9b07-d9625b3994f4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98eb620-b7cd-438e-aab9-23702e8926ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b20cd3ab-f500-4919-8068-d3cb4f1ed37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adff1b0b-f253-4a7c-a4e6-11d021dd3371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c904c2-29a3-4f01-ae2a-8855d246c12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa89667-6e53-4e47-bf69-29228b093aed",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a3e6f4-db25-4a00-90a2-fd57d7f26bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e336f90b-2683-4950-afc8-a6e41d654d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c428ea-73d9-4ed1-bcc2-e669ccb01080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab4a540-59df-47f8-aeb7-4087ef716e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4175c515-686f-4e75-a0df-ee87425cd430",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e05ae8-a8ec-4e62-aba7-99ba05cd9440",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0671a99-2b5e-4179-8885-0f3f19b2ea3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481b2511-98ba-434a-927b-7fab713adff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53cc9a7-4187-4448-aa22-72f32eeb3975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b20d56e-9525-4d8c-8648-4d7f229b89ab",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec46335-07c4-4c82-bd1f-464f064fd3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a3e689-dfb3-4d87-9820-53238770a388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72368d73-5e03-4043-8dfe-3234e20daf9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ee8249-01e2-492b-8e7a-f309614f68b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc45ed76-90ab-4931-92dd-2b9e841ac8f9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5586e202-4929-4a31-a6b6-8b07dfd26a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8919d91d-08c6-4d91-b7a4-46b79f7b9aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5370a563-96c7-49d0-bfd0-4b3248da5e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53babd8e-73b8-4b1c-8f74-4ab2d6c5ff5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4567af-ca0b-4d7c-9099-0cd84045c10d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbfbdb8-7513-45a4-9926-a02fc1bda542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d597a714-8552-4d74-b87d-3a7107623a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901f19b8-1385-4c74-a682-4c20dcf7b0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f3460c-85ba-4ae3-b527-ce3c87dc3a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf5412d-4b79-47cc-abf1-e6a706084045",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5981b6c-470c-49d4-87ae-79349837068f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac91dcf-6816-4b5d-8896-d72621a1be57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759592b2-89f0-43a6-9e95-695a27c7eddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5265d0aa-adb6-40f5-8859-b989cfa7db53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb79b57-2a8d-4dd7-86e8-e89923fd9255",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b427ac04-6f3f-4c5f-9569-616083108c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9579c659-daac-489e-9193-760de405452c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab51667-1823-467c-ba71-037d1d02d955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a719fb6e-7f00-482c-90da-740180a1deec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3687c6-0082-49d3-960b-1336d35da0b6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6866f8-3045-48a5-8fe6-eafe0e60d52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f694f7-8602-460b-9083-1789dd766774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ff7bb3-d0cf-4a2b-84e4-253527d2bc54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4967437a-9b36-4ad5-a658-61a80f4e9932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f999a722-fdfc-4608-a57b-e0a4ea06293a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e67e0c9-03ce-48b7-ac49-600f0be1c6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcd64046-8cdf-4ad5-991c-36d596f68ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e169f973-7cfa-49e1-93bf-bf194523eccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a5aae8-009d-46b5-afc2-bd19c9ddaa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe7b0f7-1f6b-4060-b927-4d0c64769264",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b5b1cf-f21c-4c36-8291-b9dbc7aa9a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0914cb22-fd78-4ad7-a725-f12c1383beb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff0634e-dd0c-4d10-bfa9-1dceb8df7118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8811b5-8bf4-4e36-bfe6-28dd398e2e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8504a43-7578-418d-b5c3-f49bcd1bb081",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9cef00-ec1d-4788-bd56-de2bedd294e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5202a5a5-346f-4d84-a683-e0e656c96ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b1e98d-e8f7-41d2-bf12-6fcb7ed63c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814669c1-51d3-4c96-83af-d506d6e09120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf4739b-4930-4ace-b8ea-0a23f063eb12",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5c9668-edb4-4a1d-a128-ba91b6bca052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35d4b4b-c087-4773-82c5-f3082441960b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b4b8ea-d6a3-40a0-9612-5ffd45d5a127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b5b26a-54f7-4bcf-9868-35e5cca65e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71defcab-10fe-407a-b12f-1912f13dd88e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cfa99f-e058-4f21-85ee-cb481641f3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2d8c65-4a9c-44fc-97bf-693c3dbba6f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ea9695-d82a-42ab-b388-5c314d84cb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be6da45-9903-476b-8591-736f9a87fe6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43d97bc-28c8-4ee1-88d6-9969797bfd57",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49be86f3-3164-45e3-9736-6f5db3ecf680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8758537-5644-4bf8-b36d-79e7ded7bf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a92640d-ceb8-4237-88b8-3d2af52e968d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48be990-6b41-4ac7-b123-90127921b2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30527abd-c583-418d-9e78-16276435a33c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b103f00a-fa68-4636-88eb-2d4d89407cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d71e43-c945-497e-91b9-4f3ca9d1f462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f98393-d5e6-4b25-9ab2-2e3a766243ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b7a2a3-09bf-4241-bd54-0571ccd7c487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5095706-b6a8-4a1c-b602-f37db00b996b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fa37b4-4850-46bf-ae64-cd8f350b53eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b805168-5f7f-485d-8e9b-f88e4a10a2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c008a3-22e6-44ea-a5b8-81e6efe3fd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7eab4bd-2df5-40db-94c2-f05b79a73d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2231eb90-2761-4b00-b659-f1165013a81c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e0f3be-2b1d-4600-bb07-15def26b2995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93acc66-2ea3-4a21-ba80-c297568861b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f27232-b66e-4646-ad33-976b5516447f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85357da-f623-4ef3-a49b-ae9347d55cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e429532-283a-4294-9f9f-112e00237264",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b75d09b-1f78-40b7-84e7-df9ecbfc5516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696a5274-f9c7-45d0-bbcd-7dc4388ef716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab8a414-96d5-4062-ad1e-1c3aad8a6902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76206fce-1988-46de-aeb8-b74db1034226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85d87e8-1433-4d6d-963f-33156fbce698",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d7cebd-980e-4bfc-807c-77ae72809c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd629c78-d05f-4bfa-b861-38b7d60f1889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3181aee9-5a57-4cde-b6a9-32016dd0c094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f2dd1f-731c-4137-a851-c718a454cc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21654f5b-a0b2-4fff-ab11-3e0c63a37999",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6105bcc9-e2d8-476d-9adc-3d0ae15ad0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3b5153-a065-4ab6-b35b-68158bce2668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21d03ca-b4c4-4e91-a751-65fcebc86fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c9d741-12d4-401a-9c43-77225ab7f293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1890c9e5-2f16-46c3-8fe1-2bd6da2e4887",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a72b6c-1f91-43b4-97fe-1e1f13908d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d7a8b9-b484-4036-813f-8cc7353f7646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92dcfd8-9b91-419b-b46a-b66f88ee0f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e495f8b8-f742-44ca-b135-2a4a3375c901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4c4d89-4c5e-4af8-a316-7cd8bc2f348f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dc2952-a024-4a9c-a0a4-5160a29c5a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6b3145-6018-423b-98fb-29c5d1f29c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f2b89d-5c96-480e-a899-07a890e02cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d8f88c-ae79-4a6c-a53c-90b02716ac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad45134d-4ce4-4bb6-9f08-a735b7a3aa01",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7be2600-8fde-40cd-a8f9-e1c3b7e72c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a509e01-b928-472c-b717-9044fd5955c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dc519c-577d-42c7-93e0-3530d5f10b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde0fcd3-8d63-4b54-b8a5-2f4d88a731ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb8382e-426e-4fcb-a44a-207bdc8fe359",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3548b6-323a-42de-a0d2-0b6796390dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80bdce0-f379-4dcd-b420-aa8d05db874c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9907e0cd-6b45-4d18-9923-f7d8d400574b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b88ec8-97e3-43ef-b00b-b1cf12f47c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54aaa638-ef09-4bdf-bae8-07039bde4b87",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfae150-55a9-4278-a039-97bb519f7ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04c2292-6e2f-45b4-b812-a1419aab298d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e4181c-0b82-4296-9328-c2bf680807b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335836f0-67bc-4c85-8b03-ed0c1571ac2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c089d737-24db-4105-897d-78bb9c6a9af2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ae8412-5f66-4739-9fcc-30a68a3e16bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21e6e07-9aef-4bdb-9e32-95d431ca17c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354290fe-ecc4-4841-9e3c-c94b6c4c2e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f2728c-27ac-4c7e-8be8-776773f08e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f18be6-2c9f-4791-831d-af27c186122c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbe10b2-c795-4f01-9631-4a6293a97d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e15292-c39c-4fc5-89b6-05d6de32cbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5eea79-8c38-481f-838f-7de1ad8b84fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5816331e-98f7-41a6-8d5f-e8f01b91c180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56343f67-b080-4a2c-907d-3455daafebe4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b59ba30-7697-46af-9f84-8bb3f7bd8631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fbac09-a5ef-4d69-9c2b-bf93fbc82c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23414737-9682-4c5e-8ba4-a2e5c971c0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e539b90d-2262-4745-bb08-77e9956464db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5481fd5-b449-4f6e-830e-2837824d76a3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb4396e-9897-4e2b-92c0-defc7d15bbae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eae7574-2c6f-4944-92cb-132e138851c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39703cd1-9f67-4c48-9163-808ec5097e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c1156d-f293-4989-a299-f619bc3bad60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285d694c-2ec1-4288-bfe7-53ed3890373c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0138e93e-9b6d-4280-892a-c51cb412bff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41afed47-b23f-428a-be42-875a40e9aa7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af86d4d0-8d2b-4a09-bf4b-469e876523b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8bfa73-32b2-46f9-a2ab-62f6774d9bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0189f3-4147-4bf9-9032-dd778a7d554a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df8bcd7-15d1-41e6-9bbf-0996e7d3f5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9552bb94-3ab0-449b-8efd-aef418d8d7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9464a0dc-2ffd-42b9-9b1b-3400dbee9525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9574b0d9-964d-4540-bcec-13a7c4c338ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa11d95c-66d9-42a6-b793-398e4fd3a329",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482c598e-a6e7-467d-8190-e2d34463854e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a588da9e-2878-40a5-b03e-89e22bab67c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e58980-1037-4e21-bd0c-fad384d2630e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627e74b5-1a2f-448f-8143-1c4e5952958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276054c5-278f-4dc2-ada7-a0caa9193d70",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caf1144-b991-41b1-a183-a531a1471996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1f76dd-1314-4622-a8ce-877f949fa8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588f22a0-2217-4e04-8601-be202bc85ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78c583b-b807-4499-8f66-5030bc445fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb3229e-3813-4576-b6ee-37f669fc21f7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244e328d-42cd-4ab1-aa07-b4ea14ecfc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03a044f-7ad4-463c-ac7d-7ea02fe14da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcd71f8-601d-4aa9-b408-2f674e54bb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1710f925-b209-4d2d-a00e-a180b568105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53279238-5609-48c1-8f97-2ea2ea157144",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664c854c-ce80-466a-8253-a1a6fd42611b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b4378b-2063-4fd7-9da8-6e190a1e2abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e3f33b-b2c9-46be-8552-09dbaf53d37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99a020c-ad92-4abf-b257-d30ecb031610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50109c64-7771-4a8e-9416-80905f5ccfe3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6cf708-f90d-4b4f-943a-28346286f201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb825b3-ba9f-4774-8841-def591647765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23bc170-e70d-4643-8d13-4d9db4d9d5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11c76a2-29e2-46fb-95ea-05f7a6ee0be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4038c0-131b-48b3-aeba-b7e71a39a7e5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a78070-9791-49da-923e-3ce3e7807949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e05e2e2-14c1-44d9-982e-431a2de6fe8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51de64d-cceb-4e6a-b286-e19b30eab4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99547642-e654-49e2-be49-50ff44abf89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c122d7b4-3d2e-4742-8147-addaf670796b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60faa87-ba10-44f9-a9e7-4567638e52e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1074f8d-68f1-4e24-b3a4-7d7b7323c5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a77cbc9-47ca-46ee-bc16-5c49350f9706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1aadcf-ca54-43eb-8d7b-8bdda57e35b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf3d736-88f3-41cc-9929-ec380591b0a8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837740c7-671d-484d-bf33-0da74d53937b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58fd6cb5-fe2d-448a-a211-2485bc578f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0ab559-0d8f-48ac-bb65-15c105f07bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c815ea-8935-46d2-8382-df38f350066a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082cb84f-46bd-4a50-bd12-28e7c62a5ac8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27806b26-891e-4700-ac08-30204871c0e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5129fc6a-616e-4707-b416-492e69fb3c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46777554-267c-42c9-9040-e66dd254dd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed32174e-1012-4ec5-a64f-4b341162371a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019c2f02-1873-4906-93ec-9ff9ca2c3592",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a62b55-ad51-42af-8124-2d64764351c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4461b435-7034-45b8-8d3b-aa5d6567c5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e66b83-e605-438e-a80d-1b23f8dded8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01479e6d-f18c-4f22-9a40-2245a00b73e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6386863-751c-453f-b5de-a9c8064ebea9",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3def61-a52d-433e-91b1-b1dd5bfcbb9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2dc7e7e-552f-47c4-8d06-337dc1cc31d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ba8387-c1e0-443e-93a4-8fa7e101e0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2422ca4-6adc-4183-8e4e-5f973d3c9b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88365f9-704c-4c67-90ad-1e3a0e603b45",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d5b12e-1792-4225-b550-1cf12d1f3f71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56798e2a-7928-46db-9151-838c4b0ed179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdba534a-8d35-486d-9e0b-0966c4aa283a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b426a329-e2a3-45df-9f50-de4ede705533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1380bb-5b18-472c-96d0-e7a1bf78ef96",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96846c52-f7e2-45a1-8c9b-abdb871c00d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e4ee3e3-6fbb-4f5a-96ff-b0db9d807e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e269fb-cc89-4d83-8276-51a7509ab4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba0b86-3e05-4320-81ac-ee85be15974e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055d6f6a-a74d-413e-a9e3-929614adc512",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c6ad19-4b2f-4cb7-b3b2-e93575f3d1ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432149af-4bc4-43be-8702-6791da4a2817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb70420-59df-4d52-bbd5-0afaca14281a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634f485d-0d4d-4393-a75b-ea288a896e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eaa69b-1677-4beb-9f23-c8723e87430a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8c750a-d64f-473e-aa7e-eb150955a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f9223a-aba7-4ddc-8587-60ebb98a741c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f00491-e0ef-484d-8777-f5bf01bad82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f55f87e-5c7b-413b-a618-8b1200e14ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4236eb9a-efc5-47bb-b90e-3e47b697c612",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4b6593-8bd2-433c-b5ff-abad2506e6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0125ed6-b2fa-45af-a1ce-13a3127c0485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31182f51-d439-4e49-8f79-2a446d3fdc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e36e61-d07d-4f30-8ad6-c1970c6180f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e149ca9-7b3e-4578-b9cf-d67857a32e39",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36e0c42-6953-4a5e-8614-15d244eb55b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410ccadb-6ac2-49e1-b53e-65f6f6e155ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f7bdf5-5545-476f-99cc-dfc27c1b1f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428afc80-ed41-498e-91c9-982f56b30a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eb061e-83ee-4730-b952-42f48290de9e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c739b9a5-e661-4b1b-b75c-bdf7d7817acd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3b6101-486f-4712-9c4b-77a4412b0e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69abfb9-be44-4df8-b4f5-4a5ecc55852e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04c832d-68a6-4cba-ab32-137b7c62ebcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4f5ee3-611c-47e6-9815-cfdc401f75ab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00627ca-676e-49bd-a1a8-75958ad0174e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4918d9b9-1c65-424e-85e5-043aad0dc7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c58f37-5a28-44c5-adcb-4fe2b2591327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de20f06a-17f2-48e9-b5de-4f599199561e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911a70d4-b0bb-4360-8289-118a17851742",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb627fb-fe7b-431f-ab8c-e12fa0158abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d98036e-a3ae-4c74-af35-82378dc066a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449bd6eb-338d-4138-a6c3-c9158b753393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90adbd2-540f-4dc2-817a-a7bb8814ce51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ba6027-4687-4500-98be-a644c8b0a456",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38fe78e-05da-4340-af4b-03810421ec40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d15b72-b068-4b87-9979-552ad9c59c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0cab74-e4cc-4695-88a4-8753cca3d48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4917c227-1ded-4e42-835c-e6f9a65981dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76441e72-9b02-4f10-810b-26d16fbc76b9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39aff86-69d2-450d-ac63-993f7ca5a049",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c023f3e-6320-4b8b-9f35-53ffbca831bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff14c795-dc41-44d1-8e4a-e3e360ea566b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c147fb50-ac5b-4ff3-951f-55d6e8519da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae551fe7-b196-46d2-bbee-2ae403b589fc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2615ba-cf5f-4cf8-a053-35cbad90061c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b608000-21c2-4a1a-aa9a-ee288c8c375d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb068e1-b752-4f08-9c6c-5e83a183e60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c79b6a-7616-43b5-83c3-951d36a32cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5127e53c-30c9-4e3b-9099-367cc8c5f96e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa1dd3d-9955-46ad-b0a0-79d9a46c7724",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d11f33b-d707-4e2f-b3b0-0cf31c98b284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e38ddcb-2b04-4800-9a30-93f3019a8121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214ad4cc-a858-4e6c-a11c-bd864d308ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d56bd9b-22ab-4ee1-b279-ebd98ce04684",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7817ff33-c10f-47e5-8473-5521451edc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f141d237-5efc-4c34-b637-9c8dbc8cee53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d217aa-a011-4b3b-b314-ee91f81ad33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e9a893-9d37-452c-a97a-f682eb431575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b75e31c-465b-48da-8035-098dc2278790",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3241301b-763a-4c68-88d6-5324c8c62ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d34426-206c-42ed-8097-dc546b9ad9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926b349c-f521-48de-885f-fa4065b5646a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d493fb-bd66-45ca-b340-8ae05389eb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87ced96-15cf-463e-8772-a3cf55cc69b0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388297d2-1e86-4c96-a248-56d008690b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aff1043-5448-4068-ace4-736a2f87dd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29c32ca-c8e6-44a3-83ca-fd8fd77d3a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd9e312-7f4e-46b0-b51a-04623334f893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ab5448-fca5-4db7-a3e7-0c570f028b91",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9e6fec-7569-4d50-8075-284d205e6882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9ac4a5-2554-4132-a882-26da3d9f6848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f1008-b8df-4ba8-a135-429134ca9411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821705ea-5c68-4c77-a3c1-689b7e875eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ccdf67-e387-4d83-9ec5-96de53528121",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540f7992-0e11-4246-bd08-5b3f99ada20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c973962d-7fe9-48b0-a3c7-9ed3797b8efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda520cd-6555-44c9-bad4-a6176dfa6a89",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae01ea90-cd42-4826-a885-07ceaa246639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed892f04-d040-4b90-9256-3b8857985e37",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65804d07-e4e4-4c49-8685-6bbe01d57ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66eb8095-40c1-40e9-96b3-93fe945ba109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff213eff-df5a-4d36-bff1-431baa8e7169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1176df-6c16-4a07-bbf5-1e5ced182e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd89cc5-82ff-48bf-b2c8-572309e87168",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16a108d-7aa7-453a-b6c4-f73331b25345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01cc9679-e141-4a3f-a8f4-68199cd58561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f07e21-b8d7-45e4-9ba4-8c80d901183c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa17bbcf-ef0b-485a-98c9-90cca71624fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bbfff6-9889-423f-989e-103822e896e1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43affbb3-e42d-46f5-91b8-0e69b454d8cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1706174e-b8cf-470d-81ba-a2c90661f7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d53e0ee-ffe0-42d0-b9ec-e1f749f703e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cec77c-82ac-4066-9b2e-519204189ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26448212-0cfe-4bfc-ad0e-2a35e24228e7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9655f39-f360-4060-aa77-8326fb67ff09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a33647c-56da-442f-aba0-fb1020db4f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f057f2-c801-404d-b081-0d4ab391b39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f55c35-f1cd-47df-a400-a1699f6eacf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df11ee2-e65c-43a8-a67e-d8dcbb0afc08",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061e9dda-6ae1-4245-9dcc-64a8b186c54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61abfab3-32b9-4e9b-a015-fd481922509f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86e6e1a-b48f-4266-ac96-3eb4ef0de97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8377e7c2-64e9-477a-8847-8e0bec9d427e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00578601-8a2b-43e7-b250-96774b9a90fb",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc64a3b8-a59a-4a48-8458-10bca8e76d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6414f9c0-89ef-4401-9e48-f5399669014e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80e1ae3-9255-4816-813f-e491cd88b3c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40006ad0-2a9c-4964-8e81-ce05351c0566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ef232f-229a-4107-a806-b020c2797edc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74eb4149-c45c-4746-863b-ff2b069d33ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2619b335-9ab8-4d5a-ba83-b1dc8d96c4d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b26d36-8d3c-4021-b2f4-06f290944298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbd7ef2-a5bd-4e73-a145-4cb7a837dd30"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0210995d-00cb-435b-989b-4ef5290f9a20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec804d79-5f11-4576-ab0e-c2bd218af1e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac095447-8b87-439b-b4ca-c11a3de4dc2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ddf9a0c6-32af-4ee8-9075-5516a06c31c8"
                    }
                  }
                ]
              },
              {
                "id": "43942bfb-a388-42c2-9a2c-3758905377c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f518f984-fc62-4cfb-82a1-aace7e7b1d41",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f81dc4-124c-4d43-8254-1a03e20912bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6d9188a9-edf8-43ed-a812-7220171987b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9895402-478d-4ed7-a875-15a075ea0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f6cb4e6-eab1-4dc9-850e-c1b1dddf0cbe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4af99942-aa44-46fd-a9c8-381f636531d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20a239e4-65dc-45e6-a99e-9e9fddc14131"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd2fba0-70e6-41aa-bd4d-ce2fb22137a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e592922-0bde-4963-8a4b-b98a8b86f3af"
                    }
                  }
                ]
              },
              {
                "id": "751f6fd7-94e0-4619-b2b1-617f4e388735",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3dfc4fb6-5fc7-40c9-b878-4f044fd44bc4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cb87c9-cedd-42e9-a183-951cd4551783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "16e139ab-cfa2-480a-87c5-009ea7df657e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd59402e-56a4-48d2-b378-ec1d226a9daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5747670f-d65c-43c0-8738-53f7b81d2e07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2822636c-f742-4e53-b44c-d78b04c3f1d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b784e1b-1e9e-43fa-b5d7-b250c95f10a1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab5eee73-1c50-45dd-b7a4-4716448e9a35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3752773-1eca-40c4-b3cb-7ed083777ff9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acef40a7-0c2c-4a6d-b0b1-cf078a7a331a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52f5960b-2d0e-4854-a2a3-1856d196decc"
                    }
                  }
                ]
              },
              {
                "id": "3a753a79-2600-4932-aa44-21fe40abcbe5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a7c93fe-2535-4972-b057-f132a2051e4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "02649961-19b7-4080-9e1a-0a064020dd47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b4a759-f6aa-41ae-a808-2d207f963755",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca8a6b44-ce2e-4856-aa16-e3dc1404e989"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72b0aca8-c31f-4065-baac-fd15c4601509",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f45ca467-4355-4986-9d7a-fd9a894cea7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11dd56c0-f5a8-41b0-a446-d31a4e3047e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21bf7190-b3a5-4bf5-9fbb-83d18eb780ca"
            }
          }
        ]
      },
      {
        "id": "cb132a25-6601-4c25-b14d-c7a2cbbd9668",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7f36c016-af45-45c1-9d14-a5df07d0316b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a126eca0-26a0-4ab6-b4a5-8e0f89124a20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "111ab998-9728-4e89-b620-586c9296b2af",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00bcc9f-6950-472c-8f21-72463dd1bc46",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c03d025b-b8bf-413c-b3c0-16bc896c08f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6651cd-447f-4703-a0a5-d542a551c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17202b6a-3021-4bc2-b73f-0a22ee736410"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6978be84-7002-4960-8459-c9ecd960c4f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ef3d547-23e4-4423-9466-2a9dd504b07e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6addebd8-4877-42a7-961c-4cd1701ab914",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a49acde-e4d9-4bd2-9cb5-44f26a60236c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c322fe38-355e-433b-8be2-695cffb54325",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d4017859-31f0-4fd9-9730-58447f7b9888"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9137821-f034-4f52-82f8-8ad70d0a4ec8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "308f34ca-4989-4bd1-9a32-db0f5167796c"
            }
          }
        ]
      },
      {
        "id": "0678f434-062b-4daa-bb87-75794241599c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "80567edc-cb69-4e95-98f3-5ef4ac5d1260",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43082f06-5e2e-468f-bb59-bedd88208569",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8747fbdd-4864-4713-86a5-b0d59821ddf5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7d8bd3-1f17-483d-9faf-483244c68f6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "035151c2-a93b-481b-a260-6e7843688c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488304bc-5b10-47a2-b4a7-ea6c04b42c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db96e827-341b-43c4-9c92-9c0fb85daed2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "612f6843-e991-4e92-92df-6bd40bccc14d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7236341d-35aa-471b-bb21-1cda1d081fa6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86b0f6d5-77a0-4ca9-a9d1-fef127088f5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9d2aadc-090f-4cbf-832a-117ce8ddbf47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c32d9a6-ba02-4328-a108-81c3b62082b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80e37669-d08e-43b3-89fc-3e09d38cc71e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d98a52b6-1900-40e7-a42b-abd54795d7d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2741746d-b358-44d1-86a5-c13336ad1866"
            }
          }
        ]
      },
      {
        "id": "2f644ccd-4867-456c-9315-6b2de28c2f7f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "552c327a-2c84-4436-b23e-9d712539dd8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cbefc86-b143-4d9f-aa60-be0be50c6af1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "290eb9e7-8d2f-4598-8012-c6dca429eb96",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47516607-7010-436e-90b0-7f5ba4175965",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "412fd7e3-3ce7-42b1-8366-2a55f4702845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe60d3b-1a18-469c-95cb-f202d44a1060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adcb059d-9c73-4069-b091-1dfbe68f69bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd89da0f-6547-41eb-bd99-620c00d4f132",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51103407-e020-4487-b932-83d842f26d94"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "62bc44dd-f209-4b40-89b3-689ecf3ccaf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07b847d0-b898-4ea7-880b-20e6fea45c6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a353ce04-96a9-42fe-a25b-e7a41c14b870",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "500e150a-5ea1-4ece-a808-550c29ac7a05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13686721-ec92-413a-955d-823ad3b7a986",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "109d890b-4f20-42ab-b945-15c8b5802f3a"
            }
          }
        ]
      },
      {
        "id": "8e4371cf-ddd0-4917-9989-2ee79a744079",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "781937b8-5623-43d4-9515-ea3b0d2d3a4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62054819-5d42-41f5-8c72-5006afd584fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ee54ef47-189a-419d-b1ae-3082a0cbb16b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73d50de3-429b-40a2-bb8c-dc643dd09a73",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37d8357d-8ab4-4397-ae06-7e12b1faea58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 10.463157894736836,
      "responseMin": 4,
      "responseMax": 508,
      "responseSd": 36.27840027991597,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697848339247,
      "completed": 1697848354029
    },
    "executions": [
      {
        "id": "cac72cd0-b05a-48c8-9e81-a5dc23a437bc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4be1181f-a370-4967-99af-9de9309808c6",
          "httpRequestId": "3e664f1c-d3dc-44e9-9c8d-fdafbb371161"
        },
        "item": {
          "id": "cac72cd0-b05a-48c8-9e81-a5dc23a437bc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ca42c01f-bfbd-4b2c-b0de-ffc26a0dd641",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "6899aefd-71e8-4539-8efd-90b60d35ea47",
        "cursor": {
          "ref": "28c2217e-4649-4cfa-ae2c-be755ea9b028",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ba7dcba1-6863-4112-abc1-e3c9faac2b4e"
        },
        "item": {
          "id": "6899aefd-71e8-4539-8efd-90b60d35ea47",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8fff3dbb-7eb0-4721-aa23-9ff4a869cf56",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "faa16fe8-6800-4b60-baae-65f1d6f146fe",
        "cursor": {
          "ref": "93107b0c-c1d1-4fa9-9849-bf1566c29518",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f531ea10-2e39-4eaf-ac4f-afc44d7b3bc3"
        },
        "item": {
          "id": "faa16fe8-6800-4b60-baae-65f1d6f146fe",
          "name": "did_json"
        },
        "response": {
          "id": "b88d5a15-84b3-4fbe-beaf-c86fbf85c362",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee71f8-4ca1-4aad-a530-3fcb810c082e",
        "cursor": {
          "ref": "d251db96-f904-43d7-9443-c45525cc227c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "707ae3ee-6177-4ba0-a314-2bf9bc1a656e"
        },
        "item": {
          "id": "15ee71f8-4ca1-4aad-a530-3fcb810c082e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5ac51796-fbd7-426a-923e-376e18d73a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee71f8-4ca1-4aad-a530-3fcb810c082e",
        "cursor": {
          "ref": "d251db96-f904-43d7-9443-c45525cc227c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "707ae3ee-6177-4ba0-a314-2bf9bc1a656e"
        },
        "item": {
          "id": "15ee71f8-4ca1-4aad-a530-3fcb810c082e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5ac51796-fbd7-426a-923e-376e18d73a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548bd7d8-24e7-4bb3-9950-e7aff31f8ad0",
        "cursor": {
          "ref": "02073199-72f8-45b5-9ed1-884fdba977f7",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "24d0c113-2aa2-4fd3-b81f-5743bf388b47"
        },
        "item": {
          "id": "548bd7d8-24e7-4bb3-9950-e7aff31f8ad0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "21dfb955-294f-4a3a-800e-daa5bf65d03a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a795ccf0-a418-4ff2-8a47-aabc58738d42",
        "cursor": {
          "ref": "989ad912-500d-4f71-a788-b2ed46995316",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "662200f6-b87e-47ca-bf52-1eebd41fa130"
        },
        "item": {
          "id": "a795ccf0-a418-4ff2-8a47-aabc58738d42",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4db52e8c-5bda-4601-97c5-9773d872b55c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d071de-2a97-4326-b45f-f4ba2c3db83f",
        "cursor": {
          "ref": "fc68dcde-a8ae-4499-b3b5-ccdde12f075e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "66e61664-1299-4b35-8406-573cc19a52d8"
        },
        "item": {
          "id": "b8d071de-2a97-4326-b45f-f4ba2c3db83f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e95606a5-b6f3-4fb8-9c10-0db037609da2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782e8ea1-c1be-41a0-947d-63f3304cb11d",
        "cursor": {
          "ref": "89fab5fd-4555-4fef-8234-134c54b5f103",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8023f32c-2d07-4730-8ddc-d3f5769f2d78"
        },
        "item": {
          "id": "782e8ea1-c1be-41a0-947d-63f3304cb11d",
          "name": "identifiers"
        },
        "response": {
          "id": "e06d5ee1-54b0-4b75-b977-cd742f5d485e",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d7b5e4-3b9c-41eb-9791-721683fea1ba",
        "cursor": {
          "ref": "50b7aba4-7743-4f26-8d51-66cc4680c7a7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "87733e49-9e69-4c92-9204-37f974c38bb9"
        },
        "item": {
          "id": "d9d7b5e4-3b9c-41eb-9791-721683fea1ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d60f272d-e64e-404f-bd66-1f49eb490b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1230bff-6423-4dab-99e3-ed7e12c4f0ea",
        "cursor": {
          "ref": "6e09e3be-9a5f-4fb4-8580-af9e181e7c8c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8c1cc214-bfd6-42cc-853f-084af42d2dce"
        },
        "item": {
          "id": "d1230bff-6423-4dab-99e3-ed7e12c4f0ea",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b6c4aea0-85d4-4cd0-97cb-7a14fb01c0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7c3996-d3e1-4b0e-8abb-a524cd163832",
        "cursor": {
          "ref": "0ae2cf3d-ca59-4679-9a96-d55a502ddb22",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "36897b5f-8c39-4ddd-ad2b-ed15c46e6598"
        },
        "item": {
          "id": "fd7c3996-d3e1-4b0e-8abb-a524cd163832",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f1f021b5-fc16-459c-9192-3a2b7446f5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d225f88-86a0-44d5-a223-35e4ab43b38d",
        "cursor": {
          "ref": "e0a7c1e7-f6ed-43ad-afee-d59534c99b19",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0ea6ecb2-9eec-4c3a-a93d-652d9203c5c7"
        },
        "item": {
          "id": "7d225f88-86a0-44d5-a223-35e4ab43b38d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7db4cff3-4e93-4194-8989-c6f472feb0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26693aef-b976-4407-80f3-0e1e30b5d1a0",
        "cursor": {
          "ref": "89e14c5d-aeeb-497f-9d17-7d09215563e8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a94c3900-34bc-4297-ba2d-76ad43860350"
        },
        "item": {
          "id": "26693aef-b976-4407-80f3-0e1e30b5d1a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "73cf1639-8398-440a-931a-287fe75d060f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca50ef9-5700-498d-917c-8c6108bf0bbc",
        "cursor": {
          "ref": "ef2a995a-8bf4-40f7-9158-53ac9e426c2a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "21e90fae-bb84-4a23-9388-c1ac7045a42f"
        },
        "item": {
          "id": "dca50ef9-5700-498d-917c-8c6108bf0bbc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "681a59a2-93ba-466a-a8d7-f242b5f09467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf305a2-5b5a-49fe-837f-25836b5e3c5c",
        "cursor": {
          "ref": "6f5876f3-a955-4b23-b438-f97666e8b616",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "94b3b104-0a4a-4215-9490-f485a719e436"
        },
        "item": {
          "id": "eaf305a2-5b5a-49fe-837f-25836b5e3c5c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d6941c0e-c2c6-4d79-9ee6-9849e706a0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab47304a-1e80-47d1-97a2-ea5e174e87e5",
        "cursor": {
          "ref": "c6759304-9611-4a3b-a8b7-ff7c991b193a",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "48c7e599-8a7f-4041-a5a9-5e19ec7ec651"
        },
        "item": {
          "id": "ab47304a-1e80-47d1-97a2-ea5e174e87e5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "75817fa1-8373-41b3-84a1-bd3e9bd75ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10107415-15ba-4270-ab33-c3b0fa271d87",
        "cursor": {
          "ref": "a1ada98c-e62c-4446-ae7b-85a51f4a682b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8074d1b7-4d37-403c-8abd-5b813988084d"
        },
        "item": {
          "id": "10107415-15ba-4270-ab33-c3b0fa271d87",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "86761d6e-ea98-414d-aaae-10a10c72eef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd8e9ff-6681-4740-a497-52a4e9878530",
        "cursor": {
          "ref": "ba3a1089-290e-41f3-b2d2-23103594cdc3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b34ab6b-cec3-4bab-9bee-7e5b1161462c"
        },
        "item": {
          "id": "2bd8e9ff-6681-4740-a497-52a4e9878530",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "df4182ea-a655-4f36-b941-450ec900820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c7b099-b93d-4b74-a8e8-e5ccaccd8f5a",
        "cursor": {
          "ref": "f9389e05-03c9-4cdb-9688-97ccb6561293",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aed651a2-848f-4a88-9066-62e55c7a00c4"
        },
        "item": {
          "id": "a4c7b099-b93d-4b74-a8e8-e5ccaccd8f5a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "775cc6e2-4a9a-46a5-9b8e-1638cde67d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2965c516-e655-4033-af89-3f965001aa13",
        "cursor": {
          "ref": "feff6939-caee-46d3-9587-1b4ab8efc639",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bdd2eb69-91a9-484c-8c3e-f3bbd8f0055d"
        },
        "item": {
          "id": "2965c516-e655-4033-af89-3f965001aa13",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1be37a1e-5b96-4bc6-8898-46652cb5a7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd72ef8-9df2-4fe7-888e-6d2844b78887",
        "cursor": {
          "ref": "7ad7ebfa-1a0d-4ad2-b513-678596c186c7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7e6aa85c-6847-4a22-bc16-14aa4074731a"
        },
        "item": {
          "id": "8fd72ef8-9df2-4fe7-888e-6d2844b78887",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9ffa884d-aad6-4805-bda7-e4239050c55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e96f142-d4c0-4beb-985c-8fac53966da4",
        "cursor": {
          "ref": "19ee475b-db81-4749-b3d8-f5100d5f3563",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fa999ade-5d93-4496-9168-6124d9280d1f"
        },
        "item": {
          "id": "6e96f142-d4c0-4beb-985c-8fac53966da4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "43566770-797a-429c-a949-b2d55a0c561b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9eecb4-5b57-4e70-9194-f3723d7b1bf3",
        "cursor": {
          "ref": "071ed6d6-bf9d-48ca-be1d-e5bfda6b30be",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "24a23a48-6acf-4b5d-841a-0425ecbb8d98"
        },
        "item": {
          "id": "4c9eecb4-5b57-4e70-9194-f3723d7b1bf3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c8730c28-599c-4b5a-a7dd-b8143a6f1ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f90af7-6344-4a53-aa72-7f68d51bb9b2",
        "cursor": {
          "ref": "dfc9ef9b-a6fe-42b7-94b8-4f920bfd94ad",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3d348c1c-0086-453c-8826-e41ae011669f"
        },
        "item": {
          "id": "b2f90af7-6344-4a53-aa72-7f68d51bb9b2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "22abf85d-97df-47f8-a69a-39bb1b08a119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a57a20-65d7-4a3c-ad34-4d28bd43734e",
        "cursor": {
          "ref": "b9046c55-5d53-48f9-a1b7-ae013a03c8ff",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "44e514e7-94d5-4a2f-bb75-8788761140c6"
        },
        "item": {
          "id": "93a57a20-65d7-4a3c-ad34-4d28bd43734e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cc4865eb-0829-435d-9e17-9bd54b92ea07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94849f8f-a4af-45c2-b7dc-d7cfaefda360",
        "cursor": {
          "ref": "8760b103-fe6a-43f8-9fd7-b2ee01ac5b62",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "efd5aa9a-0a25-4ec0-a1f2-1b86c31d9f4d"
        },
        "item": {
          "id": "94849f8f-a4af-45c2-b7dc-d7cfaefda360",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "94502eab-c6e1-4219-8476-f9e15b0c4cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73e1777-d8c9-44bf-b1eb-49ef5ee856b0",
        "cursor": {
          "ref": "3da05d5e-d992-426c-93d0-7d5d4d7218ff",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c07c64a5-4c01-4582-903c-dcf53e7aa36c"
        },
        "item": {
          "id": "a73e1777-d8c9-44bf-b1eb-49ef5ee856b0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eb51b207-f7e0-4ad4-9305-4f8c971f5996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2949190-04b4-4cf9-ab23-6d16a798126d",
        "cursor": {
          "ref": "1c080bbf-0f3e-43f5-9724-00da6302812b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b4b78acb-426b-4083-8324-0863d35e252b"
        },
        "item": {
          "id": "f2949190-04b4-4cf9-ab23-6d16a798126d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e7c803fd-c363-4db8-8914-6a5fb0e58ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce4bde3-c47a-4410-b572-7ad4312086b8",
        "cursor": {
          "ref": "aef47029-c5b4-4bbb-b86f-e4dcb9065d89",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a289a748-62ae-4910-b1ee-3392c17d3695"
        },
        "item": {
          "id": "8ce4bde3-c47a-4410-b572-7ad4312086b8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8c9bebd0-b202-4151-a5e7-84f2b82a2b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7fb683-f465-496d-b862-4dd525a67ac9",
        "cursor": {
          "ref": "9de2a2f6-f07c-4f80-9b07-a0ec15519924",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bdd4e737-abf1-4cc7-87c9-e1e6f5ad2269"
        },
        "item": {
          "id": "dc7fb683-f465-496d-b862-4dd525a67ac9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f110c136-8618-4636-9b40-f81ef2a1d7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632558f9-118d-4f42-9f8e-bf163ba2b875",
        "cursor": {
          "ref": "ad05e6fb-0e6b-4e1a-a817-ff0067b3919d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "51645248-4e15-4002-9e50-868f9c1c16c7"
        },
        "item": {
          "id": "632558f9-118d-4f42-9f8e-bf163ba2b875",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4682cf27-944d-4998-847b-cb63ca22cc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04ecdf1-0de1-48ce-a71a-984e1cee1024",
        "cursor": {
          "ref": "76efe5ed-aabc-4785-899c-ccf4ec2243f9",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "591c8a34-8d34-44e9-9d32-4ff3cf59aa58"
        },
        "item": {
          "id": "d04ecdf1-0de1-48ce-a71a-984e1cee1024",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8a0c10d8-de00-471a-9548-0ac5f588664c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c542446-459b-4510-bed2-8143f49be80f",
        "cursor": {
          "ref": "1ba0cd2b-5cde-46ff-91d6-f93ec713527f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f895b66c-537f-46de-a37d-1423e0b1f82b"
        },
        "item": {
          "id": "8c542446-459b-4510-bed2-8143f49be80f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a7e7527f-c013-46b9-a440-c8453cc12848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37aa0723-991d-4fa0-be5a-86ab56c3ba46",
        "cursor": {
          "ref": "91bdfbfd-846f-43ce-affa-e109e18a3eb3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dbd2d934-97eb-4ed9-bfda-772168b54c29"
        },
        "item": {
          "id": "37aa0723-991d-4fa0-be5a-86ab56c3ba46",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "061644ba-0af5-40d3-992f-cb3547d4ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6a841d-32fa-4aab-b61d-5370b6136eae",
        "cursor": {
          "ref": "78e61e08-ccb7-4c7e-9f15-36b3fc6feebf",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2355c7a9-4976-4ce5-abbf-22b5dc5398e7"
        },
        "item": {
          "id": "7a6a841d-32fa-4aab-b61d-5370b6136eae",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7d233943-a9b2-452e-9b34-1f73bc6ac571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314ac65d-ab04-4089-9f14-5b57bca1dc90",
        "cursor": {
          "ref": "3e8b4556-0936-49dc-9f04-0fd79a8dc400",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6436cce6-c77d-4c21-b7a8-eac9de113dae"
        },
        "item": {
          "id": "314ac65d-ab04-4089-9f14-5b57bca1dc90",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a89eb5ba-6620-4b46-985e-ebde9ddddc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718d1a5b-6fcb-4c0a-8a12-9a070e9da099",
        "cursor": {
          "ref": "5e840dbd-a8e4-437d-880d-c304d1e1aac9",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "47d9973e-7654-45e6-82f3-1faca583e595"
        },
        "item": {
          "id": "718d1a5b-6fcb-4c0a-8a12-9a070e9da099",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "34cf07cf-0aac-46db-954a-924e02d15910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2e9d39-68b6-449d-b71d-667d3d66d1cf",
        "cursor": {
          "ref": "65db0b3e-fc81-457e-880c-0dc8f1339690",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "12253e93-552e-4b60-b6e5-b51a42ba0f00"
        },
        "item": {
          "id": "5e2e9d39-68b6-449d-b71d-667d3d66d1cf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4a8d25b7-3f07-4cde-966f-f2c20b7a6d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471760bc-a0d1-47c7-98b8-f121382f0476",
        "cursor": {
          "ref": "e228a592-23df-47b8-b0d1-9aabe9dd33b9",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cf238373-2178-424a-b330-b9d8c868308f"
        },
        "item": {
          "id": "471760bc-a0d1-47c7-98b8-f121382f0476",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0c8b8d41-1efb-4d88-948d-27a15fa67888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7172a389-1cfb-4d47-8499-f506d521b6e2",
        "cursor": {
          "ref": "01b19eea-de7e-4e68-b3fe-bffa6601aee6",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe9a82c5-3bad-414c-9586-114faa0a787d"
        },
        "item": {
          "id": "7172a389-1cfb-4d47-8499-f506d521b6e2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d72d1c0a-ba3d-48e4-a756-81acb516805b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac91530-1750-490d-89a4-f8e0cdbc527d",
        "cursor": {
          "ref": "014a193b-8b5e-4051-ac99-4def9ca5ef01",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9dc72afb-5d62-465e-bdb6-02a9ef6fde11"
        },
        "item": {
          "id": "6ac91530-1750-490d-89a4-f8e0cdbc527d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2d265ce5-e41e-4f72-8c5b-2ed756590c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e197e9e-e0a9-4a2c-8f0e-392e5b1cf94b",
        "cursor": {
          "ref": "6c344ffe-17c4-4ce7-a319-6b95173d3c06",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ade19368-773f-4d4a-8c95-4805fd31a7fa"
        },
        "item": {
          "id": "4e197e9e-e0a9-4a2c-8f0e-392e5b1cf94b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "24d963c9-6a86-480d-a85b-ed6d562c288e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a851c13d-9f23-4b47-8442-dfa7baad72de",
        "cursor": {
          "ref": "67259402-169e-4487-9ef4-e63e5fc05f8a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b1fb3d6c-a6b8-4cac-8476-6d5e927ee81c"
        },
        "item": {
          "id": "a851c13d-9f23-4b47-8442-dfa7baad72de",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cc6e23dc-ba49-49f6-95eb-9d7b4a89a9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b247c0ea-ad63-4f7d-9625-3c9efde80d10",
        "cursor": {
          "ref": "ea3f821d-e796-4861-990a-cdedc8b5d496",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6e7055b-4e88-4dac-9111-76cd770078ed"
        },
        "item": {
          "id": "b247c0ea-ad63-4f7d-9625-3c9efde80d10",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8b6afe8a-fb61-4350-a043-432a0972d130",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeebe86-8a11-4f0a-95c8-0807013b51ff",
        "cursor": {
          "ref": "89359f20-cc9a-43ef-b1fc-935bdd15a1ef",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "735e1f69-bf94-49bb-b0ab-f1730a03384a"
        },
        "item": {
          "id": "8aeebe86-8a11-4f0a-95c8-0807013b51ff",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "abc4dda8-77df-4c18-b015-aad287dc0f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fec41a-fc36-44e5-b5af-06867094dc05",
        "cursor": {
          "ref": "7030375d-2fbb-40a4-b367-c5c0974f42a7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "995bf463-71c2-4962-9da8-d7082e40a898"
        },
        "item": {
          "id": "a6fec41a-fc36-44e5-b5af-06867094dc05",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dd22e3e6-e23c-4b2f-b98b-55ffc9cca9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b18f99-d210-4633-be5e-c501121ca458",
        "cursor": {
          "ref": "8c4092c4-6d05-475c-bda5-96e8d7e6430d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bc6bf47e-21ff-4d31-8068-a5b01b35eca6"
        },
        "item": {
          "id": "84b18f99-d210-4633-be5e-c501121ca458",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "129f0024-2c63-41c0-8744-83fa4f829ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf009ae-2537-4c1e-a77d-10d8c7592399",
        "cursor": {
          "ref": "080c0f18-1911-44a2-88aa-60dec9c0a064",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a3881c0f-aa2b-41b3-afc9-87b1f6a1d859"
        },
        "item": {
          "id": "3cf009ae-2537-4c1e-a77d-10d8c7592399",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bc7f4d07-1e38-4137-bbdc-2035cb8e6092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c771d3-f8c3-4b41-a03a-6c018a8efc86",
        "cursor": {
          "ref": "cad56de5-9507-44d3-ab83-6e518b7e10c8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "26cd7e6f-0847-448b-ae38-41b783849fe3"
        },
        "item": {
          "id": "66c771d3-f8c3-4b41-a03a-6c018a8efc86",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9932c8d0-8ce7-46d1-922e-ef5a885d93c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8d7d34-b1af-492d-a980-ccf89f115eba",
        "cursor": {
          "ref": "2411d70b-1f7b-4a2d-90b9-4b19a244940a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1bd92c7c-a55a-480d-be3f-7aaee40e7483"
        },
        "item": {
          "id": "0b8d7d34-b1af-492d-a980-ccf89f115eba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "05eec5eb-825d-44a3-a413-3b3ae170f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6bb2c9-4661-4d0b-b5dd-b4564950cc80",
        "cursor": {
          "ref": "9e616413-7d91-4885-b44b-02f6bc44914a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "36a08a16-d045-4446-9ff5-2360ce746be0"
        },
        "item": {
          "id": "fd6bb2c9-4661-4d0b-b5dd-b4564950cc80",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "60ca3998-8966-4000-8a86-f53317816f77",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa34fc4f-4646-41e3-8332-3eab8e6af7f9",
        "cursor": {
          "ref": "609ae136-ec34-4591-befd-df4502605195",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0037d494-6ae2-4e15-b934-a7e3c4ceda79"
        },
        "item": {
          "id": "aa34fc4f-4646-41e3-8332-3eab8e6af7f9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a7b87049-1e12-4c67-887c-28879789aebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03f3c0c-0660-4e13-a8d1-094d94375a65",
        "cursor": {
          "ref": "c0d67f79-b432-45ae-bf57-80a595fb34ca",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6332cfa7-77d8-4fc0-94cb-3a7b7fe96766"
        },
        "item": {
          "id": "b03f3c0c-0660-4e13-a8d1-094d94375a65",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aa31e8ef-45a7-4e3c-82eb-fc6e513ebce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd0e64e-3dcc-4349-84df-73db7e284ccb",
        "cursor": {
          "ref": "fa15b4bc-890e-405e-bb9a-7b44392e6c0a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "312cc736-68b6-4927-a309-84ea96b1559f"
        },
        "item": {
          "id": "7fd0e64e-3dcc-4349-84df-73db7e284ccb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "03883df0-c20d-4a09-992d-0a0b8d52f4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247c6d24-4f69-4b07-95f4-d6200f3229d4",
        "cursor": {
          "ref": "10ce87a1-1568-4eab-958e-95133fce0ef8",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "085b55e2-de5b-4e25-a5bf-2b7e35b6e809"
        },
        "item": {
          "id": "247c6d24-4f69-4b07-95f4-d6200f3229d4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ec3a07d3-7182-4142-b7f9-056048c4f7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefb47b5-d29c-418f-8f1a-2486e6452874",
        "cursor": {
          "ref": "34f086e9-429a-4ddf-822d-924de1ce75ca",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "25d4ef96-0243-44a4-bef4-48a523b24fb1"
        },
        "item": {
          "id": "eefb47b5-d29c-418f-8f1a-2486e6452874",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c38cfd5c-6f14-42ea-bef7-666012210b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0718e33d-2571-4a89-b649-1c0e943201ae",
        "cursor": {
          "ref": "b54fee3a-532d-4b1a-869c-eb250e861372",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d79cf6ad-fb51-4165-853c-83601e3137d6"
        },
        "item": {
          "id": "0718e33d-2571-4a89-b649-1c0e943201ae",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "250cd6a9-7b5d-4d9a-b800-323f1ea57609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c709bc-cc2b-44d2-99b5-d90fe2f17cce",
        "cursor": {
          "ref": "22bacc40-650c-4686-bb22-e050c4ff31b9",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "03c64a1a-400d-4ff7-be37-8924d96530fd"
        },
        "item": {
          "id": "25c709bc-cc2b-44d2-99b5-d90fe2f17cce",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7a3dd3b4-ca38-46b5-89a9-b362d3afa5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb8fff9-627b-42f4-8b49-37ebb5c7e95d",
        "cursor": {
          "ref": "e19a6eae-c826-4c12-9c27-7cc40c608b00",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "39a978b6-026e-49bd-a97e-c008c8e1c8d7"
        },
        "item": {
          "id": "1bb8fff9-627b-42f4-8b49-37ebb5c7e95d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "736702d6-1959-4d18-abf7-ec4bc8f5da40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d25ed-5ee0-4511-90ef-b813a4270c91",
        "cursor": {
          "ref": "988ed283-7d2a-4509-a436-ca881111de35",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b799f362-beef-4b98-9edb-da38e16a5ac6"
        },
        "item": {
          "id": "4e5d25ed-5ee0-4511-90ef-b813a4270c91",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eb03318b-cfc9-422c-be19-082aec1e0da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d047bf10-ca11-43a5-ad5a-4fa5ef73d467",
        "cursor": {
          "ref": "83f9ff94-b3fb-4d69-b67b-f8e98c1aa99a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "003ddcb4-0b6f-4134-8a14-2f89e3cd40a7"
        },
        "item": {
          "id": "d047bf10-ca11-43a5-ad5a-4fa5ef73d467",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a0cfed70-6380-4a8e-9af6-e0f7361d2453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d63231-d77c-4a1a-823e-0589e6c17bd7",
        "cursor": {
          "ref": "5278b498-8398-42da-9193-0d6cc7084c3d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a6f5e86d-0ba9-49f2-8ca5-26bc64e1f71e"
        },
        "item": {
          "id": "e2d63231-d77c-4a1a-823e-0589e6c17bd7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "07201fa6-1d70-47c6-a1cc-62a431ca20a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2cb92e-d57d-4028-996d-84b602cbe062",
        "cursor": {
          "ref": "69289fb0-4799-4f95-9931-b2fc1467122f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dbecc04f-d2e7-4b3b-be81-0f48b1b4a060"
        },
        "item": {
          "id": "ac2cb92e-d57d-4028-996d-84b602cbe062",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b78be774-8976-4741-97a3-9c9c73202524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f362dc85-9121-4168-af8b-f1523e0ac85a",
        "cursor": {
          "ref": "afde5eac-82ec-43cc-9d85-151b4ca011e7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a3da36c6-68ee-4eae-b763-440ce7f9c2a8"
        },
        "item": {
          "id": "f362dc85-9121-4168-af8b-f1523e0ac85a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "87e40105-4653-42da-8285-d7584c6c9694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac60402-ecf6-4b1f-a343-b25f059d73d2",
        "cursor": {
          "ref": "ea09accc-0e6d-41f9-aea5-b621a9cee7d5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c0eb10ae-3ae9-4247-a27c-8a9e013a7701"
        },
        "item": {
          "id": "1ac60402-ecf6-4b1f-a343-b25f059d73d2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "38dae368-b80d-4fdf-b8a3-0d7e8914554d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89845bc-f7d3-4399-b41c-3caae9562ffa",
        "cursor": {
          "ref": "4fac3dc9-3ff4-498d-92d6-f7950f7e5b20",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1bea4e6a-cd78-4fbb-ba92-fa0acdb53d40"
        },
        "item": {
          "id": "e89845bc-f7d3-4399-b41c-3caae9562ffa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9f0edfc5-3a08-4e5f-acfc-3a3429c03439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bcca7d-9d4e-404f-aa4e-7983bc80e476",
        "cursor": {
          "ref": "2163750b-d187-4adf-87a4-cd3333943189",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c673fd2a-a92c-416a-889f-2fa5ee89f054"
        },
        "item": {
          "id": "f5bcca7d-9d4e-404f-aa4e-7983bc80e476",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "226d46c7-81a1-4d83-9387-68fe64de3deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872b4a4d-b718-4dd1-85f1-4276af237bfa",
        "cursor": {
          "ref": "96dcd898-5051-409c-ac26-d70a79c02bd8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d9a70f1c-ed62-41ae-bf1c-e1f15f1bc774"
        },
        "item": {
          "id": "872b4a4d-b718-4dd1-85f1-4276af237bfa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7d7e7968-c9e5-4b64-9d6f-a9b563914633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c70bbfd-a151-434c-aade-ccd463886794",
        "cursor": {
          "ref": "111a1396-937c-4104-80bc-d0fb38f23bdf",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e70247b4-23b6-4847-bde3-dbaeb4867184"
        },
        "item": {
          "id": "9c70bbfd-a151-434c-aade-ccd463886794",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "30e53c18-ae6b-4c53-af0e-705b2d846d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9ae252-b487-4aef-b45f-a40d1ecc938f",
        "cursor": {
          "ref": "aa3f32dc-1b7f-43df-944f-f7dc16920f41",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5f1d3012-457e-4884-ab87-05bf46c7bc93"
        },
        "item": {
          "id": "bf9ae252-b487-4aef-b45f-a40d1ecc938f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "535b1b93-9baa-4c91-ae1b-f0f2e59838d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31bcb72-6c37-4726-bd87-b21ff9e7f8af",
        "cursor": {
          "ref": "57a99bcf-8109-4b81-a8f6-50f26c1bca06",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9ea0f939-a252-4ccd-aa18-fa5f72eb4735"
        },
        "item": {
          "id": "f31bcb72-6c37-4726-bd87-b21ff9e7f8af",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2a2d157a-15f6-4541-a4a3-7004a007fabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcb0564-8f58-48a8-9943-b51ef99f422d",
        "cursor": {
          "ref": "9c931721-9be3-475c-9d7a-7b498ae6e1a8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "afd2bee9-6da7-43b7-8672-9d84b8e59130"
        },
        "item": {
          "id": "bdcb0564-8f58-48a8-9943-b51ef99f422d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ec53177d-4f17-4fc8-8158-8d1bd1777a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b6f18c-882c-4705-8a4c-a4e7d9b6e4f5",
        "cursor": {
          "ref": "8670a4b2-3f71-485a-baf7-93d65a27490d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "03768046-9363-4eb8-8e45-bc0d79aa6cfc"
        },
        "item": {
          "id": "21b6f18c-882c-4705-8a4c-a4e7d9b6e4f5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d04c04f1-e709-4e43-9cb5-bdf88c86184e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc5806f-a06a-4eca-991a-f6f0238ac458",
        "cursor": {
          "ref": "01006360-0876-4311-bcfe-d4aa23f432cb",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e084ac44-de9f-4dcf-8bbf-f8c089976b22"
        },
        "item": {
          "id": "8fc5806f-a06a-4eca-991a-f6f0238ac458",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bdeba070-2f59-4178-b428-77e9314f995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d79326-0ab9-4d81-b74b-9689472c087c",
        "cursor": {
          "ref": "8de31065-afff-43dd-aba4-1d5667253764",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "395c5382-a274-45e4-b7e2-502cc6543f02"
        },
        "item": {
          "id": "f4d79326-0ab9-4d81-b74b-9689472c087c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ad6c56ef-1d57-4cc6-8d98-ed6e5e77294b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f15889-eec8-4b12-b6e4-43e5f85deb4b",
        "cursor": {
          "ref": "f0fee4b2-e4fd-45c1-bcdd-5c261f805102",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b6eb0a78-05a5-40bb-b5b0-b5af5abe6240"
        },
        "item": {
          "id": "80f15889-eec8-4b12-b6e4-43e5f85deb4b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4dc86bde-1001-4d3b-a243-af8f15c77c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c229a2a-6a91-4987-8889-5c457eb18cb3",
        "cursor": {
          "ref": "62db9541-b62b-4f66-a463-d921b2f67877",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e1215982-617a-4632-a75a-f9d2fa5beea4"
        },
        "item": {
          "id": "0c229a2a-6a91-4987-8889-5c457eb18cb3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "067dcc0d-8188-4c61-b2fc-33bd7447652c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4c2512-1091-464d-889a-7e9bd30de9e0",
        "cursor": {
          "ref": "64a574c7-956c-4394-9de1-ad0b1771d16c",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "524ae480-5c41-4052-8e71-e986553600e3"
        },
        "item": {
          "id": "5a4c2512-1091-464d-889a-7e9bd30de9e0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c6ddadec-a651-4423-b17a-b9b7b31a7fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2160927d-e3cc-4dad-9765-905903a9124a",
        "cursor": {
          "ref": "fa261e40-1f29-484a-b613-9c350b7fc201",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bd36f506-d682-421c-9d19-c51d3039d5d0"
        },
        "item": {
          "id": "2160927d-e3cc-4dad-9765-905903a9124a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6cc5b0f0-714c-4d60-8bd0-c220d98b0a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2474494d-df31-4261-8900-811269a9e897",
        "cursor": {
          "ref": "bb9134e9-55c2-4128-9af1-0a45256eb625",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ce8a1e71-048c-48da-b033-fb3257ba605a"
        },
        "item": {
          "id": "2474494d-df31-4261-8900-811269a9e897",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2917ee4c-aa7f-412e-a2d8-b61baf7d3eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a8b699-757e-4b99-a372-8a88dc4b03cb",
        "cursor": {
          "ref": "3ac9a3ff-b079-490f-86aa-0ad482609d97",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f5cf9003-d38b-4907-a6fd-e16cdd735e7c"
        },
        "item": {
          "id": "53a8b699-757e-4b99-a372-8a88dc4b03cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "603b9e45-b819-4db9-b563-fb2908bbfb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9060c4-fdfb-40cd-81e3-8e63e4085126",
        "cursor": {
          "ref": "3afd81b0-9243-4c5b-905a-863edea33d1c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fb1794dd-7fdc-4153-bf5c-97a520c1e303"
        },
        "item": {
          "id": "7b9060c4-fdfb-40cd-81e3-8e63e4085126",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "be84be00-85e7-4dea-a1ee-c9b55f6fdf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55b395b-b0ce-4ea8-8bc3-b2cb494e4bcb",
        "cursor": {
          "ref": "d38d3813-577f-4b3b-8b1e-157fd528f5cb",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "10f68a50-efe5-4353-959f-2bdaa31973a2"
        },
        "item": {
          "id": "c55b395b-b0ce-4ea8-8bc3-b2cb494e4bcb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "63c5e8e4-e88f-4a47-9c86-0049786239e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9b0790-1913-402e-8c55-947192aaccbb",
        "cursor": {
          "ref": "e90dead5-8c4b-44fe-9340-1118e29a4d94",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "75fc62de-d082-4ae5-9c17-be6c33b07cd3"
        },
        "item": {
          "id": "6e9b0790-1913-402e-8c55-947192aaccbb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1b1798aa-5c24-4336-ade0-d19327f6dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddc7231-76f2-4943-846e-6c509b634610",
        "cursor": {
          "ref": "681681ca-55aa-42f7-a3c3-054babf5c588",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1841ef3f-0251-4733-aad0-2fa8f026ab0a"
        },
        "item": {
          "id": "9ddc7231-76f2-4943-846e-6c509b634610",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f7cd23b2-9cc9-4f9c-9d35-97530d0570ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76184c2-ddbd-48cb-9817-f25731489089",
        "cursor": {
          "ref": "83197942-30cd-4a3b-9088-66affce1d5de",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "953ed1f0-c6d8-492a-bfe0-7e08fd5d9512"
        },
        "item": {
          "id": "a76184c2-ddbd-48cb-9817-f25731489089",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0033f74d-03b3-48a3-ac96-f9ce8dda7865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b47bdd-1556-44da-b5ac-72ea2bc61b6c",
        "cursor": {
          "ref": "a4246480-fe49-4296-b280-340b43dcde4d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7a64eb25-8f7a-44a7-9236-8271fab13601"
        },
        "item": {
          "id": "00b47bdd-1556-44da-b5ac-72ea2bc61b6c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cac8d316-feb4-4d3f-b24f-c44cf324ac51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c1abd8-72ba-44f8-8340-bbb841afa8de",
        "cursor": {
          "ref": "224c751d-1627-43f6-99ee-04231ca88adf",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "61865bd1-5580-47f6-bbde-3c20ee0d022c"
        },
        "item": {
          "id": "e3c1abd8-72ba-44f8-8340-bbb841afa8de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "188a3dff-427b-4d66-819c-e6dfb9e0dfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b569bd1-2498-4407-a845-b28e544a866c",
        "cursor": {
          "ref": "94252b40-badc-4cfd-a464-f7fddc647772",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ab0aa847-48f0-4828-97d3-4017cd9bbb35"
        },
        "item": {
          "id": "6b569bd1-2498-4407-a845-b28e544a866c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "069318b7-987e-44af-b0ea-fa5363c4147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb5f4da-6175-4cbc-a7c2-c8372d8198ff",
        "cursor": {
          "ref": "b685dd5d-d1d6-4743-a2b6-2357c0a36c76",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ceb0569c-8e54-47d1-9b6d-0cdc992f2296"
        },
        "item": {
          "id": "6cb5f4da-6175-4cbc-a7c2-c8372d8198ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "23b0a537-1228-4598-ad72-0e7ac249dcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e878b669-da53-4ba7-b9da-2db53298d572",
        "cursor": {
          "ref": "34f3839b-3198-4043-8438-a0cb70cde6c9",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "843466d4-6a20-4b59-9c06-57b9e5c69b69"
        },
        "item": {
          "id": "e878b669-da53-4ba7-b9da-2db53298d572",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b3be7fe8-b747-4633-9114-bc8748314685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf38be4-2e49-4f8e-a84a-0b969242949d",
        "cursor": {
          "ref": "46120ff4-e89a-496b-a7be-7731ece9fcd0",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ad78f37b-2bff-4063-bc89-b5d76b578932"
        },
        "item": {
          "id": "4bf38be4-2e49-4f8e-a84a-0b969242949d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "929b4198-4bc2-48cc-a23e-b9f6f3e0cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c825579a-4779-4da9-a9aa-f7a111a885f4",
        "cursor": {
          "ref": "bac6663b-0715-4eb4-a269-8a1bd80e15fd",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1a1093f0-ad5c-4ca5-a9b4-415b3596cc11"
        },
        "item": {
          "id": "c825579a-4779-4da9-a9aa-f7a111a885f4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c123ac01-3973-4a2e-b27b-28c3f345e2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2756d7bd-da76-4441-9c39-30f0bbd158c5",
        "cursor": {
          "ref": "55c3fadf-08bb-4faf-9fc7-7a0d87bc0bc2",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "98f74dc4-5818-46bc-9041-3a2404c6ef19"
        },
        "item": {
          "id": "2756d7bd-da76-4441-9c39-30f0bbd158c5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b91a0614-bfe9-42e4-8b7f-1ea3e7e42c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dc2d6a-b56e-4dfd-9c5d-49991f50d76e",
        "cursor": {
          "ref": "965c2d92-63cc-426f-af04-ff247457f43e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8533b3e5-8ac7-4874-8b7e-163678324b58"
        },
        "item": {
          "id": "92dc2d6a-b56e-4dfd-9c5d-49991f50d76e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "90d87d5f-10e6-4306-b587-7c779350cc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9518194-66ac-49dd-8fbd-765fe6c176ec",
        "cursor": {
          "ref": "4e8a9cc7-f4ae-474e-bc80-7e9254b6620b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "33b0dfad-962f-4bc3-a056-d8fa75fe28df"
        },
        "item": {
          "id": "b9518194-66ac-49dd-8fbd-765fe6c176ec",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cee6f5c9-06fd-49e9-b4c9-a291e3e8183c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455f6c50-5ad4-41cf-b0b9-b7cfb752c394",
        "cursor": {
          "ref": "e82a7cf2-f614-4804-964b-581193d891ec",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0b1c3ba4-c71c-479f-b3ac-f3d448a52689"
        },
        "item": {
          "id": "455f6c50-5ad4-41cf-b0b9-b7cfb752c394",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "63997ed5-3697-42dc-9a48-803a8e2fecdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e612fcc5-d887-4545-92d4-9919bda6228f",
        "cursor": {
          "ref": "8c7b90af-d694-4497-b3d6-714184bcf83b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "28af45ba-20e0-4f80-996f-529d3af1ac6c"
        },
        "item": {
          "id": "e612fcc5-d887-4545-92d4-9919bda6228f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "12839a89-c2de-4ccc-aee5-5966e2bf5eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1960928-1fb2-4180-a6ac-b8db342372d7",
        "cursor": {
          "ref": "1096d792-7da6-4eaf-ad2d-1b7cf69cc23f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e46fa349-aa52-402f-a761-dbfe78189c10"
        },
        "item": {
          "id": "a1960928-1fb2-4180-a6ac-b8db342372d7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ef877529-3c2c-4004-993d-d9bf10d7045d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3478f9cd-614e-4d14-a550-a180f4118ace",
        "cursor": {
          "ref": "3041dcc9-bbc7-4a23-9b45-ecb7fd851ce8",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bee98490-4025-478e-a380-5c85336813aa"
        },
        "item": {
          "id": "3478f9cd-614e-4d14-a550-a180f4118ace",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9d81ea51-a66e-4391-86eb-2c30c572b0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548db2cb-453b-4e28-9a0e-f5e090910282",
        "cursor": {
          "ref": "e3a3e3ce-14fc-4a53-9a2c-54ff1a03f013",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6ab6d816-40f0-4970-83b4-627a1d21a844"
        },
        "item": {
          "id": "548db2cb-453b-4e28-9a0e-f5e090910282",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3d30b6ca-82f1-46b6-9d26-7e00ce814343",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b93002a-8207-4f68-9eb4-bfc09f014f84",
        "cursor": {
          "ref": "5cdd8d75-724e-4d1b-a258-d1ec87cf22d8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d7bfcb97-b5da-45f8-b41b-312a657cda92"
        },
        "item": {
          "id": "2b93002a-8207-4f68-9eb4-bfc09f014f84",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bcb0175b-875a-4a9d-a020-813b35ce0548",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c269bc9-df89-43c9-843f-271ceca650fe",
        "cursor": {
          "ref": "9c998fe1-9e0c-4394-b709-6b6e3b85b9ef",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a8e41197-af10-4148-baf6-fde6179e59a7"
        },
        "item": {
          "id": "9c269bc9-df89-43c9-843f-271ceca650fe",
          "name": "credentials_issue"
        },
        "response": {
          "id": "66c2d65f-8b79-43db-babe-639129d61d9a",
          "status": "Created",
          "code": 201,
          "responseTime": 267,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ab9282-d31f-483e-b13a-52e89d1a70e0",
        "cursor": {
          "ref": "02eca096-c308-41f5-8373-5752197dac56",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "03c78272-0d56-49d6-b952-ccca6945e38a"
        },
        "item": {
          "id": "a0ab9282-d31f-483e-b13a-52e89d1a70e0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "839036cd-6aee-47f1-b665-8b0f2a434725",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b330977f-080f-452b-88c5-c8e2ad349d2e",
        "cursor": {
          "ref": "c4839eeb-5c13-4290-bb4d-bc1f1a05f647",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a8ff6253-ad10-48f4-93cc-8c2e559a4e74"
        },
        "item": {
          "id": "b330977f-080f-452b-88c5-c8e2ad349d2e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ffbd85fc-0430-482f-9074-d7c19e6d88da",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "821c7726-63b1-420c-b105-2f0ce60a1de3",
        "cursor": {
          "ref": "0830d199-c1d1-42de-85cb-21670e3fffaf",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3ddf0565-e0d7-49bd-8a7d-52c3d5c0d85b"
        },
        "item": {
          "id": "821c7726-63b1-420c-b105-2f0ce60a1de3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f54f3882-5321-4acf-b19a-7d74e88babae",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "491037af-b149-42c9-905b-bbd0c4bc9e39",
        "cursor": {
          "ref": "a74c8d52-8ca1-46d6-b291-5f87220147e0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "918ddefe-d05a-4dfd-90c8-bf9d4cf7a38d"
        },
        "item": {
          "id": "491037af-b149-42c9-905b-bbd0c4bc9e39",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "09bad0aa-d3d4-45f7-a3e7-2d04652feeb8",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "49de2fb8-657a-47cb-81db-d6807294ab2c",
        "cursor": {
          "ref": "4af7ca84-a94b-4827-bb8d-fc1e0cc6c02f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fbdf2e05-aeef-4aa1-8f50-9eac99115384"
        },
        "item": {
          "id": "49de2fb8-657a-47cb-81db-d6807294ab2c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6ed02f74-12ac-4855-9e58-c47842f11479",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bcb755-46d7-4830-98bc-6e6837a38810",
        "cursor": {
          "ref": "ef30df81-2945-4429-9a9a-788c08a978d2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "97e581ef-ec42-4934-af8a-073bde38e706"
        },
        "item": {
          "id": "95bcb755-46d7-4830-98bc-6e6837a38810",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fb7d5adc-116e-459c-8b6d-c63d9c83ef3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d485ed7-41cf-4570-9079-a0b0a2e12f22",
        "cursor": {
          "ref": "bef0f6a5-415d-4199-a87b-a928a1ba2252",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "57e38b76-8104-48c7-80e5-91b4b886ae0e"
        },
        "item": {
          "id": "7d485ed7-41cf-4570-9079-a0b0a2e12f22",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6ca12d13-14b8-40aa-a8a4-f61d668114b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae42658f-b172-49cb-a556-4d4a489039c9",
        "cursor": {
          "ref": "79cba8c8-9f56-4b9a-b61e-28d6a706b46a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "62d67db8-31e7-4665-98bb-ae44741369e9"
        },
        "item": {
          "id": "ae42658f-b172-49cb-a556-4d4a489039c9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "50804f78-ebfe-4c6e-a7fe-07f73645bba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7751eb89-2a0c-4c3b-b6ee-d0f485d969c2",
        "cursor": {
          "ref": "3de63d08-5240-4089-9f68-0238502e44cb",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "300a47f8-86ef-4930-a1d7-bd4ad2999658"
        },
        "item": {
          "id": "7751eb89-2a0c-4c3b-b6ee-d0f485d969c2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "843ec842-6223-4d59-8797-5630431959c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b67a9bd-c483-4216-b6fd-37d609d0b88c",
        "cursor": {
          "ref": "2a655eb8-84b7-4ca3-becc-c22744a40310",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "17a84a9d-251d-4c92-935c-f869fddb2da8"
        },
        "item": {
          "id": "9b67a9bd-c483-4216-b6fd-37d609d0b88c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d7dbbc41-2d36-40d2-8bda-d95ae961d43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6238629-b3cd-4603-bcc3-a4bb92a81451",
        "cursor": {
          "ref": "13119d32-e0f5-4363-95ac-c2341dfeab3b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "21770f4f-3855-4bbb-98f5-1ecfbe252813"
        },
        "item": {
          "id": "e6238629-b3cd-4603-bcc3-a4bb92a81451",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dcf760df-338f-4e36-86ac-b3902920e6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc7252d-13c9-4a9a-8658-91d375c6065c",
        "cursor": {
          "ref": "025f2e7e-b5ab-4b52-90cb-e3f1338b61e2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2ffd79de-92dc-403c-8827-8ce0b1badb33"
        },
        "item": {
          "id": "ffc7252d-13c9-4a9a-8658-91d375c6065c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5b1938ac-7c28-477e-bcc6-9df296f9f116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a598cd93-6a7c-4d8e-812a-52316f1ad4f7",
        "cursor": {
          "ref": "d70a117d-321a-41c0-935d-637e17cfbbb4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "196fc645-66e5-4872-a524-819bdc2d4b7e"
        },
        "item": {
          "id": "a598cd93-6a7c-4d8e-812a-52316f1ad4f7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4864ff46-b9d9-4ac3-8b1f-34705478e5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52f596-e72e-4d14-b9e6-043c97664442",
        "cursor": {
          "ref": "4c64c49a-96cf-46d6-ae1d-3eef711935e3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9e4f9a78-6505-498a-b74d-6e7736b6a37f"
        },
        "item": {
          "id": "ff52f596-e72e-4d14-b9e6-043c97664442",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a8f1400c-abf7-428c-85c0-6c492a1b87a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d09fffe-f594-47e7-97a2-6f26a2949539",
        "cursor": {
          "ref": "37ee76bd-4e5e-4e8d-a1c5-b5e96a814d9b",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b1d75bc8-c392-4761-a18a-11176b1e38fd"
        },
        "item": {
          "id": "9d09fffe-f594-47e7-97a2-6f26a2949539",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39b8381f-5fca-450d-9311-a0d980064025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84a45e3-63cc-4921-9f4f-7dcf2582d74c",
        "cursor": {
          "ref": "f139dc4c-7d78-4e13-85cd-afb4aaf16d47",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "407a2bff-c270-4053-a923-810893dcb407"
        },
        "item": {
          "id": "b84a45e3-63cc-4921-9f4f-7dcf2582d74c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2d773d7e-1ea3-40f7-99ab-5af6ce03c174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8be042-6ebe-4615-a14b-440b343f52fc",
        "cursor": {
          "ref": "2ebbc60e-59e3-4b80-a6bf-b9844f014289",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c9b39ef2-a19e-4e33-bab0-30c9565afe38"
        },
        "item": {
          "id": "5c8be042-6ebe-4615-a14b-440b343f52fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1797cb09-2bd5-47fa-965f-a1cf1ea640ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537ee1aa-d5b4-4a38-b475-414125476f90",
        "cursor": {
          "ref": "f0565ea3-7abf-496d-9b7d-f6f682b2d8c7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e7d0b2d0-db9a-4e1f-a334-a11d22e178d3"
        },
        "item": {
          "id": "537ee1aa-d5b4-4a38-b475-414125476f90",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2a02be74-8255-4137-93ca-0539a5bd2dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6c0226-5b00-4218-a0cc-e69b8492bcd5",
        "cursor": {
          "ref": "3102ed1f-51fc-49b2-9f0d-b38d7d489d50",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7a597305-0d27-4a03-adca-2c7e17aaa59f"
        },
        "item": {
          "id": "ff6c0226-5b00-4218-a0cc-e69b8492bcd5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "11714df9-a960-41da-b731-8bbe9aa4b6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c5983c-3738-4b9b-b568-1feb2df033d4",
        "cursor": {
          "ref": "56cbc053-b5ec-42a8-b696-e6e972db0001",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e9bff3fa-a120-4336-a8ca-9991316f7f0d"
        },
        "item": {
          "id": "d4c5983c-3738-4b9b-b568-1feb2df033d4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b43d35f1-7493-4ea8-a6c5-220a2d8e342e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1002871b-30cc-4a15-8557-06297b397aaa",
        "cursor": {
          "ref": "a884fb1b-e86b-4a54-aa6b-7fd8a935773e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "23d14d03-1a68-4776-9d8a-90f244a5b306"
        },
        "item": {
          "id": "1002871b-30cc-4a15-8557-06297b397aaa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3294a8a1-ff7b-4fd2-9bcb-c65b43970cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ae7157-a79a-428e-acff-24d79aa35233",
        "cursor": {
          "ref": "77da5b05-05ae-4aaf-bfd2-474959f7264e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "27bc2133-654f-4497-87e9-19024991fc71"
        },
        "item": {
          "id": "a2ae7157-a79a-428e-acff-24d79aa35233",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fa25152c-659d-475f-8e4d-5fba809f039c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511c4717-f731-44bd-9ad5-7180eae30f4a",
        "cursor": {
          "ref": "f921f557-21ee-4be8-bef7-5cd7f949a5a4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "df0026c4-e702-4024-ae0f-a1f650e3fb9e"
        },
        "item": {
          "id": "511c4717-f731-44bd-9ad5-7180eae30f4a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "55ac1473-226d-452a-a60d-6eeead82b333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb82f5e4-88e7-4caa-a61b-af0d907c874e",
        "cursor": {
          "ref": "ee84aeef-c36b-41a2-b611-55157aa8c926",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "141950e2-cde8-454d-b3a5-425f688ef033"
        },
        "item": {
          "id": "eb82f5e4-88e7-4caa-a61b-af0d907c874e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce4abb61-3c54-44eb-a855-e82c026bde51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e332bac-1202-4431-8d0d-f33a22305933",
        "cursor": {
          "ref": "ee004e30-c625-40dd-95e7-925489d89506",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bba22a91-4624-44d2-a8d9-2ae05cdf175a"
        },
        "item": {
          "id": "0e332bac-1202-4431-8d0d-f33a22305933",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a32634e1-2164-4c5c-bdb9-0dd54cfa4bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb3c10f-8eb2-4f31-a4dd-ff59a3a95ca9",
        "cursor": {
          "ref": "bceb8118-cbc5-4d7e-a77f-caa5e2f7d033",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f312c88a-6ca7-4d40-ba54-0bb89b4ee1cf"
        },
        "item": {
          "id": "6eb3c10f-8eb2-4f31-a4dd-ff59a3a95ca9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c4668374-d55d-4184-b672-b358a0e61b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f58075-9781-4e41-9d1d-75b791fa5bea",
        "cursor": {
          "ref": "fb3aac5e-e185-43ac-a39c-1d53eb2ffc15",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cffcc570-872a-43d5-9838-95a3e627f7d7"
        },
        "item": {
          "id": "f1f58075-9781-4e41-9d1d-75b791fa5bea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "daf9891f-995c-427b-bf64-f8ea448199f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cbadd8-a2bb-49ca-9129-7aa878933005",
        "cursor": {
          "ref": "96d93891-301f-4b10-8756-3b9fba85002a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56ba35e8-210c-4736-a315-a35376792fb0"
        },
        "item": {
          "id": "d0cbadd8-a2bb-49ca-9129-7aa878933005",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d3168de4-c1c8-4722-a467-ff9197113a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feffb60-66af-40f5-a0db-4ef996d7b7a2",
        "cursor": {
          "ref": "1c0ce71d-cbac-4cc2-a269-76ed6cb23466",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "003f8753-aae2-4a95-8447-e59d1eb17dc7"
        },
        "item": {
          "id": "5feffb60-66af-40f5-a0db-4ef996d7b7a2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "67fb6b21-bb1e-4657-a9ce-f786967e4c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09d23ea-7b7b-4619-a67b-33921de81af0",
        "cursor": {
          "ref": "77070c60-6373-4b1d-89d8-902893b7ad6b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7d5ef79d-1a6a-45e4-801e-828fa300eacb"
        },
        "item": {
          "id": "b09d23ea-7b7b-4619-a67b-33921de81af0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "be4c0262-c5d5-4274-b5f5-a7a27d11f258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6df033-1631-4d3a-a6cc-aa8ece65dea4",
        "cursor": {
          "ref": "d3650a45-168e-4646-a4a0-067da53abc03",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "67fd70b6-a12b-4992-b4e1-9a5293436c08"
        },
        "item": {
          "id": "2b6df033-1631-4d3a-a6cc-aa8ece65dea4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6955c55a-3a65-4ac5-a887-ef6b25b14c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d080ef6c-0918-4dbb-b9fc-775d38bf8469",
        "cursor": {
          "ref": "889d17e6-4ad4-4645-beeb-88342575a14e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2676533e-534a-4ca9-94ca-1eaffd1278b4"
        },
        "item": {
          "id": "d080ef6c-0918-4dbb-b9fc-775d38bf8469",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3f0dc77e-489a-4245-98e5-62565e45a669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d7b338-3e5f-4940-a2fa-4525d5279217",
        "cursor": {
          "ref": "f399c4de-a4a3-4509-8b54-a2e6d16dd510",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ce7460a4-52b6-4976-b559-98ef7228ce18"
        },
        "item": {
          "id": "08d7b338-3e5f-4940-a2fa-4525d5279217",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b04957d5-9b96-4a1c-8284-476cf341b732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78711abd-259f-426d-80a1-b99ea9c2cd6a",
        "cursor": {
          "ref": "5313cebd-2a0b-47e6-9073-8da18ca9a556",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d6d5fecb-c39f-4238-9f69-0c7e2b2d14d8"
        },
        "item": {
          "id": "78711abd-259f-426d-80a1-b99ea9c2cd6a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9af956de-3b23-4d03-8552-ab3202002a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ee10c1-22b5-4fc0-b6b9-0bf9fe0682eb",
        "cursor": {
          "ref": "355e6de1-b6d5-4b30-aef3-94ab292f90df",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2eb92184-5098-4966-bfb6-7296d3b6bf4e"
        },
        "item": {
          "id": "24ee10c1-22b5-4fc0-b6b9-0bf9fe0682eb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "dd59ae2d-d44c-4178-9aac-aaaa47297ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4d3290-e98f-447a-a0c8-8ec16ce1a9b1",
        "cursor": {
          "ref": "b9f9330f-5134-4487-ae5f-28d9c9ceb0f7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d122c8e-15e3-471a-8a69-4dc50e2dbcde"
        },
        "item": {
          "id": "5f4d3290-e98f-447a-a0c8-8ec16ce1a9b1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc3bfaf9-bad1-491a-afac-5a26474c9f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20264831-9f63-473d-bbe6-73b61a27647b",
        "cursor": {
          "ref": "bb660cbe-3f9e-46fb-ba87-7fbf34d6d925",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7b520dea-8322-48a0-9397-b677248c587c"
        },
        "item": {
          "id": "20264831-9f63-473d-bbe6-73b61a27647b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "77e62e91-e45d-4a98-976e-f6aa73bce1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00989cc-8393-4614-81ac-b95adab6b655",
        "cursor": {
          "ref": "e8b5226f-bea5-44ac-9d65-d137ab719782",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "32b9f47c-189b-4512-b0f8-f4e1cc862b25"
        },
        "item": {
          "id": "f00989cc-8393-4614-81ac-b95adab6b655",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f44e76cd-43b5-4e0a-8423-bc15ae445f25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd99d8c2-324b-4539-bcea-8891440dfbdb",
        "cursor": {
          "ref": "b77fd7cc-9763-4521-920e-fbc65b626861",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f4a94a3c-3fca-4e6b-94bb-20bf2e641349"
        },
        "item": {
          "id": "bd99d8c2-324b-4539-bcea-8891440dfbdb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e5f374b9-8f58-4dfa-a5ab-a60c73c2bdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40ae53f-094a-4330-87fd-2b555d57101e",
        "cursor": {
          "ref": "7739c672-f088-4948-8218-f90e7013eee6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b790997b-4a86-4db1-81e1-e0e71522d021"
        },
        "item": {
          "id": "b40ae53f-094a-4330-87fd-2b555d57101e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e6ed41f-f6b4-4a25-bd63-8bceb184a2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487894e8-d96e-47eb-9925-8a5b59112960",
        "cursor": {
          "ref": "d465c0d6-a551-4d15-bad7-2c19f8a2cd41",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "66093e90-079e-4fb8-8d0e-62547a5b302c"
        },
        "item": {
          "id": "487894e8-d96e-47eb-9925-8a5b59112960",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6c65c4b5-de86-4625-b2b4-dfbe3a217272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1887ae9b-39a9-4403-9f9d-9c01b78625a1",
        "cursor": {
          "ref": "cc43d26f-d6cc-4f65-aff0-2e5063ebebed",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ab52a7e0-c9b4-4d54-8ac2-db7ff27910d1"
        },
        "item": {
          "id": "1887ae9b-39a9-4403-9f9d-9c01b78625a1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e02ac5fa-62b1-4139-919b-8740eb19f84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bf1e66-bc05-45f3-b0b2-84cd66e04e2a",
        "cursor": {
          "ref": "e1a7280c-057d-4214-a342-6375d48fba1a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "21fff839-9d07-4912-a6ba-0376edc98269"
        },
        "item": {
          "id": "21bf1e66-bc05-45f3-b0b2-84cd66e04e2a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "72157328-df2f-4449-ba13-829a0b8de262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35989da-41d8-4c31-abf1-036941fd7e27",
        "cursor": {
          "ref": "032aba15-76c6-4be7-80ac-0a81256f9f93",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bfd44db5-cd25-4f56-b6a5-7c21e6270b07"
        },
        "item": {
          "id": "d35989da-41d8-4c31-abf1-036941fd7e27",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "75ea8d08-c7ad-4db7-a114-e0d0e3ce02de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94081623-1399-4de0-aba8-6ad30cd57159",
        "cursor": {
          "ref": "e2f7cf8b-f606-4a42-b9fb-e3e97b7d66ca",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "710f4b15-d9a3-42f7-bbcc-75065d4caa68"
        },
        "item": {
          "id": "94081623-1399-4de0-aba8-6ad30cd57159",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "032120f0-0ba2-4141-807d-695ee254d0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4f4644-dfb8-45bc-b0da-9ded0b32b8e0",
        "cursor": {
          "ref": "2e66b26c-2bd1-4178-8e7f-79182c49a846",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b1b4e72b-cfbb-45a5-ba64-c2962154b867"
        },
        "item": {
          "id": "4f4f4644-dfb8-45bc-b0da-9ded0b32b8e0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "368c6e51-5b7e-4c4e-80b3-7c476fee8d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a32a3ba-2c7a-48f4-b05d-976c3dc67041",
        "cursor": {
          "ref": "8f86c49d-6519-4744-b86a-4a46f96157b9",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dca8723c-24a9-414b-af6c-a8b29e44d527"
        },
        "item": {
          "id": "4a32a3ba-2c7a-48f4-b05d-976c3dc67041",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "62cf83f3-73a6-493a-aed8-50977eb01c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0d7067-5bba-4e37-8b99-a2a13d6c07a9",
        "cursor": {
          "ref": "dbb66d63-927a-4bea-8c3a-960049000dd7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "41e6cfac-d72a-4e00-8935-538dda04bf1c"
        },
        "item": {
          "id": "ba0d7067-5bba-4e37-8b99-a2a13d6c07a9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "941e5537-d3f2-4598-861b-4f22251cb010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f2664f-d816-415e-87a8-70801b66c5b2",
        "cursor": {
          "ref": "30155ad0-dbcb-448f-9313-c60484bf7ce4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ecbf3e7-f79a-4fc6-9a73-fc8ef2bf92d3"
        },
        "item": {
          "id": "93f2664f-d816-415e-87a8-70801b66c5b2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5ea7fe37-40f4-4b80-a930-2e910ba2c0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d085167f-130c-4bd6-9492-61c96815f1c4",
        "cursor": {
          "ref": "200cd6f6-2654-4487-9b1e-088d587006d0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fec0739d-e27b-4e31-bf04-12fbba10d8cd"
        },
        "item": {
          "id": "d085167f-130c-4bd6-9492-61c96815f1c4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3c057c0e-04c4-426b-9252-9cc1d50fab25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e156b8-ab74-4740-a418-b26111a3e400",
        "cursor": {
          "ref": "defab415-aab6-4c32-9432-51dba283050a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7042e1b8-9e6a-42cb-b35d-892cd69d64ac"
        },
        "item": {
          "id": "f0e156b8-ab74-4740-a418-b26111a3e400",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "23247ebb-659b-485b-9896-e711a1b2bfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dfd075-e43d-4fd9-a866-c42589e1c78a",
        "cursor": {
          "ref": "c6da9281-7647-494b-8b48-8873c6cb7749",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e82d6a8c-e66d-4734-8d54-6a77324c15d4"
        },
        "item": {
          "id": "f0dfd075-e43d-4fd9-a866-c42589e1c78a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1f80659f-9fc5-4482-93cf-379b0d9880fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802f97e6-5ce9-4bc7-8078-8243b1791b0c",
        "cursor": {
          "ref": "509a4729-d090-4db7-a992-2c6e8ac0fd18",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "68bd4595-a15f-4b33-9e90-6936ed53121e"
        },
        "item": {
          "id": "802f97e6-5ce9-4bc7-8078-8243b1791b0c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b0b14cd6-c1c3-4605-9870-127096e38322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acabf669-0c1d-411c-8b74-252a35144886",
        "cursor": {
          "ref": "a8378fce-344e-4cd7-99e8-2b1bbd47484f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8e038f27-5a44-433b-a5f7-c695b274183e"
        },
        "item": {
          "id": "acabf669-0c1d-411c-8b74-252a35144886",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ac4b35f-75a7-4467-b066-f21cb7fa4ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e98ac0d-1c4f-4688-8fd3-dfb67d077d41",
        "cursor": {
          "ref": "d824ef10-65e6-41fa-a39f-744bd753c8c2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6df2ef41-36e8-4249-b45b-efc3437f126e"
        },
        "item": {
          "id": "8e98ac0d-1c4f-4688-8fd3-dfb67d077d41",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d3d98f6d-523c-487f-ba0d-834a4b074bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc52eed-9b44-4a50-98bf-d6c37fa29a16",
        "cursor": {
          "ref": "bc904fce-27a7-45d5-8fa4-a368e97e6feb",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "68b6c9ee-7601-44dd-bdf8-bb7e7cd1f34f"
        },
        "item": {
          "id": "4dc52eed-9b44-4a50-98bf-d6c37fa29a16",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "45da5ed5-d79f-4a22-88d3-49e271a1752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc2b7bd-5f93-453a-b2a6-76b557c953ba",
        "cursor": {
          "ref": "de66bb20-ca56-4a5b-84dd-734260c2c461",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d95cd6e2-be41-475e-a3f9-f81df77a7231"
        },
        "item": {
          "id": "3fc2b7bd-5f93-453a-b2a6-76b557c953ba",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ac8d7e37-1d69-476d-a056-1a9f479c4db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4d83f0-3586-46a2-a867-47b02f9f3817",
        "cursor": {
          "ref": "e66fa714-81ac-4e20-8911-38eac7dbae0e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6d9ca4ea-a301-4cd7-8bf9-421f6150ff04"
        },
        "item": {
          "id": "1e4d83f0-3586-46a2-a867-47b02f9f3817",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4f0b8439-ef0c-48be-ba03-fea665627b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e25c45-db74-414e-ad4d-c57228f36ef0",
        "cursor": {
          "ref": "979de3b9-c305-4b52-8e45-6ce3b3f5ee69",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca16c348-24cb-49a4-88e9-e658e14b8f5d"
        },
        "item": {
          "id": "61e25c45-db74-414e-ad4d-c57228f36ef0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac593e0e-d4ee-4d8c-b8f6-085828730c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c685565-243f-486d-bad2-f16e97fa568d",
        "cursor": {
          "ref": "b7b20f98-088d-4632-9b32-a69401b9955f",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "39bfc5b7-7332-4794-84cc-502c02a6b00b"
        },
        "item": {
          "id": "4c685565-243f-486d-bad2-f16e97fa568d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "326e48b1-c203-4998-9348-d0cc75d0975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8f6fd4-6126-47cd-8017-ebaadbbca5aa",
        "cursor": {
          "ref": "18267d7e-e546-45d3-b01f-12d207b198b4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "633921bf-5f16-40cd-867a-f06bd3eee514"
        },
        "item": {
          "id": "0c8f6fd4-6126-47cd-8017-ebaadbbca5aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d30f0b3-8e89-46bb-a1c9-09d6a623bb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1e1dd2-b183-425e-a28e-0b288d8a15f6",
        "cursor": {
          "ref": "5a32b953-9f67-4f86-8043-052b828a7523",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cd6ab39d-4757-496b-a283-0f9099bbca66"
        },
        "item": {
          "id": "af1e1dd2-b183-425e-a28e-0b288d8a15f6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d5517a22-71f2-4890-a9fe-f09d879800b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00306c36-ffcb-46e7-bb7b-389137394dd7",
        "cursor": {
          "ref": "0cf17a68-afad-4dbf-b2c4-12939556ac41",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fb4aa621-0bfd-4b84-a9ce-290bcc191258"
        },
        "item": {
          "id": "00306c36-ffcb-46e7-bb7b-389137394dd7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "77c8a56f-2f22-4e7d-89dc-7c40ddb585b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4018a89-94eb-4dfe-9ffe-304bdee2234e",
        "cursor": {
          "ref": "003eb711-80a6-420f-a526-86d2f55f0d9a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "807dfc5d-91fa-4f3e-a510-150d62240c7c"
        },
        "item": {
          "id": "a4018a89-94eb-4dfe-9ffe-304bdee2234e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "39472681-2621-4398-8a7b-c1d947fe75c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1f5280-32a2-4dda-8f7e-ccc4dc44b91a",
        "cursor": {
          "ref": "ec59d876-723a-4600-bf08-638946e39335",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1ed01d3b-c900-47cf-a1fd-df2e539476a2"
        },
        "item": {
          "id": "2c1f5280-32a2-4dda-8f7e-ccc4dc44b91a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "448460ee-fda3-494b-a302-e0ee9ec2adb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e06d172-4f30-436b-bc1a-cbc98d401d65",
        "cursor": {
          "ref": "87e32e43-8742-4506-bd5c-49afead27574",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "487be2ba-9eb1-4053-bd90-934f185141bf"
        },
        "item": {
          "id": "9e06d172-4f30-436b-bc1a-cbc98d401d65",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "94e30557-f4c2-4738-b3bd-e93e05cab5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b69a31c-12e9-458c-b887-fe29c84accf5",
        "cursor": {
          "ref": "273b9c79-2cef-43b4-998d-bc618bcbcd87",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f68b9276-d564-4ebc-9b05-a319277ca953"
        },
        "item": {
          "id": "8b69a31c-12e9-458c-b887-fe29c84accf5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9114d269-580f-4b5b-822c-a183a09515df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570e957c-f54f-48c8-acf7-82d7cab33893",
        "cursor": {
          "ref": "99e9ab49-9008-481e-9270-11b448446a1a",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1c7761db-5b2e-45cd-b5b8-87015dc02fe0"
        },
        "item": {
          "id": "570e957c-f54f-48c8-acf7-82d7cab33893",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "541961a8-1f73-43c8-9847-6f417d60cf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2d383d-261e-4af5-9d87-24149e94992b",
        "cursor": {
          "ref": "aa3348a3-8eac-4064-8af7-a4bde6cc5788",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "dc335433-f3ad-44c9-9737-9f28c0dcf8c4"
        },
        "item": {
          "id": "cf2d383d-261e-4af5-9d87-24149e94992b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "371f2e96-609b-4a3d-903e-99a77aafa252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8907d42e-4c7a-48dc-a2f9-2e6a3a900944",
        "cursor": {
          "ref": "f8189a10-44e7-43a3-82f1-28ba3798011a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3b36b564-3c65-456e-b10d-15b759b9e4ad"
        },
        "item": {
          "id": "8907d42e-4c7a-48dc-a2f9-2e6a3a900944",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "07fa7221-feb2-46f0-aee4-3b9195be054e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad56b859-0e6a-4a9c-a6a6-e5ca9b65bfaf",
        "cursor": {
          "ref": "82cb6a3b-dadf-4794-9135-52e09e365200",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9138fcfd-f805-49e7-a927-867a3682f995"
        },
        "item": {
          "id": "ad56b859-0e6a-4a9c-a6a6-e5ca9b65bfaf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b58972e3-08ca-4df1-aec0-c58d12026905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e31db5d-ff82-41cd-ab1d-e14c81a0b381",
        "cursor": {
          "ref": "abd765ef-5d1b-4bbf-bc9e-7e1f5239bb10",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b24b8576-43e4-4429-aa9f-02dd644fe720"
        },
        "item": {
          "id": "6e31db5d-ff82-41cd-ab1d-e14c81a0b381",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4b3a544a-25d4-482c-a323-6d7489114675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c65947-af2a-42b7-9c2e-8087586be430",
        "cursor": {
          "ref": "4b193261-caa2-4355-aeaf-d2b78cbbdf47",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "46816366-f417-4b54-90d9-6428e52f617c"
        },
        "item": {
          "id": "45c65947-af2a-42b7-9c2e-8087586be430",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0a7219a0-7b4f-44b7-ba91-7fb818941048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d39539-b9e1-4d64-ab65-fee3aa4b3901",
        "cursor": {
          "ref": "3c152d54-5abd-4dac-bf21-81dd82c6d489",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7b2ad3a4-fedb-4023-8249-a53886782573"
        },
        "item": {
          "id": "01d39539-b9e1-4d64-ab65-fee3aa4b3901",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e63290d6-5b34-475b-9dfe-d96f3e54865a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aa6b36-0566-409f-9de5-7f55eae341af",
        "cursor": {
          "ref": "b6435638-2e32-4b30-b800-62dc4c73ed24",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "aa916781-faa2-44c9-baf5-9404ad6703ac"
        },
        "item": {
          "id": "d9aa6b36-0566-409f-9de5-7f55eae341af",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c66351d8-f6dc-4fa8-9426-d8d05f80f840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f157c40d-82d7-4cb4-aa42-97428192a4ae",
        "cursor": {
          "ref": "2137d2f0-4b82-41f4-a973-97588c508f74",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "86e8945d-084d-4c5b-8492-156b4e92a5d5"
        },
        "item": {
          "id": "f157c40d-82d7-4cb4-aa42-97428192a4ae",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8cc0c39d-9c75-429a-ab92-b210eceb4e76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bdc8f8-b058-4948-9d28-261bdc0c26d9",
        "cursor": {
          "ref": "9885ea26-ac96-49e5-b8b4-1cf94271b0c3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6be4eb74-f58e-4eb9-888b-b33039ea5d3b"
        },
        "item": {
          "id": "09bdc8f8-b058-4948-9d28-261bdc0c26d9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5f10fbf-8938-4cce-82c0-2697e579f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c28959e-262c-47b9-a8cb-8fab3e3efea7",
        "cursor": {
          "ref": "39002d48-c71a-46ee-a624-b8b3b48042fe",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "03cc556d-9152-412f-8263-8693f9ee8b60"
        },
        "item": {
          "id": "7c28959e-262c-47b9-a8cb-8fab3e3efea7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "71044a3b-a282-48d6-8cbc-3896a3af3eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b341b2-1c7a-4904-9687-3e6b11f44ffc",
        "cursor": {
          "ref": "bbd96e61-d749-47d6-9450-03fc340e8d7f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2d8bd2d-d768-43c7-9d06-492708de0db6"
        },
        "item": {
          "id": "b4b341b2-1c7a-4904-9687-3e6b11f44ffc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0376fbd9-558e-45a2-9a6c-7cf0976e24b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d665f19-5977-41db-97cc-76a94aa834dc",
        "cursor": {
          "ref": "120c9ab0-2796-4620-82ec-6f3d309e04ed",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "080e3dc1-4d8a-4baa-a09e-ed2279350d91"
        },
        "item": {
          "id": "8d665f19-5977-41db-97cc-76a94aa834dc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4284e095-56ff-4acd-8df7-b226a976e276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b41ed1-398f-4e46-8a30-61ea9c412738",
        "cursor": {
          "ref": "0fbee946-82ea-4ce1-88ea-5594947afa11",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ff4b54d5-0f2d-4691-ad70-722205ad5ba7"
        },
        "item": {
          "id": "a9b41ed1-398f-4e46-8a30-61ea9c412738",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8e1ce0a3-dfe7-494b-882e-d17b99514322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a92693-64d5-4cf0-bf09-dcd3a3605d81",
        "cursor": {
          "ref": "a860b247-c95a-4566-9022-b55ad0c4acd1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "44e03c31-3935-467a-a7ae-c1f15877a8b8"
        },
        "item": {
          "id": "27a92693-64d5-4cf0-bf09-dcd3a3605d81",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ec6cf67e-c90e-4969-af3e-3afd14e6b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84043b1b-3e60-4f2b-baa5-73dd57b486bd",
        "cursor": {
          "ref": "67743a16-9300-4532-ab4e-0db57c7ed172",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "df11ee4a-652a-49b4-acea-a78c748085f0"
        },
        "item": {
          "id": "84043b1b-3e60-4f2b-baa5-73dd57b486bd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f38bb3b8-3f1f-47cf-aa49-50e3a526827c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30ed4e0-de66-4a84-8095-cbc209c1e100",
        "cursor": {
          "ref": "e6e3917f-617e-4e88-9cb9-b09bb9c6248a",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d1f257c2-848d-4807-93de-e0dbe6221bc2"
        },
        "item": {
          "id": "d30ed4e0-de66-4a84-8095-cbc209c1e100",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a260c931-9061-4f45-8e4f-d20bf402569c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18e4b6a-0b90-4013-9471-bb70266f7e06",
        "cursor": {
          "ref": "21aa4935-bd54-451c-bffb-68a2061c4172",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ebe21d7f-1f8e-45b3-9683-091d7da4d4b0"
        },
        "item": {
          "id": "e18e4b6a-0b90-4013-9471-bb70266f7e06",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f17e958a-06ad-4c1a-a990-629f81b2bd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e33edc-30ce-494b-b50e-1ecb7a5d2dfc",
        "cursor": {
          "ref": "b2cf23a8-978b-452c-b281-8e8f3f1a33f7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5b572c89-8fe9-45bb-a3d4-6782b86e5b31"
        },
        "item": {
          "id": "d4e33edc-30ce-494b-b50e-1ecb7a5d2dfc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b477b716-54e2-4eca-bb1a-ea5eeba429cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089f734e-9bde-40ba-aeb2-2e154f15a6d6",
        "cursor": {
          "ref": "777348b3-40e7-4dcc-9aeb-b50ff04cde95",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "066df5a5-6823-4275-a67b-9ec71b822dcc"
        },
        "item": {
          "id": "089f734e-9bde-40ba-aeb2-2e154f15a6d6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "750d42b5-3cc1-4fba-891f-2a2c4c420cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52c9810-2e00-4a7b-8531-6a5a7241a224",
        "cursor": {
          "ref": "b7e34404-5be5-441a-b52e-49c79c0fdde1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5f9c9a9d-294f-4ef2-8952-b08a95206799"
        },
        "item": {
          "id": "b52c9810-2e00-4a7b-8531-6a5a7241a224",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7aa0c96e-5fe4-4e57-942c-b2b983315226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8217d3bc-fb0e-49be-b252-1c2e79363263",
        "cursor": {
          "ref": "09caab2b-c82a-40c3-adb8-10a922d54ea7",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7397c6f5-266c-49aa-881f-6229ccf3014d"
        },
        "item": {
          "id": "8217d3bc-fb0e-49be-b252-1c2e79363263",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e8950f88-e1ee-4e81-869f-c6fb09884c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b5e2a0-f431-4aeb-be98-a340ec37da1a",
        "cursor": {
          "ref": "9ee29482-c069-4b78-a8c4-7a2d07e4c4ae",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bb1b0046-f1ab-4d91-87de-72dda91dcc92"
        },
        "item": {
          "id": "f0b5e2a0-f431-4aeb-be98-a340ec37da1a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "609c0de3-757b-434c-aaff-7163376bc5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a47ccb-e74e-43cd-bb9f-3c822124cae7",
        "cursor": {
          "ref": "822de9c1-c9f2-4f69-8b42-2b6f687d8d32",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "79f30c1a-5b9d-4257-a70b-91ba199b7f9c"
        },
        "item": {
          "id": "39a47ccb-e74e-43cd-bb9f-3c822124cae7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "be175799-f9cb-40d0-bbb0-401013a3f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d5bfa8-97ef-45f5-aa90-0b4c765bd128",
        "cursor": {
          "ref": "2a811a6e-da60-4c35-8c1f-24a8f178372e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c6f60b69-4cec-4db6-b29d-911174ccc54f"
        },
        "item": {
          "id": "31d5bfa8-97ef-45f5-aa90-0b4c765bd128",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2fd189da-413c-4c8f-a0d6-d52f209a6371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa480fc8-d257-4a60-bc96-357716838800",
        "cursor": {
          "ref": "f6813de6-33e8-41ea-985c-4317e1b35607",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6e0d5d9f-f9e9-4e30-9c82-d8707a5371e9"
        },
        "item": {
          "id": "fa480fc8-d257-4a60-bc96-357716838800",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5b1563c3-bc92-4312-963a-89c52d70101b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccde179-d4bb-452b-95ca-3ef942743e58",
        "cursor": {
          "ref": "b4699fee-bff7-42ce-bf72-f97ce3bf8d93",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "573dedb2-df3c-4a20-9bfc-454791e66547"
        },
        "item": {
          "id": "cccde179-d4bb-452b-95ca-3ef942743e58",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c5390d1f-6600-40db-be43-8e2be8ee7f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd37fde3-165d-4320-a931-30e0af182667",
        "cursor": {
          "ref": "634e3d4d-87df-4dad-8091-03ad6d731e16",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "839df60e-88c5-45fb-80c3-a8197b27c9b0"
        },
        "item": {
          "id": "fd37fde3-165d-4320-a931-30e0af182667",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fcf78493-da16-4feb-ba83-c0bf9c6e8f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba7d215-4624-469c-83f1-8e550ae39524",
        "cursor": {
          "ref": "d369c759-4c14-45f5-917b-84a592dccaaa",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "87415fbf-70b5-4e49-a389-25678767e147"
        },
        "item": {
          "id": "0ba7d215-4624-469c-83f1-8e550ae39524",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "49bb77ee-01d6-44f9-bbd9-82f59fd525b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d070a819-ff7c-4e99-8d36-b8ecd6dd27fd",
        "cursor": {
          "ref": "c892b8a9-26e6-42b8-8216-f54503f4ad68",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0f220db8-11dd-48a0-afd1-c2d603f991b8"
        },
        "item": {
          "id": "d070a819-ff7c-4e99-8d36-b8ecd6dd27fd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "981ec645-d7ef-445b-9257-e09027c8d3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df337311-0f6d-4be4-9207-3c2669629eb4",
        "cursor": {
          "ref": "eb80e65c-6bd6-44f6-96b4-ddd4995e08de",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fcf98a0e-e9db-4ee5-b78b-485ac297fb97"
        },
        "item": {
          "id": "df337311-0f6d-4be4-9207-3c2669629eb4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5d0b7b4b-a934-4cb8-9802-563d428a341b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c769c53-55c4-4233-97be-590e016394e7",
        "cursor": {
          "ref": "e3c15ab1-8253-4bf3-84c8-f24e9a192266",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "76cf6f35-8c0f-4282-b1ed-fecfbd4e7d7d"
        },
        "item": {
          "id": "9c769c53-55c4-4233-97be-590e016394e7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ee5c64a3-3c86-49d1-9453-83a616aac5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41f6e72-9eba-4a16-b6ec-4e109cc6661f",
        "cursor": {
          "ref": "24d2e6fe-2a0c-445b-8062-6aded06e8238",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fe1ab607-3197-4e0e-b01b-f0bceda8a632"
        },
        "item": {
          "id": "a41f6e72-9eba-4a16-b6ec-4e109cc6661f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "36037426-712d-4d90-8cc5-435a4fc6f265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57b33c2-e0d8-45dd-9c39-ba6f737d8891",
        "cursor": {
          "ref": "688b26db-ebcb-47e4-9642-f3586e73e8d9",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "992e33f8-113f-476d-8af4-24df48b3bfbb"
        },
        "item": {
          "id": "d57b33c2-e0d8-45dd-9c39-ba6f737d8891",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1dd620e5-9d3d-453e-ad43-4ae0c5487853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f839ff2-283b-471b-b806-8dbc0821e29c",
        "cursor": {
          "ref": "7e1df73d-4407-458f-9503-179f1e3f86a7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "580b6286-3cba-4e17-b8fe-55b12105bfc8"
        },
        "item": {
          "id": "1f839ff2-283b-471b-b806-8dbc0821e29c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5761e269-a88b-4272-bee1-e22154f1ad7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc354909-090f-46a1-9029-30e4b0a655ac",
        "cursor": {
          "ref": "c185a20f-2c78-40e3-a87e-6e808602567a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7eadba3f-0229-4282-a175-0ceeb19eccd5"
        },
        "item": {
          "id": "bc354909-090f-46a1-9029-30e4b0a655ac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ec669754-b7ca-48dc-bef4-91f8c3c2b3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650f9cb6-e983-4da2-b61a-3b4a67efb642",
        "cursor": {
          "ref": "50b34035-0973-4077-8c3c-95ac54ad9c47",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dd953cf8-bbb9-49d4-bf84-7893ee25218c"
        },
        "item": {
          "id": "650f9cb6-e983-4da2-b61a-3b4a67efb642",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3e8b0589-e5fd-4a2c-83ed-dc5ea649f6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0af32c-19f0-4cff-a8ac-c364201d695b",
        "cursor": {
          "ref": "1db50cd4-3331-4f81-94d0-02b519103dc1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5aecfe37-0270-48af-84f9-16e02c33ce81"
        },
        "item": {
          "id": "ca0af32c-19f0-4cff-a8ac-c364201d695b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e14532d3-be24-40b7-818e-db3eaaed0e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a317c6a3-83db-4cc4-9b07-d9625b3994f4",
        "cursor": {
          "ref": "46c7d21d-2b6a-4d8e-bb45-0cf92642027e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aae137f4-e49b-4af8-8aca-a60888bf189e"
        },
        "item": {
          "id": "a317c6a3-83db-4cc4-9b07-d9625b3994f4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "98251239-8909-4a10-82ee-bfe12982b74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa89667-6e53-4e47-bf69-29228b093aed",
        "cursor": {
          "ref": "c38b620c-e10f-4096-92d4-8c14bbb8d467",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1cb49621-a82a-423c-befa-938b89760d0f"
        },
        "item": {
          "id": "6aa89667-6e53-4e47-bf69-29228b093aed",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "758692e9-4281-40c3-a2f0-5248330a8b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4175c515-686f-4e75-a0df-ee87425cd430",
        "cursor": {
          "ref": "b9514711-f3fd-43bb-b5b0-e0326af78b00",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "75b6bb5b-2eb7-40f5-a994-3e5b7bf82ce8"
        },
        "item": {
          "id": "4175c515-686f-4e75-a0df-ee87425cd430",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "15a0de1f-6c4c-4f37-b098-acd6ab7f9b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b20d56e-9525-4d8c-8648-4d7f229b89ab",
        "cursor": {
          "ref": "14bbcaac-ed53-4865-b299-6f3ee3c66a02",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b4f5f56f-e2a9-4f31-9f15-2a6ed521b67d"
        },
        "item": {
          "id": "2b20d56e-9525-4d8c-8648-4d7f229b89ab",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "19596878-830d-4479-9120-77d00de609c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc45ed76-90ab-4931-92dd-2b9e841ac8f9",
        "cursor": {
          "ref": "d47b1cd8-d8c6-4158-b6bf-7b8ee589869e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c4b186ff-fadf-493c-80c8-a96641a7ab16"
        },
        "item": {
          "id": "bc45ed76-90ab-4931-92dd-2b9e841ac8f9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "71fa45b3-eab3-4b00-aa63-ab2afe075eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4567af-ca0b-4d7c-9099-0cd84045c10d",
        "cursor": {
          "ref": "256fa8d4-e1b9-42fc-9bbf-be5efe62571c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c75e57b8-3668-474a-8b2b-3653bf0eafee"
        },
        "item": {
          "id": "8e4567af-ca0b-4d7c-9099-0cd84045c10d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f56c721e-c3e6-450e-8d28-e59970934057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf5412d-4b79-47cc-abf1-e6a706084045",
        "cursor": {
          "ref": "2ab015c5-5ada-4a3e-a591-6cb9c5833910",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c5b356e8-1df3-4479-8ef2-56a28f391500"
        },
        "item": {
          "id": "acf5412d-4b79-47cc-abf1-e6a706084045",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4b9ce537-ff94-4c58-a4dd-275c5d0c7e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb79b57-2a8d-4dd7-86e8-e89923fd9255",
        "cursor": {
          "ref": "78ab21e9-25c1-47b3-abc9-a17d74a24cbf",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a45c3d1d-852c-43a5-a6bb-49ab7f7b63b6"
        },
        "item": {
          "id": "afb79b57-2a8d-4dd7-86e8-e89923fd9255",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fe52b0ad-515f-4092-b543-5b6f2f7360b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3687c6-0082-49d3-960b-1336d35da0b6",
        "cursor": {
          "ref": "e7151656-1bbc-4cd5-8284-49b61227be6b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "591e2d27-6e7e-4ebb-9ba4-932a87c4b7de"
        },
        "item": {
          "id": "fd3687c6-0082-49d3-960b-1336d35da0b6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "52fad36b-352d-4461-9e21-02b874868794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f999a722-fdfc-4608-a57b-e0a4ea06293a",
        "cursor": {
          "ref": "6b5b0f75-97c7-41a3-8d8e-3c80e0d6f0f1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f5fc6900-539b-4064-a34b-67d4dd01bdba"
        },
        "item": {
          "id": "f999a722-fdfc-4608-a57b-e0a4ea06293a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2a0f0a04-8df1-429b-a0e8-f0806612f8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe7b0f7-1f6b-4060-b927-4d0c64769264",
        "cursor": {
          "ref": "82847197-df80-4e08-8c4b-dc6c8fef716a",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fcbfc232-d444-406c-b518-5b2379800528"
        },
        "item": {
          "id": "ffe7b0f7-1f6b-4060-b927-4d0c64769264",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "824b8a57-abb3-4cda-a302-ac59c90994a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8504a43-7578-418d-b5c3-f49bcd1bb081",
        "cursor": {
          "ref": "2e604f51-18fd-4336-9a1a-a2b8ef171d42",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9eb8e412-783d-44ba-978e-39abc70f0158"
        },
        "item": {
          "id": "a8504a43-7578-418d-b5c3-f49bcd1bb081",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3b24d510-c5c0-4934-974f-f67a0db06c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf4739b-4930-4ace-b8ea-0a23f063eb12",
        "cursor": {
          "ref": "17005ac0-f028-4deb-8fd9-1dbecc19da5e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b0df0429-5dee-4e92-affe-9472934c31f4"
        },
        "item": {
          "id": "6cf4739b-4930-4ace-b8ea-0a23f063eb12",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b6b6a7c4-e0ae-43ab-a912-709b870bffc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71defcab-10fe-407a-b12f-1912f13dd88e",
        "cursor": {
          "ref": "57d95796-aed5-45c9-a677-0b4725c02b17",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4664da63-3896-481c-859d-bfd4bc0e7d4b"
        },
        "item": {
          "id": "71defcab-10fe-407a-b12f-1912f13dd88e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "02c042a2-4e8e-4305-997f-e1bc1bffb4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d97bc-28c8-4ee1-88d6-9969797bfd57",
        "cursor": {
          "ref": "eaa87659-e806-4e95-8afa-7bbac96ab4e1",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "75f0fd0d-5214-4c56-bab2-2c7eb9a18df9"
        },
        "item": {
          "id": "b43d97bc-28c8-4ee1-88d6-9969797bfd57",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ec5816cf-3fc0-4bc5-a607-0477e23fb98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30527abd-c583-418d-9e78-16276435a33c",
        "cursor": {
          "ref": "3204a5f0-9d0b-4c3b-9338-3530734b8d99",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "423ca1e2-f3d4-48fe-be41-2331e7a12642"
        },
        "item": {
          "id": "30527abd-c583-418d-9e78-16276435a33c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7743251a-0d95-4b04-8e11-102f3175ca96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5095706-b6a8-4a1c-b602-f37db00b996b",
        "cursor": {
          "ref": "d9fc697d-1f6e-41d1-9bc3-968e7da2b83c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0935504b-6954-46e5-a450-ba56a66f36da"
        },
        "item": {
          "id": "f5095706-b6a8-4a1c-b602-f37db00b996b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f814c898-8938-453b-85f9-63cd1b4069a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2231eb90-2761-4b00-b659-f1165013a81c",
        "cursor": {
          "ref": "68f5969a-56be-4022-9da2-6f2b18961873",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e944df12-5233-4693-b07f-11571f37ae74"
        },
        "item": {
          "id": "2231eb90-2761-4b00-b659-f1165013a81c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3af2ed23-6ec3-412a-91d5-935eff10eaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e429532-283a-4294-9f9f-112e00237264",
        "cursor": {
          "ref": "c2397e0a-1362-418e-8600-30765ac4d354",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c63e7724-d00c-4a2a-8f9c-4b338327668c"
        },
        "item": {
          "id": "9e429532-283a-4294-9f9f-112e00237264",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0bb9ece8-2502-476e-b779-c3d1e7f89f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85d87e8-1433-4d6d-963f-33156fbce698",
        "cursor": {
          "ref": "25eb1829-92d3-4de0-b901-4f23ba0de55f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "89e62cc9-af9c-4167-a222-ac289607e453"
        },
        "item": {
          "id": "c85d87e8-1433-4d6d-963f-33156fbce698",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ba7ada69-6bb5-4907-b5b0-5c6fbf5487e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21654f5b-a0b2-4fff-ab11-3e0c63a37999",
        "cursor": {
          "ref": "8747690a-9a7f-47fd-8d3f-da05e3e1ba99",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bbc02320-ff97-475d-ace1-28e6db2500f2"
        },
        "item": {
          "id": "21654f5b-a0b2-4fff-ab11-3e0c63a37999",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "57987243-8f13-48b6-b259-4bc337c8d5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1890c9e5-2f16-46c3-8fe1-2bd6da2e4887",
        "cursor": {
          "ref": "5cf5c12b-fa00-4cfa-867b-482527400cef",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "89aa8405-dcd6-4bb0-a996-49f0522c6064"
        },
        "item": {
          "id": "1890c9e5-2f16-46c3-8fe1-2bd6da2e4887",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46501b90-abdc-4cd2-9923-b21998169373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4c4d89-4c5e-4af8-a316-7cd8bc2f348f",
        "cursor": {
          "ref": "9ca493c0-7d4a-4a8e-981e-4dfcca9df4d9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "87b8a428-c4e7-4970-9756-7df727a46895"
        },
        "item": {
          "id": "8c4c4d89-4c5e-4af8-a316-7cd8bc2f348f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e8ac099f-f161-4381-866b-0025a4f03a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad45134d-4ce4-4bb6-9f08-a735b7a3aa01",
        "cursor": {
          "ref": "8a99540d-8409-4226-abe0-e031143391ef",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "18e9eae1-5bb0-4e62-ae92-f328951d518f"
        },
        "item": {
          "id": "ad45134d-4ce4-4bb6-9f08-a735b7a3aa01",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2fb4f12d-4a92-4672-96a3-60f5a09c7934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb8382e-426e-4fcb-a44a-207bdc8fe359",
        "cursor": {
          "ref": "651e7876-9c85-40d1-9505-ebbf434338d0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ff8f170f-3ace-4360-90e4-b97d2324d74e"
        },
        "item": {
          "id": "eeb8382e-426e-4fcb-a44a-207bdc8fe359",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "64947c8c-86e5-475b-b1aa-ed18fd3f6636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54aaa638-ef09-4bdf-bae8-07039bde4b87",
        "cursor": {
          "ref": "3086d332-1657-4df2-a827-45606f5f9eb7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "316aa6e5-b5ec-4d13-84c3-276926edbb0d"
        },
        "item": {
          "id": "54aaa638-ef09-4bdf-bae8-07039bde4b87",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "559777a5-4b82-4d2a-ad3d-8203cbc47949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c089d737-24db-4105-897d-78bb9c6a9af2",
        "cursor": {
          "ref": "ae711c55-9062-481d-a71c-1d0a13a9e74e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9d883c27-fc71-4634-a136-d84353a79058"
        },
        "item": {
          "id": "c089d737-24db-4105-897d-78bb9c6a9af2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7500bc48-c163-42f6-8ca3-e773f2d3750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f18be6-2c9f-4791-831d-af27c186122c",
        "cursor": {
          "ref": "83a4d90a-e6e0-437b-ad55-4a6bb8ddb7e2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "39064245-a2ff-4553-bff7-f44b12567499"
        },
        "item": {
          "id": "99f18be6-2c9f-4791-831d-af27c186122c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7958d6ad-f622-4c32-993f-16579de25d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56343f67-b080-4a2c-907d-3455daafebe4",
        "cursor": {
          "ref": "a8e81d18-96ed-417a-a428-9e569322741c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3874f810-88c4-4c8f-88c3-6b3996f93dd1"
        },
        "item": {
          "id": "56343f67-b080-4a2c-907d-3455daafebe4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a9d2ca61-1289-4470-9375-f7977142b3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5481fd5-b449-4f6e-830e-2837824d76a3",
        "cursor": {
          "ref": "7cee4209-e2d8-46aa-8e9c-fd2a028282af",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4cf35877-d76b-42b3-ad6b-585a075c151d"
        },
        "item": {
          "id": "e5481fd5-b449-4f6e-830e-2837824d76a3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6ec1e60d-5b17-47b1-a549-ba2fde6a43ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285d694c-2ec1-4288-bfe7-53ed3890373c",
        "cursor": {
          "ref": "9e3bc62e-b17d-4f3c-925c-9fd497b3a3a1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5b122e14-dde9-4363-8a32-29755d5da552"
        },
        "item": {
          "id": "285d694c-2ec1-4288-bfe7-53ed3890373c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7124367b-86f5-47df-869f-e964fe3555ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0189f3-4147-4bf9-9032-dd778a7d554a",
        "cursor": {
          "ref": "368b13ec-8112-4b09-90a9-38107103f269",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "26ab8fd7-5a9b-4d32-bae9-e73e7777ae78"
        },
        "item": {
          "id": "5d0189f3-4147-4bf9-9032-dd778a7d554a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "afb41724-f4e5-4b74-87d4-0b70753ad0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa11d95c-66d9-42a6-b793-398e4fd3a329",
        "cursor": {
          "ref": "000b87f0-a578-4b83-a423-c908eebf8b12",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "36a02d84-b583-4d6c-9341-89773a66fd52"
        },
        "item": {
          "id": "fa11d95c-66d9-42a6-b793-398e4fd3a329",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f85a0c5d-4860-4832-826e-54d43390baae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276054c5-278f-4dc2-ada7-a0caa9193d70",
        "cursor": {
          "ref": "5e369ae7-d4cf-468f-a3c4-5dccfeb1ffb2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8d356f1a-39c5-4534-91cb-501b2b79eef8"
        },
        "item": {
          "id": "276054c5-278f-4dc2-ada7-a0caa9193d70",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "283894d4-037d-4fc9-a72f-27fc4bf8f1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb3229e-3813-4576-b6ee-37f669fc21f7",
        "cursor": {
          "ref": "faab6e69-1b92-46b4-878b-9e73f92bec7b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "24fa8e46-e801-4490-8e8f-2b45fb7eee03"
        },
        "item": {
          "id": "ceb3229e-3813-4576-b6ee-37f669fc21f7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "58e84936-8ef1-4a4b-aa4c-2ca20ee70877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53279238-5609-48c1-8f97-2ea2ea157144",
        "cursor": {
          "ref": "192c0659-4b33-42eb-878a-abab821a1963",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "be459579-9570-4195-b79b-d37d10a7b0ee"
        },
        "item": {
          "id": "53279238-5609-48c1-8f97-2ea2ea157144",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d2dce407-9dc1-4171-87f5-ff676205e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50109c64-7771-4a8e-9416-80905f5ccfe3",
        "cursor": {
          "ref": "a4375ec8-046a-48ff-ad25-fec9a37658ab",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a5e73062-3294-4b9f-8dd4-dc8996baecc5"
        },
        "item": {
          "id": "50109c64-7771-4a8e-9416-80905f5ccfe3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b7e67e21-568c-4c02-9bff-646b3ae70084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4038c0-131b-48b3-aeba-b7e71a39a7e5",
        "cursor": {
          "ref": "20dfdc69-7a12-4434-9228-cb0772483c4e",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e52ed849-4abd-4bd4-9204-5e09ee52a6af"
        },
        "item": {
          "id": "3b4038c0-131b-48b3-aeba-b7e71a39a7e5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a7abb611-bf37-4b6b-9e01-ed8bfcc11043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c122d7b4-3d2e-4742-8147-addaf670796b",
        "cursor": {
          "ref": "db053cfe-44ff-4582-88d6-a6811edeb979",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7dfef585-4034-4025-9666-1334263123a9"
        },
        "item": {
          "id": "c122d7b4-3d2e-4742-8147-addaf670796b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "403f95d3-9456-4f9d-905b-859ea373a4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf3d736-88f3-41cc-9929-ec380591b0a8",
        "cursor": {
          "ref": "25afe878-f19e-4241-b758-0ca68fa1ff1b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "19ef6a35-ba29-40f9-bc9a-61ecdda62763"
        },
        "item": {
          "id": "fdf3d736-88f3-41cc-9929-ec380591b0a8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "65256bff-0743-4487-b4b3-422f98080c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082cb84f-46bd-4a50-bd12-28e7c62a5ac8",
        "cursor": {
          "ref": "d113441d-c381-4385-87b1-906ad923c04f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "48f3ddd7-97cf-4318-b848-2a58e5f93c0e"
        },
        "item": {
          "id": "082cb84f-46bd-4a50-bd12-28e7c62a5ac8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ef6c2415-49a3-4a72-9370-30dc96ab89e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019c2f02-1873-4906-93ec-9ff9ca2c3592",
        "cursor": {
          "ref": "3cf5723d-85c5-4508-bb86-0b607ba37bbc",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "835da065-a575-455c-9723-afe4550209de"
        },
        "item": {
          "id": "019c2f02-1873-4906-93ec-9ff9ca2c3592",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "958dacb6-3397-4149-93e5-53fe1109b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6386863-751c-453f-b5de-a9c8064ebea9",
        "cursor": {
          "ref": "67eac6b0-e2b2-4199-b940-23a42c9fef5e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "45e387b3-31cd-46d9-b45d-a1c0ef63e869"
        },
        "item": {
          "id": "e6386863-751c-453f-b5de-a9c8064ebea9",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "af8ab25a-0bb4-4fcf-8a36-f338588f7c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88365f9-704c-4c67-90ad-1e3a0e603b45",
        "cursor": {
          "ref": "4a86bf7a-f5f0-41db-bdd2-8b1d83a7ab83",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ab5734db-f0ee-44d0-b7c6-b7567b9fbbb2"
        },
        "item": {
          "id": "f88365f9-704c-4c67-90ad-1e3a0e603b45",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "02446a41-ad8f-411f-88ed-50eac89c0996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1380bb-5b18-472c-96d0-e7a1bf78ef96",
        "cursor": {
          "ref": "5482e619-3784-4714-a2a9-b2ebb9ca26b2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0a9a143d-2140-451d-9174-c493f07f1561"
        },
        "item": {
          "id": "fe1380bb-5b18-472c-96d0-e7a1bf78ef96",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8bc3968f-5e71-49aa-bea5-abe241be1c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055d6f6a-a74d-413e-a9e3-929614adc512",
        "cursor": {
          "ref": "199f1024-d4a2-4308-877d-d6b0be3b4fb9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3ed462fc-4971-4b13-b91e-10a00cf3f025"
        },
        "item": {
          "id": "055d6f6a-a74d-413e-a9e3-929614adc512",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6f47c983-43bd-45d2-8daf-5efca6d23ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eaa69b-1677-4beb-9f23-c8723e87430a",
        "cursor": {
          "ref": "8f61f3ed-7ac5-422c-ace6-734bba42ae43",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "05fbc301-9f82-42b7-87b6-7e9f4a212a29"
        },
        "item": {
          "id": "45eaa69b-1677-4beb-9f23-c8723e87430a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fb3046e1-26b7-4a0d-881c-8c0550ad7554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4236eb9a-efc5-47bb-b90e-3e47b697c612",
        "cursor": {
          "ref": "d8750273-d7d1-40dd-a888-6ba045a6e2a5",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bfe413cd-3f87-4f84-9733-38c134724cbb"
        },
        "item": {
          "id": "4236eb9a-efc5-47bb-b90e-3e47b697c612",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6372ebd3-565a-4af5-a21b-836830d6994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e149ca9-7b3e-4578-b9cf-d67857a32e39",
        "cursor": {
          "ref": "796827ac-9065-41b0-b096-a398776b27c9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "572e6b6b-cc08-4326-b665-2288ac0cf2c8"
        },
        "item": {
          "id": "1e149ca9-7b3e-4578-b9cf-d67857a32e39",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0572be13-62a5-4e25-9b40-944f9dde8a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eb061e-83ee-4730-b952-42f48290de9e",
        "cursor": {
          "ref": "84101398-13dd-495d-9c6b-b21b6b5ed34d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "99c7425f-68e0-4a95-9c27-4363e43e292a"
        },
        "item": {
          "id": "30eb061e-83ee-4730-b952-42f48290de9e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "12c8b9be-ee8e-48aa-9095-3205b998f247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4f5ee3-611c-47e6-9815-cfdc401f75ab",
        "cursor": {
          "ref": "9c5e12dd-8a7e-4309-a351-2838153938dd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4e11b74e-4e9d-4af2-9273-1dd59f9af4b3"
        },
        "item": {
          "id": "cb4f5ee3-611c-47e6-9815-cfdc401f75ab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "746a8388-2fc5-4d33-be20-edcfee1cac4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911a70d4-b0bb-4360-8289-118a17851742",
        "cursor": {
          "ref": "63b4faa7-9df7-4f4f-93b3-9d18a6ba02a8",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5ec79a66-d5a3-4d12-a189-22f301bbd660"
        },
        "item": {
          "id": "911a70d4-b0bb-4360-8289-118a17851742",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "86eebddf-0a1e-4827-9bb4-a9837ab99df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ba6027-4687-4500-98be-a644c8b0a456",
        "cursor": {
          "ref": "9d7eb9d1-da9b-40fc-bf8f-428172245f97",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0b5cbd0e-b632-4632-af58-674f9627506e"
        },
        "item": {
          "id": "c2ba6027-4687-4500-98be-a644c8b0a456",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d8f13dc0-999d-41dc-a6c9-b600ab819f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76441e72-9b02-4f10-810b-26d16fbc76b9",
        "cursor": {
          "ref": "9cc569b2-1b08-4da7-a8ac-42696abc11bc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b75d2de0-f976-4bef-8d84-deddbb055b4f"
        },
        "item": {
          "id": "76441e72-9b02-4f10-810b-26d16fbc76b9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a6fbf8ea-c71b-40bc-8154-3b250d26d748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae551fe7-b196-46d2-bbee-2ae403b589fc",
        "cursor": {
          "ref": "6f23d45d-a6ff-4ead-af64-a8a72b0a0b5f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c587994b-c29e-4daf-adfa-ff0d9147988f"
        },
        "item": {
          "id": "ae551fe7-b196-46d2-bbee-2ae403b589fc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d264dad0-36fd-4828-8184-ebf8cb6ff703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5127e53c-30c9-4e3b-9099-367cc8c5f96e",
        "cursor": {
          "ref": "fe4fa9e2-3f6c-451b-bb53-1d5e50d335f9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a65b2f03-e119-4d6f-b693-ba42429ef52c"
        },
        "item": {
          "id": "5127e53c-30c9-4e3b-9099-367cc8c5f96e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c41998ae-8c49-4a6e-b6d5-a3a6ae647edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d56bd9b-22ab-4ee1-b279-ebd98ce04684",
        "cursor": {
          "ref": "6a5fdb35-e8a2-435c-9627-f1836b46845c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6139c3ab-55f8-412c-be55-5e31403ac160"
        },
        "item": {
          "id": "2d56bd9b-22ab-4ee1-b279-ebd98ce04684",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c296b468-8bfa-4c12-a46b-7e7e68ee37cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b75e31c-465b-48da-8035-098dc2278790",
        "cursor": {
          "ref": "205dedc9-e78b-4c92-b4f2-dfd015a3285b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f0e4c94a-8860-4f59-82a4-96aafad54608"
        },
        "item": {
          "id": "0b75e31c-465b-48da-8035-098dc2278790",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "de0be2fa-8f04-46ff-a4ec-ba0e898d05d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87ced96-15cf-463e-8772-a3cf55cc69b0",
        "cursor": {
          "ref": "307a6dcf-f72a-42e1-b0c4-37d3f36a84ce",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "05a5876c-4c9d-4491-81cf-c907350ebf27"
        },
        "item": {
          "id": "a87ced96-15cf-463e-8772-a3cf55cc69b0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6f71ca89-a8da-4970-99d3-dc03ff9e3f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ab5448-fca5-4db7-a3e7-0c570f028b91",
        "cursor": {
          "ref": "f34db3ff-b178-4dd2-abe3-49d3e81bbe54",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fadd5d8e-660c-4690-8346-14158f5162b6"
        },
        "item": {
          "id": "99ab5448-fca5-4db7-a3e7-0c570f028b91",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "63f455ae-4034-4055-a08b-7440eefa6ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ccdf67-e387-4d83-9ec5-96de53528121",
        "cursor": {
          "ref": "7a16e031-8144-4dc5-a05a-d189ef929057",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4b73d49d-474a-4313-9b96-c9603bf4150c"
        },
        "item": {
          "id": "d7ccdf67-e387-4d83-9ec5-96de53528121",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2b21881b-9a05-44ae-bb61-6083dfd551b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed892f04-d040-4b90-9256-3b8857985e37",
        "cursor": {
          "ref": "51588bd9-a5be-4a10-9253-661e429b0f7d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9216728c-0c53-4c34-af7c-31b44d4f39b6"
        },
        "item": {
          "id": "ed892f04-d040-4b90-9256-3b8857985e37",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5a4405c7-a1a3-432b-9e06-d141b417df62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd89cc5-82ff-48bf-b2c8-572309e87168",
        "cursor": {
          "ref": "80118f25-d3a1-4dd0-9d29-f301de1a680a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "753aee38-2d4f-446f-8916-9ad5944e8e4f"
        },
        "item": {
          "id": "bdd89cc5-82ff-48bf-b2c8-572309e87168",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "865e5137-3930-40d4-92b3-1157d3a1b389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bbfff6-9889-423f-989e-103822e896e1",
        "cursor": {
          "ref": "67a12820-8f23-4575-8776-8395749b1fce",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2d11d212-ba58-400f-aaba-21eb51765c27"
        },
        "item": {
          "id": "16bbfff6-9889-423f-989e-103822e896e1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "58c46952-0161-4bed-825b-c607b9e64846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26448212-0cfe-4bfc-ad0e-2a35e24228e7",
        "cursor": {
          "ref": "8f5b3356-21ce-40fd-b5a6-8d0bc7ca64b8",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1beecd0e-f6b7-458f-b213-2efd8517b9c9"
        },
        "item": {
          "id": "26448212-0cfe-4bfc-ad0e-2a35e24228e7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8d65dddd-b0c5-4b1f-9449-4d54a6c6096e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df11ee2-e65c-43a8-a67e-d8dcbb0afc08",
        "cursor": {
          "ref": "03db279d-f00e-4748-b06d-bc988b0ff650",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "6cb5e416-8c4f-4f76-b4a3-7959db3f0dd5"
        },
        "item": {
          "id": "4df11ee2-e65c-43a8-a67e-d8dcbb0afc08",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a4dcf1ba-3d39-4d12-8f28-0eb5d4f81540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00578601-8a2b-43e7-b250-96774b9a90fb",
        "cursor": {
          "ref": "41f92399-5ae2-4074-a421-2173c825512c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6d9bb891-31da-42bc-b6c7-fd9289edfe2d"
        },
        "item": {
          "id": "00578601-8a2b-43e7-b250-96774b9a90fb",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b840f719-bd9e-4c3d-a270-0266ed281845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ef232f-229a-4107-a806-b020c2797edc",
        "cursor": {
          "ref": "fa8eb576-7edb-4fcc-bc3c-d3cf8b7a94ed",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bae84186-ed8a-45e2-9d56-2885bca4a5c4"
        },
        "item": {
          "id": "52ef232f-229a-4107-a806-b020c2797edc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "23953734-6b6f-42aa-bb25-6a501cb90ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f518f984-fc62-4cfb-82a1-aace7e7b1d41",
        "cursor": {
          "ref": "a538e941-9266-4f9a-b916-f908dd85ee49",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "71734b20-4785-488b-86b3-5c10494ddac4"
        },
        "item": {
          "id": "f518f984-fc62-4cfb-82a1-aace7e7b1d41",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5babed66-7789-4c78-8a7c-4c23b22c4dfe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfc4fb6-5fc7-40c9-b878-4f044fd44bc4",
        "cursor": {
          "ref": "4961c38f-6c0b-47f3-8762-ad8ea0dcab4a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "98e05cf3-e137-4d7a-addd-8668489a6f25"
        },
        "item": {
          "id": "3dfc4fb6-5fc7-40c9-b878-4f044fd44bc4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1a574ac7-8d4b-4d76-9ecb-5ac6c7dc857a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b784e1b-1e9e-43fa-b5d7-b250c95f10a1",
        "cursor": {
          "ref": "6e80b745-0e80-4980-bc39-ef514b792291",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1710aac6-4723-4f9f-b32b-c21e1c1914e2"
        },
        "item": {
          "id": "6b784e1b-1e9e-43fa-b5d7-b250c95f10a1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "81f57710-cb4d-4e4e-ae73-e04645ec60da",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a753a79-2600-4932-aa44-21fe40abcbe5",
        "cursor": {
          "ref": "8e8fe969-d983-4563-a95f-c6adf27e0fd4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ee7f5098-b516-48b6-a64d-735fe05717fa"
        },
        "item": {
          "id": "3a753a79-2600-4932-aa44-21fe40abcbe5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d66bdd21-9b11-40d8-a40d-3d05dd506a1a",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "111ab998-9728-4e89-b620-586c9296b2af",
        "cursor": {
          "ref": "5bb0616e-0717-4071-982d-9a6c35fa381b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7a4561e3-fb4f-4fe0-ba88-32277ee2598f"
        },
        "item": {
          "id": "111ab998-9728-4e89-b620-586c9296b2af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab445e7f-c068-4593-ac4d-2ddbd680e86f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111ab998-9728-4e89-b620-586c9296b2af",
        "cursor": {
          "ref": "5bb0616e-0717-4071-982d-9a6c35fa381b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7a4561e3-fb4f-4fe0-ba88-32277ee2598f"
        },
        "item": {
          "id": "111ab998-9728-4e89-b620-586c9296b2af",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ab445e7f-c068-4593-ac4d-2ddbd680e86f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8747fbdd-4864-4713-86a5-b0d59821ddf5",
        "cursor": {
          "ref": "be582bba-9f8c-4e0a-8125-84ea67d3a82e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ddabd621-5dc0-4b5a-82e4-442328e49f5d"
        },
        "item": {
          "id": "8747fbdd-4864-4713-86a5-b0d59821ddf5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2dfd83d-e71a-4700-89f8-9a4e18efbe2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290eb9e7-8d2f-4598-8012-c6dca429eb96",
        "cursor": {
          "ref": "9c890ace-b739-48fb-aa6b-879d3251e0b6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "81f5432c-c1e1-42f3-bdd4-0f1c91e00a65"
        },
        "item": {
          "id": "290eb9e7-8d2f-4598-8012-c6dca429eb96",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "05b3cddf-d5aa-41bd-ac5d-d2aef69bc355",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}