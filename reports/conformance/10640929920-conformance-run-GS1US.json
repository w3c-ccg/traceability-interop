{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "aedc6b66-05e0-4699-a0ae-33acd8bb054c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "081d957a-ac21-4800-9ae7-e153833cfb8a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01d3545b-cbfb-435e-b932-98f72a4dd02a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b94c79f-0205-437b-bc01-3a4c9beccb2b"
                }
              }
            ]
          },
          {
            "id": "77c86816-4fff-460c-b427-9d60a4aee93b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e467d487-c8aa-4ac1-8e62-a0288b8588e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ec5c8ee4-7ede-48f1-858f-883ac75e334f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "da679ce6-65a1-4d1d-a5c3-02392ea001b3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9cdc34d7-8197-47ee-84d0-5d3544cea505",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96f3f78d-a0dd-46f7-97b9-226b23f0f742",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23fa1309-d98b-420c-85ba-1b26faf8b1b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b951767d-f793-4b09-a917-9513901e17d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d737541b-934d-4be0-8682-fbdaaeb17a15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65a899f6-ac91-4fb8-8020-c30c968759be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f9741227-44df-45b0-a286-676732e74047",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f70085b5-318f-4520-bfe5-ac18554b6020"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1a14ce0-504c-43e9-aac0-c6528b0eae36",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4b104c9a-d709-4bc2-bdcc-a259d43b2a09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bdd1697-6604-445e-8425-2ce468df7972",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "384fcd5f-c48b-4baa-bdc1-044b999a12aa"
            }
          }
        ]
      },
      {
        "id": "f4b9c9a5-5064-4ccb-bf28-68976ea06ec3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1290a4ff-289e-4a10-9d80-cd78b9a44679",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b5f3fbe-c1c0-4f67-8f23-8fedbf409f62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5b3b83ca-6086-48e5-83b7-adebe5016ae1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997c467f-3785-492f-a0b8-0f18a36b116d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81060520-bf7c-468b-89ce-394859ebb3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d40a4f-ffdc-4530-ae95-4219c063de50",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b175a6f-e5ac-49d1-af86-adad49437024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55cf89f5-fd13-4add-ac23-942a4e50c342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d777d3-4a9d-4f93-9610-52678e53f1db",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1695dbe-a112-425e-ba12-a0631c2a8189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96fe657c-bfa2-4515-a412-8d99c513e2b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da369239-a0c6-4d4e-86ca-cf8580ed6ce6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9c123e7-88b4-4c1c-b0e7-54f7c7f5cf9e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2792db23-732b-4898-a52b-2a22e427d249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17f6e82f-68a7-483f-844a-494e38e27ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272f7e51-3057-429f-b9df-b6b3f3bf538d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3aa7aa-5178-4f37-98e4-539d9acb87dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5e41fd5a-82db-4dd9-9cb2-272e762eed49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cacea81e-f748-4c48-bf0a-9107b52bdfd6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f238b798-cc23-4ffe-8bcb-07b7e47e857c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "096df24c-4260-403a-8b71-93bedaf40394"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "983213c7-cffe-43b5-acec-f013b48027ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "13f912e5-a26d-4648-95a3-e174595d50df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "169f6b5f-09ec-40d0-884e-5b8efb9358c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8518400-2e7d-4ea2-8a0f-00f2f6edb561"
            }
          }
        ]
      },
      {
        "id": "a8638a89-9e0f-43bb-8d1d-9c54fe9b5a20",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f89bc94d-b307-4430-adcd-94bdf617e5d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76931e8f-add7-475d-b44e-6e14ffc69bbc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "693ecc4f-6ab5-4996-b536-a0e5727f4cf6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51029195-0608-4807-8eed-63464fda2373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f998aea7-38af-45a4-b7b8-9384373466c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96131876-8798-4b0c-bcb7-2487ac2fd900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26ab6152-13cf-48eb-bcba-221836bfb691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08aaf620-c78f-4282-80c0-8fc77f2290f9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60162ad3-4c0e-4ed2-b1e1-5283ee0eee99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9e4f1e-60ff-49f4-b19f-9111d6d1d0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19e4baa-beec-4673-a88c-35fb1ff1cd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8c1a7c-b71f-4fda-ba26-9d7aa2d3fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a20d0b6-77bc-4820-af0c-8f1b44541533",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd650c6f-eb98-4d93-bce5-b84095949d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d033cb2-f1d8-43a2-acf9-e7fc1fc4e367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd99ba7-eb51-453a-be6a-d794958749c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c349d1c-4bc4-4707-afbf-3aaac757ce19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d4b95b-f8d3-4d4b-9340-f1af94093e02",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51284f16-c03c-4ab1-a01b-ffdfc65f929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933d8409-0f56-4689-b9bd-3cebc91706a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8135ab-9b6b-4cbd-8c01-2d175bd48050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "443a78ea-731c-4d4a-a1e1-37d2bb7b32bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c8c743-3e4e-4715-a8ef-b9c910f97095",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d030ad-685a-4a10-8cd7-ccc4afb3eceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eabfeb-fb1c-4775-9fdd-f7158bd9a87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352f6aaf-cf04-4dba-ae2c-af0042904f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0ddd0e5-80fe-48fe-a12a-6efafc07ae77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7228c1ad-2906-4ff7-ac91-d3c2d2c7ff9c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a08e2a-ffa3-429c-ba0a-197cfc7bf6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d1b347-3eda-4224-b9d3-3332881d6a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e111efc7-dd4d-48dc-a45e-4dfaf111d6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0968dc80-98ae-48f2-bae1-dbe3bf2b004a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d133246c-97e0-4d91-9f82-f5dfaaafa6ea",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86bf9be-5c9f-4452-a8da-65865b0d92a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcb8f51-a4e7-43b0-89a7-57661f4bb9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c392f7-e8f8-467c-80f8-f66f2d43d8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16f7acea-2664-428e-80d7-1ab93bf74429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b06663-649b-4bf3-ad37-8b4503cfcc6c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67124137-8276-486b-9af9-1ffe17f3bccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aaf1a7c-0232-4ca4-93cc-2e2cc0b4f706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b2515-a74c-4b73-b0b3-2789c0b43a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90301d84-1629-46d7-87bf-1dbaece1502c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c2e684-26b6-4587-be5b-fb5f8d43ccc6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0019815-1124-4dad-93b3-bc040af61172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2850f062-9641-40e2-9ab2-d96acd0e1cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d450056e-44a2-4707-b9a4-723e3f9118c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d245022-6e18-4cc7-9845-aa919c7da6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5b0bf2-c4f3-48e2-b84f-29f6eefd388e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e8eb2e-b08d-4834-9ad6-210b80d7ab6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d12fce-0abf-4b37-b048-256089bea4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b185f8-028b-4501-b163-049539c8e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "763c6921-44e0-4084-b712-e5cafd692cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82124872-38b4-4ccd-ae54-44c94f0b0918",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8428ed-0fb6-4608-98bc-000503f96cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e9f2aa-171e-41c5-bba4-824832669960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1478f9fc-42a0-4e97-9504-332f5fee4d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23d27e94-cd74-43cf-81ec-8c601f495c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eaeaae-5f3f-422e-b2ec-09ef19b82fd5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c732ba77-c9e0-457d-9ddc-12ee2cbf0ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e61cf7-1f11-4b2b-a982-df5e4e4f4754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21ff1fd-dfe6-45d9-975e-cde3dd3a0aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee2807c0-691e-4e9c-8514-2e83f411183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e813da0-81db-41dd-8213-7cc6fffacdf1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6f4129-2944-49fd-ba7f-52ee4673df3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812106e9-2206-45f3-935e-0dbe8d876487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e3b20b-19af-490b-b8c7-f432ef2963c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26320d4d-2a4b-4130-8ac0-0e5fbc446440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6344e897-b841-4927-aeb9-2379487779b2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691200f0-7219-4637-8275-61cfd0cc79f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac8887e5-dab4-478b-8208-0c7ad83603d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5daf8e-8256-4981-8c0c-42d5d00dc3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2065b413-afdd-478c-aa4d-f538895800c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d8a27f-d1f2-475b-83b8-9e1a150c83ac",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d29e1e-5c9b-47f0-ae22-1a774f3ba36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106fd18b-37cc-4c61-a9be-b7569407b30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aed212-a2c3-4d8c-b06f-81adcb5b729f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3f8a96c-16be-414f-b209-86a80fdfe1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a0d046-7490-44c5-84fe-8ff6dd676450",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cdd978-d379-454f-a5ec-a770482f672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571cb14e-dfcd-4d08-9846-53f52845804d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51f2c95-2d20-4604-9e8b-2d32de46a6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73c6ee01-7ab1-4730-a5c5-d4d7d9f49e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244ef213-70c7-4104-b6e5-a4c7fb56758d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcdadf5-e809-4668-ac9a-a05b49205b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad54ce3-034b-457b-a9ce-14ea9e531a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45896afe-fbf8-4566-af57-27a699c2c672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4634b746-f96f-4a82-a12b-3a85811b3eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03399f14-d90e-4783-b56f-56620fe1443d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71333f2-f99c-4fe8-85dc-b504ad7c2b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85273626-4999-42c3-adba-66ce432716ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b46ca0-17db-461e-a123-61279760058a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e389f15b-d5f0-43d2-beb5-7793d7e4c142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e9c2e8-1853-4142-b391-b34961246d87",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0e6f63-0437-4df6-a54c-6676eeabe220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb647f30-5c93-4e41-8511-afd8e9b0fd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6807c0e3-c326-463f-b3f9-3ba000108933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "566692dd-b417-453f-8ff2-e6cd436533f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1fbf29-2272-4cd8-891b-31d7ffabe2e5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ea51b7-3d4d-4b25-a026-1d0fcadf4a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b3562a-f0bb-47d8-878e-570569e8205b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefbb5d5-41a8-4978-818c-1d467f19da10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c8b66f-7dab-4655-a2b9-c0d7b6cf9531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b149bd7-9f4b-4c41-b7ee-8bc40b30a790",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050ff66e-2ec0-495c-835d-d58dd2fc599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44453ba8-49ca-47d7-ab83-395381581158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d320ab9-6271-47eb-8d4a-0e346f44c3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "219bf9af-f62e-437c-b145-f19b3c2e59c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b819f442-1ed1-488b-b626-d625c4a16c64",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70289bd9-5988-4318-8079-d7370f750463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b686e1-2389-4232-bf67-c20037d96c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5d112b-c642-472c-a105-483b447bfd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "944be873-bae1-4145-a50c-d0fee2f4df8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f75174-1946-4056-936a-2aba8bfe9c34",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f46439-6380-4f47-ae38-65ab12ecc112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3b2d30-515c-4eec-a3c6-574138dd8b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8330e312-b827-4d15-9feb-1593ec4b0262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "451895a7-64de-4613-8104-93e64ceb6638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e061c14-f8f0-497d-abe0-c21fcb496a81",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8a8474-facf-4e48-a0a1-947745a1ea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e00eb87-4079-4b13-933d-3c1ba5620795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b38fea1-3531-4b84-8754-cd95b6c478d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2716df-82e3-4a4b-aeb5-95b1d719f510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65610321-c33c-4a9f-9bbd-de52d5c09c53",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3d2cc2-939f-4314-8f7d-5097d579bfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb989ab2-3674-4e45-9690-522c5050faa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d18d61-0b77-4998-aa5c-69d0dcdd6fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "faaf9946-110b-4327-9510-9b23f9bc2ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b798f1-cabc-490d-a024-a454407703bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63796edc-51a5-4d3e-a3b4-b5e29006e47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b47b8b0-fdbb-468b-83c4-97c5b980dae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b895a5c-cd70-47b3-8c0f-a677ec5a128a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87dbb7b0-c1b6-4303-b74e-c71166d073da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ac5501-636b-4aad-89ae-76bd29598b60",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a581e8b4-bb7a-4b22-a38d-c9ca1c59aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52bb4ea-da1e-428f-9ce5-f00e176f09f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25458a4-f112-454b-9ae8-af2cff2b0e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff47c3c-b518-4cfc-bede-c0da7a6cc745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115e035d-07f5-4df0-9069-66c72c01e725",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcde5b2f-f2c4-40fa-bf0c-cee13f1de6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a458b6a-abfb-4699-85e2-6b7b02d695b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0b7422-8bcc-4215-abe1-3d32fc5e872b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66513311-8729-4a2b-92f1-220a57a777bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0aa37b-0c17-44b0-8f58-bf49b825ae22",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c528f163-573b-45fb-afc4-1a3ac871b306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740b8f4b-0357-47de-86e3-b2d6bc47b0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272c4917-8a94-4fc5-a5fb-ccf2a8e9ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ac1471-542c-4785-a945-ea98299665a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151f44dd-e543-4e6f-8ca1-15a8a6c064b1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950677fc-f569-4a84-bcb0-f6416d1ff5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a213e2-1c24-414e-b335-4a0ef0da2998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d15b46f-66ab-4a15-b11a-2b0abe5a676c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "16441e12-e56b-4be2-af41-415c5a0bd635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3776a5-e330-4cb8-8d2e-5722b6fc645a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e709d59-3d44-4423-bebd-6414b1e23784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4821880-03ee-41ec-b647-98ec90493cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be85398d-dc68-43a6-900d-4c295365bed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b25e86a-72d6-4072-abb7-5388a32bbe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ddc5d4-1f59-43ac-86d8-1337507c7e86",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff74ae3-3eb6-41df-877c-cb13451574da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf51c40d-8d39-41f5-8a4c-22d59f7e49d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3784358-d434-466c-8257-e493476e67ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3188593b-542d-4e84-9753-5b5c6c331db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ad59c2-b906-4806-8b9b-271c76246fac",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b35f850-b595-42e5-85d9-2157c02e4c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9650598e-0392-4e24-b473-7a9c84091b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4a9970-1f7b-450c-bfa3-4e12f9daafe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc81f8d1-333f-458f-b47f-36f3f00436a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a61a49-c0fe-4525-a611-aa704249d6bd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc7ae21-512b-4c85-b48a-fccd5618563c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37658903-6509-42db-bb38-5c339820b165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ef90c1-dbe5-43ff-b8d1-cbdfb61a5bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3165d22-fb99-474e-92fd-717bf9aa3359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c650422-740c-40b9-b419-30cb759f8574",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f628542-04ae-4031-84b5-5984cbcd6ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128e2a89-ac6f-4538-bd10-9f6344f72be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d9990d-b2fa-4e32-ac16-e7448c2ef87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9af46a-46e7-4f05-b3e9-afc83b7ddb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c109a02-7edb-4dba-a2e2-ae452db87768",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f70b832-2ea2-44dd-8c55-f111cddb6306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34f992f1-0793-43d8-a5a4-ecaf38ac60b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e0a613-538c-4173-87b5-5c66bcac55f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7655d96-dd02-40b5-ad45-072f8ede40b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e901555-0743-43e3-bfdb-aa0a0e36220c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dea3275-ad5f-445c-b1bf-9e6bc05b75a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e461c563-92c5-42cc-a975-c4d176dde1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca940191-f2c2-45b5-8e5b-145a5518b761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58dba52c-d6f5-4893-8bcb-d4f785b4d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848aa63d-cd3a-4ec9-8a6a-ef7c3f3a4782",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aeaa6a-1a2c-4592-9379-3b06fe1041f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0df78c0-1b62-4a8f-92ca-6e2c36b59e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fd8d04-a65d-42b7-868e-0f5534ad1f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b617dff2-22f0-490a-9db8-7b876a510883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330df761-7186-4186-be61-4f853f8566d4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc6f5a5-8a17-4d29-9045-b6b722df7142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ad67bf-1dc2-4b9d-9515-fd6927494a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0dd7d7-ea60-437e-87a6-fe6d121d1d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "468f407f-a7f6-4a60-a6f9-32e1171f27ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0ab2ad-bb1e-462d-804e-6a3472f11501",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab630cf-d860-4da8-a4a2-7b6355db88bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f555092-8473-4d2f-86f0-477035bdbdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dc3993-6daa-4822-88bf-569e48b54a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd418607-9fc0-490f-ac7b-ae16a32cf482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e72e17-ef14-4579-95bd-378837475784",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e7d7a9-0840-4786-80d1-cdbfc876c234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c9aa58-d1cd-4f62-8220-b7448804bf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5ce0dc-f998-45c0-b91d-7f290692bad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c095a27e-9e19-47a6-baa6-7b641022a51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156c732a-a331-4209-aeda-239884e4a381",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cb9724-c4f9-4163-b45f-38170c9a51cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1aa3d9-af68-4f9d-a297-eba5c8b8c971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d1940d-65d1-4b4d-8597-cf520c99e340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f10534d0-ac8d-4ca7-b1e6-6f2466331e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cec3a5-dd65-4919-8890-0da144a29e08",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e377000c-8970-454f-862f-5f31e0bbc14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0ab20e-5cd8-45a1-93b1-0c790ea8958f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a385dce2-08b7-42a8-a2ee-039e805879b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74656d54-cedb-4f5a-a04d-1ca9e59f0a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2ac919-95c1-4060-84f3-a4185ec3af07",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1f62be-bb40-4a97-8629-6ca3e5d8b1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf39b5ba-8367-4da1-b006-4991fe072d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2380e5-447e-4ea1-9d4a-21d44a86980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "46875498-faf3-4bea-9a27-8bed1cd5e055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07835d6-c2ee-4da9-a3db-3043410befb4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a6db73-8d73-42d6-b304-c37a74f87c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0adcb5-6d06-4314-a892-5739e38816a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd065085-7cf8-424e-a885-b185785cca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b84907-063e-4a13-bff5-b38dae96e97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3b481b-3043-4396-b36d-f61de6ccf73b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb5aa2c-2b8a-4fdb-bd4d-2d4e360a5ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a54aa3-59c8-4525-b889-4ef1ca7e5a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca92f00-5452-4b2c-b38e-3b316bdbd657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "122f5aa0-6882-4f59-a7a0-c213a793aaeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f18293-68aa-4061-879e-9e94152b8b81",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c71f3c-bcd3-4ab5-a356-403f59a2470b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde89d07-c35f-45c0-9c21-d85420814aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf228ec-bf0e-4a6c-ab3e-3425ac5b6bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48570062-cf01-45aa-81a6-c2021a49849f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c6e9e7-eff4-4518-a583-adf9e5d60790",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84de6626-5d90-4719-a99c-b5724ab0d8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61272d68-fc2c-4226-a7af-8db3945d9fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82abc93f-18d1-4a0d-9cd5-21df89f79cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26ca5d62-a84c-47d4-8468-9435956a86d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b28b450-09cd-4377-9e17-c3eebe648ef2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43375b23-1d75-445f-861f-1908344f28a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64de5338-71d4-41be-8239-9f129d4afea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c00ea58-09b9-440a-a7c3-2f5cb388d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aafdc65f-2ad9-41c8-b172-d3d83dd4bb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af121c63-13c4-4b44-82c6-c16e171489eb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0be8d6a-9d89-4ba7-81c7-f5b5ec001d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c17cf6-647e-4e40-b108-dd04e93948b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19f57b6-8da4-4146-bbc6-ccb3c52c2899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a619f95-8224-4d0e-8fda-8516a2aacd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9be5f70-7067-4947-b6db-5a8a4a3d9d93",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17451911-1033-41c4-b840-250a7d0d4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b4c74d-02bf-4238-9c93-9471c754ac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b59237-f978-4656-a820-55ff11d0a7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7288c7d-ee8a-4b22-85ba-b91012dab6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523fa9b9-d496-4f61-8be4-a45ee9d301c1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15029a2-cce0-462c-8bc1-3df25e63f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f831108-ff10-46ba-82f4-cbb021c6cd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0016fd3-1b19-4335-a642-8b5f485daf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c88486-e9a0-4ea4-b20e-418d33d2cd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3269e8-8e36-4e0c-b435-164a917f840a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a692d37b-e2dc-4db3-b4fe-e3aeb979d89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe7e02e-d7c0-4be8-af1d-9377d25bd6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c2f2ee-a16a-41e2-b2fd-cbe6e708800c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53742010-3984-4c42-80f9-f7e7f064bb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f753c459-37a0-4af8-b5a3-009d32b9c399",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae29d35c-dfdb-426c-bf4a-2d939b53b043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e87bd7-448a-4572-82ac-203a3842ba2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114942ca-fc3b-41ec-a0e0-f5d4ea0901ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcd8f05-072a-4983-a11b-96535a09934e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb79eaf3-f982-4099-9ab6-34b9026ea569",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeee063-64e3-4905-a509-ca87aa0fe55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c15c9b-a187-4bfc-aa9e-1329af7bc978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbc92ff-46bc-4ecb-88df-7a67532a82f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f73a375f-0930-44f4-9d75-b5f39fd992a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900c0b81-2151-4e48-b3ad-3197e1bb88f0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcd1412-a088-46ff-a149-a8077ead5051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d60b33-84df-4677-aa3d-c6b64aed7b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b224543e-4c54-42fb-aa7f-af01e65b427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "79bb9a5d-2923-4d9b-a165-c3ac54d3b1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64240096-ffe7-4f6a-98c0-f1aaa2eeb32d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1065a26b-3821-4856-be10-36b574248d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe56f9db-1abe-4ee1-a30a-1bc43a4b7541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76af0aa-1fe8-4443-91be-d8ffae1b1297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d066247-4234-468f-a991-38b277ade479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8e93fa-4cea-4594-9a40-dfd5b3147eb2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9d9ed-2403-45b3-b63c-2512aa03e207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed76ec4-6f25-4208-8840-fbe7451ab01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba32f0-4e82-4efe-bb60-a51c20811218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2e1631-1392-49b4-bfd6-21d0a54f5b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ea3043-0313-4bd4-a36b-6276b55a8412",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e2c40-f136-418a-b5ad-f1ec65e902bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef48fb61-56ba-4bc8-bb6e-8c108cdd6a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5640b2e5-d526-430b-8d33-04a6de32ce1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91a366c5-5113-4dfa-a41f-60d4d7bb8a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197444c0-00e0-4af6-8cf7-82dd825b7a9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013500a8-2733-4230-95aa-6374ece59a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c52370c-59fd-497b-91c2-8653b5cf8c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae21c70b-c129-47ff-9afe-1a468e93e659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a5fcf2-60a9-4ef0-93cb-e6a0e00d26f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a2511a-a813-402f-b71a-a95c087cbed4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112106b6-f543-4465-8b48-1a87c492959c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0faa8823-2ea7-466f-a96b-b4f4af0c4fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279b402c-8db6-46d4-bf22-33c9efdf0247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aad21ee4-56a5-48a9-b600-094603b8d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf9deab-7d4b-4238-a4e8-911653e71a84",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947b2751-9acc-4844-af8d-49d49e3afe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f535b326-9078-451c-b3d2-e93872b9ff02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6156b2-af0c-4a43-872d-33843bf1a155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e81009-3210-4a22-803f-998284704ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ff2083-1655-4fc3-93e0-51e3930299df",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa5d68a-20d5-4310-b172-ffb25a830fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f268c338-69e9-463d-aa88-28001f08cf34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2870f255-aa99-40bf-b349-d5985c612a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9145e5-3070-469f-a44c-4d3945786848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb8aeb0-3b11-4beb-a4f3-6e734b0f0ca2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba00b392-d47e-4d05-abad-1d91bf45ef68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d601a3f-2fc7-4f01-abce-7472ccf0995a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa4d051-ff6f-424d-9c4c-18083fad1a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37afd29-e8f3-4016-aca7-1f390d8cde00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c883d4dd-e475-452e-a4ba-e25013656bd9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d88818-d657-424d-880e-fd1523c90a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac58d4c-274c-4374-95ad-0663df67a0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1672a1-4208-43b2-aca6-c88fba92775b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e416be83-1fe2-4de5-be27-dff9d6d706a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893f9c69-41a4-4bc9-90e5-a15c6aef15f9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f2fde3-cd88-4586-835a-61c39ae24343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ba7b84-70cd-4158-9c5f-21d08d97ba56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e46f9f3-735f-42a9-bad8-2cd224a0269c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1264b0f3-c4d6-48ae-b68e-2daaa4b5f5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e160f8b-7d57-424c-b2cd-89e66b33c68d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2527a2ec-375d-4baa-af77-1844355345dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6553b33-a29b-4de6-8351-bddecb0b64b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b3e6f8-1051-43c4-9bcf-ab617457af7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d501e76e-4402-42fc-bd50-46b7cba1a6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552abc07-5871-487a-a6ea-bc66d3bc227d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b79cb15-f9f6-4c0d-a990-a9edf89857a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74dde87-cdf3-433f-8106-b82fa89ed755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167221ad-c4bc-4882-8279-fd3c42d41180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "410efc8a-24b6-47ce-a414-eda72a12aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f17d1fd-1a99-4056-8cd3-b5533a606cf4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66fff76-6841-41b7-98c0-e5f9964877df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad90941-3eeb-495a-825c-8832f4335b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6808a62-770b-421c-834e-69ad0a0b3bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8effbbb7-4374-4279-804e-0f56453e2316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fed053-6396-4083-9900-f19526616936",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6ae0f9-3810-4c1e-ae55-c5accaf3e14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69e9034-4965-4173-b15f-1c39df7a8e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb104ae4-a510-4674-a4c1-63a735d8321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf2a8ea-3eb7-4f51-8bb5-f62acc339149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05946756-85c9-4ba8-8956-1dbf54803bd7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d6cb81-372d-451a-9084-c061e89a6387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e3cf6b-44de-4512-a112-2cd4d648b121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17270390-b8db-4310-b0aa-a889b6703297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "432cb2a7-041b-444a-b80f-03fd7dc4fdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc04f9f-60df-4e3b-a0bd-61c2ae491bd2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dd8397-2f07-483c-a1e1-eb6243d00921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1511e8fa-18fd-427e-85eb-7a9bd765654b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a0eb9b-d366-4ce3-b6df-fde1d3e71dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2410ec35-7f7c-41cc-be6e-04a95e64e94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a91bb20-1874-4520-bf02-32b7568aaf8e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7878f39-d2b7-4f11-be14-f2a55160434d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e7f319-2d20-405c-8faa-f6887d26c4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107efa9c-d845-4d29-9a8a-5c7be03b8078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "420470b9-f1a2-4aaf-83a1-a457f24043a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d357ccaa-f08f-494d-9fee-df00ff688855",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16770543-8724-4196-9add-3848622538d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65001c1c-1051-430a-965a-6bae93779c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84850ef2-0853-4db2-8331-9eac1b6e9c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c83ee526-9535-44c7-afeb-02aa6acbb5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d78ede4-02d1-4f37-bed4-0942c78b5aef",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87de4038-c9d7-437b-9459-f3938c1b97f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1253a8b7-b46c-4180-862f-043e7beb9c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30e5f6b-3139-4ebe-9c97-3c6462fdadd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30cf216e-fbb4-4ab2-ad2e-fa59f63d368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b18ff65-a494-42e8-a55f-03b753fe1253",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0634891-de14-457b-8343-d4f306d6ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e241931-56d1-49dc-b23b-2b05380cdf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9d5def-ff1e-4bec-babc-20df9be43892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "821c51f5-e0fc-4f59-96d7-5c8ea59fb648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fea9cd9-5863-4b2b-a74b-d4f0b4e21f50",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f559d5d-b8d1-4a43-ba30-0415dbece38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d742a2a-dd6f-45ee-b6a0-78ee76db5b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fce0d9-cc1d-4576-b865-6939659fb90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff868f3-f677-47ab-ac08-bb112a5b4e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37731556-c984-4bee-a91c-142900017a14",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5d5860-cda7-47eb-bfd9-47fe9d939b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb87d0bf-44c3-44c7-b092-c0f9d8706669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e5f573-616f-4ca4-bfae-124ccf54538b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a566b58-e20c-4eed-813f-5e08d3986923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bbaafa-66d6-4d10-a00b-1066b5d541b0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1d56a8-3e09-4ad1-85e2-358c7bb0da2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1035b0-f095-4880-8acb-7413c22f08df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f23dbe-d558-4762-a576-a0c203cffe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62d4b04-8ebd-4664-bb37-31183b2a8b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430e44da-d5fb-476d-9c48-5838da415fd3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d240d9ed-5376-48b8-87f7-2c7e2e1dddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39628ad4-e109-483b-be14-4abb67642ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29707bc3-1df6-4802-ba22-e2cf3196905f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed92baa9-0fa2-4022-a7d5-45c75c07edb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea9696b-8d17-4ca6-b83c-fe7d58f37ca4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9c2828-9d32-4555-8153-41a81aa90ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01ab91e-b85a-44b6-b67a-68bdd58fce15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec373af8-e962-4008-a94f-d88bff220063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "403a0f39-1bb4-444a-ac86-bb55e63c6d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b215143b-0386-4784-b115-79055fab4b1c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd13cc4a-9dd0-4ddf-b1af-640283dc3307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35294d1f-1bc4-47c9-a8b9-230687683d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfad902-a696-4c7d-bbec-20800977cf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe2e052-fd52-443f-abe6-1819157b76b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558f2311-27f3-455c-a47f-e2390ad601f2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074d6635-750f-4636-8def-4c4ef8a3d047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38637685-5a61-4194-a199-f3b973d4fd18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc26f32-f4f4-4736-a3c0-5e9fe68b7ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e363a359-bf01-45a6-a730-738565379961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ed76a4-28cf-4e3c-b7f0-866cf5566976",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dac21e1-d8f9-466b-89e0-64f370ba257a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935a2d1f-576c-49f7-af65-e82fdb6ca3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad4ffbe-f128-4993-9ddc-297d3330c897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce36d09-f91d-4bca-95e9-4fa0a44e363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9721589b-cf12-44a7-a6a2-87feaeb988be",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdf4774-06fa-488b-9581-c518fb69d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76cfd0ea-ba3d-4664-a8e7-9959314d6413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da993cc0-5da7-4691-aeb3-ca1c3250db25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c98b66-f380-4ca5-b965-6cbdcb78ce3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa28eec-b1d2-4cca-a92b-b6362064d517",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25fd8f0-a61b-4819-b3af-31ec17db3036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99f75e4-d7f1-4ece-b7cc-5de0c39428a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97679f6-59db-4ccc-b4bc-5fb518d59a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "981288c1-56e1-4834-8b7f-34bb738f9c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6314979-0371-4b7e-86eb-20f3575e392a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf17038-b32c-4970-9b33-c6ce9496ba67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c539d66f-020d-4d4c-8513-edaaf054b4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cf6099-0797-4f57-adb4-c8f5b812142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d87af16b-a31e-40e8-88da-29455d622082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce30091-da85-4d24-a89a-2e7463b3e6a9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d6087d-4f54-4eeb-8d7b-67673b132dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46de2aef-c79d-4fee-8b09-651964e7210d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfb55a8-02c9-4c4e-b4be-5f635a1a73cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2f4f34-38a1-48d2-b779-495bac6f0ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f78005-a502-440c-9561-7fd19e0c2fd0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d6c776-b154-488b-927b-6220406cdf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae28878-e8b8-4316-b1d5-72f358bf0b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac05b938-8f8a-421f-94c3-cb05739db03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5c76ed-93db-4b1d-852b-8aa82b4179e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b7b429-193d-4cdf-955b-9a3e001c6fe3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88be1799-64a0-4269-b27e-6f88bc4e493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88588cf1-cf0d-48fd-a2c6-92eb867049ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782c5c47-6586-4d9e-9731-56e752f5940d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "251c9acd-5c11-4267-9106-b7a3ce6fe83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd91528-dd46-4483-a479-e4909b0d7af4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d90cd67-5694-4719-bf6f-a456315be20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9471f4f-3f0e-44ac-95ec-62aa8292c76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef224455-3103-484f-b67c-7ab5d755e64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "10c7bb29-5660-4bbf-be16-9a313f208c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be4f551-db0c-4c59-9b9e-377d68f15358",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19094d2-354b-4ef0-bd9f-6a6c83b8cb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9565f3a1-eb61-4220-a8cb-a76e90a07507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00093cb8-ba18-4200-ba6a-927f8d89c4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6063a8b6-33fc-4e41-a059-1441ef02b974"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7590885c-ea30-4739-81c4-b6922088ec5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af4274ab-472c-4c16-a0de-811be0718dd8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb767cf7-f353-4436-b781-bbde42454260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75aa35f2-c179-44f2-b247-4c7a489b269b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa65059-038b-4286-a05e-5a4f1c448582",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b552886-a59b-4b17-830d-47089db5df36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fadf9320-c0d5-42eb-a800-7b2bf92a4e55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9dd9cfb-14b1-4b60-9e66-e2e45945d013"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13894b76-2c53-4b92-82b9-45c8830ee268",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d7ca7ba-9cfb-4c84-b6aa-cd658becde8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b293d125-679f-4398-8d3f-f729ce79afda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12363d8c-6877-4cf9-bbd5-19ff175875cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20fa8ac1-8845-4e27-9163-04e99ef7868f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9cec29e-d262-4e22-b038-e9d0bfc3e21f"
                }
              }
            ]
          },
          {
            "id": "cf37efcd-e687-4077-8f2e-2d9d811584f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2488a9f-2d3f-4c71-9172-bb84c03219e0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "389aec39-b4f3-4d45-8748-a76f6976e9cb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4053ed-2837-4354-90a7-e71e3db87a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "377f4b09-13d7-4c78-bc33-d0b803081afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ea0639-c32e-4a00-aab8-42808e17d68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b704d1-deb5-4da6-81d4-58c81be0ba7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77ff42f1-645b-4bbc-8151-e6a88388f69b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d4a094a-b47e-4c59-92a9-ac0513d3e8b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34d92cc5-5be3-4e39-ac55-85974d759388"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b376d661-013c-4d2d-b7e7-4ad9452db40b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed7c0d86-6457-4762-ab9f-e9a712d2ea93"
                    }
                  }
                ]
              },
              {
                "id": "1908dba1-dfc5-4d33-9846-3b2b4757caca",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0bd6ef8-0332-4187-9ca4-2218bd0ae613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2e69019-0102-40d0-9bbe-fcf7a9c5b9fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc9cfc66-97a7-4cc0-9afd-470a52e8eeb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03b16bff-ba3c-40b5-988d-f0214800c00d"
                    }
                  }
                ]
              },
              {
                "id": "748731aa-d8d6-478f-bbd4-24b7e462a55b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b30faff5-a8c3-4ec1-a352-958cd568f270",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ef7c74f-fd7a-4e29-9340-d3faa714ebf9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f1eb7db-f872-473a-b1ca-b0eb208b1e48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93eb86c2-b071-4b08-be50-005203c86436"
                    }
                  }
                ]
              },
              {
                "id": "5f28804f-bda1-427f-bfee-74d4e18b796c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1c19292-5f4d-4244-aae4-4cfef70eec8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "105f272d-b58b-4c06-89f6-b52f93a032c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d88cc40c-68c0-47d6-b271-18ad5d18f675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "385dcffd-f65c-47f0-8cb6-8676825f51a0"
                    }
                  }
                ]
              },
              {
                "id": "8a1ac567-0fbf-4bbf-9bcd-5542dd63e0e4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46e8d75e-344a-40cb-bf3d-0ec24a89d1c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ebe95e7-081e-446e-82b8-d0c99ce99a3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca823366-c9f3-4c19-8809-88840db5f328",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "05664ab4-9693-445e-a41e-cfce653976c9"
                    }
                  }
                ]
              },
              {
                "id": "ec015f4a-b97c-42bd-ae07-8a3a359d77dc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "277578cb-b78f-428d-8ca7-f99ac92e4d0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4eb7145b-f66e-4e05-9969-3e134baf687b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd357539-d64b-48d0-a9d7-ccc042d62ed2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3b86fd3-2e56-4c39-846f-34f3d24436b4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d72401dc-0e2d-474f-8f4a-bc42f5c77aa1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c332d35f-71f7-4a10-bd47-9a2a957fb025"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27a9d1bd-4b38-497c-890d-49eed60c9df7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f1cbbb7-545b-4104-b8fa-bbc9c7778958"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19353e64-48ca-4753-8a91-150cfd82248f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4a5a1846-6b6e-4fae-94cb-e3d0993f4cbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "866ede1f-dc14-4b38-aca5-269d820b0401",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e93b352a-b80b-43d9-b5ee-008aeb5bcb31"
            }
          }
        ]
      },
      {
        "id": "8d8a47ae-d650-4da1-aef9-c0f6a825b57c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a73b80b7-2303-4ada-8280-3afbea488747",
            "name": "Negative Testing",
            "item": [
              {
                "id": "222ce438-641f-4184-baff-9c710f3e1d5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f2279fd-f232-440d-8134-483711b1b25a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27d2abb-8841-4797-89b3-ad5b498119d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc42800e-9c0b-499a-a45d-0fcea4b31091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef5d3cb-2278-43a6-8f22-6b17ddb7c713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "844da898-e001-4893-bbc1-e6a5d70534b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378b9fe9-6d47-4a36-aa82-785b5ba1ca25",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c7fe76-f402-49fa-938b-d35223df4c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250d8575-87b4-42d9-8020-37657b700190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d264ed08-5a93-4478-b836-f96329cad7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b11cf3a-44da-4ebe-982d-c9e8ace858ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ed19b4-c0ea-4a09-8fb4-5e0ab1f4f9e6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d531895-7aa7-41e0-b81d-168577558478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc64be48-93a1-45da-9f3a-d396d4f49b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1282a845-967b-4f2d-8e9a-b167f56fc165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1afe54f6-110d-467e-8c9e-a8f8b12462d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1630aa-4e86-4996-b06f-08d89b777f5d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899d5a02-06bf-4c56-a037-c197b3ab5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35759487-8e19-44f1-8ddf-9cfa6b1b5d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782132a7-a18a-40be-86dc-8499d16889ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72fc5da-c03b-447a-812b-61bb61391a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc241bc3-3c54-4298-b792-3eaffc30fee6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931355ad-18e4-4437-9e80-5c4f474a0995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ff896f-8597-4358-8b0e-8e6643960ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570245a3-b47a-46d2-94a0-d47b7f7ef48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29405709-0a41-49ec-9619-6488912b8ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef85ce9b-aec2-4983-8735-395b22405f19",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e476a60d-9bea-4bfa-870c-f542532c6cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140f0c51-549f-49e3-9849-1c17559f3d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9189a529-949b-4c31-9e75-6e4b5e922935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "968538e3-6fba-427c-83c1-ac46e9661fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d421ee9e-c276-4bce-a2f2-1da80f877abd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992c3ea3-f7b2-4097-a653-18588e03c543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420186d5-205e-4787-9b2b-8437e139790b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e66d892-b07c-483f-939b-1b26d73eefea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e037f55d-21e0-464d-9d07-2dae23788715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869c0535-cd1e-461a-a748-9c09d04dc95a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243bc484-5831-4639-a28c-795fd20dc1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f691ad1b-4c17-411a-8dab-569941ddacef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1e8ebd-5ea9-485d-8885-f64666c6e075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37fd13c2-8666-42aa-8ae1-ca7dc7403d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ea081b-6b04-4973-a4d6-9209d6e66af2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8159f0-35f1-46b1-9977-a8280a8839ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec972ac-f8ef-4e5a-a354-b5689420d2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8e8be0-f4fe-493a-92e0-ed74b44d8f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f1fb72-7f03-40c7-8cc7-2f7db37cc717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb8140c-4dca-434d-ad67-e6253b71b64e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2b7a0e-d4db-4086-86fd-30e94fc9049b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96caa6fc-dd52-4ab9-ba1d-fa5dd4e4644b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc38568-948d-4bad-afb2-9d88aca4f454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6c5593-7771-4f98-91cd-7ea1a768df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8430028-d645-4174-bc80-57b0bc269df0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f97dbfc-8c3c-4db0-b9db-f6be1ab705b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1661b2-27f3-4217-9fc3-40e9c55dfafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5aa4ea-813c-48d2-9af2-3c87ecda4efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0207df-0922-4867-8d1a-4e2495f8667b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61e9a50-20de-421a-b282-36d002446cde",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b8ced7-c3ce-40fb-8fed-f5cdc36017f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca9af30-93a1-4a1c-a9d6-94d1c72dfc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad93f01-511a-4e5e-a446-913f06cd5843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c69a1af7-00fe-440b-a4c1-7fda9b523900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad170c6-1a58-4fe8-99a2-7828c116fc9d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33163161-d32e-4aa8-af9c-9e170e99dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d418c5e4-afca-4690-8203-e2dc2d6c0051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a7954d-09fb-41db-a9b1-3465ee3ea44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a5a9b3-6576-4376-8e27-abb3a8bd0064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3567239-8868-4663-be8f-bab563bd7bcc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0850aebd-7bc1-4f5d-b518-a01c70ea5e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccad2c7-8024-411f-8e8f-43e007026571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6223e65-3ef5-4401-a742-ef5c53f56a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d85074-e1a0-4157-be43-f926e53177f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa76b0de-72bf-4f72-bd2c-eeb3e7d39777",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a690ea66-1fc2-4e91-bffb-5fb0b719a54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6612fc3f-4cc6-4bbe-a838-f8d0867a8e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2d7ae7-156c-4c3b-8df0-4221b2a8acdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b8a18c-3f25-4878-ae74-2bda05bc8bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a118ee6-8f2d-4153-b7cb-88286b2ce54f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1deb420-62af-420e-8b82-84c35ca6831b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b121d178-6354-44db-8c5e-dff6f1791b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830073a3-d96a-4f45-97f1-2831a6b1b22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad84d29-8fb3-4edb-a4be-2c0053b6b467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68060a62-33f6-4cac-a50b-a4b26983b6c1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a821c8e1-35ff-4e27-a93a-f7123f004e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a337dfcd-bd57-4a3f-ab03-75378a32664e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b14b691-5781-4959-be28-6da6b3f01ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aeb3b90-5c57-4d6e-a925-a4e38de7a669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61de86a4-c419-4850-be09-bc661209e0bc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dded9667-3190-4085-b98f-31b5949c337f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd022652-94f3-4902-bb93-35223699aac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0201a8d6-b501-4d7a-9062-e7211e91441e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7827cdf6-182a-496b-8bff-488d547f3f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0153c5-4aa3-47d6-a1e5-b4ee7fde7671",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9826cafb-845f-4d54-bd3a-367094b5846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f9ba23-1b90-4f5a-8bdb-058ca0d407a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13e0a2f-5a38-4cb2-b8c8-0579ea8be09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2b7969-b715-48c4-b663-a2da36e27320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c72e7f-36b6-4170-8c5a-e99dc4a62a4e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adea91e5-ea4c-43c7-982c-889b780c2c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f67516-56e2-43bc-aebb-ae1366471e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a8ce8b-ef9f-4e52-abfb-29ba79b7786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aec68cb-f964-4aaf-a109-c54f34606da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaa671b-a8b4-44f6-90fd-79bc1d996dae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd723b7f-6a5c-4953-b1a7-74625a6f6a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e978ae75-77e0-4417-ad7b-5c546b934109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75965a6b-8ece-4daa-a478-46353b432ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9f47e6-c517-4e54-8ad7-2890c5611138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8147f9-e35a-449c-840a-13d44d40c94c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a4b35-66d9-44ef-959c-2f74cf162abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc5cff6-7c50-46ac-b2a7-f150d48062e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64f20e0-5999-4d72-9faa-efb810b94c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c3c8dd-825c-4de3-91e5-e5bb9c16c1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a8c7d9-160a-449d-b94e-2d6fd03675e4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce42f20-3fab-467c-8ce9-55ecdfb395ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f59907c-7f58-464b-9372-16f430f50530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f0f7e5-6198-4687-9b60-ba822a23c257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a02bdc-9599-4cfa-a207-b3adc778cadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89152f6-85fb-4e2e-9e13-ae9801dba7d3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8dd9ee-bf09-45d3-9c2f-1e992cb9450f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053d1ebf-e8aa-40a2-9d18-440baaaa207a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1099798d-ee8a-4710-b934-ff77bc1ce85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122d9a9a-c1c0-46bf-b434-c22779511801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d87bc2c-4d6b-410f-a460-afbe08c69b5d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce71781-b2ea-4bcc-a637-a667483badce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ad8843-7d21-499e-a9ec-b8cfb33c5b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da44c3fe-6124-482f-a042-b49e29860e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00fa6a3f-59ad-4c3e-af7d-a2f1540d8343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885bd471-b890-4ba9-863f-0cf1375e4660",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46001946-3946-4d0d-9501-d7be741737fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616e301d-f8e0-4141-8f56-e459252eb8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11e2200-89e6-427d-9303-8e78eb3858a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9c67c1-2604-470f-bc49-1a4c2cf03acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33608bf5-f2a1-4096-9f4c-677335806e8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61c94bf-4d6c-4cfb-929a-85d237a4956f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef90584-10dc-4697-9c9c-b6cd36074131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8bbcf4-4f5b-4444-ac31-af69b8afb94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdf1571-ee58-4976-b152-731a842be8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93258a29-f6d7-4b4a-9100-ae67db319a7d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a46268-37c5-4129-a8fb-f0ed09f01936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01966016-2ab5-40ce-99bc-e06dca61c88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb3b865-e555-4dfa-8a4c-0f702f542d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbb84bb-78d3-4515-9dd9-462a529f588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9bc3e3-15d0-4d04-a226-3f499a6d6876",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b7150-739c-4de2-9f1e-05f29f3ab326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705f3635-a8ae-4ed7-8a79-828f89ece2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64711a96-7f43-4226-aa66-49daf294078d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8f359f-d66a-4296-96ce-4bc1b3ea8d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bee3df-dd13-409f-a7d6-f4efed2ba6ba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505bf382-50ae-46ee-b458-d072dd12ef58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ac95da-095a-432d-a706-f3c2a183b673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6e1a83-8727-4051-a24c-c38e9b7406fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "907e6c4c-1777-4587-9657-1f9dc0ab10bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda1675d-41dc-4e37-ac24-3b9f91e25980",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5b8c4b-4e37-4e54-8e99-35085d071664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c46781-179f-4e1d-b3fc-fe3e300381e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fec60d-1ec5-40ab-ad57-56f25e1b1387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23e3809-8eb5-478c-a449-0426d0b6c300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e9f170-bd9a-4c50-b863-d8b20dbbf2bc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3390dba0-3954-4367-96a6-937560247f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d996ef5f-a9ef-4a04-ba5f-83af883b9cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14a2f35-0df8-43bf-850a-8e2010f3a456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37659891-2812-433e-8503-990eddb1339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7e24b2-af43-4328-a76d-a48711e15cf2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296f9248-523f-4f56-84e3-70dff1603dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7078da37-a38a-408d-ac35-e31182cbab1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ab9f2c-89ad-4924-bf93-d8222a6985e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a94f931-472b-4fb0-8b5f-bdc3ad74af9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0960da-aa91-4ae8-b6a4-95dca59f3907",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735f2d15-b59a-47ff-89ea-f37394da39f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ec1e89-e365-4337-8c47-02df7fae74f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4408ad6e-fe91-4e51-a89d-1d9de985ac4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb3e260-47c2-434e-9c56-2a226f04969a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0833eb4-fd6b-4afe-bcb4-a6053f4ddb08",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680f7abe-87d5-4d99-ac21-3dfb59336b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f82867a-7ba8-415c-a869-25632886c9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3918a1d-92df-4f97-a0dd-ebde87e006a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "518ddbe2-8e66-40c0-9493-adde6d36837a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ae931e-0c9a-430d-b1ca-eb4105773d3a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3218e390-332b-4327-8a38-252ddaf7cdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d350c3ca-29ea-4136-a737-2631b16b72ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee91553e-fc89-452b-acaa-d6aa7b4a99e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a62143-21a4-4cfa-88dc-14459305be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97cdcf6-7476-4cd6-8b48-6a5554601b9e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d931f6f7-9d09-44ff-8915-f4c8c68d1975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c5c752-c556-4b55-8229-885c3ae92663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babed52f-ba80-47d2-9651-6913a6ac5144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db4621ab-a776-43cf-afc4-c3c3f54345d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c019836-be0e-4566-ad30-a2d641313440",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c2c746bb-9644-42d6-934a-a52309c0538c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bb02ee-090c-4940-a507-3460b32e24df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cfd8e5-8bd2-4f4d-9806-72816145c4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f35949-4c37-40ec-a977-5aea27b2e020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47e32f71-e681-4b2e-b1d8-bc1dd73a69f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5451f25-85bd-49f8-afe7-8777774c42b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4efa815e-5afb-4c48-be5e-0e57ed82009d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fa27769-298c-44f9-b3ce-a617842b3045",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "138aa380-df36-4db0-94d2-67150efb2b1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33d44048-13b6-46c2-8b92-3cb6729764fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b73fce9a-02e0-414f-b4d5-925805e3d6d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d009cf19-ec96-4787-8e67-b792e7475966",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbb3fb38-a909-481a-8bd4-fb608ca06b46"
            }
          }
        ]
      },
      {
        "id": "7f73cf76-7502-4fd0-8181-16b22bc0550b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "565d97bb-7e29-4d2c-9ad6-dc368af8cdaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "399f7a32-7cef-44d3-a677-e2dfe3e59ad9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86aceb6a-33c5-4ade-8f35-28f08e49f241",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6b4d8b-b913-4d90-9eb0-4624f572103f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0eb03f-38da-4934-8efd-d8cb0a8e63ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85058499-14bc-4745-8db0-0275c785bd5f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3836519-4b91-47ba-a0f2-2822a3abc3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01df5747-f53d-4d15-be4e-e390be19885c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6e1e02-1dfc-4e41-8246-36b6c4afb939",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd45c8a-604c-4b7f-9405-b6561992ed7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb53067-725e-427d-9243-798cfe72c0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7002a2e-e2ab-4a2c-854e-289762d22973",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67dc6a3-4c5b-4fc7-8d9c-9d026028caf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e765c6dc-8071-41fc-b752-d13d91fb50cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01ceb6f-ad86-46cd-949b-cb4a4598926b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3b84cc-cdbe-47ee-b35b-a3b4ef4987b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc13d99a-c4a3-493c-a146-ca9d906db9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74ee07-3b03-45ed-9986-7d85451de2ba",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77169aea-e0e1-4117-803f-4c9c8d31abe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043f8d71-c45d-406a-b7ea-1e1594fb8bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3082b002-3b7d-48fe-b4bb-e9cd7cf4773c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18039e2-0048-461a-baf0-d57e077715c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790f6e92-8e5b-44c0-86fd-b2b9c1b4442f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca73e4e-3a1b-4e6d-8d05-ed21ab914622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc0e89f-c63f-4cdd-8f45-dce94c78040f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e63f574-3e34-4e8a-80d5-555597cbae28",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76fb1c0-88ab-402d-874c-b2d39190ea0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a31f71-9ad3-4be7-b379-65aa35ff90b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f87ce5-b689-45d1-9cba-119508144de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36c2bbd-de75-4741-b1a4-dafca2fcb783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f40932-8f8f-409c-b26a-8ef34f2fc8e4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5e935a-6e9b-4c9f-ab1f-acd44ee57894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847f052c-1cba-40f4-a4dd-53065fd553e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d721e20-dcaf-464c-b7ce-246a5ab29af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae196710-8b9f-4964-a5dd-0782e519d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd20d21-2dbe-4700-b409-9135321df02a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45083587-f2ea-43e0-a080-2580cd1f7dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1be63f5-ceb7-4680-a2db-0685cf51a170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4ddfed-9a73-4534-b791-8a89b8ec0324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e47ce5-377e-4607-a6bf-a16a93c5f3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8d89ce-1561-4c8d-adf2-95f1c930566b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb058f9e-62e1-4027-bb79-5f7e16cfebb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0c9718-9071-49ae-aeee-47862e240432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a743373-b7d6-4d63-807a-56adf698a63d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65762ce-f58b-4824-a718-072fb517e066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2879200-defe-49f5-850a-6e70db5fbd8b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fb10e0-64aa-40e6-9734-9a78f473e293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c213e8-4c90-4879-bf66-2d5a94066736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71acd74-9866-4157-b2f4-6849bcc5cca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2233f9-ca14-4926-a1e6-c5b4a863cebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c196b50-3099-4fe3-a9b6-60811c676f6a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a866d7-c8d0-4815-97eb-3c34534062d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c5babb2-e5b1-435e-982c-2c83a14c6b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89bfd06-c54e-463b-804f-cd0b69b5f200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97aa066-7a7f-46cb-8c70-4af8cb2a6226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793cc1da-cfd9-48b9-9056-f0a3b8a68bb7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106b9c0-d940-41cc-9451-add0ed968124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a0446e-5748-4b39-8be4-29d45307b41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021251f5-75f7-4532-9f85-9cc4983c6dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bec7259-725c-4ed0-9b37-0de04db896a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5741bba8-52c3-4096-a7c0-e4d0d55d08c6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e129be-7233-4c33-b641-1ed1d3aa0a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cce050-3fff-4553-9228-f3b9227a7a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa9414b-9d78-4b02-a7ed-f2a08e750a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382f03a9-ef1a-4ecb-924f-37eeace8cf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31c3921-219c-4c2c-a7e2-e3f10a42f638",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b40f25c-df4a-4c64-bbd4-d57fc7815b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689eac70-2728-45da-94f2-116e6b55dabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af037bcd-bf11-4ab1-af85-639cd46fecd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafde3bf-602b-48b8-8e30-0031e3e66b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebe8da5-5c03-468c-a226-c6621a578350",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78effac-7e34-4c40-be35-479edc11400d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b5d137-770e-44ea-93c4-dd144abdf0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c330c8b4-acb1-4f49-a26d-49d0f4734c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a49e5f-639f-4992-8672-9ada79bcd63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082ad765-8661-4971-a2e1-1743fa84a62b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0efdb22-b250-4193-ad3e-cc2a98a77fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf34787-4013-4574-a914-cfb3856d79fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88556960-6ab5-4361-8842-1e026148758b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a575ae5-da6c-48db-b9c1-9b7024b2c62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d2ddb9-7ee9-47a1-a8c2-54cc0dc7f4a2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b170a761-905f-496f-942d-5f6cc7d5112c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6ee32d-872e-444a-9cd9-8d38e085e3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e3e004-f9c5-4b29-8712-5f11947964d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40df4d80-dbc1-400e-8f90-00316a7bab4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64ae39e-db0b-43aa-b918-73959d667b04",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4638443-65f6-434a-97a0-f16e1110aef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262fe90e-a730-480a-80a1-af96e5cd5fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa2ccb3-c806-4321-a119-9b1374e077dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28693635-4203-4c76-89ca-40f80631bf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbd212a-bb05-4dc4-861d-fe14958502bc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c9eb92-a0bc-46e7-80bd-933695132637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403d9f8a-25fb-459e-9a69-a2b14b732837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e30bb58-0d4c-4123-91fc-316d44cc492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbe780c-fdb9-4c41-b45a-cebe714e4d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb73c0b-694b-4ff9-ab17-162c5c7683b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ac4dd9-d6df-42d2-97a7-3d1ab6016949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72328561-72cf-4331-b52a-c010113f93b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2801a46-31f7-4ddf-ad31-b29d17246021",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f19ce1-932c-43fe-a5c0-c9fb65616a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bb60d1-5786-42f3-b6a1-5c6ed559cf0a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20295d3b-a413-4d55-9f78-625c42c79ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c566583b-0afe-492d-8974-11890a6c455d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52adcdf-bb99-4ee3-819a-4d3e7c602543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626e3a3d-ae35-432d-8d5a-0e5a51e70229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9fa49a-b50b-435b-819e-ac5224dc94a6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab398c60-8ab3-42fc-bb5d-891a5bd88cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fbac514-d790-4eb3-afd1-cd5332fc9c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ea143f-43da-4d8f-885d-e061e8252748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4011680-f6a2-4c65-bb46-1c0f14871700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38ff869-24ea-4eb2-b00c-9b813506dde5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b64dd20-cc2b-4f66-95a4-91ce10a4d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56c01fe1-09fc-4d0b-8eed-9762f2c55280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bcc078-db39-4c4b-9fd0-3916cc8aecf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc72f27b-5c80-4b8b-87b5-9d596e1e5ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b76029-8d68-46a3-b5f8-c235e39e439f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2398a3c-ba2e-4f5e-a2c6-2d0708cd9800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5082dace-63db-455d-876b-c6971743e237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84075153-b116-4499-80a9-571f500dc38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd365b7-b24e-419f-8417-d0dcc13c0731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90d28b5-bd34-4e8c-adc7-ce49bdf0453f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8076b6-dfa9-40ac-97f3-a33667687710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a09283f5-06c6-4002-8a56-aa85dccf6ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4158306a-5673-4953-a984-ff6b0fb6ac95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2271b38-cf6d-4801-9ab7-0d135689bf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b282dd84-aea8-4bcc-ab81-8eb80b05474a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb2ebe0-8d0f-4b0f-b02c-6200220ee67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aaa84c-5d15-41c2-bef4-68e403147ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7949d527-536a-4503-ae87-e62ebb3070e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732bff08-17b4-491a-994e-b77c1e7ea573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5106b78e-9d1b-4122-918a-3b3a47a5cb09",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c57d813-92dc-4d84-aa7c-049899378f10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17b4f16-578e-4719-ac35-aea721cce752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2a146e-531a-4d94-bec7-3455301369a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1aad78-3f76-422c-8b99-dad02e44d9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c639b4-778e-43a6-9c54-0c80c24b69ef",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1caa02d8-5b74-4b68-805e-7d6413799aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb95576d-d841-4bd0-a1ce-57b742c39618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed64683d-50e2-4bc0-a0a6-bdf615deb0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f98605-7031-4fc7-8e76-20ab8f6aeb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52300d14-1b11-4a02-8af9-61b9e983de71",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b9b8ad-5ec7-411a-89bc-9c71043bb602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ed8b83-4c53-431f-a610-ef622c52836d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e9f7e8-1d6d-4ffe-ab6b-b7451939252f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844bd175-45cc-4955-bbba-7b5f6116eb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43832781-f42d-409c-b705-3aca5482cfaf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5f7820-ac5a-40bd-9913-a231479ff238",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b15f90-2f4e-4303-a3b8-dbc95ac08162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f443329f-5dab-41a9-bf0e-4688eb18fb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e6f529-dd70-4e00-a1da-0effa90fab3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf10343-905c-4f3f-a8e3-9f9e25e7808a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd82e27d-d536-487f-a522-ec56e193a747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79483971-c04a-4e4e-90d9-5ec80ad0cb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551a42c4-976d-4699-b3ee-c78b233f8931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de316116-aef3-4d23-b19a-451aaa5182cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220c5b95-4986-4463-a5a0-e73a11e06290",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04410bb9-0ec9-4e7f-ab81-fe589733e2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d169e70-6c2e-4ce5-8cc8-9fa278e2bcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a8663e-e26e-47b9-b496-ecbb783c0d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2df567-4144-455f-8c8f-4445823c3264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ff7501-6ddf-4c81-b8a2-f85112d91592",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701dd295-d501-4ca6-98fa-c4781247ef3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e771c39d-b562-495b-8bf2-7438792eaf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aef0fae-3949-44f8-8301-1f0148d8c8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396cd559-aa69-4724-86bf-505ddbc5bae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cac5e5a-32d8-4d7e-acf7-4d2c221434cd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb33b401-ca02-4cb2-9311-e533167573ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafe379e-6f77-4ad1-a142-792e2ecdd1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e13f52-2394-45b4-bd1b-f5435ea7ceb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d91b57e1-c888-4abf-a684-30ac3f1e231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f9f434-3fef-401f-bf00-4ee39fc51ba3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e5839c-c3ba-456a-8f57-bbb6f6180f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dc1028-fd94-4f83-bf61-59ee814314bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dd33ff-e2f5-48df-b5bc-bee0d83349fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c97105-f79a-426d-9e7e-d2b5b640095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6182aa80-5f5f-4179-87ef-e446ce858d09",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5f083c-44ca-47b7-ac1f-a270aac1d5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db62cb85-5ff4-4392-ac6e-ba058bb5b499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abdef1c-c383-43ac-b2fd-74424d2b1400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3f8eca-6066-4fd4-9ca9-3b6a7cb03e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e006c15-8be0-4894-9d5d-c10b0fa54edc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5f32d8-7de5-4d4d-b48f-6887982024b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ba36e5-fc24-4bb0-b169-9f881ab9788d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40874611-769e-4421-81d7-694a0ddbe50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3348ac4d-426a-4d97-884f-8339c6193258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3ddbc2-1ca1-486e-b853-5d1e7805733d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a4b557-54cb-4acb-89a7-295fe12ceece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751b7feb-2437-4e31-8bc3-a4635610cb54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bac077-3b50-4808-ade2-a219febb481e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02bce50-65db-4b48-bc0b-2598809ff20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f316f60-661c-4a84-b18e-152ba7e2c9c8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b666c645-5163-4a86-a5b3-0a9c7cb4ef29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d7eff6-630a-4930-982b-8952fc58d36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433a4858-9463-4350-9793-885a5dbfc489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867ac9fa-43df-4205-b980-94b9147b843a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6734c83-fe47-400e-ae55-f8f5633fa1fd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2626e8-569c-4ea7-b1b2-f76f951609cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed5fa20-c814-46e9-9b57-c16aa4fcc385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd09c51c-e8aa-47aa-90fb-a937899b2656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8561cc51-e8f9-4770-abda-60016118cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a5e268-b359-4385-863e-7a77c28fdeba",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52e6f62-8e5f-4483-bf6c-d4c3dc91a3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f628ba7d-b71d-48a0-be6e-271f0ec56e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb25e93-874c-44e8-8b18-ccfda87ba91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f07c8b-6965-4984-a8ff-8acbbc12b1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8233969-6019-4d50-90de-a9b9600e622e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73cf398-65f4-49ed-8dd5-4fce65e0c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ee0353-51d5-43a2-9b4e-9d1db2fdb64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfccbdd-4413-4cbc-9dab-a156a52b7d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2331a317-b1ae-4176-b7a0-ebf25bfa92a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fb7215-d1e5-43f9-a8cb-75c4c514a088",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c1e4b7-49ee-4a85-bc6a-f93ef6706653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b5a5b4-0ea3-4d4d-bae8-9622ddd05fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d22857-f59f-4811-99e5-91bd07cd13d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab62373d-eed5-4228-a9a0-9b9c9a058124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e6439e-ba72-45fe-a2d8-4fc9fbc20afa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58e3b1d-d590-4461-9327-ee8a5dc360df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0f08fe-e1bd-427a-a540-40bff0f274a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34da73b2-3be8-42d4-918b-3e0ab1582637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc984e30-c247-4cc3-8031-e4086ec6177e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa8d582-c83c-479c-bdec-a515bbecd850",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26e9ede-6d88-4b73-9388-a50ce3b6c6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703554d3-8c9d-4bd3-bf27-d39cc2d51c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9d6d69-be91-49ca-b774-f5e59235a038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24951fe0-f88b-4882-946c-249a4744e62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4825a47e-4eac-4e27-9799-af164658ef36",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134c5983-17ee-4411-9a7d-41ea134e2916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3051776e-55a1-4c79-ad95-58b981d6e7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49184f07-e6f9-4320-bd56-3b74b690fb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98517aac-d1b1-4776-b860-f3695e2a1c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fe5e71-18c8-4fa9-b1b2-2b2952e23a70",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec6ba4c-3fa9-42e7-b91f-0ed0af202305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1493b2fb-32ba-4a93-9320-afc39eb6e593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328bf193-bbb2-44b1-9dd0-8852cb259d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da92cb04-f855-4c7a-ad7f-3c8c1251b452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79bda29-eef1-4747-bd7a-5e13c1fdd430",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48275c63-d53c-4d48-a85d-a19e36d8ac11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f039cf5a-23e2-42f1-8914-308d548af14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d82a2f-e6c9-4839-bdcd-47cf7b406846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41eca57-c8e4-4a4b-ad36-1399cad0586c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9516c21d-408c-4fa4-89c7-7144470ef9d3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95df1172-e257-4d31-8ebf-01ce1824ad46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc0e1a3-041d-4d74-993e-8ffc13fc0767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b53ce-fc7f-47e1-8eeb-f1fc2f9aff21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384b75d8-a887-4aeb-96c6-f4d150c35891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8368b447-15b3-4135-961f-303f2695ebc5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577d05cb-42ec-4f49-81fa-38e89aa32a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241ba978-f4ce-4c8a-967a-40737dd1cde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2391748-4552-4d0f-8158-5547c6d531e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d60219-f237-4345-bb75-8ee35cb6cfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7064ba-5eb8-4120-aa85-0ca2f827f8f4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2e163a-d70f-4d84-bc08-2692c0b2436b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5330803b-6441-4811-92ff-7f6814912326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda6c29-03d0-49c6-91ed-0979723d3f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119f27f5-bdc5-467a-bcb3-abefc826acf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5148dd8b-4e9d-4cac-8fea-98c6f1de23d0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a76b69-9a59-42f8-b153-347a8ae3bdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855fcde1-f615-4ac7-91ac-a4eddbb07b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6e51a-f76a-46f8-8fea-ed502f659c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e007238-0c56-4b4c-8668-125b00d73a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9feed-6426-478a-a0ba-ac36763652bc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742d659a-df83-4998-bbed-b03e315a97b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b959df-4d03-4484-901c-706ba4bde166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3df868-b15f-4374-8c34-de2248be6e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823eb432-4a42-4d02-9890-9d676b7d153b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957ffe52-fba6-4224-a947-777fdf49ac12",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46e2d6e-afa4-4885-8cf6-6ea09e057b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d5d9fe-5fa5-43b2-90d4-08c549a404f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9b2d96-2e4b-47cb-93f8-bfc741048fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbc922d-8d0c-46b5-8f89-c65657590c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5303bae-a147-435d-99b6-99389312b69c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b795d18-ba2c-4f7e-8c17-d6d8801fcb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeffc58b-4be2-4f59-bf37-96c199e64f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a41b99-2aa8-451d-a060-d092f98c0ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fa4d13-adbe-464a-a52d-87d8c9123e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22ba4df-bc20-4247-85ba-07d98eae9a19",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6671a49-9bbd-47c4-932a-642db0e6049f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d9c245-d4d2-4e21-b175-4c364aede715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93c7ea4-5d3a-4922-961a-d03e4f761ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9114085d-11f3-44e9-aa9d-0467ff4c66f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053e82ef-cd60-45d6-b798-f8adaec0a0c3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5934de50-3948-42da-b689-8fb7a064000d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ad7b36-1ae4-4bcd-9460-0a6ce1d4871c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b57431-7167-4133-9da8-1a06ade7d27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d016624d-e773-41e7-a6db-477d6d76f0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2302e9-dff7-4bba-ad4d-d8889083d60e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988e1386-fd60-4c9b-b67b-9376e85e2564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cb1109-d8af-4f9f-8e4d-ddfebfe1faac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907d91be-7e68-452c-8e0b-bc6d124a1dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f53d68-916c-48ff-9067-9a1207026d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74d0344-a52e-44a9-b158-3d4ea9b60fae",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a273c22d-e36b-482f-bb0e-d0b7ce049df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5601fd30-9fd4-4cc8-bc3e-07ede8cf9512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1476eb26-4bbd-424f-a5ed-1a5d8660957a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440386a6-105d-4238-b25a-8e17dd8c9ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501273cd-faca-4bd1-8094-7aa70ca222fa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047cf6ea-6d80-4adb-a31f-3e7642312e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31950c89-bd54-4891-becc-2a0bdf86d4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33eca199-e4b5-4f0d-9ee0-07f5aabdc242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d4add4-0ced-4f41-9ba2-f0a5aff7754d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29de892-0c75-4d66-b0bb-29df341a70e5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100b8496-238a-4b25-b500-26e4124525a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a5442b-59b9-4336-81a8-fb175754eccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4661993c-4996-4dac-92a3-b571d3dd3226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372faaef-d734-463d-83d9-497ccb64920e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5883f3-5db4-4b4e-a5e9-49edb280632e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00492759-68c8-4f49-9d93-dab4c6430f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e96779-1331-43bb-b6c0-849a1ff80ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84927f2a-f613-4380-b5b9-2efcc297ddfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1409bbd9-0fa8-415d-9046-1182aebb8f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f52cea3-6351-49d3-b8df-43316f9e2216",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd56322-229a-47cb-ad0d-9536236b2e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2318dc62-af2a-4445-a7f5-5ab2dca064c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2b83be-c46d-47a9-bd3e-c3a0aadfd3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897ca89c-0971-424f-b381-e6155321ce5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e0fab5-ba17-429d-818e-df08e53f2c92",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc9d0c2-2208-41d7-99eb-38eaa3a41a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bb36eef-d4c8-434c-9330-a71a7321e224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844c2e63-2c16-4f0e-abbf-03c8df477edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1869d1-14c0-4ad5-939e-4d2dae162ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b19019-237b-4ef2-8b95-815fa1132bf2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e93128-b0d5-4593-9715-bffa6f0187fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3fcefa0-6ff1-424f-8877-a9a2edb35c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b656ae7-ba02-4ff0-a10f-37fa9193f974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d073823-5bfc-499e-89de-5c2e6c7a1951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24777d48-2ab2-4b22-bd8b-50f80a45a18e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0031e0b3-1d71-4205-a76c-a60851d7eb11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295616f6-6120-4a70-b2de-9667317e79e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067f543a-d1db-42d6-aeca-28b110038315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4394f01f-ef9f-4b45-8b3c-2b3b56d88a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78adcaa8-1d66-44f9-8616-0720970b6bd1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f40d56-bfee-4572-989f-7f5d449628df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caaac23b-4d23-4c4e-8283-d6e874a54f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef226d56-2f57-4c4b-aaa4-733ce35ebff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f123137-52b0-488b-ab51-6d2cff6c90ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f8f85-5f18-46ea-a01f-64a0d0b4c286",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660e5c31-7c64-42c1-a5de-55d00f8a4e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9db2041-b65d-46e0-b452-573e9dde52ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f51e6-6333-42d1-8734-4f6e9edf83a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42c9e64-882d-4e39-9780-a33a32ffd454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7707e7c2-fa30-4c9d-98ff-8673f925109c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de427f4b-6801-4a0d-955e-801263652cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a484a372-d1f6-4b6e-994d-69c4589e8cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d3269f-b3a8-47c6-a620-4c8a93a1ccf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5a4e7a-cbed-404c-8f51-37efa2517f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac579c0-4c1f-4b50-af3d-cb11e26ccd16",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d2ab91-9c58-4358-9693-b92d5cae73e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f78834-997c-4ed7-8953-85c0d05f44c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ec3620-5ba9-48da-823d-9653c2e84032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3b7508-fed4-4332-b941-dcdb73a3dc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffc2ebd-ed94-4daa-b910-5af7724d6710",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e247103b-93cb-43d4-81ad-765eefd1dfa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866d0484-4151-4b83-9ad2-c88d07a19a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c806a08-b7a3-46e7-800c-020878a0eb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd485ca-bd03-48bf-9e58-42fa6e56ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22004194-1985-4eaa-9de2-ada10e6ccdae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4da5ecd-5f4b-46fd-b228-90acb5f9dc10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e04ed9-59a5-4e2e-aaf6-97f361064501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b158a1b-fed2-4765-940e-6f48c870dadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca511b96-2dd8-404b-954f-c838de1213a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eea1a75-02c0-4a67-9bfd-85e2731fae6e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b43d1e4-8a5c-44fc-8268-8526e3bdfe62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef968c67-8c59-4f09-9c04-4cc228073c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4077227c-50f0-4512-9043-802471ecafbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be588803-78f4-4884-b5ac-351e04eab46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387d0786-3375-45d6-9eee-a4a5e904e296",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d948a868-26c9-4b75-a7f4-229431af1e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17071c19-742f-4e6a-bd0f-2cace4253c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe51dc8-6633-4c31-b90a-88ceaade67dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f139df-22bf-426f-9a32-bed0c24ab5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e03294f-a9ba-4ece-b516-3fd10085238a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf46fae-96fd-49a3-94d6-d1bd6b072646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7c1e071-bb88-4fb3-bb4a-be9d26262362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2597008-0492-40aa-ac93-5b14f55c8ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197fa77f-3764-4678-b80f-dbb64d995ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cec6b39-e7eb-4cee-9e44-ed81696d564c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fff9a1d-3815-4f4a-bdd6-8f273d7e3abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e082e2da-0cdf-467d-92bf-bc2b81dec2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008d7fd7-b40c-43c0-b59d-0b92cf1408c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcd18ea-7b77-4049-a0f6-907e791dfb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d58ccc-1262-4b1d-b2a2-00092ee8de34",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77596d85-a383-4a87-bd51-de1f5356596c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2660f4a-d7a5-4ede-8ef4-c5616d99ea87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22794318-dfc8-46f7-8202-245235b3fd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb2670f-4e01-471f-a3bb-9fae4ab11e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76df4d0f-675b-49e1-b955-38c83574054b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f69fc9-815f-4ce4-af04-3853139bc945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4274a17-6447-40d3-bee5-2883a5864cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49738a71-049e-412a-b18e-48e803597733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62e583d-082e-4d7a-a1bf-cc01b5b258bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e16794-3690-47fd-b264-92882e5c77c2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e978545c-2237-4fca-88d5-13cfebc41e4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af15ff09-9661-4857-86eb-3a228438466c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2f2f38-3253-4c4d-932e-1b4929fa88a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e232e6dd-8031-410a-ac8a-57810f8c932d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04661cb-3515-4974-bbe3-725cb877cae2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6077fde9-b3a6-44be-be27-44846fac1c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4474aaa-3550-4842-9872-b124d71471d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d238f6d2-a7cc-4842-a07c-2548d894f0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0177009-3458-488f-8c86-08b8b1e25fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2af88ae-c9d0-4378-b832-483b129eda24",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b24b33e-3cce-49e2-9930-76a82a5868db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b45dac-759f-4620-b852-52ad0786775c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf894d9-d1b9-4901-8577-04ad0b81ea22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e62339-1fbf-43a9-8936-a6be2fef3322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bf030a-569d-463b-b896-c6eefb9ee9b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc84475-955e-4f9e-8780-745291193359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba772df-8df0-4988-a827-47a9385605fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f48bd7-856b-423a-9bef-4835d048c8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1316cc8a-db0f-4d79-a216-e1e7bbe62193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ced204c-748c-4aca-8dce-29294e068ba9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b285a0-2d7f-494f-8aac-86fff22ce990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620bcf67-9154-464d-8cb4-2829c5c999d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15aa40d-6926-4b31-9a45-baf988906ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2757027-ecac-4c08-a383-37b8295b610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd77541-a882-47d2-adae-7c32882c9442",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f6b8de-75e8-4d28-a957-444122a4db5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d9cd676-567e-4937-81af-bcaeddc16b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de38af83-8003-43ec-bd89-7f55d93a84cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73378890-8bf8-4b71-ae9d-4a1c3197c66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828a9c7-d752-48a6-b3eb-bcfb3c05bdbd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1f0954-65f4-4aff-a7ff-31661ac41648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea206158-ba68-4511-8c47-a00a0726d2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38424326-4224-4a9f-b95c-fbba120c2f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57b355a-ac1b-4e21-a611-5f240725471d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882ad2ed-f1ca-4d1f-94cd-08ac4a5a2ed6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516a372a-9a4a-4992-a598-11b102e1a3e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b98069e5-51b3-46fb-97d6-79fffc7866a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a10a18b-ce7d-4cde-b1d9-3a5ad7c826ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a651807-710e-40fc-8f57-80e81cc2e91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee292d41-3cce-433c-8497-605dbaa738a1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fa7413-88d9-43d9-a88e-e4b91079defc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285b7dcd-538e-4665-8530-6debaa501ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc867fdc-9621-4366-a26d-0395e5003d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2911a07-937c-4bcb-a467-ae2b40debd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcedaec-78f1-4865-b5a3-c2c05f5970ea",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14659e68-c586-4cca-a820-0ec261843dca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7561d454-fc4a-4100-b92b-e43ec364d0cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43b13e4-e4a4-430e-8ba9-a663b86431e0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9daa50-fda9-4793-8eb8-48b959ca9c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8322b5df-4825-43e1-ae49-80e17eb7e29f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de9a046-bb28-483d-a58a-81e4c6bc92dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b8eec04-2809-4a66-95c7-8dd2eca1c455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675d2996-e332-41db-b21c-32c2cd851d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d95a36-db77-4f79-a758-1321e9ec706b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d9fb58-bec8-4168-89e9-1d3fdede8f92",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf144c5c-357b-410e-9d7c-4d0eb27fd087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b12e40-fc56-4503-99f2-d0e5916479df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848f1256-a1d8-401a-a11c-3c730fa0f080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123dcf70-7135-47cc-a3e7-befd79d74f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2732bc5d-4f73-4263-b396-11f2b307d767",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb17416-71e2-4340-b245-b019d0d045c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "887a18e1-91ab-43ef-9ce7-239dd2abf4dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1b30be-9601-44d2-9832-bc65d1f684f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716249b9-9959-4cff-9c49-b21652d4d906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7a780c-4e72-4dbd-80c0-edf62f74e8f9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c88d9-405f-40cd-88c0-64084f524684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "069650f1-38fe-4c88-808c-9c20e46da545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260dc91e-5d88-4fa8-8312-54af069fd99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e354d6-c2f5-47fb-8221-9e298852e9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97557e2c-0820-4ceb-ab31-cf3769a383fc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d2d992-cbe7-4982-8ef1-ed1fed229aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be01374-fb15-4c0c-9b4f-4c3b2a2b3bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c9b92e-55e5-4018-81dc-dd5dbfb5e16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2af128f-7c42-4d25-b887-2c6b1543713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc39e1b4-c157-4636-8b4c-fa19e4acd2f1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd246315-de5d-436c-84ca-3d64d731bb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62a271f-00d5-4f33-95e3-9b94c03c5b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8a9b8e-e59d-4aac-ad80-38b1ac9e783c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e72b22-e163-42e3-a0c1-26b37cfa6014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabcb7f2-0435-4c26-b3f0-853ab702099a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fdc1e3-b5be-4d1a-9868-5ddce13d8bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8232e1-7d3a-455b-b8db-11f1e1cc985e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e4d703-7484-4d8a-906e-d73227eee119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039935f8-0d6e-422b-9f2d-4aa462d0d580"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ae745c5-9c79-4ed7-b08f-f696354f9e35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa6d79df-ea44-40f2-8584-20a67d9d3965"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8e54503-49d9-4031-b949-afa0ff7a10c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22024321-6333-4ffc-b499-a51161209d23"
                    }
                  }
                ]
              },
              {
                "id": "8a9dec1b-d489-4a28-9cdd-701ed7677ad6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ec009ec-e031-42ab-a7e3-bcc50c3ec242",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100a1dc1-d4f7-4530-80eb-36c8e4839311",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9ec0fb92-86cf-4d9e-adbe-d1af8f52085f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ae73c3-d9d5-469d-aed4-286abed6b2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cb62c68-c6ad-43c4-b6fc-62ac9af99e9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ada9004-77ea-44a6-855c-b251644f7f6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d2c6d46-e3b8-4146-b15c-5c08451a15ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbacc9e8-376b-4846-bfea-958a4a1d9953",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b64778c-8aff-4e2e-b934-ae5e3923d6b8"
                    }
                  }
                ]
              },
              {
                "id": "a3026459-8fb0-4956-93dd-ff9fe0bfa288",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c3585450-2da4-403a-9b4b-a4af182f1d80",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ecf952-0385-4e0e-a282-426146956803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4c80fb22-dd6e-4850-93fe-02492a98fbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7158f698-9ae7-40cf-820e-eb83b3143d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ac66d9-2c59-4e70-a9f2-3ed216bb4553"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a824f6d3-04b9-4d0c-a3a8-0e81d049fe91",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89d9042f-361e-4b20-864d-4bb0145fe379",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bd2ac65-2e2a-4557-9658-ddb8937ed40d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "559e39ac-74d3-493a-add6-4f0176297911"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5d02a79-c058-4827-823f-13e3a978e392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c831893-14a1-4766-99ef-f1fa783f0d18"
                    }
                  }
                ]
              },
              {
                "id": "0f294e7d-44d0-4833-ac77-f4a6fc993d85",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c1d18eb-656f-4b74-b4fa-7909ccdbdaf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ca732b40-40ab-45a0-8d7c-f8b964648f07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48527614-971b-4f6b-a18b-09eb0fbbe338",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2a3e74e-1b79-416b-9e95-e446d25d2d72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "affab812-3ac6-4ddf-94d2-c14e23f24b1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "32e7ef72-f79a-4864-8434-b33ba3c1020d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "505acd16-f76a-498b-9c3b-a28c94ab36ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb171d6a-2e5b-4e6a-ae98-e6ea192b994a"
            }
          }
        ]
      },
      {
        "id": "e7814bdb-db87-469d-9a1b-621eebdd2ad6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f5ba7ede-004b-415a-95e5-0ce73c8450e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6069b43e-8714-427c-98ce-fe61805aab0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d57b94d-8791-4b66-a689-a2b9a7dd1ba3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41bea9d-e81c-4e98-968e-3f6e2c471b5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ac9567ba-b20f-42bf-9d5e-c4f1f2d555b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff025d59-3724-4379-b3f3-68eb4a535dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6941a0b5-2bb8-40a6-b5f8-0e05dfcf2fe3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffe4e408-5619-4c9d-a984-9b6af546197c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a09a45ee-76d2-42bc-9143-f1373ff76293"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24d7bf4f-60cb-4eb5-9b1d-2926ac308b87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f8c3d1-614f-4ef2-af7d-342cd905b053"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89619a72-cf68-4f50-9102-dc4b3d1c93c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dc769e6c-d4b7-4593-a627-f10b02b12d6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31e70c7c-3d6e-49aa-9dbc-5a7928e565eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b37d66e9-16d5-4dce-a415-2eef9c504ba9"
            }
          }
        ]
      },
      {
        "id": "7675a1c0-2d84-4078-9a7f-11a38a43b203",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1fda1b10-a01b-4029-9c10-91b1344704e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96d32c56-0501-4519-8a33-c3cd7088b51a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b6109ee-9e34-4e63-918c-e84ae203a2d5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b689af-c910-4e3e-877f-6d05d47791ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99c88c47-1f37-458e-8476-dcc7767961f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c2d115-7252-4264-82ce-3a24396037d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "302e080b-0b6b-4f3e-b16a-1574d29d4332"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c33c2ce7-b8d5-4401-9068-52a42ce7e7e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd391026-fae5-4b60-8fd0-2640fd7ccbef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2d0dbf1-6d97-4fb4-9382-4cd800ff1aa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56a51dc2-972c-4054-b389-4ba7eede386b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9adde94-2321-4d94-aa9b-85babef2c879",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6e3186f-6aac-427f-b661-2bd2378829bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9b0f0d5-cc60-4cc0-875e-76bfcd7c0777",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d07d3c4f-bdbd-4e6b-81a0-d8fa79fddd9e"
            }
          }
        ]
      },
      {
        "id": "72fb1f14-bf34-416c-b5ec-71913d954011",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2f74a845-3055-4f57-9db4-504415c07bbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4b99c7c-4bc9-4f74-8cb6-95ea19118c85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe22181d-0356-484a-98b3-eea45c100432",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e93c111-d663-4bfd-89b0-0a3d1856fe3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce59afcc-c987-4ee6-b7f3-f7d4c1ee059e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf72c9c4-9343-42b0-b8d8-cf07333b5d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4d34438-9d62-42d0-a4c8-d16dcd7d050a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c8dfb27-1946-4251-8ac6-4b7f447a6068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae7e6b38-ca88-423c-a30a-b0b442ce4e8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5f9ead4-48e2-44b6-a7d2-a0067277ab12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53e7ee4b-d064-4bea-abd2-d0eea2393c11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1487ca1a-8353-45f7-b671-f42c5f3754b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "11293174-b6cf-462d-9d27-78a731386c66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f7fbef3-031e-4b98-9b15-7d0ebce1ccdb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e7998aa-b12b-421e-a16a-7dd65af23596"
            }
          }
        ]
      },
      {
        "id": "75749e23-6794-4395-a4f5-ebe2a6664dda",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e060333f-e84b-43a3-81c2-34f7b90e93af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fe4b168-6bea-4a85-86ef-1cbec2e511a0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bb9d4fa4-b4ff-494d-a436-f4a7994b1147",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4886008d-3657-4d88-bbd0-6c51cb166f1d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b6d9142-7987-4229-ae91-d97aa824feee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 144.92063492063494,
      "responseMin": 12,
      "responseMax": 14432,
      "responseSd": 949.3619168982598,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725064926496,
      "completed": 1725064971117
    },
    "executions": [
      {
        "id": "081d957a-ac21-4800-9ae7-e153833cfb8a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ae5da466-d641-479a-9c88-8de7a26241dc",
          "httpRequestId": "cbf1cd6c-dc7e-4d8a-a303-1cf6f9bd4da6"
        },
        "item": {
          "id": "081d957a-ac21-4800-9ae7-e153833cfb8a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ffbceabb-4365-4827-8ab5-dcac0667657a",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "77c86816-4fff-460c-b427-9d60a4aee93b",
        "cursor": {
          "ref": "e469d194-a343-44ae-8b8b-ca4f7dfb133c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "29594e6f-0f7d-4ac6-bafd-425bd9c38735"
        },
        "item": {
          "id": "77c86816-4fff-460c-b427-9d60a4aee93b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "62278dc3-2127-496b-8516-3d554aae6086",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "96f3f78d-a0dd-46f7-97b9-226b23f0f742",
        "cursor": {
          "ref": "87074438-e3a9-47aa-a78c-775728d20add",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "697a6d95-80c7-4ba2-bd42-95431da0c7de"
        },
        "item": {
          "id": "96f3f78d-a0dd-46f7-97b9-226b23f0f742",
          "name": "did_json"
        },
        "response": {
          "id": "f89a77b5-bb96-4340-8654-be05cff7b213",
          "status": "OK",
          "code": 200,
          "responseTime": 331,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b83ca-6086-48e5-83b7-adebe5016ae1",
        "cursor": {
          "ref": "359c1146-e5dc-471d-aa7c-deb31090c783",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fe0e65b-23b6-491b-a393-2d4663c1ad3d"
        },
        "item": {
          "id": "5b3b83ca-6086-48e5-83b7-adebe5016ae1",
          "name": "did:invalid"
        },
        "response": {
          "id": "eccb30b9-7adb-40c1-ab59-fa5067d25f03",
          "status": "Not Found",
          "code": 404,
          "responseTime": 306,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b83ca-6086-48e5-83b7-adebe5016ae1",
        "cursor": {
          "ref": "359c1146-e5dc-471d-aa7c-deb31090c783",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fe0e65b-23b6-491b-a393-2d4663c1ad3d"
        },
        "item": {
          "id": "5b3b83ca-6086-48e5-83b7-adebe5016ae1",
          "name": "did:invalid"
        },
        "response": {
          "id": "eccb30b9-7adb-40c1-ab59-fa5067d25f03",
          "status": "Not Found",
          "code": 404,
          "responseTime": 306,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d40a4f-ffdc-4530-ae95-4219c063de50",
        "cursor": {
          "ref": "80bcb629-bd04-4f57-b477-bf6a23188830",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "926fb7d9-a6c5-4a04-af4c-0bb87a3fd1a0"
        },
        "item": {
          "id": "27d40a4f-ffdc-4530-ae95-4219c063de50",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "81f8346d-b03f-41f6-b5a1-c82f51265b08",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d777d3-4a9d-4f93-9610-52678e53f1db",
        "cursor": {
          "ref": "7b341b3c-19e2-452d-9ac1-f0fc89bf048a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3b39f32d-40f9-4d87-81aa-46f3149855eb"
        },
        "item": {
          "id": "f3d777d3-4a9d-4f93-9610-52678e53f1db",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0ad4157e-92b5-45fd-aa15-d4cb35dc7496",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c123e7-88b4-4c1c-b0e7-54f7c7f5cf9e",
        "cursor": {
          "ref": "ae90dab9-b829-4ed8-8b1a-e51048fe0e11",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2e47e057-5b8c-4153-8588-868362a366f7"
        },
        "item": {
          "id": "b9c123e7-88b4-4c1c-b0e7-54f7c7f5cf9e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "43f99a61-17c5-4c42-b336-4e604954e44c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacea81e-f748-4c48-bf0a-9107b52bdfd6",
        "cursor": {
          "ref": "4b1c84a9-84a8-46fb-81dd-cbb059596ec7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "47337f1f-ebd3-4578-9d6b-6ac577ede422"
        },
        "item": {
          "id": "cacea81e-f748-4c48-bf0a-9107b52bdfd6",
          "name": "identifiers"
        },
        "response": {
          "id": "b27c0954-6df1-49d3-bdf4-10e9f123090e",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693ecc4f-6ab5-4996-b536-a0e5727f4cf6",
        "cursor": {
          "ref": "28e7c5e2-ac3d-409a-b182-ae1a392fea7c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f31dc505-5a3f-4c4b-b5c8-e1e1a1b085c4"
        },
        "item": {
          "id": "693ecc4f-6ab5-4996-b536-a0e5727f4cf6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b50e46d7-56cd-492a-878d-d73d95ed775b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08aaf620-c78f-4282-80c0-8fc77f2290f9",
        "cursor": {
          "ref": "cc001814-ec92-4100-b464-2f98cc1b5d37",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2fc05167-ad37-4738-9d16-9a623176ce14"
        },
        "item": {
          "id": "08aaf620-c78f-4282-80c0-8fc77f2290f9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "78e2b6a0-7496-4540-aa68-b251b78c5325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a20d0b6-77bc-4820-af0c-8f1b44541533",
        "cursor": {
          "ref": "55ddee53-abd4-46a4-ab63-16d953ba6a7e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a0e9d5e1-1e01-4477-b6c9-ed686810af9d"
        },
        "item": {
          "id": "0a20d0b6-77bc-4820-af0c-8f1b44541533",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9ced0a5b-bdf0-417f-8e73-33062339d22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d4b95b-f8d3-4d4b-9340-f1af94093e02",
        "cursor": {
          "ref": "04a24ee2-6f2f-4263-a070-502d9541eee8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "beaee81e-d1f5-4101-b561-aa0ec444914b"
        },
        "item": {
          "id": "d2d4b95b-f8d3-4d4b-9340-f1af94093e02",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c0b0fd43-b510-4622-b271-bfb97bb181df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c8c743-3e4e-4715-a8ef-b9c910f97095",
        "cursor": {
          "ref": "3ccb0991-8fb0-43b8-9c2d-c6fd087c4859",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "49cc421b-352c-466c-a339-2b577e2b98ce"
        },
        "item": {
          "id": "e4c8c743-3e4e-4715-a8ef-b9c910f97095",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2f622c5e-80f6-44f0-a07c-87c463be0d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7228c1ad-2906-4ff7-ac91-d3c2d2c7ff9c",
        "cursor": {
          "ref": "12c17635-28a6-4bf7-8843-2ae64bd334f1",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3e7bc3a1-35c4-445f-ae87-65ce9d46bbb9"
        },
        "item": {
          "id": "7228c1ad-2906-4ff7-ac91-d3c2d2c7ff9c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9cf5b383-77ae-4c2c-8e04-5bf6a3a0a6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d133246c-97e0-4d91-9f82-f5dfaaafa6ea",
        "cursor": {
          "ref": "d4d51510-f717-4043-ad7c-e95ae24f9b26",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "94f72726-f7d2-4c93-814b-cfb77ebbac39"
        },
        "item": {
          "id": "d133246c-97e0-4d91-9f82-f5dfaaafa6ea",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "80872a64-e7af-40ab-9558-fff956f33a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b06663-649b-4bf3-ad37-8b4503cfcc6c",
        "cursor": {
          "ref": "f8693db6-7f20-4b37-b783-3bb23d4ea803",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4e142f0b-731b-4051-a60e-259b3985472c"
        },
        "item": {
          "id": "c0b06663-649b-4bf3-ad37-8b4503cfcc6c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a0c030a6-9ae9-4fe7-9d06-c910969495f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c2e684-26b6-4587-be5b-fb5f8d43ccc6",
        "cursor": {
          "ref": "56d5d1e4-e478-4416-a88b-f9919a17a4bb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3cce009c-6ec3-41d0-a0cd-63049ab88a98"
        },
        "item": {
          "id": "05c2e684-26b6-4587-be5b-fb5f8d43ccc6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0ae92042-aa54-497b-8ee3-d24709156f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5b0bf2-c4f3-48e2-b84f-29f6eefd388e",
        "cursor": {
          "ref": "b615cc3a-8faf-4d32-945a-3d91d587af69",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "34e61cff-88ff-4a8b-ac93-8f7a92da630b"
        },
        "item": {
          "id": "af5b0bf2-c4f3-48e2-b84f-29f6eefd388e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3a037f6c-fc54-4730-9006-180e496e6ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82124872-38b4-4ccd-ae54-44c94f0b0918",
        "cursor": {
          "ref": "8813ce17-d09e-4db0-82cf-7912df891c81",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c199e818-a46e-491d-a9b1-6d54a50afd29"
        },
        "item": {
          "id": "82124872-38b4-4ccd-ae54-44c94f0b0918",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f04ccc6a-8324-41e9-9770-4c93cc96c668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eaeaae-5f3f-422e-b2ec-09ef19b82fd5",
        "cursor": {
          "ref": "8898adab-bdce-402a-8e88-83c8f75bb03a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7bcea8da-b098-48ce-8399-0d37f5a163ce"
        },
        "item": {
          "id": "b0eaeaae-5f3f-422e-b2ec-09ef19b82fd5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bb800bb2-b10b-46a8-9528-4c49e26d7016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e813da0-81db-41dd-8213-7cc6fffacdf1",
        "cursor": {
          "ref": "d813e424-4b41-478e-ae5d-e15afc5945bc",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1e84c187-84de-441d-a87d-fb9cebb7e6eb"
        },
        "item": {
          "id": "0e813da0-81db-41dd-8213-7cc6fffacdf1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a09f6734-594e-4b71-aa2b-6c0fddadef42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6344e897-b841-4927-aeb9-2379487779b2",
        "cursor": {
          "ref": "f5785349-243b-437d-b1f0-5c56953490bc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "87da17d4-0502-464b-b3fc-f345d8e0fb56"
        },
        "item": {
          "id": "6344e897-b841-4927-aeb9-2379487779b2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b6e2075e-b93a-4c1e-8021-527ce8b54c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d8a27f-d1f2-475b-83b8-9e1a150c83ac",
        "cursor": {
          "ref": "939597b5-bf27-4692-8c3d-824ddaa0f068",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9232ffdb-5b58-4668-a044-f4168d6a617d"
        },
        "item": {
          "id": "73d8a27f-d1f2-475b-83b8-9e1a150c83ac",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9fd03d5d-1606-433d-9b76-8f5a2cd5a272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 158,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a0d046-7490-44c5-84fe-8ff6dd676450",
        "cursor": {
          "ref": "e0b3a405-8786-4f3b-9ed6-65f2b108539d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a358a837-25cc-4d51-8f81-fd6589bf295d"
        },
        "item": {
          "id": "87a0d046-7490-44c5-84fe-8ff6dd676450",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4a2f46d4-700c-4de0-a932-8543242cdcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244ef213-70c7-4104-b6e5-a4c7fb56758d",
        "cursor": {
          "ref": "505ced49-2894-41d2-93cf-f64f824bb9d0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1062ec50-d5de-4c19-820c-647cb3cdee6f"
        },
        "item": {
          "id": "244ef213-70c7-4104-b6e5-a4c7fb56758d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "26989b00-2ac8-4740-a618-9faa0c7377fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03399f14-d90e-4783-b56f-56620fe1443d",
        "cursor": {
          "ref": "2475f143-4061-49f6-8957-5c0ffeedc5ba",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cf3891e1-d983-42cf-94e2-629f1496716e"
        },
        "item": {
          "id": "03399f14-d90e-4783-b56f-56620fe1443d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b8c69121-242c-470d-8af5-76dd3a6d2c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e9c2e8-1853-4142-b391-b34961246d87",
        "cursor": {
          "ref": "6b923bad-cf7a-4289-b71a-86a8e3587911",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cf27cd45-f1e8-4f0b-9218-bcd955a82d53"
        },
        "item": {
          "id": "d7e9c2e8-1853-4142-b391-b34961246d87",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f4009468-4fda-493c-ad75-ab40c265896a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1fbf29-2272-4cd8-891b-31d7ffabe2e5",
        "cursor": {
          "ref": "aff8b94b-acd6-4b05-9fe4-e19e09759d5f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9df7a70-5259-481b-b763-481f72602db2"
        },
        "item": {
          "id": "ab1fbf29-2272-4cd8-891b-31d7ffabe2e5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "630dfe5c-7460-4f67-9bd7-b953a3ed6537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b149bd7-9f4b-4c41-b7ee-8bc40b30a790",
        "cursor": {
          "ref": "eb8d99eb-50aa-4e09-9f86-4d1d5180487a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "706f9396-dfc4-46ce-a353-349270afe9ab"
        },
        "item": {
          "id": "6b149bd7-9f4b-4c41-b7ee-8bc40b30a790",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b3985e93-a8c1-4fdf-b587-66c512a4a21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b819f442-1ed1-488b-b626-d625c4a16c64",
        "cursor": {
          "ref": "fa3e0a45-0c2e-4a99-85bf-1a6ecdcb8e21",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "12e42331-a843-4224-bc1d-e972ecc935c1"
        },
        "item": {
          "id": "b819f442-1ed1-488b-b626-d625c4a16c64",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "abfcc24f-3836-42df-ad8d-1044f5aa6929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f75174-1946-4056-936a-2aba8bfe9c34",
        "cursor": {
          "ref": "8a69ad04-4eed-4ac2-9691-616962a15356",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "11f53def-68cd-45f2-add3-eeb43c4e55f7"
        },
        "item": {
          "id": "33f75174-1946-4056-936a-2aba8bfe9c34",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bdcc0e9b-6fd7-4a6c-a071-66481383812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e061c14-f8f0-497d-abe0-c21fcb496a81",
        "cursor": {
          "ref": "ac2f52cf-1100-4ad4-a4de-7e92d94cf0fc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "227281f5-1890-455b-882f-f19dda930497"
        },
        "item": {
          "id": "4e061c14-f8f0-497d-abe0-c21fcb496a81",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e4ac7e7-901d-4010-b526-b75430ec08ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65610321-c33c-4a9f-9bbd-de52d5c09c53",
        "cursor": {
          "ref": "afa7d1cb-ceca-41b6-bab5-142e9b26ad9a",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fbabf7be-1f59-4bdf-8fb8-ebf6e3e0b53b"
        },
        "item": {
          "id": "65610321-c33c-4a9f-9bbd-de52d5c09c53",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "449cb613-0bf4-47bf-ac64-bb256c8a2467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b798f1-cabc-490d-a024-a454407703bf",
        "cursor": {
          "ref": "7503b640-b781-4043-9386-6b05b38f2306",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4e00287b-e221-4b12-b817-1230897e2b90"
        },
        "item": {
          "id": "09b798f1-cabc-490d-a024-a454407703bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5b8f3989-d4da-4fa9-b49f-c8dcd8a6e323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ac5501-636b-4aad-89ae-76bd29598b60",
        "cursor": {
          "ref": "def78f50-de3e-43f8-a248-7370eae993f7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2b071929-4eac-47a6-a930-a33e64ccff4e"
        },
        "item": {
          "id": "99ac5501-636b-4aad-89ae-76bd29598b60",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4dcb42a6-83da-498f-b4cf-068ca075421f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115e035d-07f5-4df0-9069-66c72c01e725",
        "cursor": {
          "ref": "fb6b7d3b-9b9a-4a78-8c4d-e260e52f18da",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b95e216f-f66c-4461-a261-4d07b179e863"
        },
        "item": {
          "id": "115e035d-07f5-4df0-9069-66c72c01e725",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d227bead-9366-43a4-9f26-80796cd2a9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0aa37b-0c17-44b0-8f58-bf49b825ae22",
        "cursor": {
          "ref": "b2386b06-9b59-443a-aad8-be35fd112bc4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a06c1f3e-3c9e-44e5-8c04-ad4fba51073a"
        },
        "item": {
          "id": "9a0aa37b-0c17-44b0-8f58-bf49b825ae22",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6b98c8e0-1554-4b96-b2b3-3cf8ad9dbd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151f44dd-e543-4e6f-8ca1-15a8a6c064b1",
        "cursor": {
          "ref": "b8e2bf5c-7813-41e2-888e-c3ec1c60f063",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "51937afe-c661-4cd3-a9ac-d4e0b52178d0"
        },
        "item": {
          "id": "151f44dd-e543-4e6f-8ca1-15a8a6c064b1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b6b86a9d-4ecb-4f32-93e1-7c97c5787671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3776a5-e330-4cb8-8d2e-5722b6fc645a",
        "cursor": {
          "ref": "77dc1f06-908b-4692-bacf-acdecc611a5e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1504c3da-f762-4269-9e4f-b0da5be20508"
        },
        "item": {
          "id": "9d3776a5-e330-4cb8-8d2e-5722b6fc645a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8c15f652-1a3a-4d8c-bc8a-e5ba7467e4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ddc5d4-1f59-43ac-86d8-1337507c7e86",
        "cursor": {
          "ref": "b370fb1b-11dd-429d-ac82-5a1c2aea1359",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "cd60ff9b-fa66-48bc-8862-5ae205a74c99"
        },
        "item": {
          "id": "80ddc5d4-1f59-43ac-86d8-1337507c7e86",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "14b316b1-f8eb-4caa-a23e-1318b535e2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ad59c2-b906-4806-8b9b-271c76246fac",
        "cursor": {
          "ref": "da3af1c5-2559-4953-a756-92cf99737dbb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "394f6269-ce2e-4453-90a5-1f40e2b84eb6"
        },
        "item": {
          "id": "b0ad59c2-b906-4806-8b9b-271c76246fac",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b004e2bf-9491-4327-ac55-45036f278f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a61a49-c0fe-4525-a611-aa704249d6bd",
        "cursor": {
          "ref": "49b4e87b-44bb-40db-8443-0feb9baeff59",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bfa44fbc-83c5-4473-9cfc-b853910e9fe9"
        },
        "item": {
          "id": "53a61a49-c0fe-4525-a611-aa704249d6bd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5156fd05-0b79-4df7-9abb-713552b99abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c650422-740c-40b9-b419-30cb759f8574",
        "cursor": {
          "ref": "5d5796d0-91a1-4048-8a4b-ed2a3b6cc434",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fc6f9a6d-101e-424d-8e57-6dde693da060"
        },
        "item": {
          "id": "9c650422-740c-40b9-b419-30cb759f8574",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "59374d91-b616-4cc2-a39a-174e59691867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c109a02-7edb-4dba-a2e2-ae452db87768",
        "cursor": {
          "ref": "99c5f25f-39cf-41e5-ba70-eda0f88edfec",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d98140bc-4001-4b46-84b5-0f3da4580097"
        },
        "item": {
          "id": "9c109a02-7edb-4dba-a2e2-ae452db87768",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "84ed441a-49a9-44b9-af8e-a5232d44cda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e901555-0743-43e3-bfdb-aa0a0e36220c",
        "cursor": {
          "ref": "cd0644c1-50a9-4364-9ca7-74ac830b1ddb",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c4f8d40c-3e2f-4394-a495-3af48ba15d97"
        },
        "item": {
          "id": "9e901555-0743-43e3-bfdb-aa0a0e36220c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "741784f2-db59-4d41-bf87-d54554ce7e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848aa63d-cd3a-4ec9-8a6a-ef7c3f3a4782",
        "cursor": {
          "ref": "19e3ab25-cc78-429d-8317-986e157fb259",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "397b2d52-855a-4c76-8540-aea0ff1f3828"
        },
        "item": {
          "id": "848aa63d-cd3a-4ec9-8a6a-ef7c3f3a4782",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fdbdbac4-1626-47ed-9aa8-24e4759ba5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330df761-7186-4186-be61-4f853f8566d4",
        "cursor": {
          "ref": "e775a04a-93d2-4095-9e90-3cc68020eca6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4726cba9-c575-4ef5-b955-da96b502f904"
        },
        "item": {
          "id": "330df761-7186-4186-be61-4f853f8566d4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "38453f4e-9df7-4108-b52d-0ce30bd576a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0ab2ad-bb1e-462d-804e-6a3472f11501",
        "cursor": {
          "ref": "0ec0b11b-c539-47c1-a0c6-73820849a01d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7e513259-f568-4df3-a022-b639985178ae"
        },
        "item": {
          "id": "1b0ab2ad-bb1e-462d-804e-6a3472f11501",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "962009b0-7939-4520-b285-84bdf1a36824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e72e17-ef14-4579-95bd-378837475784",
        "cursor": {
          "ref": "4e288b7e-9019-4bc1-ade4-5736e98305b8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6945b920-2e01-4e8c-9529-beac4ea13f87"
        },
        "item": {
          "id": "f8e72e17-ef14-4579-95bd-378837475784",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7e15e77d-63c7-4188-9ed6-7a0f94943003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156c732a-a331-4209-aeda-239884e4a381",
        "cursor": {
          "ref": "61e0709b-91e7-4f23-9fea-ce0aa2f7a222",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5c748661-8233-4828-9222-3e46dee2a209"
        },
        "item": {
          "id": "156c732a-a331-4209-aeda-239884e4a381",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "25e91d87-682c-4827-9632-366a7e5f1146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cec3a5-dd65-4919-8890-0da144a29e08",
        "cursor": {
          "ref": "15cf2ed4-04d0-4260-801b-3406ff8efddd",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b0da9461-50a5-47ec-b205-cd80c0ce778e"
        },
        "item": {
          "id": "61cec3a5-dd65-4919-8890-0da144a29e08",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "059e1d0f-1585-46a8-a36f-3d4d88a7cc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2ac919-95c1-4060-84f3-a4185ec3af07",
        "cursor": {
          "ref": "7c24efc1-c7e9-4727-a059-5aec3c9f1bb5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "be9c1dec-cd93-41bb-8a3e-046f749aa478"
        },
        "item": {
          "id": "5b2ac919-95c1-4060-84f3-a4185ec3af07",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "648a1167-e9b5-4073-bee1-f372f3766ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07835d6-c2ee-4da9-a3db-3043410befb4",
        "cursor": {
          "ref": "ecd7e165-8677-4599-9345-33a4c5484cc8",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c5f6356-e4c5-4504-b5c8-24d642f0cd16"
        },
        "item": {
          "id": "f07835d6-c2ee-4da9-a3db-3043410befb4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "71607720-e276-414b-8e01-b350888b461b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3b481b-3043-4396-b36d-f61de6ccf73b",
        "cursor": {
          "ref": "fe3c185b-b0d6-4e5e-a935-02bbac54353b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c567a870-fe86-48fb-b1d1-903c44aad0ca"
        },
        "item": {
          "id": "5c3b481b-3043-4396-b36d-f61de6ccf73b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3d226ff8-108c-49a8-95a0-405ff20ab4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f18293-68aa-4061-879e-9e94152b8b81",
        "cursor": {
          "ref": "470b019e-cc52-40a7-a2ea-0c79af157792",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ba02a519-3555-4223-bdc9-d5b2176cd928"
        },
        "item": {
          "id": "95f18293-68aa-4061-879e-9e94152b8b81",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ddc80012-1fc9-4cc0-9f13-af43607dad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c6e9e7-eff4-4518-a583-adf9e5d60790",
        "cursor": {
          "ref": "eafaa8b7-6955-4569-b5d4-8b1cb88c207e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fd99bbb8-57cd-45cd-901a-7992f75902ff"
        },
        "item": {
          "id": "05c6e9e7-eff4-4518-a583-adf9e5d60790",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "122a1075-3673-4795-be20-c5421a1d1255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b28b450-09cd-4377-9e17-c3eebe648ef2",
        "cursor": {
          "ref": "7aebdbb4-d284-4746-8def-4ee2dfb40ab2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "796b16a7-cda3-4cd4-8c19-679ced13276c"
        },
        "item": {
          "id": "4b28b450-09cd-4377-9e17-c3eebe648ef2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b41300c9-e51d-45c6-84ef-82658e94f662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af121c63-13c4-4b44-82c6-c16e171489eb",
        "cursor": {
          "ref": "87f74c7e-af77-42ba-9a28-2c050d566e4b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1231b2c3-bc31-48a3-881d-31e85a52e562"
        },
        "item": {
          "id": "af121c63-13c4-4b44-82c6-c16e171489eb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "efe16a9b-7f67-4619-8052-bd5671fe905a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9be5f70-7067-4947-b6db-5a8a4a3d9d93",
        "cursor": {
          "ref": "2d15af3a-466c-4d80-8016-276b83615485",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8c1d37c-7987-4c2d-aa6e-0ae2fbccf4c1"
        },
        "item": {
          "id": "a9be5f70-7067-4947-b6db-5a8a4a3d9d93",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "70b70dc8-a806-4bee-ba0b-b831e50d6fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523fa9b9-d496-4f61-8be4-a45ee9d301c1",
        "cursor": {
          "ref": "60b40764-2b9d-4697-a18f-8e1321cd1f9a",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "148294d5-2988-4209-a363-fc727b05d066"
        },
        "item": {
          "id": "523fa9b9-d496-4f61-8be4-a45ee9d301c1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9ea65b01-ea18-4ac1-b46d-65234b01fb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3269e8-8e36-4e0c-b435-164a917f840a",
        "cursor": {
          "ref": "35dee0d0-d092-4f1d-accc-7972e2dde54d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ca6eb5e7-3e6b-4a82-91cc-e2ad185f608d"
        },
        "item": {
          "id": "bb3269e8-8e36-4e0c-b435-164a917f840a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "39e411b6-775a-41a8-b6b2-9a0a1509ed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f753c459-37a0-4af8-b5a3-009d32b9c399",
        "cursor": {
          "ref": "387c6f8d-5715-4330-b786-97e3065a643e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "afaffd05-1ed4-4e1b-a538-c4194d49d0ae"
        },
        "item": {
          "id": "f753c459-37a0-4af8-b5a3-009d32b9c399",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6de732d1-a0ee-473f-80f0-b999d4d706c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb79eaf3-f982-4099-9ab6-34b9026ea569",
        "cursor": {
          "ref": "409e8798-6339-4729-8bec-339075a1d54a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d7aed91-b4e3-43ac-882e-73f1c127c323"
        },
        "item": {
          "id": "bb79eaf3-f982-4099-9ab6-34b9026ea569",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9df54615-ffab-4536-a523-2659298c2692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900c0b81-2151-4e48-b3ad-3197e1bb88f0",
        "cursor": {
          "ref": "a1de852c-090e-459a-9f5b-d3e8e17160ff",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "807f1f22-acc6-4748-91de-50ee5f049a73"
        },
        "item": {
          "id": "900c0b81-2151-4e48-b3ad-3197e1bb88f0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "44d98ecf-12c1-4995-bb81-ff1b0f8c01ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64240096-ffe7-4f6a-98c0-f1aaa2eeb32d",
        "cursor": {
          "ref": "a7e27a35-ce33-4662-a397-9d1c2c103ecc",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4f1a48b-d11c-4f6c-82d0-1ad47152d96f"
        },
        "item": {
          "id": "64240096-ffe7-4f6a-98c0-f1aaa2eeb32d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3da49c45-55b3-42e3-8fdc-d74b2082d260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8e93fa-4cea-4594-9a40-dfd5b3147eb2",
        "cursor": {
          "ref": "62e857c0-2f60-441d-9984-a924344262b8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4b73f90e-a501-42eb-8b63-7b78df4f78a3"
        },
        "item": {
          "id": "9e8e93fa-4cea-4594-9a40-dfd5b3147eb2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f0650496-42db-484a-b167-9d6e671d855b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ea3043-0313-4bd4-a36b-6276b55a8412",
        "cursor": {
          "ref": "fd3e3bea-f929-40b9-80d1-2932556cda18",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b17c25f8-07e5-4794-8c56-f8ac3d25c585"
        },
        "item": {
          "id": "62ea3043-0313-4bd4-a36b-6276b55a8412",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a8cc3f90-b7af-460e-bb7e-3cfc75536c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197444c0-00e0-4af6-8cf7-82dd825b7a9a",
        "cursor": {
          "ref": "d3c476a2-ebe6-42ab-b86d-1c4c6ef459ac",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c5b1c5ca-2651-49be-872f-ea3115c6a4b2"
        },
        "item": {
          "id": "197444c0-00e0-4af6-8cf7-82dd825b7a9a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "016c46cb-6aa3-4c71-a8f6-6202469c40a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a2511a-a813-402f-b71a-a95c087cbed4",
        "cursor": {
          "ref": "79667cf6-8b9a-4402-9306-66049a87c675",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dd687828-278e-4901-a7f0-9823599f8521"
        },
        "item": {
          "id": "f3a2511a-a813-402f-b71a-a95c087cbed4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c7fe6e6a-bb4d-44ff-b482-61022e7f9349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf9deab-7d4b-4238-a4e8-911653e71a84",
        "cursor": {
          "ref": "d029aa09-b71d-4530-bfeb-ddff422b7d39",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ea543a26-2c0f-402e-8843-9e323a0caf93"
        },
        "item": {
          "id": "faf9deab-7d4b-4238-a4e8-911653e71a84",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "05c7b199-d94a-4885-a5ba-c1a30c925c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ff2083-1655-4fc3-93e0-51e3930299df",
        "cursor": {
          "ref": "9f06f261-c4d7-4394-a9da-97c664fae950",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "34495736-5d37-47c6-ba15-90e411340a72"
        },
        "item": {
          "id": "c2ff2083-1655-4fc3-93e0-51e3930299df",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0d033e64-9c6c-4ac7-871a-667a4426a99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb8aeb0-3b11-4beb-a4f3-6e734b0f0ca2",
        "cursor": {
          "ref": "a3e88146-d87a-4fd2-b6ea-73305d253a8d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "59542dd9-dfb8-4a62-8e04-c1bc7e00782d"
        },
        "item": {
          "id": "dbb8aeb0-3b11-4beb-a4f3-6e734b0f0ca2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a9a7d48-2dea-4cb7-ae50-4f10589b1dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c883d4dd-e475-452e-a4ba-e25013656bd9",
        "cursor": {
          "ref": "2632e7e3-167c-4e5a-839b-09263deeea8f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "50599311-5a60-4f03-8778-9617aa6f3b88"
        },
        "item": {
          "id": "c883d4dd-e475-452e-a4ba-e25013656bd9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c0d5c652-63ae-48be-b32e-c4674dd6f888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893f9c69-41a4-4bc9-90e5-a15c6aef15f9",
        "cursor": {
          "ref": "49f1f744-6d61-4b6d-aa1a-d394863e2828",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c6f454fb-c2ad-4619-8ec8-d7c6896ee868"
        },
        "item": {
          "id": "893f9c69-41a4-4bc9-90e5-a15c6aef15f9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "341b071a-4d5a-450c-8c31-b19697605da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e160f8b-7d57-424c-b2cd-89e66b33c68d",
        "cursor": {
          "ref": "72f37bfe-16d5-4ecd-84d3-ae05c287d250",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4b76f53b-e4f6-4e6f-9baf-63a085165389"
        },
        "item": {
          "id": "7e160f8b-7d57-424c-b2cd-89e66b33c68d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5788efda-2e05-442d-8231-7e84de9f4e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552abc07-5871-487a-a6ea-bc66d3bc227d",
        "cursor": {
          "ref": "9104e3f5-a32b-4c86-be5d-adc9c474d4fb",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4bc61988-6896-45df-9a11-38041db2ebeb"
        },
        "item": {
          "id": "552abc07-5871-487a-a6ea-bc66d3bc227d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e5a6c0cd-981f-4dea-9d25-f8795b70a5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f17d1fd-1a99-4056-8cd3-b5533a606cf4",
        "cursor": {
          "ref": "a4c6ea24-a2e0-4b63-a3df-7bbefd040996",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1825ba4c-3116-4489-8b87-2563ed0d6733"
        },
        "item": {
          "id": "7f17d1fd-1a99-4056-8cd3-b5533a606cf4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c2d0505a-6f76-4f95-ba30-e5bc1fe28d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fed053-6396-4083-9900-f19526616936",
        "cursor": {
          "ref": "897f5464-f815-4e71-9581-b42e0c228f33",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ec9257f5-959f-4fa1-9f4e-acda404e59d7"
        },
        "item": {
          "id": "99fed053-6396-4083-9900-f19526616936",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bbd38248-4df1-4b7f-8850-37877f745d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05946756-85c9-4ba8-8956-1dbf54803bd7",
        "cursor": {
          "ref": "c4888e43-622d-4bbf-b353-a361545978ef",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "28ed0a35-1c63-43b5-97c6-d3a8e722294f"
        },
        "item": {
          "id": "05946756-85c9-4ba8-8956-1dbf54803bd7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "74c18a91-81ac-43d1-baeb-7ef6ec4a1ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc04f9f-60df-4e3b-a0bd-61c2ae491bd2",
        "cursor": {
          "ref": "f4cbb67d-45bb-49fb-85cf-dd32ef0f6674",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "73cce634-28b0-4e28-bf75-a17b61824d46"
        },
        "item": {
          "id": "ccc04f9f-60df-4e3b-a0bd-61c2ae491bd2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0607b307-62fd-40df-98e5-5c04ff3fea76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a91bb20-1874-4520-bf02-32b7568aaf8e",
        "cursor": {
          "ref": "f74966f2-ce95-47b8-8691-6c99b26789a6",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1c911e90-6993-4cee-9220-6f0eb7d8e60e"
        },
        "item": {
          "id": "5a91bb20-1874-4520-bf02-32b7568aaf8e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "324186f7-63a7-4a51-a2ed-0567926da460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d357ccaa-f08f-494d-9fee-df00ff688855",
        "cursor": {
          "ref": "a082a537-40c3-4f49-8db5-2a20dee4e059",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "64962a84-3252-4023-9755-a554cb095b4c"
        },
        "item": {
          "id": "d357ccaa-f08f-494d-9fee-df00ff688855",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "19dc05ff-797e-4627-9073-845e81cbf448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d78ede4-02d1-4f37-bed4-0942c78b5aef",
        "cursor": {
          "ref": "58a33b46-11bf-4782-9cff-3a02428e405a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f55035f1-58a9-4a86-91e7-fa5a7c8ed02c"
        },
        "item": {
          "id": "5d78ede4-02d1-4f37-bed4-0942c78b5aef",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7463292f-df2b-40d8-9cbb-0a8a08923451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b18ff65-a494-42e8-a55f-03b753fe1253",
        "cursor": {
          "ref": "09826592-dbc1-49b8-95f0-be8fcbb73a4a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0bdbe260-b068-415c-81b0-0e8ba98a9b7f"
        },
        "item": {
          "id": "7b18ff65-a494-42e8-a55f-03b753fe1253",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5c535bfa-fbd3-4b78-a117-32d8f270e09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fea9cd9-5863-4b2b-a74b-d4f0b4e21f50",
        "cursor": {
          "ref": "715ea754-80a3-47ae-bbec-94e788c2e100",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2296475d-5102-4fcf-9818-1e86b0e613ba"
        },
        "item": {
          "id": "0fea9cd9-5863-4b2b-a74b-d4f0b4e21f50",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8379de14-6002-415b-995a-64f036c0cd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37731556-c984-4bee-a91c-142900017a14",
        "cursor": {
          "ref": "3089db6e-13dc-4352-92b5-69f8c477d831",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8bb1d72c-0706-4c91-ad5e-13bb3c27527a"
        },
        "item": {
          "id": "37731556-c984-4bee-a91c-142900017a14",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "20e544fa-23bd-4cbb-876a-789ead70c99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bbaafa-66d6-4d10-a00b-1066b5d541b0",
        "cursor": {
          "ref": "e13e386e-c1d5-4064-bf46-b8bb96a40a68",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0f1de29b-aac8-498f-a865-1965e4dc8afb"
        },
        "item": {
          "id": "64bbaafa-66d6-4d10-a00b-1066b5d541b0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "096fc8ec-6a3a-4905-b88d-7e7be5165c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430e44da-d5fb-476d-9c48-5838da415fd3",
        "cursor": {
          "ref": "703a5a92-7095-4374-a45e-9c74b66072da",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5c150081-af6c-4975-ad8b-ce8e25e6c089"
        },
        "item": {
          "id": "430e44da-d5fb-476d-9c48-5838da415fd3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0a4d1ab2-cee4-42e1-aa54-6a38d9daaa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea9696b-8d17-4ca6-b83c-fe7d58f37ca4",
        "cursor": {
          "ref": "8a9cced2-d2ff-4980-8fe5-054eeeb32804",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ea48faf5-5995-4171-9d7c-afe3b4c75641"
        },
        "item": {
          "id": "8ea9696b-8d17-4ca6-b83c-fe7d58f37ca4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9404d0a2-bdf6-48bb-9fe2-762c1314ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b215143b-0386-4784-b115-79055fab4b1c",
        "cursor": {
          "ref": "2a4a7ef9-6730-434f-b578-c9879fedbac5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "01941200-9fad-4f89-909f-c91b396b9608"
        },
        "item": {
          "id": "b215143b-0386-4784-b115-79055fab4b1c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d84a33a6-155a-49da-a964-5f46cfa21d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558f2311-27f3-455c-a47f-e2390ad601f2",
        "cursor": {
          "ref": "841a8586-af7e-4246-a640-79e7c7f77857",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "57306049-94ee-4b34-9735-511f14e20832"
        },
        "item": {
          "id": "558f2311-27f3-455c-a47f-e2390ad601f2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d3b1969b-616f-4df2-a9f0-29257c884460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ed76a4-28cf-4e3c-b7f0-866cf5566976",
        "cursor": {
          "ref": "04776641-12c0-4c08-b009-0d6ad870e948",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c32bdc5f-1109-43d2-8813-50024c6f4d25"
        },
        "item": {
          "id": "f4ed76a4-28cf-4e3c-b7f0-866cf5566976",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2e124c4d-ceef-4bfc-aec4-1142d7d4a8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9721589b-cf12-44a7-a6a2-87feaeb988be",
        "cursor": {
          "ref": "8d056c48-6471-4f87-a9e7-d80c2e3fda3f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f3af3722-d391-4bf9-ba46-185ad4e456af"
        },
        "item": {
          "id": "9721589b-cf12-44a7-a6a2-87feaeb988be",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "089aad7d-aa38-4398-a249-6df84996621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa28eec-b1d2-4cca-a92b-b6362064d517",
        "cursor": {
          "ref": "f48385c9-197a-457d-b138-4f0b47c8050f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d3954453-140d-4c66-a9a0-9dede1fb8728"
        },
        "item": {
          "id": "0aa28eec-b1d2-4cca-a92b-b6362064d517",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b0031759-3135-4801-a247-de8a8bca7f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6314979-0371-4b7e-86eb-20f3575e392a",
        "cursor": {
          "ref": "6d46e89a-3a18-4ec0-9ceb-9d328e9b7c79",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "91956bfe-5a24-4f6f-a5d7-6e10f3338d2b"
        },
        "item": {
          "id": "d6314979-0371-4b7e-86eb-20f3575e392a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6d4943a1-24b5-417a-bb9e-8baeb6fb69b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce30091-da85-4d24-a89a-2e7463b3e6a9",
        "cursor": {
          "ref": "9e69ea61-d714-48fd-8d46-122d2bddc60c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d6c5be40-f0ff-4900-a81e-28ab3e239a38"
        },
        "item": {
          "id": "3ce30091-da85-4d24-a89a-2e7463b3e6a9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d5809dd0-0e33-4589-8e7a-52fde927007f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f78005-a502-440c-9561-7fd19e0c2fd0",
        "cursor": {
          "ref": "1ce44089-27d0-428e-90cb-56ac49c83fb5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "255a77f3-324a-4cdb-b574-aef19ef2438a"
        },
        "item": {
          "id": "b8f78005-a502-440c-9561-7fd19e0c2fd0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b11763ba-b3fd-48b4-b138-c19fa3471eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b7b429-193d-4cdf-955b-9a3e001c6fe3",
        "cursor": {
          "ref": "757fc17c-a78e-479e-ac52-365648d30cf2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b25d1b66-0750-47ff-80c5-763590afdfcc"
        },
        "item": {
          "id": "d7b7b429-193d-4cdf-955b-9a3e001c6fe3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7fbbbd88-6f9f-4e5b-a806-14dfe8f94240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd91528-dd46-4483-a479-e4909b0d7af4",
        "cursor": {
          "ref": "44cfaecb-ad98-4dec-962d-ca893b7d5274",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4649e34d-3b13-48e7-afdb-bd7428bf3389"
        },
        "item": {
          "id": "0fd91528-dd46-4483-a479-e4909b0d7af4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "62590858-a6a9-4acc-96e6-405052fca4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be4f551-db0c-4c59-9b9e-377d68f15358",
        "cursor": {
          "ref": "4dc18f8e-bd0f-4e28-883a-a66d137f70f3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "be64ad71-81b8-4ad9-b6f5-6157211561f6"
        },
        "item": {
          "id": "4be4f551-db0c-4c59-9b9e-377d68f15358",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2dba11c8-92bd-49dc-af31-33f68b3d24bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4274ab-472c-4c16-a0de-811be0718dd8",
        "cursor": {
          "ref": "f92abcd9-1ec2-430b-a9a8-22368bb1dadf",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2cc1896e-4c1f-418f-8e1a-6c05e908b621"
        },
        "item": {
          "id": "af4274ab-472c-4c16-a0de-811be0718dd8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "04b62690-5180-454c-b064-4d73cee1b0f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389aec39-b4f3-4d45-8748-a76f6976e9cb",
        "cursor": {
          "ref": "f8f4b1fc-be4a-4877-8768-85325aab4176",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a00a44ab-d047-4488-8bbd-03d19e44c35a"
        },
        "item": {
          "id": "389aec39-b4f3-4d45-8748-a76f6976e9cb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "38f6318e-88d2-4cf6-bffb-af2a454aeff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "77ff42f1-645b-4bbc-8151-e6a88388f69b",
        "cursor": {
          "ref": "3cf0af8d-97d5-434e-b763-fb6b4f4cefed",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "37a7ac2e-6a9e-43ae-85b8-9f5ec99deeec"
        },
        "item": {
          "id": "77ff42f1-645b-4bbc-8151-e6a88388f69b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7e58a7e5-9730-4852-9fde-242e6091cc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1908dba1-dfc5-4d33-9846-3b2b4757caca",
        "cursor": {
          "ref": "9b04c1fd-ad31-445c-b0d8-f31b1945c535",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d33b74a3-0f32-4c74-8ea4-6452ffb8addd"
        },
        "item": {
          "id": "1908dba1-dfc5-4d33-9846-3b2b4757caca",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0c2edbc1-8295-4497-813b-561ebcbe722b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "748731aa-d8d6-478f-bbd4-24b7e462a55b",
        "cursor": {
          "ref": "d32524a6-e275-4ab0-85c4-f128e3e424e2",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0f6df1b7-e129-4a64-9665-78b653230005"
        },
        "item": {
          "id": "748731aa-d8d6-478f-bbd4-24b7e462a55b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d7cff67-e7f8-4905-af29-cb1c60f56951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5f28804f-bda1-427f-bfee-74d4e18b796c",
        "cursor": {
          "ref": "01d01069-98b9-4602-8d8d-6473eeda8554",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d125960a-e85d-4aaf-9f87-2d7b524e6b5f"
        },
        "item": {
          "id": "5f28804f-bda1-427f-bfee-74d4e18b796c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "82e1554b-c8f6-4646-bf07-95ee329ad23b",
          "status": "Created",
          "code": 201,
          "responseTime": 14432,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1ac567-0fbf-4bbf-9bcd-5542dd63e0e4",
        "cursor": {
          "ref": "2d266c42-5456-4e1c-8813-d38de52b5aab",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7e93ef6f-671a-42b8-9c20-d9c2108c48a2"
        },
        "item": {
          "id": "8a1ac567-0fbf-4bbf-9bcd-5542dd63e0e4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8f1d1696-5ae8-43b0-ab9c-bc25f25cd1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ec015f4a-b97c-42bd-ae07-8a3a359d77dc",
        "cursor": {
          "ref": "7c56a261-8f66-4e61-a67b-af5883825f56",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "eafd1bd1-198c-4be3-879a-52021ecc73b4"
        },
        "item": {
          "id": "ec015f4a-b97c-42bd-ae07-8a3a359d77dc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f5d5bcb0-d966-4c43-b554-717ce46e5297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0f2279fd-f232-440d-8134-483711b1b25a",
        "cursor": {
          "ref": "e7620d8b-e97a-485e-84e1-f62926106744",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4096acdf-eb4f-46f6-a1eb-e186c64e26d4"
        },
        "item": {
          "id": "0f2279fd-f232-440d-8134-483711b1b25a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a4ff91bd-5302-4e7d-91d5-507f0bd04954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378b9fe9-6d47-4a36-aa82-785b5ba1ca25",
        "cursor": {
          "ref": "713d4344-12a7-4ea7-bf09-fa59f43a26eb",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6b55df44-1bc6-47da-a745-7ef3a8c8e941"
        },
        "item": {
          "id": "378b9fe9-6d47-4a36-aa82-785b5ba1ca25",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8484cc61-dfb4-403e-9b1e-12144e61aa0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ed19b4-c0ea-4a09-8fb4-5e0ab1f4f9e6",
        "cursor": {
          "ref": "27d2cfe9-1c52-4c64-84ea-d3bf60c47f43",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "15e0c5db-daae-4f13-a8a3-48d4b587a9a5"
        },
        "item": {
          "id": "c7ed19b4-c0ea-4a09-8fb4-5e0ab1f4f9e6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7de18be3-a7da-4a3c-8a05-0767907a3055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1630aa-4e86-4996-b06f-08d89b777f5d",
        "cursor": {
          "ref": "9f1da08f-9784-42c3-8c7d-a0d880b147db",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d25e2a54-1b41-4962-abbb-c9b1c7775ae0"
        },
        "item": {
          "id": "ca1630aa-4e86-4996-b06f-08d89b777f5d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9bdeb2b2-5751-445b-8707-a18954cdef15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc241bc3-3c54-4298-b792-3eaffc30fee6",
        "cursor": {
          "ref": "50e8cac8-324f-476d-b543-74b9404e96b9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1cde7a13-c5fe-40e1-8329-7928d474bfbd"
        },
        "item": {
          "id": "bc241bc3-3c54-4298-b792-3eaffc30fee6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4e00ba4a-bd3a-41cf-a635-6f00dabe3b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef85ce9b-aec2-4983-8735-395b22405f19",
        "cursor": {
          "ref": "0143ffcd-8dca-4d7a-9445-2ca01cb1a23c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f84ef44b-9615-4552-8a37-2224455734b7"
        },
        "item": {
          "id": "ef85ce9b-aec2-4983-8735-395b22405f19",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7746cca6-af92-46b0-b598-cc8c91ba7b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d421ee9e-c276-4bce-a2f2-1da80f877abd",
        "cursor": {
          "ref": "f248ef19-a982-4093-8f65-48dc47e9bd05",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8227f07f-e57b-40b6-9d2d-507f60258c49"
        },
        "item": {
          "id": "d421ee9e-c276-4bce-a2f2-1da80f877abd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d9c6de61-ecbb-4e1c-a3ed-3c65343f5a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869c0535-cd1e-461a-a748-9c09d04dc95a",
        "cursor": {
          "ref": "b1fe5a2f-5e94-41d5-b00e-c8ce2956686c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e439e767-18b8-4717-9ee4-ab0c49f94089"
        },
        "item": {
          "id": "869c0535-cd1e-461a-a748-9c09d04dc95a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "93387912-2064-4f4e-b98b-e78b9100c0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ea081b-6b04-4973-a4d6-9209d6e66af2",
        "cursor": {
          "ref": "e56a0ad0-6d8b-42ab-bc6f-27b4fe3e1cf8",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cf0fd840-1e30-44af-a3db-e1abef51dc08"
        },
        "item": {
          "id": "89ea081b-6b04-4973-a4d6-9209d6e66af2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "32e33d59-c240-41d7-a7ac-9c90ad1fc551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb8140c-4dca-434d-ad67-e6253b71b64e",
        "cursor": {
          "ref": "a3a935c3-944b-4821-a14a-d689d034f801",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "480b2083-fb95-4110-b03c-8cfaf12aac9c"
        },
        "item": {
          "id": "0fb8140c-4dca-434d-ad67-e6253b71b64e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bcf1f200-5cf6-4aa6-8d7d-484a7955b6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8430028-d645-4174-bc80-57b0bc269df0",
        "cursor": {
          "ref": "0f2fd425-5168-4ddd-9095-6b5ba70bf75c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d9cb0fb7-bd26-4c17-a32f-72bce4cc338b"
        },
        "item": {
          "id": "f8430028-d645-4174-bc80-57b0bc269df0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "faa0d117-44a9-40c5-a538-6a042ac48815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61e9a50-20de-421a-b282-36d002446cde",
        "cursor": {
          "ref": "b467f1d2-8823-439b-bab0-85e772ce6115",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "62386732-bea0-44f5-8eac-6dcc103a53d3"
        },
        "item": {
          "id": "d61e9a50-20de-421a-b282-36d002446cde",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c5bd6bc6-b1eb-4798-ae3d-2e1eab5c4829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad170c6-1a58-4fe8-99a2-7828c116fc9d",
        "cursor": {
          "ref": "3516fdc2-66ac-48cf-91b0-d189fc90e710",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d193c551-c6ba-47f6-9b38-89bda10358f1"
        },
        "item": {
          "id": "9ad170c6-1a58-4fe8-99a2-7828c116fc9d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c96b37fb-28c3-4bd5-b245-c7fecc41cb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3567239-8868-4663-be8f-bab563bd7bcc",
        "cursor": {
          "ref": "aeaa43ce-d366-4481-b3f7-3890707f2548",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "43629575-5c9a-4b9a-86ba-c6a44d9c4f1e"
        },
        "item": {
          "id": "b3567239-8868-4663-be8f-bab563bd7bcc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c964d9ed-0c6c-4914-9c8f-d33a3ad76afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa76b0de-72bf-4f72-bd2c-eeb3e7d39777",
        "cursor": {
          "ref": "7b44e6d5-7f24-4ba1-bcb9-6eece2d3a74f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "91471044-7bf1-4119-bf32-ce5e75de5c95"
        },
        "item": {
          "id": "aa76b0de-72bf-4f72-bd2c-eeb3e7d39777",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1b0b9a3c-a1f4-4d05-b5f5-609aed3f1f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a118ee6-8f2d-4153-b7cb-88286b2ce54f",
        "cursor": {
          "ref": "0d0efa32-575f-4dda-8122-b5b1439f50ce",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "35795db1-9f42-414d-af64-e049b259dd9a"
        },
        "item": {
          "id": "3a118ee6-8f2d-4153-b7cb-88286b2ce54f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5412cbd9-f913-4819-9343-5863253060a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68060a62-33f6-4cac-a50b-a4b26983b6c1",
        "cursor": {
          "ref": "a22bc8e8-03eb-433e-8f92-80b75ccaed14",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bebf9c98-0b70-40c1-af74-799157671e10"
        },
        "item": {
          "id": "68060a62-33f6-4cac-a50b-a4b26983b6c1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "55d3685d-5c20-45d2-9150-77577e3b38db",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "61de86a4-c419-4850-be09-bc661209e0bc",
        "cursor": {
          "ref": "8a6cd6d1-f1ea-487c-8138-3528d7ad4fd3",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7d8f640e-1419-4880-83fc-5cfcb8b365a2"
        },
        "item": {
          "id": "61de86a4-c419-4850-be09-bc661209e0bc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7d9f26d6-ff9d-45d6-a5b1-793b4dfb2f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0153c5-4aa3-47d6-a1e5-b4ee7fde7671",
        "cursor": {
          "ref": "c82145bf-cbe4-4c57-89c6-37cd214a7a58",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dd03a466-73e4-4415-90a6-f78b702360f6"
        },
        "item": {
          "id": "9b0153c5-4aa3-47d6-a1e5-b4ee7fde7671",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eec6e1b8-f880-4b54-968c-fbb2c5e85444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c72e7f-36b6-4170-8c5a-e99dc4a62a4e",
        "cursor": {
          "ref": "14b654a9-6c68-4ad2-b088-314e818924a7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5ac06429-1c9d-445d-89fd-9b5445212d38"
        },
        "item": {
          "id": "e2c72e7f-36b6-4170-8c5a-e99dc4a62a4e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "07bc6e00-2e25-4d1f-a2c6-0536a1b6c142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaa671b-a8b4-44f6-90fd-79bc1d996dae",
        "cursor": {
          "ref": "6699b9b8-5f61-4f54-a3a5-e95a340d95d9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e770335b-676a-45b9-8712-208ae6b8f98a"
        },
        "item": {
          "id": "6eaa671b-a8b4-44f6-90fd-79bc1d996dae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc55ea0d-ae2a-4133-8b09-fcb30de9ce26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8147f9-e35a-449c-840a-13d44d40c94c",
        "cursor": {
          "ref": "bc3376b9-dc24-4184-846c-0259ac442453",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bd2c037f-e803-44bc-a1b3-149ad2198558"
        },
        "item": {
          "id": "ee8147f9-e35a-449c-840a-13d44d40c94c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3ea53df-e3a1-4644-b525-43c66e2a2693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a8c7d9-160a-449d-b94e-2d6fd03675e4",
        "cursor": {
          "ref": "edec85b1-4e50-49e5-a907-3ca0d17981d1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "358014aa-cd26-4fd0-b5bf-78cfe19e3251"
        },
        "item": {
          "id": "12a8c7d9-160a-449d-b94e-2d6fd03675e4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a8fe20b8-6b18-4814-8b0b-56e7ae7c0c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89152f6-85fb-4e2e-9e13-ae9801dba7d3",
        "cursor": {
          "ref": "efbf6bf7-d451-4781-b035-778c53d55a35",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7bcd0b72-b554-4484-bc25-38ee9365070d"
        },
        "item": {
          "id": "f89152f6-85fb-4e2e-9e13-ae9801dba7d3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6e80bde5-9513-4ea1-8842-305a94939f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d87bc2c-4d6b-410f-a460-afbe08c69b5d",
        "cursor": {
          "ref": "16a660bc-f055-4457-877d-f9695016a7a4",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6bf3b5a0-cc33-402e-bbf8-22e83a9bbd7b"
        },
        "item": {
          "id": "3d87bc2c-4d6b-410f-a460-afbe08c69b5d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f7122f76-1499-42cd-97b4-9b00cc3e8753",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "885bd471-b890-4ba9-863f-0cf1375e4660",
        "cursor": {
          "ref": "a1f39cf8-1f8b-4a2c-85b3-7881bfaea2af",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2af18b22-e814-49f8-ab8a-11a4c845aee9"
        },
        "item": {
          "id": "885bd471-b890-4ba9-863f-0cf1375e4660",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "25e6f68f-d181-45dc-8167-9480c910eb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33608bf5-f2a1-4096-9f4c-677335806e8a",
        "cursor": {
          "ref": "8240801b-e108-4235-bb08-f59e236c7772",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5b562434-ddc7-4bfa-b94c-875f96fc0eea"
        },
        "item": {
          "id": "33608bf5-f2a1-4096-9f4c-677335806e8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9af3a394-3033-480e-bb54-5a48b08085a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93258a29-f6d7-4b4a-9100-ae67db319a7d",
        "cursor": {
          "ref": "3f2a070b-920d-4e32-a53f-bd713420fe8b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f4fbc7fb-e58c-413d-b185-d22399b766ac"
        },
        "item": {
          "id": "93258a29-f6d7-4b4a-9100-ae67db319a7d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39829b2a-381e-436e-8755-4d9300f95b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9bc3e3-15d0-4d04-a226-3f499a6d6876",
        "cursor": {
          "ref": "d7ca3fe3-5999-44d5-916a-380a3d22ac88",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0d209e51-653b-4a7d-bc03-412ab4c1498a"
        },
        "item": {
          "id": "be9bc3e3-15d0-4d04-a226-3f499a6d6876",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "11394117-7119-4758-84ef-caa6ac7c788c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bee3df-dd13-409f-a7d6-f4efed2ba6ba",
        "cursor": {
          "ref": "c8fa4bb7-d8d8-4c4b-86eb-f344b02801dc",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fc2c2d27-9f87-4ee1-8d39-8c48d3f49de3"
        },
        "item": {
          "id": "49bee3df-dd13-409f-a7d6-f4efed2ba6ba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5c101f08-4dd9-4f4e-be18-aef5935b0fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda1675d-41dc-4e37-ac24-3b9f91e25980",
        "cursor": {
          "ref": "2a66d800-c6bf-46c1-8a75-c65e034bf1ac",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2b2d957a-f102-47c5-b0a3-dac00ef7ef68"
        },
        "item": {
          "id": "bda1675d-41dc-4e37-ac24-3b9f91e25980",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "223693f4-e379-466d-8e30-c5bd0a607497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e9f170-bd9a-4c50-b863-d8b20dbbf2bc",
        "cursor": {
          "ref": "ea894d39-ac52-453c-8071-28edeb0acec5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4be3a8e7-f053-4927-a540-8ad18849a71a"
        },
        "item": {
          "id": "39e9f170-bd9a-4c50-b863-d8b20dbbf2bc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cc2884da-fb9d-42f8-8707-f6275b22ed03",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "fe7e24b2-af43-4328-a76d-a48711e15cf2",
        "cursor": {
          "ref": "8256ff85-f14e-4b17-8a99-f79ba577119b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "226429f9-d8b0-4b0b-b042-9d30881e5ec2"
        },
        "item": {
          "id": "fe7e24b2-af43-4328-a76d-a48711e15cf2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3ae0e00f-17bc-47a6-89ea-9cd71a60cd87",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "6a0960da-aa91-4ae8-b6a4-95dca59f3907",
        "cursor": {
          "ref": "99703021-3d99-4eb4-9372-b2eadfd2f951",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c2619f84-3598-4620-bbca-81143013f40e"
        },
        "item": {
          "id": "6a0960da-aa91-4ae8-b6a4-95dca59f3907",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8200b865-f8ac-4d64-871f-19b0ab129096",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a0833eb4-fd6b-4afe-bcb4-a6053f4ddb08",
        "cursor": {
          "ref": "973377b4-89bb-48a6-950f-1764fc53be1e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "37552cbd-7ee0-4bfb-a883-b1bc9b86f4af"
        },
        "item": {
          "id": "a0833eb4-fd6b-4afe-bcb4-a6053f4ddb08",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "81b7289d-045c-4858-9b84-33dff6ff5a96",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 57,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "28ae931e-0c9a-430d-b1ca-eb4105773d3a",
        "cursor": {
          "ref": "c36aa530-ee62-4a7c-bbb9-0cf973c7ab0c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c24adc35-2e1b-4dfa-900a-1b17db4d2dfe"
        },
        "item": {
          "id": "28ae931e-0c9a-430d-b1ca-eb4105773d3a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a628264d-736d-43ee-8453-304952f564c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d97cdcf6-7476-4cd6-8b48-6a5554601b9e",
        "cursor": {
          "ref": "1c478870-2cbb-40dd-ac8a-66a8709df2db",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "67cdec51-c356-4509-aed5-2a30446909c1"
        },
        "item": {
          "id": "d97cdcf6-7476-4cd6-8b48-6a5554601b9e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "98fb3e85-676b-4a31-baca-8927212c4d61",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c2c746bb-9644-42d6-934a-a52309c0538c",
        "cursor": {
          "ref": "dad87c1c-16e7-43e3-816d-1a0555c079c8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6338c3b-c3c4-4058-abc9-c9b007cd5b4c"
        },
        "item": {
          "id": "c2c746bb-9644-42d6-934a-a52309c0538c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5628c1c4-0024-4d28-8075-035a30b7d309",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86aceb6a-33c5-4ade-8f35-28f08e49f241",
        "cursor": {
          "ref": "0f085831-b57c-4385-b132-29da5cbcfeb7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "926cdcb9-efca-4dd1-86ca-d325f5745dbf"
        },
        "item": {
          "id": "86aceb6a-33c5-4ade-8f35-28f08e49f241",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "973143d3-b2d4-43d5-9d3e-e6fa87872462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85058499-14bc-4745-8db0-0275c785bd5f",
        "cursor": {
          "ref": "6f97445e-cf1d-4445-a727-8bd9cc1d00e8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6d299d5d-555d-4849-be4d-c9756fcb6b70"
        },
        "item": {
          "id": "85058499-14bc-4745-8db0-0275c785bd5f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cefed887-90cc-4c52-8a47-c1983a559436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6e1e02-1dfc-4e41-8246-36b6c4afb939",
        "cursor": {
          "ref": "a3fddfd2-4eb2-40ad-99b7-bd9b1f9eb5c7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "227faeb7-2886-410e-aa98-0c229c462080"
        },
        "item": {
          "id": "aa6e1e02-1dfc-4e41-8246-36b6c4afb939",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a9bf5b08-aebc-4600-a0a1-7e73131fe084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7002a2e-e2ab-4a2c-854e-289762d22973",
        "cursor": {
          "ref": "e2463aee-032e-43c4-892f-d6d96a0ec3a0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f36200da-ccfa-442a-97c0-1fc583e131fe"
        },
        "item": {
          "id": "b7002a2e-e2ab-4a2c-854e-289762d22973",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c90cefaa-0c69-4d0e-a7bd-7d0555cddd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01ceb6f-ad86-46cd-949b-cb4a4598926b",
        "cursor": {
          "ref": "9849c3ce-b185-429e-8af7-c6b9b7ee5842",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a8f5a62e-657f-4b1f-a5c6-26910e9ebcdc"
        },
        "item": {
          "id": "a01ceb6f-ad86-46cd-949b-cb4a4598926b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2ffa4c77-83c9-47af-b1da-38d47d3cb741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74ee07-3b03-45ed-9986-7d85451de2ba",
        "cursor": {
          "ref": "44f14768-936d-4836-bdc2-ddd371ccdbb2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5735c435-5d5f-4c87-85e8-ff3f3fde18bf"
        },
        "item": {
          "id": "bd74ee07-3b03-45ed-9986-7d85451de2ba",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b729f3d5-a8c5-49bb-b673-3b0d5178695a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3082b002-3b7d-48fe-b4bb-e9cd7cf4773c",
        "cursor": {
          "ref": "217f4d9d-a1f1-4f53-8a9c-9bc177a3b32f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8e557492-0a19-4c7a-9b39-8af92588afec"
        },
        "item": {
          "id": "3082b002-3b7d-48fe-b4bb-e9cd7cf4773c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "86278a47-a6ea-441e-908b-6270fb91ab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e63f574-3e34-4e8a-80d5-555597cbae28",
        "cursor": {
          "ref": "906292f5-2bed-4b17-b584-66d57947fa51",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "75689e27-6406-49ec-aa06-ddb6b3d9b124"
        },
        "item": {
          "id": "1e63f574-3e34-4e8a-80d5-555597cbae28",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ce607cb7-5191-4c8b-9dd4-23ee463e6332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f40932-8f8f-409c-b26a-8ef34f2fc8e4",
        "cursor": {
          "ref": "2dacb8bd-528f-4b60-8e10-6a37e99a874b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8fdac0b0-a5e4-4846-b72e-edc89d2ef166"
        },
        "item": {
          "id": "f9f40932-8f8f-409c-b26a-8ef34f2fc8e4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1dd42489-f63c-4563-8f68-899c37ed6050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd20d21-2dbe-4700-b409-9135321df02a",
        "cursor": {
          "ref": "5f927e26-2cf1-4c28-aec7-bc320d262873",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9ad1494c-7e21-4272-9f4b-686909e7efef"
        },
        "item": {
          "id": "7fd20d21-2dbe-4700-b409-9135321df02a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0b6061a5-e2c0-495c-ab6a-fe6fcc363760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8d89ce-1561-4c8d-adf2-95f1c930566b",
        "cursor": {
          "ref": "119b769e-ea1b-4b47-898a-50c6c7c6f1ce",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "80d2c97a-a131-42c2-87dc-47ed5fd29879"
        },
        "item": {
          "id": "7e8d89ce-1561-4c8d-adf2-95f1c930566b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0c65722e-3a84-40b8-a437-9f717c796bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2879200-defe-49f5-850a-6e70db5fbd8b",
        "cursor": {
          "ref": "288f2417-a753-4c13-aabe-4b9d9cb64061",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "23782b06-b9db-4f37-8718-90220d3336ad"
        },
        "item": {
          "id": "f2879200-defe-49f5-850a-6e70db5fbd8b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ae370901-eb66-4ddb-8479-c78dfb09956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c196b50-3099-4fe3-a9b6-60811c676f6a",
        "cursor": {
          "ref": "5c4cbea0-5631-49e4-b914-fa1da6443095",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "845543d0-4501-4355-93a5-1209b4c7d083"
        },
        "item": {
          "id": "5c196b50-3099-4fe3-a9b6-60811c676f6a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "32d56565-dbfa-4b99-9fef-15f041f49e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793cc1da-cfd9-48b9-9056-f0a3b8a68bb7",
        "cursor": {
          "ref": "b5e7e021-0d5d-450d-875f-7e81b218ed37",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f3f52b3b-bf3d-49dd-9e5e-9c67cc89cc95"
        },
        "item": {
          "id": "793cc1da-cfd9-48b9-9056-f0a3b8a68bb7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f708317-f477-48f7-ac42-dbc082de2fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5741bba8-52c3-4096-a7c0-e4d0d55d08c6",
        "cursor": {
          "ref": "6e26c810-251b-47ba-93f1-4b2e36369b93",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7f041c72-9348-4897-832e-74c1fe4db44e"
        },
        "item": {
          "id": "5741bba8-52c3-4096-a7c0-e4d0d55d08c6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e0acd89d-43de-47a8-846a-6956d2396b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31c3921-219c-4c2c-a7e2-e3f10a42f638",
        "cursor": {
          "ref": "44c86346-9bf9-48f2-aec6-47fbad59e819",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9fd6a253-237a-468e-a773-1e8233fd1a9e"
        },
        "item": {
          "id": "f31c3921-219c-4c2c-a7e2-e3f10a42f638",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6edb75ee-3911-4520-b0d8-72b06cae374b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebe8da5-5c03-468c-a226-c6621a578350",
        "cursor": {
          "ref": "bffd92a4-61dd-4055-88f1-99bafc5783d3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e10401ef-6bac-4ee2-9484-2a2d4ea6ceff"
        },
        "item": {
          "id": "8ebe8da5-5c03-468c-a226-c6621a578350",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "784bc5f4-c608-4c8f-a77e-1a459989dc3c",
          "status": "OK",
          "code": 200,
          "responseTime": 225,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "082ad765-8661-4971-a2e1-1743fa84a62b",
        "cursor": {
          "ref": "6676307f-6dfb-418e-92eb-32e78c5772f8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e1b93017-c962-440b-98da-caec5871c019"
        },
        "item": {
          "id": "082ad765-8661-4971-a2e1-1743fa84a62b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "055badc5-5c14-49ad-b8e9-538c88d95737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d2ddb9-7ee9-47a1-a8c2-54cc0dc7f4a2",
        "cursor": {
          "ref": "d34a9ebd-db6a-422b-9811-640a60f083f0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3c6c6381-9a92-452f-a233-6e61306c9b70"
        },
        "item": {
          "id": "24d2ddb9-7ee9-47a1-a8c2-54cc0dc7f4a2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "be2ecc31-a15a-4ad3-b8d3-b2b2c918f35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64ae39e-db0b-43aa-b918-73959d667b04",
        "cursor": {
          "ref": "7d0e2e19-210a-4309-9816-a105838ae852",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5811491f-ddf2-430d-bb95-fdaa35c0606d"
        },
        "item": {
          "id": "d64ae39e-db0b-43aa-b918-73959d667b04",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0e67205b-1fa3-4f79-878a-616db1a5462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbd212a-bb05-4dc4-861d-fe14958502bc",
        "cursor": {
          "ref": "1d4f2858-e5ad-462f-a165-ca3d3ea2cf35",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3931d5c3-6ef2-4a1e-8424-9c8a84a7df4a"
        },
        "item": {
          "id": "6fbd212a-bb05-4dc4-861d-fe14958502bc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0e6494eb-898a-411a-a6dc-2bc48b0f3a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb73c0b-694b-4ff9-ab17-162c5c7683b2",
        "cursor": {
          "ref": "e661e1d0-e390-4e2a-bb32-be3a411e3ef8",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f8158d91-0b6b-46c7-943e-575aa3fb671a"
        },
        "item": {
          "id": "6fb73c0b-694b-4ff9-ab17-162c5c7683b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "04bb010c-241b-4bb6-af8c-398ae780b54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bb60d1-5786-42f3-b6a1-5c6ed559cf0a",
        "cursor": {
          "ref": "84a39f60-be60-4814-827f-3750e4d5bba3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3c254728-e3ad-4d93-8f3d-4c5e8d3d917e"
        },
        "item": {
          "id": "b4bb60d1-5786-42f3-b6a1-5c6ed559cf0a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5a190b3e-88bc-4774-97cb-017acf77db38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9fa49a-b50b-435b-819e-ac5224dc94a6",
        "cursor": {
          "ref": "fa5384fd-6dbc-485f-ba89-c75e31b589b8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "866fb5e6-763d-41b6-b1b8-30adfa3e8e4f"
        },
        "item": {
          "id": "fa9fa49a-b50b-435b-819e-ac5224dc94a6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0f33db20-6ed7-44ac-a4eb-2cbdc6674aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38ff869-24ea-4eb2-b00c-9b813506dde5",
        "cursor": {
          "ref": "907dc27e-87eb-45fa-9649-0cacc5451da8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0b364163-5623-4df2-8391-9b33758c6f51"
        },
        "item": {
          "id": "b38ff869-24ea-4eb2-b00c-9b813506dde5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b1cd9208-d69c-4fb7-ad75-1684d026097b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b76029-8d68-46a3-b5f8-c235e39e439f",
        "cursor": {
          "ref": "72a6d64b-2b09-46d0-b478-34e176172c8c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e6d7960f-0ab0-4150-81a5-603a1614f003"
        },
        "item": {
          "id": "76b76029-8d68-46a3-b5f8-c235e39e439f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8631895b-abb2-40a3-932a-e8e7e230513f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90d28b5-bd34-4e8c-adc7-ce49bdf0453f",
        "cursor": {
          "ref": "c7adc41c-68ec-434c-a0b6-6ec799cb850e",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "11d8d7d8-a96f-4c05-b89b-55a8e134d973"
        },
        "item": {
          "id": "e90d28b5-bd34-4e8c-adc7-ce49bdf0453f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "860d4e77-e822-4d89-a712-dc37a7b8678f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b282dd84-aea8-4bcc-ab81-8eb80b05474a",
        "cursor": {
          "ref": "c24466a8-b111-445e-aa51-09281bb3adcc",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3109174b-9c7f-4233-80d7-045b9a5967ec"
        },
        "item": {
          "id": "b282dd84-aea8-4bcc-ab81-8eb80b05474a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d8d2d50d-b55b-41cb-98cc-33164f32e7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5106b78e-9d1b-4122-918a-3b3a47a5cb09",
        "cursor": {
          "ref": "722596cd-dbef-4102-937d-9d124e6c82c4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "eed4113b-0995-4b88-8f29-bafd5045bbc4"
        },
        "item": {
          "id": "5106b78e-9d1b-4122-918a-3b3a47a5cb09",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "91582d92-f31b-4593-860d-3390c0381322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c639b4-778e-43a6-9c54-0c80c24b69ef",
        "cursor": {
          "ref": "c8e0c88a-3c1a-4954-84aa-34a40229b3d3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ca0f75d5-2834-4762-8ba8-db3d7d1a2827"
        },
        "item": {
          "id": "e2c639b4-778e-43a6-9c54-0c80c24b69ef",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1bd601c2-bb7d-4207-b764-4052e0a72c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52300d14-1b11-4a02-8af9-61b9e983de71",
        "cursor": {
          "ref": "6ebafb9c-e01b-4c46-9860-c7b698cd8db9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "963ff9e9-1fce-42d9-8507-96f2dda1f9a2"
        },
        "item": {
          "id": "52300d14-1b11-4a02-8af9-61b9e983de71",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b025241e-0360-4093-88d3-15bf8711ef0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43832781-f42d-409c-b705-3aca5482cfaf",
        "cursor": {
          "ref": "6554f309-7e14-4fe5-8a22-e076bf5946e6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "08557f93-bf06-4d25-8f43-dcbac38d43b8"
        },
        "item": {
          "id": "43832781-f42d-409c-b705-3aca5482cfaf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e10f3107-3b5d-4bfe-9515-cfa2f6fa3727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf10343-905c-4f3f-a8e3-9f9e25e7808a",
        "cursor": {
          "ref": "69cc7a95-4465-4fd2-8680-c50754e57d31",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0ddce16d-7b49-46f0-8011-e42fb3f3cbd1"
        },
        "item": {
          "id": "faf10343-905c-4f3f-a8e3-9f9e25e7808a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "edcabe6b-e10c-499e-beb7-4516099d208c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220c5b95-4986-4463-a5a0-e73a11e06290",
        "cursor": {
          "ref": "60072b22-feb2-4418-b2e9-fdbddfe1d089",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6288455f-b154-4943-96ad-2da983db4954"
        },
        "item": {
          "id": "220c5b95-4986-4463-a5a0-e73a11e06290",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "297ae682-7658-4cf9-8e72-340fc33137ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ff7501-6ddf-4c81-b8a2-f85112d91592",
        "cursor": {
          "ref": "c037088d-4126-4e1e-b1e0-66aa688285fb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6828efee-b58e-42b7-a0e3-0e401343c9aa"
        },
        "item": {
          "id": "27ff7501-6ddf-4c81-b8a2-f85112d91592",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0d31e496-9c10-4665-82cf-afda8f38dbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cac5e5a-32d8-4d7e-acf7-4d2c221434cd",
        "cursor": {
          "ref": "860b631b-46e2-45de-a185-15db10465ceb",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "49beb324-2e82-4a87-b1cf-4c92af2bb661"
        },
        "item": {
          "id": "2cac5e5a-32d8-4d7e-acf7-4d2c221434cd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "58aa738d-43a0-4807-bb99-34daf3b21b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f9f434-3fef-401f-bf00-4ee39fc51ba3",
        "cursor": {
          "ref": "cad959ef-7d00-450b-92d5-b58ac6a35349",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "409f6b76-b653-4248-8311-aea664f9ecb2"
        },
        "item": {
          "id": "88f9f434-3fef-401f-bf00-4ee39fc51ba3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6d854fd3-db06-4622-b748-af0831a0b3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6182aa80-5f5f-4179-87ef-e446ce858d09",
        "cursor": {
          "ref": "ebf892e9-1e57-4a81-87d6-1ab30984ef6d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6cdec56a-c203-430b-aff6-f5e44c6a5e23"
        },
        "item": {
          "id": "6182aa80-5f5f-4179-87ef-e446ce858d09",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c5de8a50-5d15-4893-bf75-e11287cbb44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e006c15-8be0-4894-9d5d-c10b0fa54edc",
        "cursor": {
          "ref": "8d3d2c54-2197-4264-bd89-f045e681c1ed",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9f8d62ed-6cbd-41e3-8ce2-381618ac0ba0"
        },
        "item": {
          "id": "4e006c15-8be0-4894-9d5d-c10b0fa54edc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3075abd6-65d0-4528-ac30-415d7109f73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3ddbc2-1ca1-486e-b853-5d1e7805733d",
        "cursor": {
          "ref": "fec4d43f-a245-4ed2-b65c-b8340c2c11a1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b45cce51-1928-477a-b18b-80f1efaeaf71"
        },
        "item": {
          "id": "6b3ddbc2-1ca1-486e-b853-5d1e7805733d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "84836cd5-7ee8-42d3-ab0f-d9cf76e17cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f316f60-661c-4a84-b18e-152ba7e2c9c8",
        "cursor": {
          "ref": "5e48958e-a527-4fe2-9119-85efbbc7d662",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0f66a20e-45fc-470e-b96b-2a14cfcaf6c4"
        },
        "item": {
          "id": "9f316f60-661c-4a84-b18e-152ba7e2c9c8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0040c3b4-d97e-4809-ae25-f5bca132c703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6734c83-fe47-400e-ae55-f8f5633fa1fd",
        "cursor": {
          "ref": "6f008967-a190-492c-80fc-52c05eae799c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7261098d-0180-437c-8925-0ecb274b96ad"
        },
        "item": {
          "id": "f6734c83-fe47-400e-ae55-f8f5633fa1fd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f35310b-e5e9-405f-9dc3-ed83a07600fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a5e268-b359-4385-863e-7a77c28fdeba",
        "cursor": {
          "ref": "ef0073ed-d045-4d09-ada3-49f1ca16ba28",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "425ab9c4-c3e9-4015-919d-d54a6bc0c62b"
        },
        "item": {
          "id": "e8a5e268-b359-4385-863e-7a77c28fdeba",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ae8619d7-b403-48f4-ae77-4b039585fe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8233969-6019-4d50-90de-a9b9600e622e",
        "cursor": {
          "ref": "cfef1ac1-649e-491d-9485-fb02cf7ada6b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fa381b4b-8108-4964-ba66-5426b8e52e52"
        },
        "item": {
          "id": "c8233969-6019-4d50-90de-a9b9600e622e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "62a02119-83e9-440d-9b5f-30541ded5ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fb7215-d1e5-43f9-a8cb-75c4c514a088",
        "cursor": {
          "ref": "ed0fe8b4-08c1-4f79-80eb-0e67a39b8815",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a5baeb8e-7be4-47ce-972d-7fb10b8a0f14"
        },
        "item": {
          "id": "08fb7215-d1e5-43f9-a8cb-75c4c514a088",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "70409bee-6616-4a2c-9c29-359419afa9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e6439e-ba72-45fe-a2d8-4fc9fbc20afa",
        "cursor": {
          "ref": "99d19509-ce5f-419e-aaf7-f149d0ae7cc5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bba9a48d-1da2-4a37-9944-16e8670b03c9"
        },
        "item": {
          "id": "49e6439e-ba72-45fe-a2d8-4fc9fbc20afa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f735985a-52b8-4ee7-bc90-cd62f8833fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa8d582-c83c-479c-bdec-a515bbecd850",
        "cursor": {
          "ref": "0d3c4572-4d29-4b63-a8ad-b3090b717d47",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b965480d-f691-4414-9bbd-fe8a2e58c08a"
        },
        "item": {
          "id": "ffa8d582-c83c-479c-bdec-a515bbecd850",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c592cc92-79da-420a-8f14-b27cae2be2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4825a47e-4eac-4e27-9799-af164658ef36",
        "cursor": {
          "ref": "8a8a2c88-1f84-40b7-b901-5f8ca95d593f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b2273336-b36c-420d-8cbf-130f038b2c5f"
        },
        "item": {
          "id": "4825a47e-4eac-4e27-9799-af164658ef36",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "acd99f6e-d951-43b0-9611-1554177757a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fe5e71-18c8-4fa9-b1b2-2b2952e23a70",
        "cursor": {
          "ref": "c2cbf220-0b40-4128-a36f-9f2caef4df5c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3ea7160a-9e68-4089-8123-8a9d8380fb66"
        },
        "item": {
          "id": "30fe5e71-18c8-4fa9-b1b2-2b2952e23a70",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ae9c0d27-f76a-48a7-92a8-593efea9789a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79bda29-eef1-4747-bd7a-5e13c1fdd430",
        "cursor": {
          "ref": "7062c88b-801f-43b2-8dfc-5e2d77c03e40",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "66e5f705-0bf3-41d0-83bc-8ef2454a4f16"
        },
        "item": {
          "id": "f79bda29-eef1-4747-bd7a-5e13c1fdd430",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a0d24e62-53d0-4bc2-b235-d53ada2e8007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9516c21d-408c-4fa4-89c7-7144470ef9d3",
        "cursor": {
          "ref": "92ab78ef-4da5-47cc-a34b-3626f8c826e4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f72a5509-786d-4e7e-92b4-c990a8d8b27b"
        },
        "item": {
          "id": "9516c21d-408c-4fa4-89c7-7144470ef9d3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0bf8b7ab-d279-404d-a756-42a561d3bee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8368b447-15b3-4135-961f-303f2695ebc5",
        "cursor": {
          "ref": "de7df27e-9c36-4552-b692-70ecace1bdba",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "72bd1e86-ef3d-452d-af58-3ec37c8c3e2b"
        },
        "item": {
          "id": "8368b447-15b3-4135-961f-303f2695ebc5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4d9379be-5058-49a5-967c-0f24d8d6b50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7064ba-5eb8-4120-aa85-0ca2f827f8f4",
        "cursor": {
          "ref": "b9d6cbf6-1eb6-4ffb-8f60-96ed6c8cb388",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8b390181-4904-4d0d-9b41-2545bc629f8e"
        },
        "item": {
          "id": "1a7064ba-5eb8-4120-aa85-0ca2f827f8f4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6ad9d90d-584a-4e8d-acb1-f801eae11054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5148dd8b-4e9d-4cac-8fea-98c6f1de23d0",
        "cursor": {
          "ref": "f8a9d686-39a5-47c8-b368-7127b42ecead",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9a51c01b-8314-40e9-8459-b902ec0e07cb"
        },
        "item": {
          "id": "5148dd8b-4e9d-4cac-8fea-98c6f1de23d0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ed555509-096e-42cf-ad6f-805f41d7c6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9feed-6426-478a-a0ba-ac36763652bc",
        "cursor": {
          "ref": "ebe5a994-f39b-4da4-8d4d-592238de0b17",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b58c1260-1092-4a30-a148-ef0ac7917238"
        },
        "item": {
          "id": "0fa9feed-6426-478a-a0ba-ac36763652bc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b99ee8be-d7b1-4f5f-8470-132f887d5512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957ffe52-fba6-4224-a947-777fdf49ac12",
        "cursor": {
          "ref": "42a3541a-32f4-4ec6-a315-23b4c52054ca",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ea094e65-3126-46be-923e-00a796a55bdd"
        },
        "item": {
          "id": "957ffe52-fba6-4224-a947-777fdf49ac12",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee01a212-bd66-478b-a6d5-3188be38b8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5303bae-a147-435d-99b6-99389312b69c",
        "cursor": {
          "ref": "b201692e-8cf3-4e11-8fef-2380049110c2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4a9f8c64-8895-4060-8ec4-156bc70c8746"
        },
        "item": {
          "id": "b5303bae-a147-435d-99b6-99389312b69c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e6f5ed10-21b7-4d90-832b-512ea67f804e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22ba4df-bc20-4247-85ba-07d98eae9a19",
        "cursor": {
          "ref": "84e32559-c498-4f0e-af74-90c917c2dce0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "45c156f0-6a75-4c89-9dfa-eb2ca4441477"
        },
        "item": {
          "id": "c22ba4df-bc20-4247-85ba-07d98eae9a19",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3f3ee279-6c85-4778-be9e-815789567e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053e82ef-cd60-45d6-b798-f8adaec0a0c3",
        "cursor": {
          "ref": "4183596f-d095-4180-aff8-018ace5a6037",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6aa5f265-7f23-43d5-b2f8-97e055d0d9ab"
        },
        "item": {
          "id": "053e82ef-cd60-45d6-b798-f8adaec0a0c3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9cc4cd17-0af7-43fa-9137-55a87ef02ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2302e9-dff7-4bba-ad4d-d8889083d60e",
        "cursor": {
          "ref": "5a7e0bf5-9fb3-417a-ac3b-e4a04eedf5b0",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "80186e8b-763a-4a39-b42f-74b82606e8c3"
        },
        "item": {
          "id": "8b2302e9-dff7-4bba-ad4d-d8889083d60e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e28f0adf-f9cc-48db-9fb0-94fc42006e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74d0344-a52e-44a9-b158-3d4ea9b60fae",
        "cursor": {
          "ref": "9a0382ae-7334-40e2-82c4-90d55040dbde",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "43ed6bd2-8ad8-46e7-b0dd-7d8d90aad572"
        },
        "item": {
          "id": "c74d0344-a52e-44a9-b158-3d4ea9b60fae",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4a0c994c-8756-4785-af6a-8d91eb630bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501273cd-faca-4bd1-8094-7aa70ca222fa",
        "cursor": {
          "ref": "51be26e1-bf76-4db2-a383-844d26bbbddf",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf24c59d-bc5f-4432-a4cc-1a0c643b6ff5"
        },
        "item": {
          "id": "501273cd-faca-4bd1-8094-7aa70ca222fa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1290c965-527b-4b3b-b4df-67f461ce9850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29de892-0c75-4d66-b0bb-29df341a70e5",
        "cursor": {
          "ref": "0b7b1672-4777-4ebb-b2a9-4cb9a1426698",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8759182a-4286-48bb-a7a1-dd6347c0e6f3"
        },
        "item": {
          "id": "e29de892-0c75-4d66-b0bb-29df341a70e5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "87ab9610-38d1-4015-b9a7-71a5e1b63b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5883f3-5db4-4b4e-a5e9-49edb280632e",
        "cursor": {
          "ref": "994bb62a-92e4-4f4e-ab8d-00f3a24090f8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e404a92-2783-4c30-ab62-ccbfec22f8c9"
        },
        "item": {
          "id": "8a5883f3-5db4-4b4e-a5e9-49edb280632e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0712b582-3e7d-4f8c-8568-aba4256fc9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f52cea3-6351-49d3-b8df-43316f9e2216",
        "cursor": {
          "ref": "6b0b021b-9b4f-423d-b715-2e85acc1e13a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7caf5342-22b0-47f4-8743-871748aad6aa"
        },
        "item": {
          "id": "5f52cea3-6351-49d3-b8df-43316f9e2216",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b84f76b9-737a-4552-b49a-dc3cc56e0522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e0fab5-ba17-429d-818e-df08e53f2c92",
        "cursor": {
          "ref": "bcb65772-c3e0-4983-8de5-5e7b0e4e738f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b0486687-dcc9-4daf-b0df-e7d5874262e0"
        },
        "item": {
          "id": "06e0fab5-ba17-429d-818e-df08e53f2c92",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e02187f1-9e7b-4d50-9f8f-9b1fed76b383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b19019-237b-4ef2-8b95-815fa1132bf2",
        "cursor": {
          "ref": "7a4d75e9-ca5b-4b53-9232-f1e8fdb1d586",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "17ef3b3f-90e5-426d-8f7b-61d3d933087e"
        },
        "item": {
          "id": "89b19019-237b-4ef2-8b95-815fa1132bf2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "29174b02-ef15-4cf3-b947-c6bc451ba1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24777d48-2ab2-4b22-bd8b-50f80a45a18e",
        "cursor": {
          "ref": "013d2ad4-4783-4d0a-9211-10c800c2d4f3",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "56a7df96-7695-4321-a5ae-14e336b0557d"
        },
        "item": {
          "id": "24777d48-2ab2-4b22-bd8b-50f80a45a18e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "462c4171-5669-44bb-9a2c-1484a0f81033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78adcaa8-1d66-44f9-8616-0720970b6bd1",
        "cursor": {
          "ref": "07f9dbe3-838a-46ea-91ab-3381bd114047",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "306760f7-0dc6-41f2-97d5-9294d79fcdfd"
        },
        "item": {
          "id": "78adcaa8-1d66-44f9-8616-0720970b6bd1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9a4e7f45-5883-4048-8560-52f93b5b40d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f8f85-5f18-46ea-a01f-64a0d0b4c286",
        "cursor": {
          "ref": "ca04a2e4-a1b5-40c2-988b-6228026d5b8f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "be258e46-14ca-4c05-905f-40aa24907c1c"
        },
        "item": {
          "id": "da6f8f85-5f18-46ea-a01f-64a0d0b4c286",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9cf9a1d3-6bbe-454d-a349-e16654e38fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7707e7c2-fa30-4c9d-98ff-8673f925109c",
        "cursor": {
          "ref": "e5f1656f-b5c8-4e9b-b8d5-94404b82d1f5",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bedbf9d9-0889-4eac-8ad6-d7dda01ca50a"
        },
        "item": {
          "id": "7707e7c2-fa30-4c9d-98ff-8673f925109c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "26b2cebd-4cb5-4956-8b34-b25536d7a72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac579c0-4c1f-4b50-af3d-cb11e26ccd16",
        "cursor": {
          "ref": "53fbe56b-f7ee-4778-90a1-073812f6ddb5",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7eef137f-bda3-47ea-b878-fe1c1da50a12"
        },
        "item": {
          "id": "bac579c0-4c1f-4b50-af3d-cb11e26ccd16",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "479497ad-9c08-4a9f-a077-50af113d9563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffc2ebd-ed94-4daa-b910-5af7724d6710",
        "cursor": {
          "ref": "93393518-8ef5-4d3b-ac5f-c6b5f68b9f65",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f3ae1135-c40a-42cc-91d8-920089440e1b"
        },
        "item": {
          "id": "0ffc2ebd-ed94-4daa-b910-5af7724d6710",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5330f61c-c322-4ba5-854e-92e767bfc6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22004194-1985-4eaa-9de2-ada10e6ccdae",
        "cursor": {
          "ref": "818fabb4-9df5-403b-9008-e93e39247a7f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c05a4c98-b9b3-4cdb-96d6-d478acad5896"
        },
        "item": {
          "id": "22004194-1985-4eaa-9de2-ada10e6ccdae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "acffe036-43a5-43b7-98a8-51e971747bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eea1a75-02c0-4a67-9bfd-85e2731fae6e",
        "cursor": {
          "ref": "56bb66ff-6156-450e-bfb2-0d93398bb757",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ff2e1cb7-70b0-4e38-a090-e03d63f4a0ad"
        },
        "item": {
          "id": "4eea1a75-02c0-4a67-9bfd-85e2731fae6e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0d251733-0610-41d4-9be3-4dac6b1208b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387d0786-3375-45d6-9eee-a4a5e904e296",
        "cursor": {
          "ref": "489d1c0e-e6f5-4161-873c-55a84c0ccd44",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fbb22e3c-2de5-49d1-9acd-2538167a7a6a"
        },
        "item": {
          "id": "387d0786-3375-45d6-9eee-a4a5e904e296",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1d28b30c-8c05-473a-bb84-224b95ddcc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e03294f-a9ba-4ece-b516-3fd10085238a",
        "cursor": {
          "ref": "6ed661ac-c0e4-4fef-8d3b-177d922faebd",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "509e597f-955b-451b-8db4-c12a9ee4fa24"
        },
        "item": {
          "id": "6e03294f-a9ba-4ece-b516-3fd10085238a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f488edd7-9946-4b35-8234-99019c4d6423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cec6b39-e7eb-4cee-9e44-ed81696d564c",
        "cursor": {
          "ref": "59393bd8-cf2b-4b2a-ab7a-5dae28ffe937",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ebcb87a6-275e-49d9-8af5-592be9b5b94c"
        },
        "item": {
          "id": "2cec6b39-e7eb-4cee-9e44-ed81696d564c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fb8bd619-33df-4fc6-bd38-e9610ae43325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d58ccc-1262-4b1d-b2a2-00092ee8de34",
        "cursor": {
          "ref": "5f0c0839-2ca9-4154-93a1-179b950a1604",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4f8ef8e0-79c6-4812-a097-27062e54c9bb"
        },
        "item": {
          "id": "c6d58ccc-1262-4b1d-b2a2-00092ee8de34",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "44832776-425a-4cea-a076-a26e1714674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76df4d0f-675b-49e1-b955-38c83574054b",
        "cursor": {
          "ref": "398b9aad-cc06-46f4-8c10-ed7b0f7276bd",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "646e87a2-19b8-4f1f-afdb-aa866c6f2af6"
        },
        "item": {
          "id": "76df4d0f-675b-49e1-b955-38c83574054b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "09994eb7-74dc-44a3-a783-6ee51df7c0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e16794-3690-47fd-b264-92882e5c77c2",
        "cursor": {
          "ref": "b97f0a35-d1f4-4802-8b69-e90cfef7b673",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "51b561c4-4691-495f-96d5-911b967889de"
        },
        "item": {
          "id": "d0e16794-3690-47fd-b264-92882e5c77c2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "087a6c0e-1034-482b-a737-659dbe307fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04661cb-3515-4974-bbe3-725cb877cae2",
        "cursor": {
          "ref": "ee8809ec-85b1-4004-8ae6-c89454740105",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b6ca091e-af5e-42e4-b330-095fbedf1433"
        },
        "item": {
          "id": "c04661cb-3515-4974-bbe3-725cb877cae2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "18df8029-0ef3-4b27-a820-c55bf6eb43d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2af88ae-c9d0-4378-b832-483b129eda24",
        "cursor": {
          "ref": "df597426-20f7-4474-af74-dd23a7644071",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e748e2ca-380b-4179-9249-a616c70fcf04"
        },
        "item": {
          "id": "c2af88ae-c9d0-4378-b832-483b129eda24",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d3815fd4-5f17-414a-b360-0683ceaa32bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bf030a-569d-463b-b896-c6eefb9ee9b7",
        "cursor": {
          "ref": "d0461450-55a6-49f2-8150-f027f3f4711e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a9201ca2-ee4c-4f7c-b3b1-7c413aa685cd"
        },
        "item": {
          "id": "27bf030a-569d-463b-b896-c6eefb9ee9b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4766edef-67bf-4711-8d40-1acfe112897a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ced204c-748c-4aca-8dce-29294e068ba9",
        "cursor": {
          "ref": "1a6faea4-cd6f-4d8a-9e2c-192c3816706d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "62ef378b-6753-405d-9493-469d2cf2c635"
        },
        "item": {
          "id": "6ced204c-748c-4aca-8dce-29294e068ba9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "724fcd0d-26c9-449a-8c8a-034e322c60de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd77541-a882-47d2-adae-7c32882c9442",
        "cursor": {
          "ref": "5cd51ec4-1f5c-494d-ae85-fe6a8a4800dc",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a14fe25e-d4ee-4128-b90f-9ddaf5f7ff51"
        },
        "item": {
          "id": "6dd77541-a882-47d2-adae-7c32882c9442",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d1c93ef7-e91f-44f0-bbfc-0e915e7fde92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828a9c7-d752-48a6-b3eb-bcfb3c05bdbd",
        "cursor": {
          "ref": "5b82558b-bb38-4e7f-a2bf-8db91b003b2f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1cf2ece3-e756-458e-895e-bdd94650eaf8"
        },
        "item": {
          "id": "e828a9c7-d752-48a6-b3eb-bcfb3c05bdbd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "552116a1-052b-4245-9310-83ee7bc575f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882ad2ed-f1ca-4d1f-94cd-08ac4a5a2ed6",
        "cursor": {
          "ref": "437469dc-573a-4aa2-a679-ebb566a117b3",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2c6f8aaa-39c5-4243-92fc-08be972ca536"
        },
        "item": {
          "id": "882ad2ed-f1ca-4d1f-94cd-08ac4a5a2ed6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "59e8a3f3-2ae7-42de-958a-673b126dcd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee292d41-3cce-433c-8497-605dbaa738a1",
        "cursor": {
          "ref": "c37371ae-9d33-4201-be4b-12f3708b0d5c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "91a2ad4b-bf51-47be-8694-ab3358fcb0b1"
        },
        "item": {
          "id": "ee292d41-3cce-433c-8497-605dbaa738a1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8f034b4f-36e1-4704-9ac4-09e7de6a5759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcedaec-78f1-4865-b5a3-c2c05f5970ea",
        "cursor": {
          "ref": "1cef427b-2397-4554-a956-7319d381614b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c6f5f002-82d5-44df-a5f8-c6f3ec24648f"
        },
        "item": {
          "id": "cfcedaec-78f1-4865-b5a3-c2c05f5970ea",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3a543450-0078-4820-8e82-7adf34944c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8322b5df-4825-43e1-ae49-80e17eb7e29f",
        "cursor": {
          "ref": "9e87cf05-f8d8-4ab6-92de-1ee83997518d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b23350d1-4485-4ec9-8eaf-a1f113265552"
        },
        "item": {
          "id": "8322b5df-4825-43e1-ae49-80e17eb7e29f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "58c19849-1923-43d5-a4aa-b152ee5a04de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d9fb58-bec8-4168-89e9-1d3fdede8f92",
        "cursor": {
          "ref": "5380c6d9-da2c-49ff-a877-7ab634a387cf",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b95ed99f-7d55-4dc4-9a8a-e6da028b3261"
        },
        "item": {
          "id": "92d9fb58-bec8-4168-89e9-1d3fdede8f92",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f39ae9ae-f6ab-4792-8621-b7e34cdc9184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2732bc5d-4f73-4263-b396-11f2b307d767",
        "cursor": {
          "ref": "8e8c0472-ff20-4772-860d-1bbdb2091090",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e5ddf02-e007-4323-88ed-6d37ade04600"
        },
        "item": {
          "id": "2732bc5d-4f73-4263-b396-11f2b307d767",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "57e78e9d-86cc-4e1c-ba5e-2f788b0c1aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7a780c-4e72-4dbd-80c0-edf62f74e8f9",
        "cursor": {
          "ref": "48a84523-c8b2-46fb-9d90-0ba984eb14c6",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c175ebc2-443a-4524-b860-4ff0272778f1"
        },
        "item": {
          "id": "7f7a780c-4e72-4dbd-80c0-edf62f74e8f9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3ecb8cc4-c399-4a28-9be7-235bdafc1a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97557e2c-0820-4ceb-ab31-cf3769a383fc",
        "cursor": {
          "ref": "016ffed5-dc9c-4361-9805-34a1db4570ec",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3f4dc0e9-525d-490e-8026-00b6711b36d7"
        },
        "item": {
          "id": "97557e2c-0820-4ceb-ab31-cf3769a383fc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4634aa7b-006a-4b64-a6d3-dfbec2f3a16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc39e1b4-c157-4636-8b4c-fa19e4acd2f1",
        "cursor": {
          "ref": "f924b853-25ed-4e7f-b4db-0820c63d9f3f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f6f8b9e6-da6e-401c-b427-449d998a06e7"
        },
        "item": {
          "id": "dc39e1b4-c157-4636-8b4c-fa19e4acd2f1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "02563cb8-9313-41ba-a3b6-413faff6313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabcb7f2-0435-4c26-b3f0-853ab702099a",
        "cursor": {
          "ref": "54368395-ba4f-4e72-8986-9d19caab1532",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "41362a64-806f-4b08-8355-842f91999c2f"
        },
        "item": {
          "id": "aabcb7f2-0435-4c26-b3f0-853ab702099a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3ff1b705-8928-4de8-a1f4-84989e13b33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec009ec-e031-42ab-a7e3-bcc50c3ec242",
        "cursor": {
          "ref": "193cc8c9-dafe-4602-a304-c800b3c6ca1a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02dfa814-f8b1-4482-8dfe-468d7b0b2990"
        },
        "item": {
          "id": "1ec009ec-e031-42ab-a7e3-bcc50c3ec242",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6b7d29c9-f448-434a-a544-1af67b76be06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3585450-2da4-403a-9b4b-a4af182f1d80",
        "cursor": {
          "ref": "896da35c-6b69-42a2-b28b-fd4c1a8f33ca",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "82b76d59-6515-4cb4-a8ef-a7a4d065d6be"
        },
        "item": {
          "id": "c3585450-2da4-403a-9b4b-a4af182f1d80",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5adcb7f9-f499-4a8a-bde2-51271e7199a2",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d9042f-361e-4b20-864d-4bb0145fe379",
        "cursor": {
          "ref": "fbc1640e-ca0f-45da-9c24-70c85014f000",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a6d7fe02-32d3-4a75-a357-6c6efb039fae"
        },
        "item": {
          "id": "89d9042f-361e-4b20-864d-4bb0145fe379",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6e10c423-9c3c-448c-8de7-e71f03ac6588",
          "status": "OK",
          "code": 200,
          "responseTime": 2858,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f294e7d-44d0-4833-ac77-f4a6fc993d85",
        "cursor": {
          "ref": "71a3cec4-85bb-4a77-8a20-7868dba103ee",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7c129df3-c61c-4a3d-9455-56d05afffb8d"
        },
        "item": {
          "id": "0f294e7d-44d0-4833-ac77-f4a6fc993d85",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "055b0ca3-793a-487c-945d-f191fe24c551",
          "status": "OK",
          "code": 200,
          "responseTime": 2925,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d57b94d-8791-4b66-a689-a2b9a7dd1ba3",
        "cursor": {
          "ref": "c6708008-0302-450a-8c09-4c58ce19eaaf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4b712520-6aaf-4ab6-90b2-15b7aa51cb4d"
        },
        "item": {
          "id": "4d57b94d-8791-4b66-a689-a2b9a7dd1ba3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7f9f34b4-e45e-4325-9205-5ed13fd2f988",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d57b94d-8791-4b66-a689-a2b9a7dd1ba3",
        "cursor": {
          "ref": "c6708008-0302-450a-8c09-4c58ce19eaaf",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4b712520-6aaf-4ab6-90b2-15b7aa51cb4d"
        },
        "item": {
          "id": "4d57b94d-8791-4b66-a689-a2b9a7dd1ba3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7f9f34b4-e45e-4325-9205-5ed13fd2f988",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6109ee-9e34-4e63-918c-e84ae203a2d5",
        "cursor": {
          "ref": "feeac052-edf0-47e2-8a19-bc0e5cdbaebb",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2e18f64d-ea3a-478a-908b-0bb037b338b2"
        },
        "item": {
          "id": "5b6109ee-9e34-4e63-918c-e84ae203a2d5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b4c56cf1-ab3c-4c76-a705-a7d20b90a8af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe22181d-0356-484a-98b3-eea45c100432",
        "cursor": {
          "ref": "cfed8a62-9fd4-4d4f-8ed6-cfd90a097802",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1f2cb247-5847-4869-aa8f-74fd898ce181"
        },
        "item": {
          "id": "fe22181d-0356-484a-98b3-eea45c100432",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "09d6164e-36a5-4e58-91c2-02e7439189f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}