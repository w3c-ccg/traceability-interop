{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "183057f1-b4df-478f-8458-62fd660d556e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2aeb1652-2943-459d-87a9-332f1d544948",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "886bad1d-7bdf-4c11-b949-00490b63daaf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7870a268-eed2-46fd-aef2-ce275412fcf3"
                }
              }
            ]
          },
          {
            "id": "66cc26c6-7012-42f1-b8d5-f976a02f78a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88e52834-616a-481f-839d-ff15087459b3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "75b424b4-0572-4218-ad75-14eb0ccb97f8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "adbea761-6ce4-49cf-a031-aa88dc6c4890",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bce99920-c4eb-4927-9813-7937b7e201b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "df263224-abda-42ae-a4f2-7011902c82e5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5616b550-d14a-4399-96da-a72858c15ad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41bbf2fd-1649-4700-a3c8-256154878637"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3a04f3a-e444-42e4-856d-00a7d0b407a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73a95f00-8e63-4cbf-940f-b73cceec1c43"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "00d78bda-3e79-48b5-9b84-467d8ab0016f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c4a05cb-64fc-40e5-9ae5-1c295a257de4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0540a35c-4734-4890-97a3-8fb834d2fb14",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f98eed2c-3508-4cee-b1e2-5548c29d7175"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc8eb8d4-55d7-43ee-a515-b4269f076c22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cd11909-2343-4624-b6a5-f92d8b1f8c25"
            }
          }
        ]
      },
      {
        "id": "04881c1d-7edc-475d-8fc1-20d3d722b361",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f3d24496-cad6-47d9-9d2d-6a557ce9148f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96f2310a-8ca4-4432-8205-13ea08be91d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aca3377b-4df2-4314-be74-8c9211117ba0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea66600-166d-4648-9f13-68604b741cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bebdc2d3-e166-4804-85c1-18a3c492b8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7da571-3620-408d-ab44-6595b454ca26",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e05e5b-73c3-4b44-af3b-bf91e8c51936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e47c64e7-978e-453a-b6e5-055fb0e89d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f93f6b-285d-488f-9a1b-7d17ff8f46b2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff321a8f-709e-488b-bf84-3ac48ac593c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab9e3657-989d-474c-b01b-06b280b0d690"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b874f312-2ce8-4827-b5ed-40fe3c0fb008",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04b51d95-4fc7-4045-9908-9c7e909b1c8c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32a1845-f2be-4316-a49d-eae432e5628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "645b477b-d066-4306-9532-4d62443ff9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17ef7f2-d212-4f9e-82df-3465eda4cbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfaa01e-1d7f-4d88-a458-49935abc2681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feffcf81-75c6-43dc-a991-77aedf30c90c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11faefa2-8c06-4796-8e38-09b572900759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2ab3d49-0f07-4c3b-bdc0-19d3f1e85b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc888dfc-bcf5-40f8-999a-e0a3b6a44827",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "1d546b45-80b6-4d43-8208-fd38495ae038"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2eb12568-b687-41ed-a2bb-8832f1126e79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d55f77af-4886-4eb8-962b-b463cfcdd36e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "359b46d3-0f93-4d4a-b7fe-1b483aa1714c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a7e6b7be-1899-43d8-b9af-eeeeb101d8ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c78aeeed-9047-40af-8408-5990cadf5d91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2313b6e8-dd0f-454b-a6e5-d8778c3bcb93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ee1ffec-3620-4ff0-96d4-dd9f9e0b5343",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5652ed34-d535-4c0d-a6ac-bca53be7aa4b"
            }
          }
        ]
      },
      {
        "id": "e89bd5bb-a532-4469-a095-1845639f403e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b0d43b58-c7c8-4c55-9644-f862df7a41d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71ee245e-30f4-4e13-930f-07d6350f851b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f065e84b-ca5f-4efa-b55a-96a3502d8e3d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb542908-b3ed-4505-a7df-4e9141a2b647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ba4670-3ff8-4e14-9a37-4cbecfbca37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea82600b-95da-48be-a0f9-63579848d2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59f64096-29fc-4225-9f69-2e6a1fc4cb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd1768a-84f3-4302-9f72-bd5f804f7d10",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184fdb76-f306-474d-9f05-fc8fee46aa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e178d1a1-00b2-4e34-9833-503904fbb37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9395be1f-18fb-4e14-a01b-79f2cdcb675c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52714e9f-dd30-4026-9ed6-95791699b9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7d1aef-e8cd-499d-97fb-21391355837d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cb7e94-f0ab-4985-8501-93e5f10ac81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff9ece9-4c2a-457e-9b93-83e66feb2bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8357ce-5d33-4315-bbd9-d3efbc0886c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e7bba4e-4fed-47f2-b29f-fb10f7622ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee04470d-0d3d-4dd1-95f3-e68bbdce7623",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf20ccde-8237-438d-beb0-f5464f67a55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c87c47-ca69-4455-aad6-f5ce8cb6bbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1746d2-ca7f-41ae-a770-28b09b46a220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea8ed70c-c09a-464f-b0aa-d59d4271a489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8358ea61-fcdf-4638-9f43-2f4b8cc4faee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2db220d-7359-4201-878e-26706bd44044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c849fd-af8a-4606-889d-5bef0fa2a925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15932a6-323b-41ec-95b9-b7160b1663cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a11597f5-f12c-42d9-bbd0-0f4500744741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451fa44a-49f2-4d71-be77-00424e07024c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76083da3-eb1f-4fa2-8010-d3d29c54dc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87c2e19-5534-4538-b841-b438a71578ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af72cbc0-94ea-487d-b83d-9d6ae1051ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5bf9079-04d9-4ca9-b6e2-5c3088a1b27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33aaae2-e650-4d0c-ad17-503f64f85da6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5240ede0-32a5-4b95-a956-52d03c403a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f244683e-61ec-48dc-9cfb-33a5b4140caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba10b6fb-41dc-4086-bae0-bc18e3483b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ae89999-051e-416c-81b0-26ae413e672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5fa9f5-0c8c-4e6f-97a2-d3e3e21689da",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c647ec-be6a-4bcb-b903-51c3f6e5a9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345687f0-425a-41de-8618-ded4cb991ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e612d0-6c8b-4bfa-b783-3aaf73bb29b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89550fff-2334-4a5a-bff2-a6b700832b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3439d51-f78c-46d3-a59d-5b156d2db702",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f7ea18-9d11-47b3-9d98-46db87cf00a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51545fcf-ae29-4f38-8e5d-457c46d83e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39599481-950c-4092-931e-63a0074845fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97aa102f-2d1f-49a2-8a0c-940b759bb3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ba4cae-d6ae-45ec-8417-54d51c909341",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430a6457-b59e-4931-9309-d87f59feb14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e09418c-199c-41fa-8c26-83c19aae1ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475552b4-cbc2-4f7a-8507-a0e9331264e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "825d3b38-ce55-4851-ac2a-119993b1f7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7868b0-2219-4792-b99e-db5f31e4a2eb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa06b4cb-a5b8-434d-8d0b-75fe663e5a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950ed30a-8674-4a92-93fb-4a8a79b61d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330fcd15-bac4-41d0-b1ab-7f7eb499a8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15a719e7-1db1-4a6e-b9e3-8713a5f5c208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b4be05-be3f-4d59-b2fc-ce191708f4a8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad52f7be-93fa-428f-a518-bfaf00e940e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291b4470-a42b-4230-8d68-73f19fc149bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec75f63-8b02-4452-ae20-c9018b5a218f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9450839-5ca7-4b28-ad0b-ec43cf72d58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e149e23-95fa-4ee9-809c-5b0d29b83515",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fde7c7-8648-476f-afb9-40d4a6afdcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500d5f1d-b083-4cc6-b9e7-0536a6afc2a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd9aa6a-79a1-4926-84df-b31d8fabbcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b3763f7-1eaf-4ffd-87a0-da7cce41f0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88a15e2-528c-43ab-bb26-c694c5645f5f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bcbce9-e381-4629-912d-1b1432f21a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10743a9f-9f3d-4f8f-9301-ec77ece5b242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2dccbb-a52a-4f8c-a6e6-57683766e08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd26dd18-e4af-4e91-98d2-ed4d7b6d1253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c73dea2-7505-498a-be7d-3719c90a9832",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd215431-f31f-42b7-ac39-0c2dc0271c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5620de97-7e3d-44a2-b6b8-44d7d8ad34b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548ecaf2-274f-49ba-b927-3a3f01e56d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf83f7d7-eaa5-4b8a-b463-9b5763f499f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb83bce-763b-48cd-86d8-56add79d86f7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ff8aeb-89cb-456d-bd50-4d238c7986fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fa77f6-c6e8-4f62-8bd0-7e6b7ea82aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccce53fe-f8a9-4616-8f14-617d5c2014f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76c5a7f9-3b8c-434d-8dbd-652610e3e0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99573066-fe99-4f5d-8d96-c64c0ee39f30",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c67a17-f5cf-4e2b-8859-c0d6fd5dd4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd54cc6e-4ccd-4197-937f-843cd11a5175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e4f365-3563-44b5-b60b-127df6d53d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427e1ead-f7f7-4853-bd8f-2f5a6ab4d8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d707280b-f412-4050-8702-db9c981e5626",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cebf71-be7d-43be-a9b7-cbdb56c5914a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18743ff9-8fff-4b57-b017-9865cbd8f3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40bdf98-d4f0-44d1-b933-89a5de667b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf760a0b-8faa-4ee8-b103-094bd468b187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d359ce8f-3dfa-43c3-8911-6bd2067b84a6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2b9d63-4d4f-4d1c-9411-54ef5564ddfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76261ad0-9b66-4a37-8d1e-b22398e622eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c4bb9f-bdf7-465b-bcfe-38aee3938ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a50a178-3122-48ad-8f1f-bf6206bd5ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c992af-c214-478c-82ea-de086f2d466c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f74f75-e575-454d-97bf-7009e5393b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd61999-e962-428d-88fa-135eed22a695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0624b8d4-071a-479b-be15-c5db21462319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8279c14-11be-427d-a0dc-d5da7f2fcb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b165054-34c9-49ab-adf3-85388a361f8b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121e13fc-176c-4a35-a194-f182428f8154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b44a14c-d6a5-452c-b278-0df2508a8bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94923fff-f3bd-48b7-ac47-dfdc542544fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e90f097-e4ef-4e67-95be-cabba3be1028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553f23d8-6a1a-4ed3-9659-f2732339d6f0",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d232ea3-b2e7-462b-ad19-229505e88c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de39af27-2488-430b-8581-eeb7c93cd109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e71c705-1503-42d8-86a2-312cc268730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2865ba2-0f5d-4a57-8214-95277474a4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76661de3-c634-407e-9f09-7b48a8416539",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefbf551-305c-446a-8288-bab9a1a46177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b7e2c4-96b3-4ad2-8b47-9a08bdbb8109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87608abe-d2ab-4f0d-b417-4ed41d516966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "855bacdb-e54b-4cda-8cc0-1433873d321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7829109d-b3a7-48f5-be3a-ca95cd87cdd9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6800c62-8678-4699-b5c4-cd896f4561f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8915390-6431-4037-989b-2b5072835b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aed651-c9dc-4fa5-aa15-30c7bcd30207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "118a89cb-d02a-4565-ae8c-145b2541b6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cba4ca-0cf9-464e-b53c-4876501f4511",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caefab6d-edc5-4b4a-a172-5ac09f603008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844205f5-d567-4b35-96a1-33688d3d31d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2936fa-cd9a-4f88-b5ff-c9f71a93f520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4394f653-300c-4ec8-8e09-71b58194c295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20158909-6dcc-4c0b-90fe-6ca06400f9f5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba26b79f-b17e-43d2-95e4-13283e2d7c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2002b23c-0796-4d9f-8a5f-dcb982901438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6393bb8f-1ebd-44a3-ba89-3974d1e0aefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "695b013f-fa0c-476d-b49e-915a72eaf3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e5909a-b4a0-459f-b0a4-42ed3f2705d4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375dc45e-76ff-46ce-9159-0c4149bddf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99efad34-de0e-4314-b792-bdf4ac78157a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae9f5dc-840b-478d-8f3d-b46e6e05617f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f9588b-d1dc-42b8-b39e-23af2407e9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd9bc3a-cd34-4878-be11-aeef6f5905db",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85738518-361c-4394-81a2-5fd2b9a4b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79e8a0c-cf2d-4287-b2a9-bdfd3f5c34be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fac790-a5c9-4a85-b20a-22ca34bad0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa89165-698f-4b44-9c2f-16c389f195b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea617ab1-ea11-48cf-b1c0-b88fcaa2836e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9059b46f-0529-421c-80cd-6c4d1eccb618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e620f10-599e-460c-bccd-6cef2f2f62f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef49f426-3a28-4b61-ac9d-aa34cb7885f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "470acf90-34b9-406e-8e3b-5677c8583f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f8f806-a226-4e30-b31e-dd89ff3a01c2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c8d9a-74f3-4a3c-87f0-85812e922423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1af1076-0dbf-4ba9-861a-1d5fd49ff720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a64818-1d42-4372-adab-a7dc20895b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d93f2f3-69a8-4b72-9958-4cdd50787155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f9e186-bc83-4e8c-b21b-3dbb045af5c8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9e30c8-0fc9-4538-a8ae-5535471223cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd7bbbc-7842-4143-827a-e166e517d3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df5236b-e4e0-4db4-9155-147db765eea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa9d40d-0fa9-4698-821c-ddf61d6eb209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c112acdd-d5fd-42be-84be-a6aeae46ea35",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94449f0-7038-4cd7-9c8f-3da2199e9e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c379ae35-f474-482c-bc71-c2126eae4927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e285746-c51d-4624-a3af-e06fd63000ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "632d31b5-e5c2-4666-a91c-39fc4afc9cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5aefa1-7c47-4f6d-b72a-8858ca50c177",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89785e74-644f-4595-92d2-c2f26310417b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac296bc-2873-45e5-9573-dc1021835e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8fcf9a-901f-498d-a447-49c8de1bfb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c2eba1-a8c9-483e-9f6f-8dacb462e847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b58a98-114e-4b98-a923-9b1dc7702123",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbfc072-8a2a-4a54-b6a4-cfeded6528f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bff291f-06ca-44db-b0da-94bbdcdb5d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac0fd6-db5b-41ab-87c5-f09f46d72338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8f1c66-280f-462c-a38c-5812448554fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823e8cdf-7241-49b7-8a8e-68361d5a2bbf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5176641-2c06-47a1-887d-3110162f175e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615e3a1e-1b7b-46a8-853d-fd6ffa89f20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9711b4ce-d8d4-4c84-81d7-a299520a090c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "122557c6-b471-4ee7-a855-25b9fc5e8085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b386e91b-6ff3-4e99-9358-f1e19c86be78",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3023ba3e-3ede-44c0-a038-c362a60d5c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c62c2f5c-f8a7-4e3f-b4e2-278d68469736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16857439-60fe-41cc-96de-86886cff3bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b00635d8-36d9-45e1-b035-b70288946b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cebbafd-5c8d-43f2-832c-0d49412c34f5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2ae29e-6244-4958-a4bf-583327bb16e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fe0841-fa71-4a0e-8c64-ff1a1df7e314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9834bd-302c-487f-995f-e0eaa89f416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e789c5d-03f7-4fe7-804d-ecd822d5c199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e01a1ee-f1bd-417b-9577-1016c4c1a82c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f073e2-4a2a-44df-8abb-1dc251dc3f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fab67fe-4c2c-4191-865e-dfaba2b2592b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b18df2-c2b7-45d0-9e26-819c1a3052ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d2a54b-e5f8-408c-b903-300576b05bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cae9830-422a-4ebd-b278-2a903d777dfa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504afa05-8c4e-4478-b9a9-e9fd70a9840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6568e512-2cff-4f21-a411-ecb1dc99ec04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f1cff1-e445-415e-8680-19467f2658ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e27bc9b2-213a-4b15-b4cf-5f580a96cb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9911e89-a91b-4404-b594-905105489ab6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fddf4e-0ba3-4a92-b65b-c7df0244c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af26733-c8e5-4b32-97ab-fb9d826d760f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a674365e-5d53-41f4-b483-371f36ba03fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b31ae9-25b7-4511-841c-5c4a7e7286ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137a6a3f-cfdc-44da-9001-9dc51be4403c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33c1a37-23c1-4545-a258-ffb37657dbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b1b7e9-e53e-4407-ab0d-1ceb75211d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cf6794-42e9-4d47-a73a-8d0787c5ce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b01d5ef-1d0f-47c4-bc30-59c867e761c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178bb89-6e62-4380-b582-4e4b879829e3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09120b1-d46c-48f8-b0b2-ad4c4cb78746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd941e3-0151-43be-a310-37bacd4889b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf008a8-ca60-4857-a49a-6f291a4506bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5e6eb8-7690-4447-ad99-a2d6dd740d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e51092a-9b19-40e3-b94c-f40d0a3da192",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf20678-ae7b-424d-9fca-3d422b0b5966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc90afd8-a745-4b4d-ad29-f6fff961aa94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22548f62-ceef-44f1-ad39-b99437f41d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c76fbcd7-dc17-4eec-a182-ec8c38d7c560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13e9e45-4c12-4611-9129-ebc8ad92d493",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4fb713-cbd1-4aeb-b7df-3ec50c78247c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15841a4c-f697-47c5-98aa-084cfb4de024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a28b0b-3f14-47bf-a2af-c7d44ae48f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "698de635-d364-4108-bb71-c21c8b5b1dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b16497c-959e-45bd-a1d7-fffdaef5c2a5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f649093-e21a-43f9-887d-cb44dded01db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5962c3-3869-4baf-a29d-1db5f29d702a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac65cb-8cfe-4b82-a9cf-8d0bdc03f041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48349bfb-58dc-4ac3-b05e-e25700c30d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31441b15-9524-40bf-a1c5-decf1865eee0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec193b95-1f61-44c7-8ec2-4b593a3adf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4f7939-2e44-4aee-a2d6-4a8a47aa581b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751160ca-804e-4aa2-824a-3abbc0a15e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "224938e0-8fa9-4133-aeb8-d215fd7e7465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2fbdd3-e27b-4bbb-a49a-dd8a5ae51cd3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60161d30-65b4-4b51-9492-a96d8c5080d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2053719e-0a4f-4d49-a596-833dc7f8877e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcc8746-866a-4041-9fd7-383d739f448c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "672c5b05-9f7c-4875-8a12-a33772575f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28b7983-81e6-4be6-a13d-f81ce7b4ad5e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7f753b-4c38-43eb-a396-0e4a825ba4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4df2b4-ecdb-4a35-b2f5-e1e1d5963350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39e574c-3c66-471f-b185-6fd0e004e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a85e9e2a-578a-47b4-a715-63319427845e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154be4a3-24c7-4be4-a3ad-d93406569397",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4e51ed-f752-4224-9066-203f49d3075a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c90bfa-1e38-48f9-b357-8bee7244ccd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba079ca-0a5c-4f1d-9c15-004f86653e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60d331b5-c66e-44b1-a328-373fad57b741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae797b1-b57d-45e3-9667-c47953165b36",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1631bd-c8e4-4e6d-8d5f-e5a11b63f293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c252941-912d-4960-bd93-41d9e8ddf82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4418630-8e1f-4963-9f2f-0ebf800e9a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26e42c85-5f21-4934-a9c7-cf0bde9e0884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa4db94-63f3-48ba-af0c-8c6b23266c07",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f246757-5e9c-46fa-adb8-82e7d6cf9100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2d1dba-0677-4c5b-90da-7db36d4fb10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c36e6b-c3d3-4486-bec5-6336fe44b83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb46104-17ae-468b-a955-837dea1ef133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83578e03-b198-4ec5-832b-267b057b2e22",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d9fbb0-6a20-49a2-9992-5701ffd30647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97909128-36fc-411a-85a8-aed0d4b0e259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ad44cb-0751-4fa0-aef4-ed8101ddc28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b1615b-4dd0-4ee6-bf75-cb85a0777cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e5906a-180b-4ded-a7ef-0325ddcf1fcb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1c5d65-70d5-4c48-826f-a4fcde0cd15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01c4ed1-5509-4159-b0a3-9268add209d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a321e4-537b-4704-8d61-ee7e2ebe79fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9ab691-b49f-447e-bb25-d1594cd726b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554c6b86-3f25-4df2-b121-73df848d58c6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a927da-41b4-447a-a374-7e120876c98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0efd67e-29a2-44ab-bff1-b12d4cb61391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5872c0-7627-4901-96b2-8f489c6e3a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be01e9c3-8389-4bc8-9857-171c9738857b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e2180c-9911-4e96-985e-cfe78bd140fe",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa2a1eb-0a6e-496b-a6c7-18ad9e617c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720a6068-df24-48e0-8960-7ecfb2df9197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756ce481-ef86-4b57-93af-50ffba1ab1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3d2583-be40-4070-b009-6a9638a4e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fbcae4-f0b3-4027-9cb7-ac40b2c35af2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d7b8b5-521d-4fb4-bc67-010ed19ca0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a1a72e-7b58-4757-8e3e-d64b63625ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100a9749-c22e-43ed-a663-3467d36fa4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "43c58918-2583-4afb-b5d1-7965bc2eb8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd6cd24-4097-4e72-9947-31a672e026d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9285e0eb-dd5f-4e31-a738-a924a495312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6231c7cf-ae37-44b1-9503-af130a3ce5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e84c43c-0a7a-4ee0-bb29-135b4e7d9122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a278b000-7abd-4229-a4a8-840c5789f190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b651b36d-3d05-43d6-a714-a50afdb04aa9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52a8b37-c641-4208-a82c-b6edf15cc2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2f7b5f-d6aa-482c-8331-cc10a755573b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9079dd5b-944d-40bb-bf0d-d05e3da3f198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7585e22e-abe7-4771-a785-aecb023c89ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6205980-7102-4a6d-aa2f-0d58d4203c2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c181f5d-e5f2-4a63-86ce-3a28ddfcc467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0716d5-ed82-4e77-a6e0-3b006a52a5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29acbaeb-cbb2-4507-9a7f-2a6729e6eeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0541aca-62fb-4083-a610-99beef6ed20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb868be1-6f46-482b-a711-5d91b9c6e6ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dd6fe4-7e7c-4d5a-9630-7313d5f4938b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56270c6-5619-450b-89af-f510e367eb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6bc66a-8af2-4a23-b774-d1f4690c3f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8b82a9-e73a-41de-b22a-90a8c02ff048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3761ad43-4819-4b44-bad5-a8ee94c7ecf4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdddc6e2-a790-4807-a8a6-ceab60d874de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ecb7a9-c687-4904-800b-e3fb198fc9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35141cc7-ac52-4923-98d7-0f14d411285a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c56b6767-e468-446f-93f7-a8378ea5ca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6e4e0f-80e0-4251-8bed-1eb37cb98e4e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93290b4-625d-4560-805e-1a30dfbbbb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9576373c-14df-4c74-83cc-b54d3975e82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6111d89-bf81-44b4-b09c-9f64c8bc5c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0540ff8f-9c33-4c6c-94c9-47d21d1193ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2d874c-1077-4521-ab65-9c42b9d8912f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61450723-7551-4f34-9696-d557672349e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b466fe-bd18-46b3-9ee9-ded1bfc68bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8615c9ad-5b38-4801-b2f5-4e216a707cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb79df2-1f3d-4eca-bac0-01d18d206024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea936d7-9bfe-4d5e-aa4e-5fba486758b7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8e6b5b-5597-485d-ac37-f939763834e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e113c5e-e685-4915-a326-5aa64da380e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40779b41-d300-4a78-a7e4-e8a8b6b34b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7043bc4c-bc5e-4091-9675-4f979cefa677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eae3ac2-922a-45cf-80ca-1127b05551df",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcdd1e6-e9f3-472f-a900-2506a579eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0e7590-30e4-44bb-865a-dcc68733888b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a44815-eff6-480a-a68f-4712b2a7f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9574e5-b525-4fdf-8f03-5d82edf8ebd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2bfa82-caaf-4f83-8e10-1daf30f4a862",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16becc8b-cbe5-4729-96d3-db804ad6bba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749b60d2-e69d-4a34-b46c-a8ee3e25b91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354b7875-e131-46c2-9795-b91bba36021d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1ab38d-3c06-4a39-8e9e-be5a06555f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e3ffe7-3238-4f09-8f2d-e124a8ae80c8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae3794a-6020-43f2-bffb-35b4a2e130f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94bd6b64-1b75-45c6-8a24-cdde34f04765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92222e3-550b-4c56-a135-1f875a0fb22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "191bafcb-e91f-49c6-8484-28a5fa971a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfdd7b7-8cbb-47de-8945-a7073102c5e3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8915f7-d912-419a-b157-1f6133d6e310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b07e47f-d9b4-40ab-87e6-072cd46b4c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5c7ade-90ff-49a3-ad4e-b79b88fe2bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "37d1021e-ab1c-4a65-873e-6510af565387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b80caf-f94e-4ed3-981a-f69ffddfa4c4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c36e9c-203a-44a9-8d11-267102e53077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9503f405-e4c9-4f0c-ac8c-c400be6b1703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74c4c93-9e95-46dc-ab35-1d3f098a1f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3669c063-e217-40f4-9fef-2d620719baa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7469317a-438d-4b36-a019-0e92a4fddf19",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2fbfd2-70a9-4c07-a34c-5d685dba1dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a40f3cf-f9d3-41bc-8702-05c36aece275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd1c0c7-fc61-4cc6-8b46-9d3dbfe257ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e588a869-8808-4fb5-a147-029353d76f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b6d6c4-f21d-4e76-b25d-42639bf71093",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ad79c4-3198-4ffe-9d4a-e97492ce81ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8694ca-bcf4-406e-b744-129dc75be18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31482bb4-2cba-4e44-a810-cd8ae9c27a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df04cdf3-7be4-4a4b-8a7a-53e6e2a8074c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217b6ed3-4237-4577-aeaa-aad7c31833a0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a6fcaf-a267-405f-b253-2e2b325c8b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada218b3-4539-4a52-807d-c0df133da8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f5cb64-860a-4369-9403-79cf79ff12dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "493be81d-3276-4dfe-b272-9121bb6a2d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ed7195-4e64-4b89-b96c-5a17dcd82e5e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533eb48f-07ec-42d3-a9f7-62e418d324e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0453c8f5-326b-49e0-a751-bec2c50de377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a83a1d9-6c5e-42c3-9d7b-208a8b125a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "551338aa-d671-4c5e-8977-de62cd931d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0694c98c-0d0f-41c2-9083-bd4acd3316bd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f34864-0e13-4507-a1bf-2128601decb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f17f8f6-ee89-4913-b1f5-353edf7e5ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8b695e-0437-47dd-9f50-3e77240e05a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f86241d8-8677-4fbf-8b2f-8eb737276641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41d7158-a1f8-481a-aa2d-3d342d0a795c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a841159-4066-442b-9205-6bd3e034938b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2641727c-a146-4e1c-a00d-bc12f1e3e6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fbf77e-e918-41ba-ba65-38b9fcfe0417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab7781c-80c1-4223-8d2a-a62863cd2044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb6bb2b-e958-44f5-91b7-d5b1e69067e7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ca339e-c71f-41a2-aae6-bd90952d18ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e6fadb-af1b-4dd4-9de8-b1c73ecfb6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79593b9a-d2c4-4f58-9995-6231b0eef609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e17a1da-f108-406c-ba93-4a19e10a900c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b165b30-ea5a-43d8-ba70-5d8083e058a7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b919c64d-f93a-49c1-8e5a-3c2974459ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c36e514-3f95-4ada-b5ad-af269e8a5d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87237942-5847-45fd-a6d0-241c42c0d132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34309bcf-a8d7-47c6-9425-387f53c41b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc28ba8-0615-4101-9bb5-1d6c5a732662",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241cb372-68ea-4c8b-870a-737acedd3a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f82b38d-7c63-4346-b545-fdbca478cf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc62188-42d8-4ec0-a168-4a94f10dd72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d527d77-58a4-4d1e-8971-a8987e8d7b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629a51cb-f77b-45c3-a6f2-9995b9cff9cb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a051cd-2566-42aa-94d5-5dbea39cbbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7016b81-0d5e-4bb4-944b-af5a6f516c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fe246f-d1a8-4ce8-8fe7-75499a831984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1425cec-0c7c-4d23-95b3-b2236abfff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9d277f-4963-49ff-8c7f-a649b92eb0de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a430ae-c49e-4b12-8955-8ab69fe14855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aa6efd-f8f4-45d4-928c-e2bc7c09a906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0b4528-9024-453b-b76c-ee3a2589ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffcf8f9-da11-4ead-b542-9b52262ff3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b1d36f-9906-4ab3-af7c-b7f7ae1e30ba",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56475177-a2e2-41d4-ac04-99fbae88bbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9214877c-72e5-4043-822d-2dd0415a44d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd208404-a4c8-4c3b-b3c8-aa93af5fe89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8f8a12-057f-413a-98a3-d28d64d4f047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de169d92-b4e6-4777-8b81-b15fbecbe1c9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e662474-0b6f-4bb3-9455-6f7d4635e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3adf5de-0c9b-4569-91db-e06ecf95dc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bbba4c-07ca-4d8d-96fb-efb12e0e0dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42de0753-1bca-4e8d-9dea-c1ed146f400d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f659e9a6-bdf6-456b-8f49-71d10b0fefa3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1570dc09-d33c-46c7-a6f9-114a5ad0523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dc1270-8b8a-47cb-ae37-cd5431fd38c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254f19bd-a5fe-4711-868a-12a8728d26d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe998f1-bffc-400c-91ac-102691978728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeb71c7-664d-4153-89bd-233147898156",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1562e1b9-be9c-4104-957c-b7e74123d9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7cb859-63d6-4e4e-bb32-98e32460bd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13015a35-3935-4901-8e46-e058ae4fce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94f47b08-e635-4d8e-b805-cf8cea6d2b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb206fa-6516-4475-a3f6-1c1443a087ea",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f0e446-5d96-4d51-900d-fa85e853056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2332ef06-2986-4695-8328-5a3cd6127312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1ee8d1-e294-4977-b5ab-c0b06c339178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e42c1e20-8fb2-4bbc-94c7-c371928031bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c249e35-1d81-4b4f-ae1d-281aeb0b0ef5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35a46e8-dc24-4d04-a2d2-a6c2e7840e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87d0387-4d88-43f0-8377-424cee7abaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ed7b2a-73a0-4d11-a9b4-844571009e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "986129e5-fd37-4cc5-bb53-148ac0b682a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adac29d-95b3-41a8-bdd1-181491f02f22",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05581437-0eaa-413e-86b4-f4fe5ef0d87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a88d0c-5250-4838-a70e-9ce06a9938e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7595b7-41c2-4e8f-8acf-889e2445af07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5379202-646c-4030-9b7a-f77c2c8ee902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47a7adb-cb23-4391-8c41-1078cfc03305",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da06f4ae-1cfd-44f4-8554-32ed90e81b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e06436c-399f-4fb7-8535-9effeafe3657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dce1a5-d96f-4c81-a89d-0236a4bb35b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbc82c7-8d8f-42ac-8ec9-ea6941a549a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf69246-2f2e-4138-86d6-8d8247ae2309",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063b2c9e-e93f-4f23-b49a-5da3b98a75de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27421a80-cd54-4ca0-a62d-c450ec50219a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c250ef-8b5c-43b2-b025-7f163c189e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "76918099-7fa0-447b-85a4-9bfe598249b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e16b808-8317-4acf-8840-535e267ecccd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a11fd13-1a0b-4a12-aa82-2a8d38dfaa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea877ba-2099-4bae-ad64-5b7b888bba3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ba5172-3684-49f5-a444-8e1636a80d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5751ee8e-5507-496d-a8b4-dcfdc8ed9f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcdf60c-216f-45d2-8dca-6c9e9d73cc9b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2e7d9c-c8cb-4197-8049-d587ec9fb2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02ef91b-9042-4387-b00d-f97ddcf964e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a782f665-ab57-431d-b695-b95c4c635368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e40836e9-427f-4917-917e-265f65173d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fb0994-b4f1-4406-a0f6-3fbdf512e222",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e174ec67-076a-46e3-b008-7d24e94efa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e96646f7-8729-43d0-b8b2-ba40477b1402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2e752d-1456-4261-af77-5281ee6cdba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "13de6a9f-d2d8-4832-9a4f-9fd638fcbd0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7530db61-edbb-4acf-8daf-4c700ada8f63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9dacc11-35d6-4d44-9654-c9b548c17780",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcd2bb4-15e1-497e-93b7-a342a9afad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebd2597d-2b57-4d9b-b554-aea96276f776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffc3af9-fc09-405d-940c-f1ad829f1ff1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "775d50fb-9c9b-4156-9044-182c8d7cf8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0a81d0-3328-41a7-b932-5149be42c4fd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0466e24-daa0-473d-b174-5ab9c104f9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06bd5b4-6630-4387-826c-9e0eb23a43a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f89408e-0e66-49fd-9801-6655793ca956",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f9d4a41-a67a-4f61-8574-f125b87a7aae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27ca7c62-ee2f-48b9-9e20-6fa50b20d01b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "874ad0a4-ae19-4129-97e2-9a169a7bb194"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22cdf0d7-969e-4ce6-b556-6aeae072a716",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f751ea25-4098-4b8c-9092-482e29f7e0e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1469f713-b790-40bf-ac52-c970043ea4cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84b9aae6-bae5-4c16-bff9-19758ed6aebd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51467775-a185-4d62-8242-35c3f397d7b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0fb8044-38fe-4fc4-b6c5-57baffd898f4"
                }
              }
            ]
          },
          {
            "id": "9af9daa6-f3e5-4716-83cf-053974a15642",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2681cd6b-f73b-49c8-95a7-cd28765fec38",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e4bd659-5847-4500-b25b-455061befa27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ae1c62f-4c0c-40fe-8764-78d2dee7631b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2b02aae-fc22-44b4-a012-8290028ddc0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f0cdc75-e591-4c24-be2b-2cf5254ed424"
                    }
                  }
                ]
              },
              {
                "id": "2234fb4f-59a6-498e-a156-5ae55328820e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ed5eee7-3705-46f8-a5dc-c49e9942b617",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1eb1ceee-5d54-4da1-9950-29653c9663f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "814c4e64-c0a4-4b69-b890-f0ab2f3f3abf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94e835a8-1f92-47bd-bee1-c0d9aa103de4"
                    }
                  }
                ]
              },
              {
                "id": "fcb7e85d-1249-471f-a0ce-e977043964ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "551f3424-10f7-4120-b3fd-9cc8f0965bd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de400521-d0b4-4b79-b46a-399290830542"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72fe49ce-92b1-4521-98a9-06677907e21a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5835e999-1c8f-4b16-9965-dffdefbb765d"
                    }
                  }
                ]
              },
              {
                "id": "94174631-42a3-4940-8b3d-e7554f8d9964",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76b6d343-0cd0-4805-95f9-f9db830a7ea1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2b2e576-ca14-40b2-bfeb-fc824927daab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "677f236d-fd1c-4f30-96d0-adf6544a9787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bdf0cdc3-7009-419f-9483-0b7defe648e9"
                    }
                  }
                ]
              },
              {
                "id": "7d37aebf-8f3a-4ac0-9d95-fc17bb990f74",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb89a9f-a85f-4db3-a2c4-fbac875a0b53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "745a1e14-9088-4f5d-ad30-1dad1d9f8eac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02b1ca43-72b9-4b50-8e79-9339e7f642ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7172ceef-18e3-448e-b00f-df0dbf46dcd4"
                    }
                  }
                ]
              },
              {
                "id": "ae77d391-fadf-4f59-8ed5-8bad24a013d7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dc6aab5-1f0c-440c-b5c8-d06a0957da66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ab37995-14cf-41ac-868e-b92ab42f8bfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a39cb667-ad7a-4450-96b9-34e853fa60b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da921148-49ab-42b5-9eaa-ceb6f42f4774"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1019b48e-33ea-40d2-92d0-245d3c0ca5d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79f5823b-de23-477d-aa0f-cd3bcd7fef07"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a201cab-77e8-4b94-996b-05de27fc9e3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a8726a5-bfac-469e-9812-7e561f48fcb7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7d226f8-3927-4453-9eed-73e7994f6370",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a29f2258-a54b-4abc-9bad-41124f2c1302"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c92f9ae3-d79e-4a0f-9984-99cac603e7d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6efaaf1c-a0fc-4fc3-9acd-22c5c55c24c0"
            }
          }
        ]
      },
      {
        "id": "e5d9c07f-3cef-4648-9029-c968479b19b9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6d348725-97e3-4eae-9043-24a0c47d16fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7aedbb28-a96f-4b72-b3be-e4dd199653d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b4f5177-4abd-4347-a4b9-340824018f47",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3435a508-bb21-4948-8dad-a00975346132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7bb3d9-374e-445d-9c69-a845c029c29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b307b9f5-1974-4b2f-8ee4-23e242c8b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "27158989-000f-4616-b943-d97cec5b7f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886ac39a-0001-4353-aef3-889d1f003d1f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515486b3-8cf4-4dc7-86da-57c09bbe08f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d6f69f-ee5e-4f48-9b67-06e33895ec73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be74c1c8-6e53-4c6c-8001-32b64e8ffa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ebbce2-b5d0-4004-8735-1b7bf30aa0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1d3085-7d59-44a2-a22e-6b662fdb9a2a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b913aa76-24ba-46b1-99bf-68920bb39e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e24fdf-42b2-43ac-92df-e7d0dd5a9768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443814f7-a28e-46c6-b80c-d79d98318751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "929123f3-b20d-47d8-b014-ead775ec11ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0196e47-ada6-4460-8349-0e3b11b0868c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b149b195-e5e0-4785-9310-e7d178a3504e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173da4a5-c23f-4a4c-8a39-5f8b43721c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c263a3-9487-4d8d-9f08-f3e73f46ef57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d435fc7-76e0-45b6-8957-129c84ec06f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad73638b-0f4e-4e66-a2ec-49ebeb500511",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b32a3fa-a5c3-45ac-a070-e3f419e72c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff6c9e6-41b7-431a-822c-28b3b4086937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df30df7f-fa07-4b02-b134-1248428abc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "206027b9-59be-463e-9dd8-6b2914a8d254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57720e7-5b5e-4468-8e7d-556f113436d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4296bcb4-aa5e-4fbc-abf4-9cbbdd21df19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314462f4-5d87-4dac-adce-cd6ae033375d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1dcc56-bfe1-44fe-9c52-462c03de8dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1c5665-9ef0-45a0-a4e4-cda39e1a443c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ad1eeb-5d4a-4b5f-b4c0-788f9dcf42a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78cd274-6512-4a72-89fa-80741fa9dbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7d77ae-3ad7-400d-9395-fa35f02486e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc05c0a-ecbd-4c29-a401-1ebbfbbe95cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e5d221-5673-414c-a074-805783c8c257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db31bd8c-3772-4db1-8ea8-391ce30bb790",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e263b16-ad9f-4fa4-b852-e9f1e52d773d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7168ebea-33bf-46f1-a8b8-415baef37933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b251f1d5-08dc-46d7-b7b8-b11ac98dd1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0106044-4585-4e5d-bd4d-7d8af9cf8014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d59cb-a084-4e1b-bdef-ce0f54584bb6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de4efa-5e6b-4b89-85a4-67ef7fd3377b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302fe2c1-a68f-4da8-9516-2ba29cf53a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcedd3c7-705d-438d-935d-e8d29aaa2cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78e8919f-52e3-4f62-911b-a1a3f2791ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d137a9-86fa-44de-8a8f-01a971b33863",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa03a04e-e251-4127-9f71-e3542b1c8003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b153771b-d18b-4599-a025-e72853a42024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0e3088-3922-44cc-ab69-72d45caa33d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62dbd0d9-7259-4818-882d-a2d25f42be5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64f1186-f15b-4427-9bfd-882b0599e29e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73cd8ea-5538-4094-89af-0a996219fa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd735763-e3f4-4950-ac30-9677302234d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20415505-95f5-4715-83a8-ad8ca31ffe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3846d75d-ace7-4a0f-96ea-60ba682bd62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207cd2c9-26c6-4165-b5af-cf624130d3fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa44c91e-b904-40ba-888e-dfcef371b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2ab4d6-da27-4f25-8c4c-f44ec88c61a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c91f84-d264-46e2-9818-9f79d6044c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22c17884-ba4e-42f7-b125-5c94293a6fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e151627-1ec0-4a8e-a010-1ca9b16f9e37",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bdc387-8e4f-4736-80c1-e70ec5d9d7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49df610-6af8-4c7a-8291-c2a21e565099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1533c8b5-2142-42f8-83d6-458113754108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcac05d-41d3-4a69-a50f-38bb3150b480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539a6dab-0087-4ad4-9af1-a2e22b090b1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafe6227-9bad-41ec-9508-36a3089deffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443f98a1-9a81-4ef1-a6bb-64576044985e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a76026a-4d5a-4e3c-8815-73a3e3764a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "42d3694d-0a87-428f-b71d-80c61e112e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34858ecd-f56a-4fc4-a7a7-310c83f55944",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e8c618-acda-49e4-87bc-da3fd166231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd231f4-7d1c-4edd-b195-727668d36e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51954aa-feeb-4f8c-9a84-c6cbbfdc4f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7eaca07-8dc5-4722-b876-3799b844940d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba55223-3dc1-4a2b-9ab2-9cfd1e0d1ce3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe14dfad-9f75-4eb4-a2a9-7b4b9046d6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46888d5f-df83-4541-bc9d-6d96713d4394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dfc0ed-f1cf-4ebb-a4c5-cc7ef715f504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b98dac67-1612-441b-a59d-fb4aceb7c12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c801301-d4fe-4aff-9e25-4c24bf068645",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2757dcf5-157d-4198-a78a-27c052529b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d7dafd-dc0d-4ea3-af00-a6b796830f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749b2660-b346-4ce9-8fd6-81e4084866ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbe5f3e-2038-4980-948a-12664cd22b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5770c33a-4718-45b1-9182-5a5f0e74b833",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126d58c2-8a2d-4615-a204-55b633e1725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7ee3fb-ce26-4286-ad38-eecf2818cb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bb10d0-77f9-4c15-8202-12afdb35d2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14385d75-9bde-45e0-976c-42a11dfbbfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cf126e-1a7f-4b19-9072-0dcbea18883c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7728d28b-01a7-4268-b607-3fa30731a2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0fe524-3164-4d4f-9d76-8d90a47cb1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc13deb3-114c-4c2e-867d-efa387ba5a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef36d358-5976-47d3-92ed-f8d63022d3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6904e01c-8eca-46d1-b82d-b28a60238ff9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd6c977-c1d0-410c-90ce-a51bf41e8e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccfcf00-46f5-44b4-a98c-52939bb4d319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ea100a-3872-4dcb-b4c7-35141d820cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90bd4986-1c0e-46b2-b7a6-409b9151e157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58413e7c-04a6-4ba5-859f-aa5bd0a76245",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125bc374-3776-4486-b195-32c5508d866f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e52dba6-372e-4362-8a9a-11111876c34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5069f35-c5e8-4181-bdd0-67e760c7feba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e07b3fd-93fb-4843-972c-03d05df5d00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5167224-500e-47d6-8ee4-bd9c0170d8c5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce34d72b-078c-427f-8f4f-3ba0619f7d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fb5828-0e0b-4d70-a4e0-0b9fdece45e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a68c98-23c4-4b23-b827-3360ecdd1a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "448da7b8-31fe-495c-a1db-8e5666f54165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb502a59-f5a4-4fa9-b971-0b6e70776efc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473a1edc-8a29-4fc3-98a4-e1bc0d429c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1671c5f9-e2ef-497c-ade5-eed1567a1cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853de7ef-fec9-4b68-828b-bdce513dc94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "017efa30-3f66-4d7b-b7bb-3eab24178687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be1ff4b-42f8-4b73-a8b2-9f7720b865dc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cef396-9a81-49b4-a6a0-42a9e7062179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2272e0d-7399-4daa-9fe2-6140211a2d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aaf875-09e5-4a63-a30f-4626daa63bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "747eba06-8e24-4857-a2f9-341620c54561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f858e9-bb70-4141-85c3-2902a1188246",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43bcf87-8d46-4278-a7d3-42203deec364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3261ba81-9a01-40c7-b15a-2885bc3d4fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2dd58e-cf41-4866-b650-147566ee4b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fe32d2-1571-4380-9f2d-5846bfa3c95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5142016c-cebe-4ef1-92c0-a1e7553565ec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d273826c-e729-4612-926a-2c59f0bb7347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7d5652-5b40-4068-860a-c4f97cc8de28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e338b92-f3e7-45cc-861a-f301e01e3d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "456bf461-6332-49c0-92a6-8ef633b4f7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9981b5b4-1bd2-42b5-bde1-163c425fc192",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda6355-e4e5-4971-a5ee-a50dc9715f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4984f8-460b-4e31-adaa-e8346b064073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897e9dbc-3d12-4c35-ba6d-7398abe05f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "151dad21-3fe7-47ab-b743-483ea10144bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7943748f-c2a8-4a81-8a2e-8c9d986c8a07",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9dce59-d417-4018-a4c8-a5ce343bd7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70100bcb-ee69-45b3-963f-297ea2239c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e09cae-e197-4bb0-a76c-4a74aa05d0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f558cc4d-bd38-49be-a397-6db7f0314074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec317904-6691-40f7-9591-a4714c112848",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a999a7ea-5cc6-49b5-a4e2-8932891b9465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff23817-f16f-4d5f-a2d2-669af2d7be28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dbaf41-737a-4453-a8a7-3aad4edc3889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18bcfc44-568c-47ed-adf5-eebda7cabd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46b4af7-6cd1-4119-b342-a09736590378",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3d7302-5b76-4252-95e4-ad49119d6803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee28ac76-805b-4c6c-800c-18711743f289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d800eb98-b958-497f-9dd1-d4bfd6208300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c8b195-50b8-4627-acea-35bda755db85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110544a9-6b3e-4d69-8a69-b0ca73d00279",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3a4b63-e13a-4425-a539-d1357d8432c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b094796f-cf1a-4e01-8817-0d9b8bd9c21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907a32fe-6ecd-4971-9e9d-83ab292c3490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723a6cdc-d11c-43a0-8140-5af0c2c3f2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8fc3e6-aae7-4194-9909-cc9233084750",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845bea5e-e7b9-45ee-9b20-7afa38527003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d97d538-3cc5-46b9-8f5f-34c86a8ddfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8d29a7-acd3-4a16-b5e7-ba89330f486a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5a947a-2626-48ae-a86c-d9bcd98d5a90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45ec4a2c-3988-42d1-94b6-e3abc6aa169b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93886647-7626-4305-b7fa-65111aed8179",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e734783-a001-4412-8982-4ffe9da58bb2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9f44855c-7bb3-453e-bccc-e549bc7d591f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef7aac2-40c0-4791-9962-124476cd0ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62d34aa8-bc29-4e6e-b0ee-27f990f52a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681216a5-779b-461f-beca-0c9e7a01bf6d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e51e610-f330-44da-a020-790512d4a54a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ab895393-8fff-4daf-8279-29f9c5043fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56f1bba-b975-4166-85ad-0e9790896124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d006c977-084f-47b4-83d4-b8e5598b19e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71c95ad8-fb52-421c-b64b-69d626f370cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0c6a566-6210-41cd-b712-f4595bf77fbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84af8e12-b0da-42a3-8143-ab832e50ccb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0be1085a-5e12-461c-be06-819b0c268db1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ffbc4cd-e5d4-48f7-a951-59b376ef93a7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16c7b940-6006-4e18-b7b4-ddd305699a32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "327f499e-caef-4fa2-ade0-3eb7e0073c08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d561c53-936e-4b3b-8255-e5e3adcbfc29"
            }
          }
        ]
      },
      {
        "id": "202e8bd5-80fd-40f4-945f-3454e90f117b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc794f5f-5b23-4045-a94c-371a99d13140",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76290aa8-3ec9-457d-96a0-f9561add2906",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a082b2ea-effc-4353-b0cd-29c86fa68551",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c906b50-0b04-4cad-a267-6014d0ede235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06730348-5d97-451b-b867-132efac597e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4157005-2cc3-45b4-951f-5b72735e5809",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcf2f04-6767-4618-baa3-df5402f9f2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb38149f-7ea7-4f62-b626-7254768ed8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cc7971-b5ae-4b92-9bc0-9ef3f811fd8f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357c5cb7-6aec-4b43-9ed1-e3da5a856c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec671ae-cda3-4790-abb4-5bec031dad4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dbfcc7-d4d8-42c0-be78-7e2b51a8c705",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d38133-d0e8-4fe8-8d0f-449ff7116de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fda8109-1cd9-41c6-b5dc-66270f01ede4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59be46d2-23a1-4d36-963e-a78dfc5adc8d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816f971b-7f6e-4bb0-804b-c598a5fbaac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be21af4-e9b4-4368-b497-bb57308ae4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33861bea-4e33-4c55-ac95-e37c0f69acbd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7170caab-5f7f-4539-b399-7d24e2f289de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09099e0c-c0f5-4224-9b53-473b8d9ae24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484fdbc1-b496-4a6b-894c-857067fdd2db",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a4db5b-2093-402c-bdf8-cd618f6eae1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965ce5a5-b3e2-44cb-adc8-7a1db05e2ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae141bc-72bf-4d9b-98cf-cebe471ee63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a0530e-48d0-45a7-b2e0-450404729508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b540228-6420-4821-a94c-b78b5008b527",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4010ba0-8cfe-48b7-b9e7-8ede05e6b387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42054518-4cc7-49e2-921c-fc111ce99653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436b1f71-282d-432f-82b3-5474110edaad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330bbd75-6d9a-4847-bc89-4bf6de8169d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecd44bf-c262-4ff4-96d9-90989ce9d2cc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428dc74e-b563-4e3e-8b34-18b7a49689d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdeb400-0d3a-4ffe-9f10-69b8ad577635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb9705e-90e9-48b0-a8d4-28d32e4f214a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20721d9-09f9-40a5-94c8-a9b7cc92bac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cfef65-483c-4dfc-a1cc-662b909640d1",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a95872-53a6-44e3-a2f1-2ee3c39d94a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce1d3f44-0774-49db-b051-6ec51763478f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642a23e-20aa-4711-8661-d60d2230d8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba87a1c0-2f4e-443d-bd5a-e44c4386c98a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e11773-4560-4cc1-87c5-5ff25b75852b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ad947e-d512-4792-af45-a3dec2cabc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8ec93c-c6a7-4690-859d-c7f80b42c211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a477386-7df9-414c-bfc9-1365ef1af57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee33b724-f752-43c3-8e75-2ae0503bb4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72027561-7c91-441c-98f3-4cdd6e93c45e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f803331-c4a7-4cc4-b046-d271f8b51690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b35e19-e534-4d39-9774-33d73522e73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2919d128-97e6-437c-a56b-fdef9d964486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb215bcd-6fcb-4072-90b7-07ccf67ed1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93002b5-e615-48f2-987c-964269cca270",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad84483-ad4d-49f3-9e2f-bee3f4891f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78c16b8-da45-4d37-9a5a-21b7b4beb2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dea5de5-0595-473a-b0d5-5b31cbf89441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8a0f6e-a137-406f-95cf-5b0f07b0f3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5c09ea-aff0-4a36-861d-e0a17a181766",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ac29c5-928a-4941-836f-82e5dcf88a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0faa1515-1758-4e2c-be0f-72b32fad9a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff83e9-fa62-4999-ab67-56a6f139ad06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe83a7c-5f23-4d46-a59c-22254151a3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39cac1f-5cce-4f90-ba70-e6993b9adb05",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a183e71f-552b-4ad6-a4c1-3b94b47294c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1439ae5-5868-4d4e-bde6-11cc4f1062da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baca60b-5602-47bd-bec0-c02230ca6726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6df53d8-e415-4e4d-8481-143e9a605ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20c93a4-83cd-4434-bc0c-94bcb1ad9a8a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3dee04-7816-450c-b123-6ef9bafcf29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b928f250-3ffa-4370-8790-ea131ddaaeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9aadb5c-5ac7-4a7f-a2cb-45a827633a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01790c2d-6d64-4fdc-981d-afac298d8868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55e207-8434-4c86-8586-7e33feb7540a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f7d16d-3a7c-4777-854b-cbfc5a54f1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0719760a-64d2-4ffa-bed2-2c96f16b549c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1214f6-7a0b-4357-a4bb-92c3cc38d53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69251f9e-0fb4-41b5-b7fe-55cc5b942243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80ac720-bf06-465b-b962-69afd2257df4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb5a612-4d2f-406b-87fb-39712dfbd7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cea83a-43c1-49a0-b9e2-34dde6ce29c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4357a316-cbdc-4a11-a7e6-bedefda5e052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2fdccd-23af-4902-9ef2-d6c6080a377c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befdb4df-45e1-4f02-baf4-5b31c1a38e02",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42e8302-e2f6-4323-8496-f393073c3d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb3bb4f-0315-496e-b0a2-3073c203422c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddeee09-b044-4cb5-ab29-04c7cda17756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047a156e-9b6a-4bcd-8e07-22ed7837f985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70273be1-aac4-4455-ada5-01aa7e3de72c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8dac63-e00c-4df2-9326-cba78e965708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e15834-e18e-4cde-8864-cf558d481b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816bcfca-1796-4ac4-ba82-0be38916f058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121eaee8-f5b7-4655-8661-3a9083b4488d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77857a47-d8af-4bcc-ae0f-747e38209ae0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93fee96-7caa-4935-a411-742951db5f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62c3b34-1523-4df9-a36e-dac20259499f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0418a0d-a770-494d-abb9-6ec439d2551a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8de3c78-9c3d-4b10-aef3-fc63f7d4af96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef55f4e-b959-4eef-bece-32092b169241",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0394b556-4ca1-4774-a750-ec8b87552faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a8623c-fc27-4c94-985f-ddb2b4a47652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dcec64-9f47-477b-8eba-6f882c9d9e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2c2752-44b4-494b-88d2-1133fbbf79ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9baa0f-994d-4b29-97a4-e782d36ab2a0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d59b22b-8408-496d-989b-5a7463d050f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0854efe8-3fe4-41ef-a978-2896d94d6171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b8021f-c0fb-4c07-b37b-6c79a6204a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86df2760-8c25-45a4-92ae-7c2ea6bf2243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f89561-a4d3-4f32-a7e3-054269e1c753",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b0151-48d4-45e3-a1e5-31df367b8200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc834d8-df66-44f5-bc77-c86e80df1b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1840d0f-a8c0-49b5-86e6-4aca3c20e7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37594162-66ab-49ec-bbc3-9e238789e5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e667e172-153e-4a50-b363-b9e1a305c9be",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928d937a-7e6d-44bd-aafc-e7f0788eaafd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add78b5d-98e2-4a3a-9147-adba74e1f50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eaa974-f766-4de7-b2e7-a0ce80d84538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc0dcbb-ba8c-4de6-a68e-b80ef7ad9019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5554cf-82e6-4b48-b72c-071c43eb5418",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e792d75-41ae-4d4f-a903-99ed8160819c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b7b9777-a3d6-49e7-8878-f79f2f84d365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e96d4c9-61bf-4ea4-b67c-9360808914df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108dbd89-2ac0-4448-83d6-25b9b3759aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb1c98b-1ed9-4137-98f7-3d306b7110e6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d615fd-54f3-4b71-9e3c-7e8f32fed7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dee83983-5367-45aa-abcf-5f9b36904867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b36e084-6ea0-4e38-b304-8de7cffc3805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b7efc1-73d2-4132-9b90-408f4868ba56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b91c50d-49a0-4ec1-a588-b7d7acdab7f6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a2c3c5-f0d3-4a5d-bd3b-87b016c0a614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6741c2ae-0749-41e5-9489-c64fc670ef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2de8a30-832f-4f3d-9026-675b815f737a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854e4872-8c89-447e-ada9-0fdc5e054d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcde01c0-05ed-4877-8ff2-62d163f69b89",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a60ed2e-4e6f-438a-bea8-9c863035feec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6e31b8-a2ca-4b0e-95a9-f8cd7cbc2fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56755cbb-d3f5-4a94-939d-03685e318030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4838b956-3b71-46d3-84de-4604b9227ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0ae695-8a09-49b6-ab55-a49f9960a3ca",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54c2cad-7e42-43ec-bcc4-f05b4f079cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c7ee244-b5c7-4a24-b9d6-bd35fce38c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fbb670-6d16-4478-a307-7727ffeaf192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ab8427-a9e5-4fc3-91e2-97dd23731949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed3407d-f392-4470-8fd5-16667da96391",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d551648-02b4-4802-bac3-5c5babeea29e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18deba45-da8f-44a5-8316-4f22a87d3834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c267d919-5a63-4ebc-a5be-f0a3b034c346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511f9b9b-19ce-4273-8d57-baaf576b2059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3732dae5-9d0f-4c91-ab7a-a0b8b01f4bd4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252d66d1-ab9a-48a4-a717-5b09bab416c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52ab050-b134-406d-96ab-4ea7e2c44f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d5915a-b4eb-422d-98f1-cf59d3b65aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71527fb5-624b-443e-97f0-8eb9a32af576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea4a532-016a-4796-a021-7a25883ecd0c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51460606-bdba-4d1a-9a4f-c685bf554a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad044e16-ae0e-490b-b8ad-4e769fbf7883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e4cf23-d2ec-4393-98db-c3257d85fa90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44ecbac-c127-4b92-a722-a87a3cd37005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d0dce0-6028-4cd7-a1ef-2018c796e1a3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b019b0-b466-4bc8-9bc4-aa9b9b69de4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2c6e20-1f4a-45ad-9859-6672c3c8dd10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7aa699-9e90-4c1b-a057-2979605cb563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25004751-30a3-4d72-a01a-01722eea2c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d3a0db-83fd-496d-946d-3211c485c702",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce7942c-9d09-4bfd-94f0-52004f4ca75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad89281-8503-482a-8806-2a544419cbf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20558367-3a81-42af-973b-2b0698e43798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea95d3d-e178-48fe-ac48-dc649dee0c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93a73c3-2c52-49a3-a850-a1b4dc81653b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7d6705-0dee-4fdb-b267-605420087386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fb981d-e44f-42af-b873-d9a2d69f1c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69c79ae-7336-4894-b36e-cbe16902eef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1ef2bd-5cd9-4894-a937-41dc724ddb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d886c729-99ca-458a-801e-b7b293454afc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abe90ff-0157-4d60-89aa-a761f8e9d115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae88faa-dc96-4a49-8706-9a4ec166a200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e41ebc-12e1-44f3-9e75-238bf9b6cf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3c75a7-cd31-41b8-940c-3b660b34fd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f48218-b7ea-46ca-b2e9-628b6d10f2f6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d0649d-f1b9-4ec1-9324-219ac72f3c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277175c7-aece-4cbc-af18-eef622b6b88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15af1290-53d2-49ca-8067-ea77c24c161b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afcaf8c-3910-4d4e-b9e5-552777769ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35568db1-7897-4797-b4b5-4843223dbcb1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa1faa7-1c8e-4e7f-87ed-aa42fe6daf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197528a7-1e32-438c-a021-db439c7da0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5190b9-5bbc-4211-af68-a78b3c836163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e727a8fa-46ca-4084-8132-2455a6d38eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c9bf2b-4561-4d45-bbf7-f4b320ab8770",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0ae12d-cc12-47b7-a900-ff8e360b45a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa78ba3-2463-42af-8b3e-bd339f769bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ebd7d0-0efb-412b-8812-ee091ad7bafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c24c79-faa1-4b1f-b8c9-aa682275921e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460058b3-098b-4ef6-96c8-405b91c7a49a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dda60e-ba60-4869-aa6a-e43db28cdf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19706df0-0215-4e88-bc94-01f510163358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7069476-8af2-492a-bf48-157b94a67bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2771d6-08f8-4cbb-8120-30104868e238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b1d588-f739-4c79-852d-a05ac9b7f51b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab421aca-e670-41f1-b1f1-20959f749103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a1cac5-2a46-4d59-8fe0-5152d7e85997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e97595-bf2e-4614-a916-a7b320ab5712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f732ea78-09dc-4e02-9c5c-51cc26731a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d55bce-e0ed-4695-b7b9-b9b670ff51d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d8e517-7e2c-4fe9-ac75-81478e2260eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7353507b-1444-419d-847c-fc80da21f313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb01152-e13c-403b-91e6-2ce17d03d404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c787616-9279-4c91-9f4a-95098c787837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292a058e-7161-4dd2-aa3f-b638f0aabca4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b3501c-d68d-446a-ac4b-fa0aa66fa993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cc9816-26b3-4727-9ee9-53eec44a48f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7057fe86-401d-438a-b902-dbe25fa02548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab350cca-8d7a-45f3-8017-7d04465a80a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68cac6e-88fe-43f7-b5a0-76b37e377d87",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52130016-5447-46b9-9525-1c99cf84b71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdd66a2-c976-4b11-9fd3-7231955d975a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d781456-1f83-44b8-9efd-1678472061ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebf25b7-7307-4b7a-b542-b1d2a52bf27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8749bb-65c8-4845-98b1-20b569a79a6f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c45821-2dfc-4085-957c-22ecb71d0799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cbfa09-b04f-4bd7-bca7-8978bbaa0980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cf31d4-f117-4dbc-bb0b-fe680eea476c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169e8fd7-fc9f-4de7-aace-0686bf3d0bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa214a8-79ec-40a7-aba3-91f0003a9a42",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc020b2d-3c9e-4378-9a67-85988540c7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e24a694-b053-400d-b582-84780a9cc0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93da4aa-d912-4308-82c2-efae05593888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa82bf1-3422-4de0-a1ad-0988e97c0bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6901b33d-d6ce-47c3-ab50-21fad4fdfc06",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeefc895-7f68-40dc-9dd1-63619634d8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511895fb-a440-49c0-92a1-fd43b5342e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab60e0d-1c14-4238-86cd-04448d4f522c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857e815a-7a3e-4e32-b1ca-485cc8555573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c80032-69e9-43ff-98f1-f509ba1ecc39",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fe37f2-12fa-4b4b-aa7f-5eee49a8b75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4d101c-f326-454b-b840-95822648c9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf91596-84ff-485a-a8b9-8d7faead4824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d6368d-5f62-466d-b442-abfd84b581e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f22590-c8d3-45b9-895d-ee455080694e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7033bfca-2702-4c6b-9124-62d9a5e9aca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2debef03-3b31-48cf-89d0-9e9d28773af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b09ee07-b043-44ff-a588-f3a855717dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e22322f-6468-45ca-b570-55cd66d0c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702fc291-3e8b-49bc-ae72-93e749aef255",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5626d60a-a8a1-4b7a-8ba2-d5907fbeddfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500fdf48-37f4-4009-93f9-b179d75db41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3efb6a-9ab7-4664-b5cf-ea60febbbdaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62d3b24-953e-446b-9fca-97fcb2d139ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aba8937-4c3b-48e2-a12c-70f99c8340e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e2b0e2-c6fe-4946-afac-b56ee3c4782c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d0e1a0-c27d-491f-8510-f5fd625b4a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2360e43-f4be-4eb8-86f9-c44d619fe591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b0e6fc-e65c-41d2-8336-811494c40bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49ba8d8-8339-492b-bdd6-61c1bd6db8e9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b4e20e-b8ac-4bc9-927c-ed1fe43a0801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e1f61c-766b-422d-b5e5-043e7337c3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75db1ded-e9c2-4865-b320-a1a78a27ec9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494035e0-7cec-4602-a493-08ed4bde9715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c00be9-eefc-4ca6-9720-12d5290b9707",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3b32bc-ae4c-4ab4-8f3f-fdaa0b6dd318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302f0be9-aad2-4b04-9973-c17b8c9f2627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67b7454-3126-4c2d-b6e6-38f027e7bf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb1f6ee-3f1b-4f23-893c-e90b71c7c6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb476d4-5337-4d85-8857-5066fa18e8f1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35205fb-6d6b-4e0e-8e4e-b59f4a3fb690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaa4293-5a19-4c06-b2ea-06966f738776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b7bc2a-315e-44d4-a115-2efd8e8b0886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab34c9bd-01f5-4bb0-bb63-a9489414929c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbc7470-2543-4d4b-bea8-6050a27e2d9e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc25549-d59a-40a4-8189-99383525b7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9e3fb6-a20a-4d94-8f5c-5637183c952f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5919cdd2-2341-4cd8-a1f2-1565fbfc126b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd5ee5b-618b-452c-a506-0ad5bf613169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17806ced-c864-4a00-a830-a469a1cf7ea3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26612b20-7278-4207-b0c5-ae320aee936b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e3df65-3540-445c-8a10-641c67521600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f0143c-22b2-4dc6-8e92-99822dfc3193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f785d45-217a-424e-a37d-5552380851ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a8a8f5-1d84-4da1-ba70-970b33e9eb76",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4840d847-e14b-495f-8c67-612bd739f8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e2b594-5c85-4e95-a677-f6ea53005ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f63649-43d8-4306-b65f-dd9db89c03b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126ef49b-5934-4382-8d86-0513ba8a1f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659c12d3-5895-4bbd-9ab3-644b5b078a24",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b344be9b-38f0-426b-b1d7-c425746bedcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26971130-f039-4648-89a3-9f3f9fc4b1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea99fe3-ec48-4f53-8dd6-3628ce3e4486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7229861-346f-4ca9-8fc5-0be5d0e6baa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bd7e4c-1157-464d-905b-28a617581a90",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d059ac5-4a0d-4f81-8a7d-9bed9896fedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056c32cb-7c67-4b95-acf7-f7c530d2197e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc36f1eb-52bc-4a2a-ba9d-deaa98826a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06da69c0-44d5-4e02-8838-b9a8dce0ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8e77ba-b75e-46a7-8098-33dd14418383",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4046c5f-e66a-4435-863d-0baece33755c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69990bd-ebbb-4b1b-9724-a2fbf16f0276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805cf04b-b09a-4685-a61b-ef79b096f576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9c6935-f24f-4dba-89ec-beacde182f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32812b8-6cfa-464c-9f49-b83119e18035",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1316972a-4d7b-494b-9c87-5ab8ff06b1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab40b124-1bdf-462b-bafe-fc01182e41f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d0f2c4-146f-411c-9535-0ed623f9bfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce23c593-c6d5-4ec5-99b8-4ea2c6b19891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24132ec9-bc94-4a5a-adfa-9c701047c98c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f415491-e4dc-4df1-b8c4-c80004fd7d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bef9de-bd3c-49c2-9bd2-5302acd46f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ba3239-e696-4010-9308-e0ea10e2b0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dcdb20-0359-4feb-8513-ba381943b858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828df7f8-bc53-446c-9cb9-12504b34dfc2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790a5931-416d-421c-9818-42bf2cf65f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5137c899-7c8d-4689-8899-c77594ebcdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af6672e-f6b4-40c4-8c64-da27ee16f492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e23e053-9bac-44cf-adee-8ddb57318222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed4a390-69f4-4049-a16a-3f32f52baacd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c807e2dc-874e-4fb9-b2a7-399b3f7fa6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6466d9-f96c-4114-8173-f938bca1b13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591e1700-5023-42b6-814f-2237e2ec3b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5046799f-b67d-4f5e-b5e7-d7a26e713534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5da2cc-ab8c-40ad-a940-f1da36e28e43",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4642571-41bb-4834-8999-1a540f4608f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b4ba0c2-f562-4a8e-a9fb-187ca3e31a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af8984d-b665-42a0-b3d0-15b27e35a568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099e108a-5014-4b87-bfa0-ca22c0a53b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ae3d88-75a6-4541-9e80-a0a91dd887a8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b34cfdb-b7ea-4b6a-9c45-ff057671107f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66912c2-0862-46f2-9c55-447ad2d97ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbb5d48-0fe8-403a-b117-65afc1b50a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b335a3-a52a-4879-9f51-576c8b307e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ae46d5-90ac-4e2c-8f19-05ff841b77a1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdee53b7-18a5-4540-9fae-c9e00cd4df38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d1e359-cd76-4309-a678-8af793e117bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324d0a63-0476-4954-a3a4-1bd42a414abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ee4cc3-3557-4500-b369-1c1cea7619fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0048f4-7a0e-485e-928f-0ea7b2a3ace0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48f9038-bf6d-437f-a113-482e9238cfda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12dcaab0-5cc5-4aa7-8837-568a76bcfe3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd7d591-9d56-4dab-849a-4adab33a8ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4273e607-2ae8-46ab-800f-d67e57cfdb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dcff94-56bf-45e9-a4e1-3fb4041e6280",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75578a15-0cd7-4e74-b622-279e3e5869fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d65345-5219-456d-9372-2b57d6a3beb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c8d1ec-d480-4366-bd45-d85029d7b4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378bdcaf-7e70-4b22-a525-fca0ad0bb8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73900f31-18b3-42d8-9297-8287f6c034f5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee86e3d-c587-4121-a582-bbfff0b5b4df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7063d7d8-32e3-4a30-a4bc-7f35850e5ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edc9817-c6be-4803-8f40-b0ccb9be9178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c49f63-c04e-4095-9a68-a3ba73049b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb010a9-8484-4fa7-b2b7-8386b8c274f7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f3ad07-ece8-4fd2-b767-3edb84e6021f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e673a1b-4ad0-4209-bcc7-449513445923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205ed60c-24b5-4c49-832b-1e5987eb21bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf74dfd-15ce-4acf-8e8c-15c3ef6f2df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58f75e6-7451-410f-9377-2979f623bed0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7743b66-140f-42e1-bd42-8ae682b3fd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12948dbc-dad9-430e-b8e5-a72fd164ea28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893bf81f-8909-4a4b-a6f0-7f34f478e743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b945a36d-1553-4cac-858a-c080b42f58a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f2be5-1459-46eb-8281-cdad16c16862",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1108a155-7067-4d58-bcbc-78bddad62c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca3a324-5092-435d-9a98-751d7c9ecb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e091e0-8b36-4d14-8366-58861b8d7686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05b4076-1191-46f7-b7ac-bc924ea3ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3415230c-91ed-4af2-8393-e09274d0f156",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a40390d-dd51-41e3-9166-5a687a6a9173",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ee212a-3528-4b57-abe7-d9534d8d2f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73c4de-6ac8-4b30-8c8f-99e63702ef87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7064760d-f46e-4727-bbbb-4bc72f759981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a064b653-f58b-4799-95f0-343194b1afbb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8bd100-d584-460e-92ec-ec9fe4fe1eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fdd3b8c-f2e2-4976-9048-f442904092fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16697d14-718c-40d4-b5f5-251b07d8ad3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9bf9b4-d17e-40c4-b0f2-165d0d33a9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305901ff-436b-4324-8d26-c2485bacbcac",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4a0fa7-2850-4fa0-a45d-69423f04cd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce717d8-998e-492f-bc72-1a35447337ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25457fc8-d110-47b2-bd51-7d3a048e0e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4acbcc13-e65f-4143-8163-587134deada5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48410e93-b2b2-4f29-9ebc-f89b055e0521",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f5e492-e497-4026-8432-d602ae88de97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd760fc6-8a94-493d-9fc4-9f1dc307dd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb173f-b4c7-4f61-8e72-3b4968c95249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be65d665-5964-4727-b8c1-89dc67e2b042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c74502-c868-4c57-a20e-468fa4a421fb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8f5f53-dff9-4395-a144-f6742dd33cc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058f21ac-c8de-4a56-acb0-2908445730d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b431d1-52d9-48d2-bf69-2c672f8bd9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4faf6f2-53b9-498c-bbac-7be2ce2e48f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f9d78-1109-41e4-97e5-90b971daca45",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bb91b7-5348-472d-80e4-a6dedf4b39ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a814fdb6-ec5d-4c7a-bb08-0745a0d31fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6b35d7-884d-4132-8580-3c9a82fd55b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6769e99-fd3e-40fd-95f8-450b77aeb549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9cf11e-d532-4df7-a219-f0a19257193c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aeda671-9e09-4e6d-b674-86e47b2f94f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fce4e247-5fd6-4297-b234-51a77b4441bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67be399c-95d8-4ffb-b81f-6faf2f8f20e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da684ddd-577d-410b-b1f1-a8659f1fe098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fbb9b1-5f75-4ac4-be4d-9972ef924acf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e52130-ca68-4821-80af-8757cd7a7673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a81dda5-19fe-40f1-b6b9-ed46567eca78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054f4815-8d57-4e21-a1fe-70759ac0eab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ec3278-1e3d-4f19-8d38-1951cbdb904d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b93cab-03ac-4928-996b-a3d0b02e883c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dfda52-438d-4cf5-a785-5b6c4c561534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51cc7ed2-f1ae-432c-832c-e5894d56b31a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20ff91d-9e30-4608-a454-01d15c217b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f59337-a794-4eed-b8a7-0327b5b154a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110adfbc-aec3-46ca-aab4-3b5575070750",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473e8c82-641c-4611-8078-db9570d562f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b7f52a6-c130-4bb8-bf98-4b0fcb6ae830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f552185c-4668-40e4-9ed5-abed48159c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a141320-4d63-4103-94d1-e531c5ab818c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be200898-f91e-4559-bd67-185c6d8cdb50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0d12a2-0e8e-4ca3-accc-289de8490e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ff75a3-5773-445d-98d6-a79db44b9895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60884080-4dff-4d9a-8210-1dce2a99fabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee02921-3ae5-4414-9d4b-4c9568c6fc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b813cb7d-38b6-4baf-9176-f3d24ceeb81c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abf6a5c-fd67-4fdc-94d8-8a3027040ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9865b24-f85a-4bc5-bc46-03f626620a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3996b4a3-e973-4dce-a747-8f687ab614c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9164842e-3b99-4e35-8454-185234c4a155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9256388d-7804-4945-9048-03cfbbb243bf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900f9124-c92d-4d0c-b61a-19cdbf80e2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2311f869-29e4-4c6c-8fc1-e0235999ea2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e282df9-662d-41b3-9d82-5c6677288494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6bb22d-c1e3-41e4-bd72-dee5727bfc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab4530d-dc00-4cfe-a1ac-55dcca52898a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55e89d8-37fa-43f5-ba3f-65982fcaf4d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b75dbc8-eeba-4267-be27-d7e05fcc00be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef01690-e994-473c-a3da-11e482a1d4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce242695-e833-4324-8245-1e2e7aa4f7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3123051e-97a4-4bcf-ac74-f6cdbd0b9223",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30484a95-df5f-43bb-b2f3-612224517d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b8a7498-444b-4879-a29d-a1d645a47084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1daa51-6b69-46e6-8851-8937d9234b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9523bd06-5bd4-42a9-adb5-a7f3c76c2303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0361f863-7122-4ece-86d7-0736e0a6e9b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f2899f-ce64-444a-bff4-d96fbd84cba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccced454-5523-4adc-97b6-c011226112fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18133d5a-ad5b-455a-af54-53c6493c898b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5f306b-8076-41dc-a8a8-511f06a02fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ac6ef4-4c38-483c-8b80-f39bce62c78a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25606e6b-1653-4a8d-a800-e39d67a1b73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6a5bd7-0dac-440b-a0d6-e62040118009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a069c3d1-55f4-435d-aa35-59e35421fcec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b0c51e-c093-46fb-9afb-925a62300786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc7f146-be1e-4012-9b06-f36d7baaba2d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3b7d47-4146-4102-bff2-bb72e38c64f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e51aea7a-790f-40b9-8693-67b2ce93ffb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38a359-3bb7-4fac-8b8f-eb9b35d0a253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12c3292-e9a3-40de-9b87-d6a6e128f1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e448944-ae93-475d-ace9-eb8740d93df3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa5c410-1d95-4028-8d8a-c269a03dff09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ee0b4d-6c98-44a2-845f-399b1755e887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe654ab-f2af-42fb-b860-0bbf87baf920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6232109-ee82-4683-be17-bcac82d6faaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e5e3b6-35ec-45da-90ca-b591d9aea02b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297673b7-9bbd-4f8e-b5bd-b845de854b43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e637a0-9f4e-4e77-b6cc-a838b5fcd971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8385a62e-9a22-4a08-b9e7-a6db8f6200b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb170c6-6e8e-4a3d-9e33-19e7b19af88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3704bf9b-0b36-4ba3-937a-07db02fd119f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8c544f-adcc-4dd5-9033-f076ca2a07e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2c97aa-8bf3-4a82-935d-0ab75e6553d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc3c6b2-6e4c-497e-9ca2-6854a6407065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55592d76-9512-4094-b39d-54f5ad41de8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6567be39-5fa5-4a09-82a2-972a6ea3b3d2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573085b8-063d-4666-913c-8960ad1a6548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150c72fe-50aa-418b-8416-55f34948b6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2088ca0d-a18e-4f62-911d-b6b7a120efd7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85822c1-93ca-4da8-90a4-9afc3821b217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aa387a-e58e-4020-b4ce-1300d1019b25",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb30d115-e8e2-4196-b14f-911f04dc7c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045e572d-618f-459d-b7dd-63b8a47bed54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f646d7-258a-409a-bf97-490070420146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cf9615-eb96-4289-963c-19d715d401c3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a427d69-bd17-43c6-8c4b-99dd7be91170",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "377d85fb-b0c4-4a66-af59-d51bd4546f7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8c1e483-6023-4786-9976-8cfd2f20599e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89fb8e5e-0967-47ab-b2a8-29789ed17b53"
                    }
                  }
                ]
              },
              {
                "id": "e7b92364-019c-4674-b269-1b1db51fd6e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb100baf-0190-4b33-8602-bf3f3e3d08cd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d859732-7672-4b00-81f9-cb700693e556",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "06d21f7f-49ec-4ee0-a029-ea298a00e8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ada0458-fe2e-4b20-9f23-e1adeced79bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f767c56f-a93b-408c-ab09-92cdfa5653d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be50bf47-5e7b-44c7-88ae-d8ca12704567",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7492c382-b0aa-489c-812b-ebd964701e8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "503e9e2d-09ba-4ef6-83a2-5631575ba4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc479137-813b-4052-bd1d-7b1dd0920819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38960b31-1776-4863-ba03-7af35517343c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56d8cee8-d1f6-4399-b437-aa0b49a40051",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94313623-52e5-4a7e-b072-0f645bc76095"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4a2b6b-7185-4900-a74c-369845b08a4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eb4398a-dd60-4f6e-b114-26534b39045a"
                    }
                  }
                ]
              },
              {
                "id": "cac30126-21af-4bb2-9d15-4a3661185d11",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "353efe17-a68f-4b7d-85d0-8b903e55bf01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48646ce2-4114-4129-80a2-1e91f3f35dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5f6c7e84-b9d2-4103-834e-c8a68bc07239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab6a098-bf5c-4c9b-aa4d-1c45020acdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851cbf64-767c-4730-a2e9-eb4589535b95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1129add1-7830-4e15-b1bd-cc35cb247d8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb3abdaf-10ae-4968-b3b7-4a190b33d3c1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f8dfe03-3d14-4bf0-8574-edab7b42101b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "820c55bd-855e-4f23-bec0-9ba8055dbfc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41784a00-d414-420a-8a23-92eb27f440d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbdf1a50-e197-465f-8c2c-9148b952731f"
                    }
                  }
                ]
              },
              {
                "id": "48260b9a-f637-4fd8-a265-21351ffda7ea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8b0569f-f924-43e8-a1d4-f56932d2817c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c9e77d38-eebe-43ad-993a-02608899cf32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6c2fb9e-8d2a-4f90-9242-8b76ce1a3639",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2427b36e-260b-4c8e-b966-0220ab773ed2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba0d4345-afb5-4c20-9595-b5f7df2acc6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b6234ffa-c84b-4165-8826-ad8b5f1cf863"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e371ad9d-c679-407d-9833-44fd3cc27e92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "117bade6-98e4-4272-9f2a-c4fee9327be4"
            }
          }
        ]
      },
      {
        "id": "4b8bf000-5601-46fa-a531-3c853bade82e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bc4fb339-2c25-4eb5-931d-755c78ff7f53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b1a5378-154c-44cd-8234-7f9df490b128",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59aa7ffc-cdb5-463b-bee5-6fb2c7edd369",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1542e212-f461-4736-be82-21abd64476dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc072417-463b-4a94-9efb-b34d91c06150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d4ee2-263f-479b-a078-625b20a02e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ea17b2d-565e-4c9e-80f0-c832d1cc2ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f76333-ed85-49e6-abe9-e2004c316662",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac64687-807d-4620-b038-67e34f5dfc81",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c9ef941-59ce-44c1-b3d2-41933545aad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9646f9-b58a-4cc5-8283-0edcb1457abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56caa341-ec6f-49d7-b8a7-67f360e6e9f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dd5baf6-86ea-4a63-8f21-59577e12ad3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc3439b9-c091-47b3-82e4-65ac5da0cc7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c1736a6-6130-4103-969c-377f20f50c99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d3b29ef-43b9-4298-8517-42c155834bc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88275f79-3cf9-4571-8541-8a4d7ebff579",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a9c90737-57d0-458d-95e0-f529c713d86c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6689f2a6-791b-4a0d-ac65-1b8b7608f306",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aef652ab-8135-40d4-84c3-55a6727e7e33"
            }
          }
        ]
      },
      {
        "id": "c569ebfa-6124-4c45-831d-9fb5b12f8dea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "58bb6906-a3c9-4bb7-919c-29cc26931be3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cffc15f9-ce4d-4a03-b34f-8a53742ff589",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "242192b2-e746-4c20-ae2c-0f9af6704317",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5b1152-0110-4367-b9a5-c36e21da7e93",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837b6f5f-0721-4865-adee-828a5054051b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90be9dcc-1541-4819-9f5b-1396e43d8ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9624d00a-cb19-46f9-b60b-06b740eb0de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea43c5b-065a-4a7e-9a1b-53586bb5d5e1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd06dea-75d2-4cbb-8b4b-bce47dce3081",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4196f0e1-d28b-4d5f-920c-6e41d1df5bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82d7f8a-f30f-4964-8575-e4219c5187c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0123f0a2-0d94-47f1-bd92-5312be18799a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45ce310f-5040-4a77-9ab5-753ae98ddefc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f0a1c16-6257-46da-af36-7287041db38c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8049639c-2135-4e67-b603-00c1e305ed38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01f011a2-170a-4547-80a8-05e1fec84f08"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a1005ab-2e9d-4f9b-8492-94c0911d4882",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4cbfadf2-af82-4667-96e0-ebff2671ade4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53e3ddb7-c85b-4aec-9f16-0ad9fb65839c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb7bdea5-3372-4974-8bfe-63fa8c227153"
            }
          }
        ]
      },
      {
        "id": "cf114f62-85d6-48dd-bc0f-3c965d808145",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3a4ae79b-6dec-46d5-a276-c970c399e69a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef316496-1d8d-466a-af4d-ff05367c578c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7f909f9c-655f-46c3-9b1a-f9aed48b491e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef896e46-0a82-419b-9683-ae164f1c8aff",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d50a540-a405-48f6-8cee-5ed4495fa378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a290324-f0da-435b-9ff5-cdc2e7ad41ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e7cb0be-4627-4cef-ad45-121aa4cdcf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2f8c43-4c1a-4fb1-8fc5-7aa4b3313082",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3632f24-f702-49c9-b34e-16b76900892e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1588ff8d-1791-4ebc-81e0-744c750283a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2cf83-5923-448c-86fe-4cd767cd403a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d2d0353-68e7-4a02-a48e-67bf49b1bf21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39617d1-7a25-4e6c-9992-646b683c571e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f39f8dab-5e4c-4dc9-8746-812aa6ef5e31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dea68b8-edd2-4bb8-8045-2f3f787683fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58452ce7-14ac-4a39-914e-bdeefb0c63ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9ed0eb5-d85c-4ff6-b574-15be658def6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a4abd737-2993-4aef-84d0-b16cf8fe36e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbd261a1-1b78-4afb-86f7-21b543d8f96a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75956cfa-da5e-44ec-b394-c5de5f25347b"
            }
          }
        ]
      },
      {
        "id": "9ee272b2-542a-4a7c-bc08-d511af46ab77",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc403a3b-687a-419c-9db0-0517a265190d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b088c4f8-e6a5-4ec6-8e74-5fd61900ebdd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "374d79c8-6949-4fbd-9178-af8f847a7069",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d3723cc-e799-43c5-b1a3-20737934faed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "263173bb-c079-4963-a693-d301b583f42f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 897.1846153846158,
      "responseMin": 6,
      "responseMax": 10440,
      "responseSd": 1079.393884652332,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683074212217,
      "completed": 1683074456148
    },
    "executions": [
      {
        "id": "2aeb1652-2943-459d-87a9-332f1d544948",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "652a3768-3fbc-4ad0-9cd4-e2779009b2b1",
          "httpRequestId": "179e6272-885a-4594-8420-e4b0f47c9752"
        },
        "item": {
          "id": "2aeb1652-2943-459d-87a9-332f1d544948",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fb5dbc21-5583-4486-bead-361c2b8ca57f",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "66cc26c6-7012-42f1-b8d5-f976a02f78a1",
        "cursor": {
          "ref": "65f27344-ecb8-4c9e-b5f9-c67160e4210f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "81841782-d1cd-4020-9685-8542cf5825cb"
        },
        "item": {
          "id": "66cc26c6-7012-42f1-b8d5-f976a02f78a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7e9f4e9b-6e3c-41b7-9b0d-4112558bacf9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "df263224-abda-42ae-a4f2-7011902c82e5",
        "cursor": {
          "ref": "48324d20-16e7-4760-a77a-2aa93a0b5da1",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a47d9e52-eed8-4fc0-b799-88d6f64cd1b2"
        },
        "item": {
          "id": "df263224-abda-42ae-a4f2-7011902c82e5",
          "name": "did_json"
        },
        "response": {
          "id": "6cbba2f3-dabd-421d-ba1f-5fd6b6fc364a",
          "status": "OK",
          "code": 200,
          "responseTime": 1370,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca3377b-4df2-4314-be74-8c9211117ba0",
        "cursor": {
          "ref": "0b78e13e-f806-41de-b802-1169f64dec41",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03a6c883-023b-4785-a376-b657c16d0694"
        },
        "item": {
          "id": "aca3377b-4df2-4314-be74-8c9211117ba0",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ffe16c7-704e-4133-9fd6-82934c0461ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca3377b-4df2-4314-be74-8c9211117ba0",
        "cursor": {
          "ref": "0b78e13e-f806-41de-b802-1169f64dec41",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03a6c883-023b-4785-a376-b657c16d0694"
        },
        "item": {
          "id": "aca3377b-4df2-4314-be74-8c9211117ba0",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ffe16c7-704e-4133-9fd6-82934c0461ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7da571-3620-408d-ab44-6595b454ca26",
        "cursor": {
          "ref": "5c5809cb-86a0-471e-8984-fe1db2944f9a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "24756989-5289-43c6-a828-590e379553d5"
        },
        "item": {
          "id": "1c7da571-3620-408d-ab44-6595b454ca26",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fac7c12a-ce23-4523-9992-05117d764a4e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1044,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f93f6b-285d-488f-9a1b-7d17ff8f46b2",
        "cursor": {
          "ref": "df0356e6-5689-48c8-bcd5-082dd08eeebf",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bad44a9d-4791-4826-8a32-541e3b507002"
        },
        "item": {
          "id": "55f93f6b-285d-488f-9a1b-7d17ff8f46b2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4612aa2f-0b1c-4da4-ba54-d60bc750063f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1235,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b51d95-4fc7-4045-9908-9c7e909b1c8c",
        "cursor": {
          "ref": "b9ddb6b6-ed8a-4a6a-b0d4-558adbedb935",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bbbebda7-711c-496b-b1c3-ad1facd07c43"
        },
        "item": {
          "id": "04b51d95-4fc7-4045-9908-9c7e909b1c8c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "388f1ff7-1e4a-4bf0-b912-163e5c24a24e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feffcf81-75c6-43dc-a991-77aedf30c90c",
        "cursor": {
          "ref": "2ecd9bd1-b543-45e4-8948-3ce261578d5f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76262f82-eb84-4fc5-bb34-f9a3aa42c1db"
        },
        "item": {
          "id": "feffcf81-75c6-43dc-a991-77aedf30c90c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6298026b-7117-45e3-8f11-e88b68dc7051",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 692,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feffcf81-75c6-43dc-a991-77aedf30c90c",
        "cursor": {
          "ref": "2ecd9bd1-b543-45e4-8948-3ce261578d5f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "76262f82-eb84-4fc5-bb34-f9a3aa42c1db"
        },
        "item": {
          "id": "feffcf81-75c6-43dc-a991-77aedf30c90c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "6298026b-7117-45e3-8f11-e88b68dc7051",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 692,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55f77af-4886-4eb8-962b-b463cfcdd36e",
        "cursor": {
          "ref": "1a09c161-f69d-49e7-84a2-90e55808a440",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d72997e3-3244-443c-8927-a0ecc61b03ce"
        },
        "item": {
          "id": "d55f77af-4886-4eb8-962b-b463cfcdd36e",
          "name": "identifiers"
        },
        "response": {
          "id": "b94aaf50-a13f-4221-a3e5-8dc39726a2c1",
          "status": "OK",
          "code": 200,
          "responseTime": 1437,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f065e84b-ca5f-4efa-b55a-96a3502d8e3d",
        "cursor": {
          "ref": "9a078ff2-f6fd-4c00-bd9f-2cc2aacbe06e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bf28114d-bd13-4ade-af29-bda75a254662"
        },
        "item": {
          "id": "f065e84b-ca5f-4efa-b55a-96a3502d8e3d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "83ff2075-f0c5-47b3-beac-b5a56c92b170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f065e84b-ca5f-4efa-b55a-96a3502d8e3d",
        "cursor": {
          "ref": "9a078ff2-f6fd-4c00-bd9f-2cc2aacbe06e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bf28114d-bd13-4ade-af29-bda75a254662"
        },
        "item": {
          "id": "f065e84b-ca5f-4efa-b55a-96a3502d8e3d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "83ff2075-f0c5-47b3-beac-b5a56c92b170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd1768a-84f3-4302-9f72-bd5f804f7d10",
        "cursor": {
          "ref": "a6c81e59-808e-4e70-92e2-ff72606dbdbe",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fa995945-036e-41d2-b769-bfa8d8d5d78b"
        },
        "item": {
          "id": "8dd1768a-84f3-4302-9f72-bd5f804f7d10",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a257db2d-3a84-4ca3-9f0b-75e6f35722a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7d1aef-e8cd-499d-97fb-21391355837d",
        "cursor": {
          "ref": "d2def206-e5d6-4193-a243-19c10837992b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "835beedc-c931-43a3-8287-324dc66f58c6"
        },
        "item": {
          "id": "ee7d1aef-e8cd-499d-97fb-21391355837d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ea7b67af-fefc-4066-94a8-94c6963179d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee04470d-0d3d-4dd1-95f3-e68bbdce7623",
        "cursor": {
          "ref": "116e2840-ff3e-4d4c-8b32-b5c0e5d04e64",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8ce8dc86-58e6-4d53-86f4-1ab0617cd171"
        },
        "item": {
          "id": "ee04470d-0d3d-4dd1-95f3-e68bbdce7623",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2bc11760-fab9-46e7-aa9a-d85d3ac25ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8358ea61-fcdf-4638-9f43-2f4b8cc4faee",
        "cursor": {
          "ref": "564afe46-b459-48f4-b9d8-ef36f733ff9c",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "55cec423-529a-4cc9-869c-4b166df28381"
        },
        "item": {
          "id": "8358ea61-fcdf-4638-9f43-2f4b8cc4faee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "20f76874-08a6-4a21-8622-4b587ae93cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451fa44a-49f2-4d71-be77-00424e07024c",
        "cursor": {
          "ref": "7375a8d2-0ea4-48fe-bff1-4ef470ff1cdd",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "22d33753-3049-4306-a1bd-94b3a15bb3ed"
        },
        "item": {
          "id": "451fa44a-49f2-4d71-be77-00424e07024c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ea74ab38-b511-48a1-af13-5af446250a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33aaae2-e650-4d0c-ad17-503f64f85da6",
        "cursor": {
          "ref": "05d80123-6e92-4fdd-9b61-a9bb6a4ac820",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "818546de-6ec6-4ec3-8989-11d5c794ea6d"
        },
        "item": {
          "id": "f33aaae2-e650-4d0c-ad17-503f64f85da6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bd351c98-3a54-401f-9641-f527c2808874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5fa9f5-0c8c-4e6f-97a2-d3e3e21689da",
        "cursor": {
          "ref": "b0102b09-36c7-4325-969f-97963b078272",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1d5fe0ab-5de5-41fa-b64a-0b439a112f4c"
        },
        "item": {
          "id": "ef5fa9f5-0c8c-4e6f-97a2-d3e3e21689da",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dea949a0-3429-4061-a969-c52a6c00d4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1082,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3439d51-f78c-46d3-a59d-5b156d2db702",
        "cursor": {
          "ref": "ad3543ea-5310-4dfe-9a20-30c50833cfae",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dfcb3cd4-d79a-4d03-b137-e5fae285b880"
        },
        "item": {
          "id": "a3439d51-f78c-46d3-a59d-5b156d2db702",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "93ba56b0-2cce-4a28-9c78-24e0a0aac8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1260,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ba4cae-d6ae-45ec-8417-54d51c909341",
        "cursor": {
          "ref": "bad9af41-ec3e-40df-b33b-5673956ae873",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8b325679-f409-420f-8442-19d7506a6156"
        },
        "item": {
          "id": "08ba4cae-d6ae-45ec-8417-54d51c909341",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ed26380-f60f-4a42-95fb-9c68605a90b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1096,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7868b0-2219-4792-b99e-db5f31e4a2eb",
        "cursor": {
          "ref": "f711a3cb-974e-43d3-a217-80c9471b722d",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8e0b5071-c283-4292-9802-56763becf423"
        },
        "item": {
          "id": "5b7868b0-2219-4792-b99e-db5f31e4a2eb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e05aa7a2-d925-4683-b07e-98395de8446e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b4be05-be3f-4d59-b2fc-ce191708f4a8",
        "cursor": {
          "ref": "bf600a77-a9d4-4544-9935-f95e1fc12d25",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8482761b-db84-4401-8688-169a51a76074"
        },
        "item": {
          "id": "45b4be05-be3f-4d59-b2fc-ce191708f4a8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f024a06b-8e78-4a30-ad58-53641ae6867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e149e23-95fa-4ee9-809c-5b0d29b83515",
        "cursor": {
          "ref": "3548f853-4124-430a-a28b-25bc4d645250",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4db193e7-c651-48f2-8157-4b16c612c91a"
        },
        "item": {
          "id": "4e149e23-95fa-4ee9-809c-5b0d29b83515",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d771862f-7c4f-484d-933f-57878563663b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88a15e2-528c-43ab-bb26-c694c5645f5f",
        "cursor": {
          "ref": "feedcd16-0d8c-40b9-b8bc-b8eb288ad027",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "781fb2e4-42a5-499b-b5e0-ffc30464246d"
        },
        "item": {
          "id": "b88a15e2-528c-43ab-bb26-c694c5645f5f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ec7d9926-4318-4303-a7eb-44ced9f7e2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c73dea2-7505-498a-be7d-3719c90a9832",
        "cursor": {
          "ref": "c91b07b7-e5bc-43e0-bb05-8256de991dd9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "97a2387a-f683-46c6-b0d7-3848b9954893"
        },
        "item": {
          "id": "1c73dea2-7505-498a-be7d-3719c90a9832",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "32cd46be-a74a-461a-ab38-b6b972d282fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb83bce-763b-48cd-86d8-56add79d86f7",
        "cursor": {
          "ref": "3ec42a91-bc76-49b9-a929-dcb181c49c98",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "63cfb11b-4ad1-437a-a358-5c7ef5f9b3c2"
        },
        "item": {
          "id": "4cb83bce-763b-48cd-86d8-56add79d86f7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "154440cf-ac40-4d7a-881f-393d66bfb3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99573066-fe99-4f5d-8d96-c64c0ee39f30",
        "cursor": {
          "ref": "41cc1729-7f99-431a-a343-8bb2b35cbb22",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c252e03b-0ae2-4e9b-bcb7-79bd459742ab"
        },
        "item": {
          "id": "99573066-fe99-4f5d-8d96-c64c0ee39f30",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e83c8bb8-339c-4e72-9dc6-544b454a6cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d707280b-f412-4050-8702-db9c981e5626",
        "cursor": {
          "ref": "7169f1c8-6af5-4d5d-8669-ed7f3e48e6fb",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6b762ae2-584f-494f-b304-22ce0fcd3775"
        },
        "item": {
          "id": "d707280b-f412-4050-8702-db9c981e5626",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "584bc216-2b9e-4bb4-8a43-d7d4ed9f04b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d359ce8f-3dfa-43c3-8911-6bd2067b84a6",
        "cursor": {
          "ref": "e97cdfe5-5258-4586-970e-7f370124c1d8",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3f0b887c-b1f9-4e1a-82f2-2a9e52695669"
        },
        "item": {
          "id": "d359ce8f-3dfa-43c3-8911-6bd2067b84a6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5113016b-816f-4dcc-9965-e679ff076a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c992af-c214-478c-82ea-de086f2d466c",
        "cursor": {
          "ref": "8f7c8bc5-ee2d-4e0d-8a34-19ceac59c8e4",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "328c23df-fcac-41f8-b674-fe2a673fefd8"
        },
        "item": {
          "id": "54c992af-c214-478c-82ea-de086f2d466c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5836b14c-cce6-4425-a06a-25530aa4a170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b165054-34c9-49ab-adf3-85388a361f8b",
        "cursor": {
          "ref": "29c0ef81-7829-45e4-acc0-e20f42789e18",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b8444b10-bb02-43aa-9122-69984bb5b517"
        },
        "item": {
          "id": "9b165054-34c9-49ab-adf3-85388a361f8b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0522aa4f-2e4d-4c31-ae1a-b57cb8523ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553f23d8-6a1a-4ed3-9659-f2732339d6f0",
        "cursor": {
          "ref": "aa9d45f0-ccc2-4ea4-8de5-d9269e9ca4a8",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7eaade42-5a50-4229-94ad-814992a4ae09"
        },
        "item": {
          "id": "553f23d8-6a1a-4ed3-9659-f2732339d6f0",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e6096ee0-6972-47aa-a95b-748f497819f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76661de3-c634-407e-9f09-7b48a8416539",
        "cursor": {
          "ref": "d4996e48-3077-450a-bfa8-67d30f35fe76",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d9db11e9-f33a-4ea7-97c9-3651cebcfba1"
        },
        "item": {
          "id": "76661de3-c634-407e-9f09-7b48a8416539",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "758d08b9-02aa-4193-9ab5-0c62b49d9aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7829109d-b3a7-48f5-be3a-ca95cd87cdd9",
        "cursor": {
          "ref": "29d63ad2-0d1c-4f15-921d-02bbdc75c596",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c0b358be-4827-4e26-9242-f01e51952437"
        },
        "item": {
          "id": "7829109d-b3a7-48f5-be3a-ca95cd87cdd9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e943b143-b562-4283-884e-84e0232c5404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cba4ca-0cf9-464e-b53c-4876501f4511",
        "cursor": {
          "ref": "b5e26da0-8407-45d0-837b-57b4f9d49728",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4301d22a-81d3-45a7-9027-ba6b94e0e961"
        },
        "item": {
          "id": "60cba4ca-0cf9-464e-b53c-4876501f4511",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "175cd59e-1278-455a-87bb-4d258e70a38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20158909-6dcc-4c0b-90fe-6ca06400f9f5",
        "cursor": {
          "ref": "35f6f166-f7e0-4947-b99b-e377748dc5b4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "66a83140-b5bb-4042-8967-805212cb55e6"
        },
        "item": {
          "id": "20158909-6dcc-4c0b-90fe-6ca06400f9f5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e2f27fc-f4ab-4053-9f0f-8816e809e944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e5909a-b4a0-459f-b0a4-42ed3f2705d4",
        "cursor": {
          "ref": "d1f0de91-4014-4b76-a608-f8e937725080",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5def847a-0391-467a-962f-b53ba932d072"
        },
        "item": {
          "id": "f9e5909a-b4a0-459f-b0a4-42ed3f2705d4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2e0ae564-3c03-46dd-8b8b-bc9aedcb0417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd9bc3a-cd34-4878-be11-aeef6f5905db",
        "cursor": {
          "ref": "5a96ee90-2782-4a5d-8291-402f51808cdb",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "44083471-72f8-4b35-8543-2506ccc9abb0"
        },
        "item": {
          "id": "edd9bc3a-cd34-4878-be11-aeef6f5905db",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6063ec53-2ffd-40cb-aa69-c74521cf9ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea617ab1-ea11-48cf-b1c0-b88fcaa2836e",
        "cursor": {
          "ref": "f6362dee-0375-4534-ae57-d00896d4c0ee",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "965f6f78-a0c6-4c38-8a4c-0608698a2313"
        },
        "item": {
          "id": "ea617ab1-ea11-48cf-b1c0-b88fcaa2836e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8f1007f0-e3d3-43a8-9edf-652c383df831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f8f806-a226-4e30-b31e-dd89ff3a01c2",
        "cursor": {
          "ref": "59a82549-f113-4ba7-9675-b0ff3a95639a",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0bd94a55-5c31-4f6f-a399-fe131733badd"
        },
        "item": {
          "id": "d7f8f806-a226-4e30-b31e-dd89ff3a01c2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "137a0716-e6ba-4f26-96be-074a135fd7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f9e186-bc83-4e8c-b21b-3dbb045af5c8",
        "cursor": {
          "ref": "2a18bcdd-bc2a-4645-ac41-e64535ae252b",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d7c0294d-2954-4670-a83b-5a78e1883531"
        },
        "item": {
          "id": "68f9e186-bc83-4e8c-b21b-3dbb045af5c8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e2f7c7a8-e15c-41a3-bf62-247adfcac8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c112acdd-d5fd-42be-84be-a6aeae46ea35",
        "cursor": {
          "ref": "a1767190-acdb-4078-a98e-7b632e6e3fd0",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e6f14825-4bc9-48d5-b3cf-73f45d8ff7e4"
        },
        "item": {
          "id": "c112acdd-d5fd-42be-84be-a6aeae46ea35",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9eec4ae1-f783-403a-8696-6e8f2439c181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5aefa1-7c47-4f6d-b72a-8858ca50c177",
        "cursor": {
          "ref": "12244739-cd00-46d2-8306-01777e20402b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "393dfe8e-4b8f-4e84-a857-94b4dc798562"
        },
        "item": {
          "id": "ee5aefa1-7c47-4f6d-b72a-8858ca50c177",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0ae92a99-7101-47ef-ab0b-35bb45d6e841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b58a98-114e-4b98-a923-9b1dc7702123",
        "cursor": {
          "ref": "bee716bd-5098-4009-a4ac-354ccd7bfb45",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "79181a3a-304a-4152-bf4e-a28f1aa7c8f0"
        },
        "item": {
          "id": "07b58a98-114e-4b98-a923-9b1dc7702123",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6fc3b23e-3c5a-44bd-beaa-549313cbac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823e8cdf-7241-49b7-8a8e-68361d5a2bbf",
        "cursor": {
          "ref": "90bea814-31de-454a-810d-b608c617e27c",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "96a056fb-bc6e-453d-8250-6d49c848ea25"
        },
        "item": {
          "id": "823e8cdf-7241-49b7-8a8e-68361d5a2bbf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dfe4d312-d94a-444e-bed8-3430b0650d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b386e91b-6ff3-4e99-9358-f1e19c86be78",
        "cursor": {
          "ref": "01f977b9-c322-4256-977a-2ca1072c4d70",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14e3be1c-9955-4e17-8a59-a8ec944cfc9a"
        },
        "item": {
          "id": "b386e91b-6ff3-4e99-9358-f1e19c86be78",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "40aacdde-54d3-4552-a8cc-5deb15cde59b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 809,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cebbafd-5c8d-43f2-832c-0d49412c34f5",
        "cursor": {
          "ref": "597a6a80-3e4e-4697-9908-fac03a80935e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9b356e0d-2b5d-451e-b2f2-cac75c70699f"
        },
        "item": {
          "id": "0cebbafd-5c8d-43f2-832c-0d49412c34f5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "31b76a81-79ac-4b2b-9636-a949aa3619ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e01a1ee-f1bd-417b-9577-1016c4c1a82c",
        "cursor": {
          "ref": "76d00109-7a5f-4a6c-a378-b1af42775155",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "91026bfe-0d70-43e8-9a01-febe62a4cd6c"
        },
        "item": {
          "id": "8e01a1ee-f1bd-417b-9577-1016c4c1a82c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "47628c24-1ef2-4caa-9b9d-5dfebbae2885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cae9830-422a-4ebd-b278-2a903d777dfa",
        "cursor": {
          "ref": "2909cf54-e1c6-45b3-bca4-ffcb328ed294",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "088174d6-907d-455d-a0ec-6ad9b5476511"
        },
        "item": {
          "id": "7cae9830-422a-4ebd-b278-2a903d777dfa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d47eea3d-0c67-4d4c-8138-29605c0c13c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9911e89-a91b-4404-b594-905105489ab6",
        "cursor": {
          "ref": "855d3e48-0cef-47d7-b428-963b3cdb07b2",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ce315861-e392-4a23-924a-480162380b37"
        },
        "item": {
          "id": "b9911e89-a91b-4404-b594-905105489ab6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bdd5cf6f-e904-4bf8-acd6-b07ef989cf0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137a6a3f-cfdc-44da-9001-9dc51be4403c",
        "cursor": {
          "ref": "e36b66e0-8410-4437-b861-4d1bb920b3d3",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e564f478-5740-402a-82cd-0dc2a2dd79fd"
        },
        "item": {
          "id": "137a6a3f-cfdc-44da-9001-9dc51be4403c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "961ae32c-8ff0-4aab-b4a0-c764ae8acd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178bb89-6e62-4380-b582-4e4b879829e3",
        "cursor": {
          "ref": "830d3aa2-4989-4e35-8c21-a66f2471e0d1",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "af010a9c-6614-4efe-b438-1e27e3bcfd17"
        },
        "item": {
          "id": "1178bb89-6e62-4380-b582-4e4b879829e3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "09e56b40-0196-4786-a88a-73b233c71c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e51092a-9b19-40e3-b94c-f40d0a3da192",
        "cursor": {
          "ref": "eb232ac9-1eaf-42b4-9b74-5f4ee56733d7",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1aab4f99-a51a-4b7b-9d84-8e5cc89fa8f9"
        },
        "item": {
          "id": "2e51092a-9b19-40e3-b94c-f40d0a3da192",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "541ea78d-7041-44dd-a5b4-9c809815ab68",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 781,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13e9e45-4c12-4611-9129-ebc8ad92d493",
        "cursor": {
          "ref": "3bf0346d-749a-4fe5-937d-bc98bd5789e7",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4f3be279-1d46-4bbb-9913-bfc116f6fe88"
        },
        "item": {
          "id": "e13e9e45-4c12-4611-9129-ebc8ad92d493",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ce21315a-cd98-4e7a-a07b-852d8836db1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16497c-959e-45bd-a1d7-fffdaef5c2a5",
        "cursor": {
          "ref": "1d96f92b-9a26-4e7b-95f7-2448dab99c61",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "39473484-92b7-474c-8c04-a35ae64a2121"
        },
        "item": {
          "id": "0b16497c-959e-45bd-a1d7-fffdaef5c2a5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6b89ff15-be02-4573-8fec-e95f5f06f7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31441b15-9524-40bf-a1c5-decf1865eee0",
        "cursor": {
          "ref": "ded6a95f-8b66-4a99-9dc8-9c725a4ff041",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bdc1cd63-79af-45c6-8ed6-1f1455fe4ae8"
        },
        "item": {
          "id": "31441b15-9524-40bf-a1c5-decf1865eee0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4fb8f520-7139-4469-9d82-b2f7affaa4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2fbdd3-e27b-4bbb-a49a-dd8a5ae51cd3",
        "cursor": {
          "ref": "f26320b7-28d2-4a85-9594-3e1e03c5e4c3",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "abc35e3a-89b4-44fa-a9c1-cb00aa6414d1"
        },
        "item": {
          "id": "ed2fbdd3-e27b-4bbb-a49a-dd8a5ae51cd3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7d5ac347-e1c6-4ec2-abcd-81388ba326d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28b7983-81e6-4be6-a13d-f81ce7b4ad5e",
        "cursor": {
          "ref": "07e03991-a320-4e29-8c6f-b6e6dab5bfc6",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3528d1f3-1f23-4399-9648-c7417bd82521"
        },
        "item": {
          "id": "f28b7983-81e6-4be6-a13d-f81ce7b4ad5e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f4ac7957-8a8c-4b45-940b-8115eb9b54fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154be4a3-24c7-4be4-a3ad-d93406569397",
        "cursor": {
          "ref": "59709e21-44b8-42b6-86bb-9ebc20823c61",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1195634b-d268-4d9f-bda1-5a0b84713b4e"
        },
        "item": {
          "id": "154be4a3-24c7-4be4-a3ad-d93406569397",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f5349d49-19df-4681-9ad8-c38c2c19e02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae797b1-b57d-45e3-9667-c47953165b36",
        "cursor": {
          "ref": "d66956cb-7b7d-404e-bf9e-da6c0d2672b2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0954cca0-6a19-4146-b8a7-7fb7d29cfb3f"
        },
        "item": {
          "id": "9ae797b1-b57d-45e3-9667-c47953165b36",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5024cda8-76f8-43c9-af14-a39b906afee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa4db94-63f3-48ba-af0c-8c6b23266c07",
        "cursor": {
          "ref": "d215a676-3c3f-4ab5-83e1-9b32816ed64c",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fbbb693e-ba61-40c6-9a88-e5d1cbbea3f9"
        },
        "item": {
          "id": "eaa4db94-63f3-48ba-af0c-8c6b23266c07",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9c453e95-50fa-4565-8b37-24533dc36d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83578e03-b198-4ec5-832b-267b057b2e22",
        "cursor": {
          "ref": "1c1c3aa0-c456-4f0f-b36c-ca3dcd5e8185",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8b88ebca-da7f-439a-839d-743b68c70654"
        },
        "item": {
          "id": "83578e03-b198-4ec5-832b-267b057b2e22",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bda4d8f3-6fe2-4ab7-979f-8f0451e9e694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e5906a-180b-4ded-a7ef-0325ddcf1fcb",
        "cursor": {
          "ref": "11a89a67-43c4-4650-ae45-87f802db142b",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d4f67367-5cd9-41aa-a750-060722fe7da9"
        },
        "item": {
          "id": "d9e5906a-180b-4ded-a7ef-0325ddcf1fcb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "22ae6dec-a467-4499-b063-c17160051511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554c6b86-3f25-4df2-b121-73df848d58c6",
        "cursor": {
          "ref": "6a798d8b-0d25-444b-a7fd-1e02560bf636",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "23441462-43fa-446d-ad16-96e0636fcf59"
        },
        "item": {
          "id": "554c6b86-3f25-4df2-b121-73df848d58c6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bae974e5-24e9-4d28-8c16-f0415528b815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e2180c-9911-4e96-985e-cfe78bd140fe",
        "cursor": {
          "ref": "b071c09e-a3bc-4aaa-983a-639704c5a363",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "adb494e7-5cf4-455e-90e0-bdb61813e67b"
        },
        "item": {
          "id": "91e2180c-9911-4e96-985e-cfe78bd140fe",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3c54103a-6ea6-411c-91b6-0ae971db5c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fbcae4-f0b3-4027-9cb7-ac40b2c35af2",
        "cursor": {
          "ref": "b3eee93b-afef-41a2-af4e-9589e16c2ed1",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "205c6888-82a0-4c15-a6cb-2bc4815e83af"
        },
        "item": {
          "id": "81fbcae4-f0b3-4027-9cb7-ac40b2c35af2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "98dedc1e-5a0d-4db7-bff0-b21badf77cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd6cd24-4097-4e72-9947-31a672e026d4",
        "cursor": {
          "ref": "4856db17-916d-47e7-a5e7-14da6c7fc569",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "df314842-23eb-4910-8045-2a903e3a2a6f"
        },
        "item": {
          "id": "2dd6cd24-4097-4e72-9947-31a672e026d4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "378d28f7-2a85-47d0-8ad9-7c3c7f879782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b651b36d-3d05-43d6-a714-a50afdb04aa9",
        "cursor": {
          "ref": "a46e896d-3632-4d70-a693-2db2b21d78c2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9fe58391-2cd9-4288-8c0d-1f40ae22e0db"
        },
        "item": {
          "id": "b651b36d-3d05-43d6-a714-a50afdb04aa9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bd606c50-37f8-4c88-85ef-5659e81b13a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6205980-7102-4a6d-aa2f-0d58d4203c2f",
        "cursor": {
          "ref": "86abcb23-c2bf-4a12-ab23-ec059925541b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9ee25a6c-c3a1-4b44-a204-6fc7ac00328d"
        },
        "item": {
          "id": "b6205980-7102-4a6d-aa2f-0d58d4203c2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7c4cb949-5581-4037-8923-7ec4d31eb3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb868be1-6f46-482b-a711-5d91b9c6e6ca",
        "cursor": {
          "ref": "13860e3d-462a-4c2c-9998-00e034d575d8",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f461458d-c538-4582-974f-3f88df5f224c"
        },
        "item": {
          "id": "bb868be1-6f46-482b-a711-5d91b9c6e6ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bbf25cc3-fbd7-4240-acfa-179efa1e6b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3761ad43-4819-4b44-bad5-a8ee94c7ecf4",
        "cursor": {
          "ref": "7aed892d-067f-4ef0-b39f-908fbae3d86e",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "194f4d7f-64ed-4c59-b80a-8bb0f1ae8d2f"
        },
        "item": {
          "id": "3761ad43-4819-4b44-bad5-a8ee94c7ecf4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "80450116-1699-4b56-a754-b3ab86dc3762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6e4e0f-80e0-4251-8bed-1eb37cb98e4e",
        "cursor": {
          "ref": "bb52d1e6-4275-4149-9d41-40661aee7516",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a8c9d501-1827-4470-8c59-6a42fa71bbf2"
        },
        "item": {
          "id": "ab6e4e0f-80e0-4251-8bed-1eb37cb98e4e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5c1cdfab-c24b-4c0f-869b-f8276b2d4f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2d874c-1077-4521-ab65-9c42b9d8912f",
        "cursor": {
          "ref": "1d0946e5-6301-41e0-89e9-01ceb4a56be3",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b2d05fdf-b311-4574-90d5-36fb8742cd59"
        },
        "item": {
          "id": "8f2d874c-1077-4521-ab65-9c42b9d8912f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ac73d5da-aacf-4696-9970-a7ccdcb8c877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea936d7-9bfe-4d5e-aa4e-5fba486758b7",
        "cursor": {
          "ref": "01a1f7eb-1c83-4261-8036-99a47892d0ad",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "db75f111-26d4-4906-9232-b7f81f7d0f21"
        },
        "item": {
          "id": "aea936d7-9bfe-4d5e-aa4e-5fba486758b7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4bb3fe11-78fb-4d37-8d40-528ec8ed76bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eae3ac2-922a-45cf-80ca-1127b05551df",
        "cursor": {
          "ref": "43d11380-048b-43be-a23b-cc0fc74fa13b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f75d1000-1348-4ab5-a966-7da5a591104c"
        },
        "item": {
          "id": "7eae3ac2-922a-45cf-80ca-1127b05551df",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "58e57d77-32e9-416a-93be-643d59db53eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2bfa82-caaf-4f83-8e10-1daf30f4a862",
        "cursor": {
          "ref": "d7885b0c-1efb-42ea-8c4d-12cef59a0cbe",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f4aeb249-f831-4912-8873-4d8aa3ff8a66"
        },
        "item": {
          "id": "1f2bfa82-caaf-4f83-8e10-1daf30f4a862",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c95536dc-d659-4639-a8d1-9022485a884f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e3ffe7-3238-4f09-8f2d-e124a8ae80c8",
        "cursor": {
          "ref": "bcf2c21e-0507-4e7d-80fc-e51e096260d4",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2e05deec-7612-4d4c-970d-c22a2c9ddd61"
        },
        "item": {
          "id": "24e3ffe7-3238-4f09-8f2d-e124a8ae80c8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8a84e261-a21c-41cd-976f-965d9e6283a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfdd7b7-8cbb-47de-8945-a7073102c5e3",
        "cursor": {
          "ref": "fc4f7d7b-a8f3-4a2a-969c-45ab1223c94f",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "639c8a45-9bdb-48c9-bfe5-d869e77276f4"
        },
        "item": {
          "id": "1cfdd7b7-8cbb-47de-8945-a7073102c5e3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1fce2caf-5d84-4360-a63a-02fa6da7d48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b80caf-f94e-4ed3-981a-f69ffddfa4c4",
        "cursor": {
          "ref": "8d07bb92-fc0f-4f5a-ae91-2368f266b270",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b443a1fc-ecab-4199-a155-18b2650fed47"
        },
        "item": {
          "id": "67b80caf-f94e-4ed3-981a-f69ffddfa4c4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "92a38a09-ad38-4f23-9de4-a73e2bfaacbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7469317a-438d-4b36-a019-0e92a4fddf19",
        "cursor": {
          "ref": "3b57b0cf-26ec-42fc-9e94-ec82da7ef6ca",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a2afc2ea-22aa-4e0d-991b-04348e92ef52"
        },
        "item": {
          "id": "7469317a-438d-4b36-a019-0e92a4fddf19",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bf143a3a-87a2-4a64-844c-12ee95dae8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 951,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b6d6c4-f21d-4e76-b25d-42639bf71093",
        "cursor": {
          "ref": "5af0580f-e5e4-41bc-95e1-47c069ac05e7",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "62c8b4b3-70e3-4da5-a7dc-0d0d16fbc28f"
        },
        "item": {
          "id": "a4b6d6c4-f21d-4e76-b25d-42639bf71093",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d84cd0be-9c89-4ea5-8e51-2123f0465e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1236,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217b6ed3-4237-4577-aeaa-aad7c31833a0",
        "cursor": {
          "ref": "590cc341-52b3-47c1-be1f-609f50f240f5",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad69f81f-4be7-4874-922f-11affda57dbd"
        },
        "item": {
          "id": "217b6ed3-4237-4577-aeaa-aad7c31833a0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8628bf1a-63ac-4b3e-bda4-571b24393270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ed7195-4e64-4b89-b96c-5a17dcd82e5e",
        "cursor": {
          "ref": "a24c0044-b528-465b-a995-0b325d3bf056",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bec1e861-04b3-4040-af50-2515c33903f6"
        },
        "item": {
          "id": "95ed7195-4e64-4b89-b96c-5a17dcd82e5e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "609cfcd5-4077-4152-a359-6ab2ef96d0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0694c98c-0d0f-41c2-9083-bd4acd3316bd",
        "cursor": {
          "ref": "f8f3ca14-72a8-4659-9c82-a81de90072ce",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7fdc130d-0ded-4592-a1f0-fdbe7302dc5e"
        },
        "item": {
          "id": "0694c98c-0d0f-41c2-9083-bd4acd3316bd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f4adc584-f540-4bc3-9669-a0770ee0ef9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41d7158-a1f8-481a-aa2d-3d342d0a795c",
        "cursor": {
          "ref": "1d3611d4-8df3-40dc-8429-6ab732b0be2b",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "08f2d7fc-5969-46b7-93c3-1e25cf900b56"
        },
        "item": {
          "id": "d41d7158-a1f8-481a-aa2d-3d342d0a795c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5ccdf571-734b-46e8-b06b-4b0dd6b979b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb6bb2b-e958-44f5-91b7-d5b1e69067e7",
        "cursor": {
          "ref": "c66c621e-d7d9-4715-ae79-c90f794b94a3",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "99ac079c-1807-4492-a5e8-7cdf9279ebd4"
        },
        "item": {
          "id": "cfb6bb2b-e958-44f5-91b7-d5b1e69067e7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7a91a1b0-4132-4b0a-809d-06fa6f19a335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1266,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b165b30-ea5a-43d8-ba70-5d8083e058a7",
        "cursor": {
          "ref": "7f2e297b-c80e-4ad5-bd5c-57f4f1fd1901",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "38ac1e21-f37b-4e15-b798-cb30b5f2632b"
        },
        "item": {
          "id": "2b165b30-ea5a-43d8-ba70-5d8083e058a7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e83070fa-464c-4ede-85f4-765f96bd60cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc28ba8-0615-4101-9bb5-1d6c5a732662",
        "cursor": {
          "ref": "db09b6ff-c0e5-4c28-bd54-f383b28e4dda",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7b9f7891-8c46-462b-9989-a8f356c9bd3a"
        },
        "item": {
          "id": "5cc28ba8-0615-4101-9bb5-1d6c5a732662",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "23b1d586-74ff-4b2c-aff4-ec19c6cd8625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629a51cb-f77b-45c3-a6f2-9995b9cff9cb",
        "cursor": {
          "ref": "61ce14fd-b82a-49f7-b66c-8a19190f0322",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2710d94f-3206-4574-98f9-44fa535cef35"
        },
        "item": {
          "id": "629a51cb-f77b-45c3-a6f2-9995b9cff9cb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fd47a73d-45a8-4621-ad04-720d0fef9af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2783,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9d277f-4963-49ff-8c7f-a649b92eb0de",
        "cursor": {
          "ref": "8360fa9e-a108-41c9-a3b2-905e54d5d252",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "78c147cc-b346-4237-93a2-c011041f0079"
        },
        "item": {
          "id": "be9d277f-4963-49ff-8c7f-a649b92eb0de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ca7a9072-0784-46a2-a945-094777efcccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2044,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b1d36f-9906-4ab3-af7c-b7f7ae1e30ba",
        "cursor": {
          "ref": "ab157881-aa42-4994-b92e-9c27b11363a6",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3dafdaa5-c0b9-4083-906b-bfde652a1164"
        },
        "item": {
          "id": "71b1d36f-9906-4ab3-af7c-b7f7ae1e30ba",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3756e8b1-80fc-491a-9b92-b6dd67738b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2472,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de169d92-b4e6-4777-8b81-b15fbecbe1c9",
        "cursor": {
          "ref": "36f59911-82b2-465b-974e-591806c35fa9",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c9fc8ade-70ba-432c-810e-a05222fe2116"
        },
        "item": {
          "id": "de169d92-b4e6-4777-8b81-b15fbecbe1c9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "cb84a7be-a8c2-4e8d-95d1-9b45c05339a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1597,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f659e9a6-bdf6-456b-8f49-71d10b0fefa3",
        "cursor": {
          "ref": "f73d39ad-4f35-4b6d-b255-6bb3f97cc93f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "359ff3b0-dc8f-46fc-893b-76940dd8cec9"
        },
        "item": {
          "id": "f659e9a6-bdf6-456b-8f49-71d10b0fefa3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "54196096-602e-4323-bf4c-b20af84586da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeb71c7-664d-4153-89bd-233147898156",
        "cursor": {
          "ref": "66736714-9e23-4646-b769-f8b0b77d6703",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a82f711b-c018-4255-a2dd-7160e97387db"
        },
        "item": {
          "id": "bbeb71c7-664d-4153-89bd-233147898156",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4349968c-6e79-4092-b01a-c13195096376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb206fa-6516-4475-a3f6-1c1443a087ea",
        "cursor": {
          "ref": "90c097a9-2cb0-4813-a969-83a59830ab7d",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9d5b1a69-e9fb-4507-8e23-905a972e79d8"
        },
        "item": {
          "id": "7eb206fa-6516-4475-a3f6-1c1443a087ea",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "60930b48-3ca1-4981-a3df-3a7b226abe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1138,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c249e35-1d81-4b4f-ae1d-281aeb0b0ef5",
        "cursor": {
          "ref": "2645c22e-f779-4c36-8b2d-bd5a6e007d47",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6f0ab6f2-4834-4e25-88de-cc333f37dc5f"
        },
        "item": {
          "id": "9c249e35-1d81-4b4f-ae1d-281aeb0b0ef5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7534ca02-b86b-48db-b154-f5966c6b4b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adac29d-95b3-41a8-bdd1-181491f02f22",
        "cursor": {
          "ref": "68de3dae-bc62-448d-a668-700234cf48c9",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c9efb63e-ae82-4086-9f47-a87bfbb0fcac"
        },
        "item": {
          "id": "9adac29d-95b3-41a8-bdd1-181491f02f22",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a0d3f47c-9907-49e5-a11f-3c10754a6849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1436,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47a7adb-cb23-4391-8c41-1078cfc03305",
        "cursor": {
          "ref": "de395836-492e-48c4-8783-4b3f7481cd7b",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a0c27f2d-7117-4ca0-b4fd-d79e9fa8efb9"
        },
        "item": {
          "id": "d47a7adb-cb23-4391-8c41-1078cfc03305",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0587ec77-29c9-4e3d-95a3-52d824ded9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1286,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf69246-2f2e-4138-86d6-8d8247ae2309",
        "cursor": {
          "ref": "583207d4-1461-4911-8165-8ddf73c094af",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9863de9f-2ca8-404f-8b01-ecf71284001e"
        },
        "item": {
          "id": "edf69246-2f2e-4138-86d6-8d8247ae2309",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2f048e08-abcc-4214-8106-107b1281c898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e16b808-8317-4acf-8840-535e267ecccd",
        "cursor": {
          "ref": "65a09238-df15-4256-87a5-410dcf763163",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "444568bf-88ea-45e7-886c-e0a7318430a9"
        },
        "item": {
          "id": "9e16b808-8317-4acf-8840-535e267ecccd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "080183ec-2eaf-47fa-a74d-c1fef9f2355e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcdf60c-216f-45d2-8dca-6c9e9d73cc9b",
        "cursor": {
          "ref": "315e3b22-8bd7-4f9a-a426-087253940eae",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f1dad706-fc3e-4c0e-8e27-06415cf6b840"
        },
        "item": {
          "id": "ddcdf60c-216f-45d2-8dca-6c9e9d73cc9b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e1cf37c9-603f-4c65-a658-056ac1914448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fb0994-b4f1-4406-a0f6-3fbdf512e222",
        "cursor": {
          "ref": "4fff55d0-5bde-4c85-9aed-19f69c95f403",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dfe60cb2-e64b-448d-88f5-aece222a2c23"
        },
        "item": {
          "id": "f9fb0994-b4f1-4406-a0f6-3fbdf512e222",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "231b5737-65ca-4ac7-9c12-07b50cf23919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dacc11-35d6-4d44-9654-c9b548c17780",
        "cursor": {
          "ref": "acc7adb4-5e06-4784-9407-8bb535126458",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a2b854f5-9406-4da4-8aab-fa7d9fe87181"
        },
        "item": {
          "id": "e9dacc11-35d6-4d44-9654-c9b548c17780",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5882f524-dfb9-4ddf-86d1-b48136a5d83b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0a81d0-3328-41a7-b932-5149be42c4fd",
        "cursor": {
          "ref": "dbc54b35-098d-417d-8190-05a4dcb9acbc",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8342cae6-4fdf-4e5e-a3c8-daaeb1da7cfc"
        },
        "item": {
          "id": "3a0a81d0-3328-41a7-b932-5149be42c4fd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "22440e57-412b-4c10-96c6-49f42831b7cc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 676,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2681cd6b-f73b-49c8-95a7-cd28765fec38",
        "cursor": {
          "ref": "d9b20bc2-f9f5-4e09-98fb-e8626994a238",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bf1fe1f1-e17f-4184-9288-2614384bfba4"
        },
        "item": {
          "id": "2681cd6b-f73b-49c8-95a7-cd28765fec38",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6a9b63c6-115e-472f-9ead-568cf9cfd23f",
          "status": "Created",
          "code": 201,
          "responseTime": 7083,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2234fb4f-59a6-498e-a156-5ae55328820e",
        "cursor": {
          "ref": "ba69c9be-1b98-4384-b846-cb329f536ffc",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e88c980b-e2d9-4e9a-8e6e-fd27600a87d5"
        },
        "item": {
          "id": "2234fb4f-59a6-498e-a156-5ae55328820e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f9820461-1d18-4854-98c9-c9ca55b8f4a8",
          "status": "Created",
          "code": 201,
          "responseTime": 6546,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb7e85d-1249-471f-a0ce-e977043964ef",
        "cursor": {
          "ref": "2f08080c-c4da-4abe-8679-5a87dd76362b",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0009fd8d-fae2-495b-a838-99bd19d0c4d8"
        },
        "item": {
          "id": "fcb7e85d-1249-471f-a0ce-e977043964ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "17cb435d-0628-422e-bed4-99868e4f6d2c",
          "status": "Created",
          "code": 201,
          "responseTime": 6916,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "94174631-42a3-4940-8b3d-e7554f8d9964",
        "cursor": {
          "ref": "57cab593-5f62-4f44-a9ad-c5ce24b5eb0c",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a34000f1-704a-4193-8ab7-fd6c11b88b83"
        },
        "item": {
          "id": "94174631-42a3-4940-8b3d-e7554f8d9964",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5683cce8-e9f0-4147-98a7-a9e52efe1621",
          "status": "Created",
          "code": 201,
          "responseTime": 6830,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d37aebf-8f3a-4ac0-9d95-fc17bb990f74",
        "cursor": {
          "ref": "8a2b4543-03cd-4f65-944e-8c16908f0727",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ea5f47e2-a2f2-444a-9ed6-daaeee80aa1b"
        },
        "item": {
          "id": "7d37aebf-8f3a-4ac0-9d95-fc17bb990f74",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a5a7ef13-0e40-4a73-95b0-36589cd9b0db",
          "status": "Created",
          "code": 201,
          "responseTime": 6145,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae77d391-fadf-4f59-8ed5-8bad24a013d7",
        "cursor": {
          "ref": "27566f37-249b-4e23-95cf-8f3f628b5fd6",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a34c3795-fab9-4d71-bbf9-69a433b006af"
        },
        "item": {
          "id": "ae77d391-fadf-4f59-8ed5-8bad24a013d7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4dbc47b4-da9d-43d5-a42b-b27be8c4d853",
          "status": "Created",
          "code": 201,
          "responseTime": 10440,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4f5177-4abd-4347-a4b9-340824018f47",
        "cursor": {
          "ref": "ac65f4bb-7211-45b4-ac63-09e6efbd5598",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "429ca463-f091-44c1-8076-ed31ec3969e7"
        },
        "item": {
          "id": "9b4f5177-4abd-4347-a4b9-340824018f47",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b8370fd-2275-4a1f-8842-eae5cf4a803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1820,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4f5177-4abd-4347-a4b9-340824018f47",
        "cursor": {
          "ref": "ac65f4bb-7211-45b4-ac63-09e6efbd5598",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "429ca463-f091-44c1-8076-ed31ec3969e7"
        },
        "item": {
          "id": "9b4f5177-4abd-4347-a4b9-340824018f47",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0b8370fd-2275-4a1f-8842-eae5cf4a803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1820,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886ac39a-0001-4353-aef3-889d1f003d1f",
        "cursor": {
          "ref": "63e6f63a-8437-4d56-bfe8-6be8500a5e09",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "147f9a12-e65f-4c1e-85cd-a4e78f111843"
        },
        "item": {
          "id": "886ac39a-0001-4353-aef3-889d1f003d1f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "45f56c51-5436-415b-83cb-29fdedf75333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1555,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1d3085-7d59-44a2-a22e-6b662fdb9a2a",
        "cursor": {
          "ref": "292f6f04-0fba-4fb9-b9cd-ac84fb834086",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "95973a5e-65ae-402a-85c2-18e61e704db1"
        },
        "item": {
          "id": "8d1d3085-7d59-44a2-a22e-6b662fdb9a2a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1d162799-5077-4771-9d1b-8fc9417ba26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0196e47-ada6-4460-8349-0e3b11b0868c",
        "cursor": {
          "ref": "d8bf0446-8ca5-47fd-a765-9438a546b213",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "743b9405-8d6a-4014-9e42-c404994a67d0"
        },
        "item": {
          "id": "e0196e47-ada6-4460-8349-0e3b11b0868c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "45549d28-c8b3-43e8-b7b4-3f6b57744df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad73638b-0f4e-4e66-a2ec-49ebeb500511",
        "cursor": {
          "ref": "f858ba93-9269-49c4-a00d-b486ffcf4987",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5e3df362-7edb-445a-8640-332b1dc65850"
        },
        "item": {
          "id": "ad73638b-0f4e-4e66-a2ec-49ebeb500511",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "06b3c0d8-a36b-42d8-a983-5dd99fa021c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57720e7-5b5e-4468-8e7d-556f113436d2",
        "cursor": {
          "ref": "41c6176c-acdd-4442-b127-662e5995714b",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bca230a2-4037-415d-8319-e1c436def6b9"
        },
        "item": {
          "id": "d57720e7-5b5e-4468-8e7d-556f113436d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cf07b331-61d5-4d09-9a5b-5796e3d27736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ad1eeb-5d4a-4b5f-b4c0-788f9dcf42a6",
        "cursor": {
          "ref": "2a01eeaa-3809-426f-9dbd-24a5df333a91",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "24ff1bff-6009-4367-984f-4016cd92c52a"
        },
        "item": {
          "id": "15ad1eeb-5d4a-4b5f-b4c0-788f9dcf42a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "10afe125-8a74-4094-8ab5-3f0952851665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db31bd8c-3772-4db1-8ea8-391ce30bb790",
        "cursor": {
          "ref": "f92be4c2-8c54-479e-9aaf-fac1b3dbbb26",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b121a901-d86c-445d-acfa-245ab582b5a7"
        },
        "item": {
          "id": "db31bd8c-3772-4db1-8ea8-391ce30bb790",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6cef586f-cb38-430f-99f9-2106f00a0f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d59cb-a084-4e1b-bdef-ce0f54584bb6",
        "cursor": {
          "ref": "faae1e00-a84d-465e-ac53-44947d531735",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fe70a5a5-7e58-499c-8960-43d1c96397e3"
        },
        "item": {
          "id": "678d59cb-a084-4e1b-bdef-ce0f54584bb6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8aeca98e-29f7-4aff-a8a4-5ec023fc2823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d137a9-86fa-44de-8a8f-01a971b33863",
        "cursor": {
          "ref": "4c7493a2-923d-45a4-a182-e29242267c78",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0f8a1cf3-64c0-4c8e-a189-4d691aec7917"
        },
        "item": {
          "id": "03d137a9-86fa-44de-8a8f-01a971b33863",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "81f444f5-09a0-46af-9b95-4e984d91510b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64f1186-f15b-4427-9bfd-882b0599e29e",
        "cursor": {
          "ref": "10d433ce-07b8-49ae-abda-6fd568bf67fd",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f9e46ac5-470a-4ad9-aca4-8dbc4c0c1f13"
        },
        "item": {
          "id": "f64f1186-f15b-4427-9bfd-882b0599e29e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "554f6999-4be9-4291-94ba-734dfa4d2364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207cd2c9-26c6-4165-b5af-cf624130d3fc",
        "cursor": {
          "ref": "c4296c83-883f-475a-8e0c-156e4eb962ae",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "35656a46-91e6-4d88-9782-d21382aeb840"
        },
        "item": {
          "id": "207cd2c9-26c6-4165-b5af-cf624130d3fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5305c730-a1f9-465c-a798-5d8cecc1f15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e151627-1ec0-4a8e-a010-1ca9b16f9e37",
        "cursor": {
          "ref": "11f84fd4-50be-48b4-9d43-8a581aab4baf",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "818017aa-8b83-4689-ab35-97de3eae980e"
        },
        "item": {
          "id": "4e151627-1ec0-4a8e-a010-1ca9b16f9e37",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7fb62a22-baf2-4065-af14-edc6cdea8355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539a6dab-0087-4ad4-9af1-a2e22b090b1c",
        "cursor": {
          "ref": "f4e47aa4-7686-46b7-a344-3053d10c789f",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c8ca3fed-86c4-4fb9-8979-e3192b72caee"
        },
        "item": {
          "id": "539a6dab-0087-4ad4-9af1-a2e22b090b1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "87fe32e9-b0af-4a66-8074-ebe16a809f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1401,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34858ecd-f56a-4fc4-a7a7-310c83f55944",
        "cursor": {
          "ref": "4f2b735e-2fce-48d5-8dce-da83d35d9e13",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1f3fabf7-60e0-41d3-ad9b-960996851f43"
        },
        "item": {
          "id": "34858ecd-f56a-4fc4-a7a7-310c83f55944",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0a0af265-424f-4b69-af18-6efc6ab8e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1867,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba55223-3dc1-4a2b-9ab2-9cfd1e0d1ce3",
        "cursor": {
          "ref": "2c99f663-5edb-4c23-ba49-a06c9658b9fa",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "49b5c8c5-f56e-43df-bb8a-04ee7d4c7611"
        },
        "item": {
          "id": "dba55223-3dc1-4a2b-9ab2-9cfd1e0d1ce3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0f7ec485-b69c-4bfa-b1a1-fd3693f5479c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1910,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c801301-d4fe-4aff-9e25-4c24bf068645",
        "cursor": {
          "ref": "bb70cf82-eb7d-428f-9777-eacd0734b5a8",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cfc2a6f7-9ce4-453a-ab12-7a487e8fca17"
        },
        "item": {
          "id": "5c801301-d4fe-4aff-9e25-4c24bf068645",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8354ce4-221a-4b24-a2f6-76923da10fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2587,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5770c33a-4718-45b1-9182-5a5f0e74b833",
        "cursor": {
          "ref": "26da198a-c4ca-4e42-9550-5317da983185",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6ade5f22-4596-4810-980a-b21085be3dd2"
        },
        "item": {
          "id": "5770c33a-4718-45b1-9182-5a5f0e74b833",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "178817d0-6e3f-45b6-88a2-2823206f017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1716,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cf126e-1a7f-4b19-9072-0dcbea18883c",
        "cursor": {
          "ref": "fd47fd46-0d5c-4f4e-b9ef-40f68d653505",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b4156981-88f1-4003-87f5-c4233680345b"
        },
        "item": {
          "id": "83cf126e-1a7f-4b19-9072-0dcbea18883c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1139f1db-20db-4762-8ed3-5796a09df338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1133,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6904e01c-8eca-46d1-b82d-b28a60238ff9",
        "cursor": {
          "ref": "62d28402-e216-4f6f-9438-d2cfee72cc53",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "876359ad-f44c-4017-9fc7-002e74982e1e"
        },
        "item": {
          "id": "6904e01c-8eca-46d1-b82d-b28a60238ff9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35484c1b-caac-493d-aaa3-20db7c57de9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58413e7c-04a6-4ba5-859f-aa5bd0a76245",
        "cursor": {
          "ref": "7d280434-3483-4213-81f4-df27333f893f",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a85b3c03-302b-4f02-9b13-c42aee6455fd"
        },
        "item": {
          "id": "58413e7c-04a6-4ba5-859f-aa5bd0a76245",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05a887ce-088a-43c1-afaf-b184f3c9ee96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5167224-500e-47d6-8ee4-bd9c0170d8c5",
        "cursor": {
          "ref": "5e81431e-614a-4e2b-945a-fb79499b2463",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5dd01655-b760-43ae-9386-af54c2bcc24b"
        },
        "item": {
          "id": "b5167224-500e-47d6-8ee4-bd9c0170d8c5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "66ae14da-67df-4ffb-adef-3950d6d15175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb502a59-f5a4-4fa9-b971-0b6e70776efc",
        "cursor": {
          "ref": "923c5559-52c4-4fac-bcaa-5e2507c9e181",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3e7900f0-5355-4a72-a53b-94eeceaf495b"
        },
        "item": {
          "id": "fb502a59-f5a4-4fa9-b971-0b6e70776efc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "affd5186-a114-440f-853f-e99894d53d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 978,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be1ff4b-42f8-4b73-a8b2-9f7720b865dc",
        "cursor": {
          "ref": "ba2f7220-2532-47b7-897f-63c81186c6f1",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fd23ea71-91da-4438-8f37-04bbd465071d"
        },
        "item": {
          "id": "7be1ff4b-42f8-4b73-a8b2-9f7720b865dc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8061cda1-badc-470d-8f63-af9ffcbff758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f858e9-bb70-4141-85c3-2902a1188246",
        "cursor": {
          "ref": "d459fe97-a567-4098-80ff-68232f0b17c7",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "02c6e312-6cbd-4aa6-8d54-920af556f727"
        },
        "item": {
          "id": "b3f858e9-bb70-4141-85c3-2902a1188246",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ddb163d1-ec30-4d13-bcb7-26025b2a93bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 972,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5142016c-cebe-4ef1-92c0-a1e7553565ec",
        "cursor": {
          "ref": "a9696dc9-6b75-4e61-b22d-a44179a06f19",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "91ea0481-d72f-4de3-8f3e-e30fb00695e1"
        },
        "item": {
          "id": "5142016c-cebe-4ef1-92c0-a1e7553565ec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ab835ff9-c2cc-463d-86fa-4c0e6d3af742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9981b5b4-1bd2-42b5-bde1-163c425fc192",
        "cursor": {
          "ref": "c237da34-ea9e-4494-9ca6-8d99d9826919",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bc46071c-9c93-464e-b082-079509dc1438"
        },
        "item": {
          "id": "9981b5b4-1bd2-42b5-bde1-163c425fc192",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4366823-0e3e-41bf-a509-73f3fa6397ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7943748f-c2a8-4a81-8a2e-8c9d986c8a07",
        "cursor": {
          "ref": "80b53c0b-3aa8-4ab2-a751-c175ffbc6f57",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "72d173a1-2396-4e15-b781-32d2a80816c8"
        },
        "item": {
          "id": "7943748f-c2a8-4a81-8a2e-8c9d986c8a07",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "77cb5e78-0a2a-4aa9-b221-a59c1e3a087e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec317904-6691-40f7-9591-a4714c112848",
        "cursor": {
          "ref": "f5b414d2-9a4e-402c-9f20-861850612865",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8d988354-7880-4f5b-928b-5ba6f900b21e"
        },
        "item": {
          "id": "ec317904-6691-40f7-9591-a4714c112848",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e2a8654-66fb-4345-bfd3-b50344a9b7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46b4af7-6cd1-4119-b342-a09736590378",
        "cursor": {
          "ref": "32ef9ea4-c47f-4ca1-b8e0-b2a3bf241c49",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a1af8f18-2519-42ea-b1d9-0f7d68e8d4c6"
        },
        "item": {
          "id": "d46b4af7-6cd1-4119-b342-a09736590378",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a44bd088-60ee-46a0-ada5-b4869ace52df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110544a9-6b3e-4d69-8a69-b0ca73d00279",
        "cursor": {
          "ref": "d8636382-d3d1-439a-92b1-bf743ee88dce",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "97af36e3-18bf-4012-90d2-e167c07a6bf1"
        },
        "item": {
          "id": "110544a9-6b3e-4d69-8a69-b0ca73d00279",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f98d6a54-7ff6-46c1-9f8b-aaa05c01a92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8fc3e6-aae7-4194-9909-cc9233084750",
        "cursor": {
          "ref": "948d38af-1a44-4b09-b91f-76bb73743af2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b7300d1d-7b30-41b3-b6e6-97c2f866034f"
        },
        "item": {
          "id": "4a8fc3e6-aae7-4194-9909-cc9233084750",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "46b878a0-dce3-4d61-8db9-4786baf5800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93886647-7626-4305-b7fa-65111aed8179",
        "cursor": {
          "ref": "1df6a925-4baf-4a3b-9ff9-a8f9501c6b46",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c8d3d54d-aa7c-416c-9399-1465312b9e93"
        },
        "item": {
          "id": "93886647-7626-4305-b7fa-65111aed8179",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "093a34aa-50e8-4948-8a91-e25324a3995d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681216a5-779b-461f-beca-0c9e7a01bf6d",
        "cursor": {
          "ref": "d7c2f74e-5cbd-474d-850f-b18cff72c8e0",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "05640218-7c99-4c30-8e02-1d274ed0c64b"
        },
        "item": {
          "id": "681216a5-779b-461f-beca-0c9e7a01bf6d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "173e0b9a-e2f8-416a-b8d3-3900f7e0453c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 852,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a082b2ea-effc-4353-b0cd-29c86fa68551",
        "cursor": {
          "ref": "335d0196-b54f-465d-bd18-d53f6a8e7177",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "596b604d-a2dc-4fed-848f-eb6807c491bb"
        },
        "item": {
          "id": "a082b2ea-effc-4353-b0cd-29c86fa68551",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6099b6c5-d367-4ccc-8cec-4afa0a1257c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a082b2ea-effc-4353-b0cd-29c86fa68551",
        "cursor": {
          "ref": "335d0196-b54f-465d-bd18-d53f6a8e7177",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "596b604d-a2dc-4fed-848f-eb6807c491bb"
        },
        "item": {
          "id": "a082b2ea-effc-4353-b0cd-29c86fa68551",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6099b6c5-d367-4ccc-8cec-4afa0a1257c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4157005-2cc3-45b4-951f-5b72735e5809",
        "cursor": {
          "ref": "e4197d4b-baf7-4ea1-9656-ab05b82149dc",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e3bee445-2224-4b05-a79f-5185152bd2ba"
        },
        "item": {
          "id": "e4157005-2cc3-45b4-951f-5b72735e5809",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6ffbcaa5-483b-406c-ada4-748c6049fbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cc7971-b5ae-4b92-9bc0-9ef3f811fd8f",
        "cursor": {
          "ref": "65266fa5-4be7-424b-b778-043b38262631",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bb4c790e-e6b9-4afe-a501-013d4de1cddf"
        },
        "item": {
          "id": "89cc7971-b5ae-4b92-9bc0-9ef3f811fd8f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "66355b66-a966-4f56-93c3-2427ad6d67c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dbfcc7-d4d8-42c0-be78-7e2b51a8c705",
        "cursor": {
          "ref": "6232b2ed-3024-4cfa-bf9b-b3d5c82a7df3",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eaac09cb-3493-49ea-9862-05e3a60a07be"
        },
        "item": {
          "id": "10dbfcc7-d4d8-42c0-be78-7e2b51a8c705",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7b032d48-b825-4d09-ac86-d654ea09a533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59be46d2-23a1-4d36-963e-a78dfc5adc8d",
        "cursor": {
          "ref": "2943f631-a674-42aa-8a12-41b2084ab8bb",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "988354d3-8da4-43b8-9730-9ba46aa6875b"
        },
        "item": {
          "id": "59be46d2-23a1-4d36-963e-a78dfc5adc8d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "07c011d4-4d2b-4a77-8e72-f66a00609b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33861bea-4e33-4c55-ac95-e37c0f69acbd",
        "cursor": {
          "ref": "7020a911-1bc9-4de1-b260-dd1d1d220944",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "48356b86-8c8c-41b8-9336-cf84d15b9e11"
        },
        "item": {
          "id": "33861bea-4e33-4c55-ac95-e37c0f69acbd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "296f2ee2-2a5c-49af-a771-79a9a856d27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484fdbc1-b496-4a6b-894c-857067fdd2db",
        "cursor": {
          "ref": "40e893f5-3a3e-4b0c-89e9-0eb688f150c9",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "78ebc2c4-040e-4523-975d-e0c908a5e6e9"
        },
        "item": {
          "id": "484fdbc1-b496-4a6b-894c-857067fdd2db",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aa35156a-2376-4e6c-af37-57f014696ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b540228-6420-4821-a94c-b78b5008b527",
        "cursor": {
          "ref": "d2bd72aa-23b6-40cf-80ad-f0104264471e",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "adb06188-3c94-4541-8c8a-2446874fea66"
        },
        "item": {
          "id": "0b540228-6420-4821-a94c-b78b5008b527",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "60142a6f-3daf-4f9f-9d90-72eaf369b4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecd44bf-c262-4ff4-96d9-90989ce9d2cc",
        "cursor": {
          "ref": "4b6cbf38-a8d5-40dd-93bd-b44a1b0e8a04",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba50bc52-a044-4eef-8770-fa6b586a3001"
        },
        "item": {
          "id": "7ecd44bf-c262-4ff4-96d9-90989ce9d2cc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "23336258-4171-457e-a7b4-87e50fadced8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cfef65-483c-4dfc-a1cc-662b909640d1",
        "cursor": {
          "ref": "aed57df0-97a2-466e-bf54-9118b822671d",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "968a54f8-52ec-49fe-8759-65a2744b76e8"
        },
        "item": {
          "id": "60cfef65-483c-4dfc-a1cc-662b909640d1",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c996bca3-5234-4907-8933-f35a0c4c9da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e11773-4560-4cc1-87c5-5ff25b75852b",
        "cursor": {
          "ref": "6963890c-afa7-4ba3-9e1d-b254fecf9e72",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1ba4295c-ef33-406d-a716-41c268151584"
        },
        "item": {
          "id": "42e11773-4560-4cc1-87c5-5ff25b75852b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "741594fe-340f-499c-b752-b71624ec5c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72027561-7c91-441c-98f3-4cdd6e93c45e",
        "cursor": {
          "ref": "a7613e9e-2d40-4ed6-90dc-9727519b889d",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "26f75a98-81c5-4828-a0ea-e5a75174633b"
        },
        "item": {
          "id": "72027561-7c91-441c-98f3-4cdd6e93c45e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f8c82e99-b8de-4b8d-90c7-f70cea7254a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93002b5-e615-48f2-987c-964269cca270",
        "cursor": {
          "ref": "c88f501a-8f83-4f98-b4f5-7e0e97e2facb",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "23a0afbb-3352-4ff7-83b8-f2731ff91050"
        },
        "item": {
          "id": "c93002b5-e615-48f2-987c-964269cca270",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ec2ae491-c8e4-4c83-ba91-db886ccf18a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5c09ea-aff0-4a36-861d-e0a17a181766",
        "cursor": {
          "ref": "902ba15e-d9aa-43ee-8b62-2c64ed0f736f",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9428d7b0-5d40-45cd-9942-529f21b47f88"
        },
        "item": {
          "id": "6a5c09ea-aff0-4a36-861d-e0a17a181766",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b90fe9b4-695e-4f4b-bb08-fff1787182c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39cac1f-5cce-4f90-ba70-e6993b9adb05",
        "cursor": {
          "ref": "3e8ceef5-a98b-42d5-8e7d-0a17df10df87",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c272312b-ee20-44d4-9ff6-db08d30549cc"
        },
        "item": {
          "id": "f39cac1f-5cce-4f90-ba70-e6993b9adb05",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c5b6d9a2-07ee-4f85-8f89-b7435785f4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20c93a4-83cd-4434-bc0c-94bcb1ad9a8a",
        "cursor": {
          "ref": "c8611ff0-a90d-4f21-863c-9616c423c7ec",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "df502093-2e22-46f1-a553-93425058bfb8"
        },
        "item": {
          "id": "f20c93a4-83cd-4434-bc0c-94bcb1ad9a8a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bc1ac935-c01a-4152-9b33-78efb9ad35d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55e207-8434-4c86-8586-7e33feb7540a",
        "cursor": {
          "ref": "665de3d8-c51c-429e-8de1-2f6bef106b53",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e8ff69a6-6e49-448b-b8e9-92899fabd8d6"
        },
        "item": {
          "id": "ff55e207-8434-4c86-8586-7e33feb7540a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ceff7c5f-58c4-4184-9a83-f7a7a4ed1a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80ac720-bf06-465b-b962-69afd2257df4",
        "cursor": {
          "ref": "a990f962-8f7c-4b62-a2ef-e2cf3abeb63d",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e668d990-3236-4a91-82c3-856b4672004d"
        },
        "item": {
          "id": "a80ac720-bf06-465b-b962-69afd2257df4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "12db65ad-1f8b-4311-ae39-e89bc41fffb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befdb4df-45e1-4f02-baf4-5b31c1a38e02",
        "cursor": {
          "ref": "4b978339-f69b-411c-ba39-b5a4651a6149",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0eddebca-8bb1-4b27-803a-434110bdbe2d"
        },
        "item": {
          "id": "befdb4df-45e1-4f02-baf4-5b31c1a38e02",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b66a7a67-c307-4702-9744-f133c2baf365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70273be1-aac4-4455-ada5-01aa7e3de72c",
        "cursor": {
          "ref": "2d0f1dc8-825a-412c-92ad-aefb9d0ecb57",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f389ac18-9172-4fa8-886b-94dfff3a0f0f"
        },
        "item": {
          "id": "70273be1-aac4-4455-ada5-01aa7e3de72c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c490232d-834b-4f2e-a616-479b4d2bee90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77857a47-d8af-4bcc-ae0f-747e38209ae0",
        "cursor": {
          "ref": "d4cea1bd-c30b-41d2-95d1-2c6771b5774f",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ef23294e-641a-4c55-bd4f-301d20b178b8"
        },
        "item": {
          "id": "77857a47-d8af-4bcc-ae0f-747e38209ae0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ee690626-0fe6-4eff-b60d-681dc17f203a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef55f4e-b959-4eef-bece-32092b169241",
        "cursor": {
          "ref": "6fab072c-c1ce-41c9-a298-96e0e42966bd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2b10858b-9824-42fd-966c-a7475a29055e"
        },
        "item": {
          "id": "8ef55f4e-b959-4eef-bece-32092b169241",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "826e485b-3c98-4955-b4a4-06c45159b782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9baa0f-994d-4b29-97a4-e782d36ab2a0",
        "cursor": {
          "ref": "aa99f784-812f-4536-9e20-be4721ac6383",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "be7b8fef-816f-4fcb-b134-9ed4062e8313"
        },
        "item": {
          "id": "ca9baa0f-994d-4b29-97a4-e782d36ab2a0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e458b7c4-ebde-4850-b5cb-ef413941e5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f89561-a4d3-4f32-a7e3-054269e1c753",
        "cursor": {
          "ref": "e40cf93b-dd3f-4f26-9d24-40f1f274674b",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "87239778-d7fe-4d37-818f-5bd6c70b7412"
        },
        "item": {
          "id": "62f89561-a4d3-4f32-a7e3-054269e1c753",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2317ffc5-bc3f-4baf-bd58-48a567e7867f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e667e172-153e-4a50-b363-b9e1a305c9be",
        "cursor": {
          "ref": "5eb588b6-8876-4dd6-b6bc-9f53da3a380c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c52bf868-b746-429f-a3e0-7d45f35b86ed"
        },
        "item": {
          "id": "e667e172-153e-4a50-b363-b9e1a305c9be",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1289bcee-05d4-472b-83e3-5816c9d71039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5554cf-82e6-4b48-b72c-071c43eb5418",
        "cursor": {
          "ref": "e7723f35-aaa1-4678-b54e-acb058cd4743",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "972146f8-2dc1-445d-bd9c-4076aae70d8b"
        },
        "item": {
          "id": "2b5554cf-82e6-4b48-b72c-071c43eb5418",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3a9d0173-b73a-42c2-a297-7dba2f4bf026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb1c98b-1ed9-4137-98f7-3d306b7110e6",
        "cursor": {
          "ref": "9ddaa033-96b2-4827-a661-6ac63ef6a19a",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "76d31e35-76bc-454b-8dc4-1f90c4a8ed2e"
        },
        "item": {
          "id": "7cb1c98b-1ed9-4137-98f7-3d306b7110e6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6be86787-a666-4a90-be63-cd814c7e481c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b91c50d-49a0-4ec1-a588-b7d7acdab7f6",
        "cursor": {
          "ref": "4ab9d4ee-4e57-48a8-83b6-ce9def71a583",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "207db7ad-67b5-4db0-aaf9-9f4243f9ba55"
        },
        "item": {
          "id": "4b91c50d-49a0-4ec1-a588-b7d7acdab7f6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5cb56ff3-b2d1-4c04-84d7-ba811711a72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcde01c0-05ed-4877-8ff2-62d163f69b89",
        "cursor": {
          "ref": "ecf2e3ce-3452-496d-a0ea-22c56b27b4da",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "94a6ea09-a63b-45a2-8706-1a54dd532a1a"
        },
        "item": {
          "id": "dcde01c0-05ed-4877-8ff2-62d163f69b89",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6d411ebb-3d80-402c-8549-68f35269bf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0ae695-8a09-49b6-ab55-a49f9960a3ca",
        "cursor": {
          "ref": "ed0088b9-064f-48ef-a7d0-7f250bea9fa1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "de8ad192-44bc-4862-adda-062aca7d2b90"
        },
        "item": {
          "id": "ad0ae695-8a09-49b6-ab55-a49f9960a3ca",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "752bc99c-5b35-4e98-bcad-dd9c6c882fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed3407d-f392-4470-8fd5-16667da96391",
        "cursor": {
          "ref": "372edd79-5af5-4678-bdcd-f27aa64e66f5",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "82d371c1-d66f-42f2-86e7-1ccee0cd3818"
        },
        "item": {
          "id": "3ed3407d-f392-4470-8fd5-16667da96391",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9bf2ed08-6181-474b-8f58-10354b1ca98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3732dae5-9d0f-4c91-ab7a-a0b8b01f4bd4",
        "cursor": {
          "ref": "dccb8fb7-c68a-490e-b2c2-7a368aa06d8b",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6cbf3069-e843-4616-969d-899ecc4d7d7e"
        },
        "item": {
          "id": "3732dae5-9d0f-4c91-ab7a-a0b8b01f4bd4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b22be367-5803-4816-9bba-7cf235ca6383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea4a532-016a-4796-a021-7a25883ecd0c",
        "cursor": {
          "ref": "565f139b-9007-4a02-bf26-dc3ab02aac73",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d1b99387-5757-49ec-8cf8-b13f74b69945"
        },
        "item": {
          "id": "cea4a532-016a-4796-a021-7a25883ecd0c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7259e749-09e9-4a0c-99d2-e65afb4d838f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d0dce0-6028-4cd7-a1ef-2018c796e1a3",
        "cursor": {
          "ref": "238a56fd-be61-4830-a7f0-b933a38e5c7d",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b051ebe0-dd29-428f-b21d-3a5f68a80ad4"
        },
        "item": {
          "id": "04d0dce0-6028-4cd7-a1ef-2018c796e1a3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "81adba63-8e8d-4367-8148-8cf82b669e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d3a0db-83fd-496d-946d-3211c485c702",
        "cursor": {
          "ref": "2ab19031-8238-42f4-abd5-25239d28d122",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "18b118b0-91e0-409c-a65e-7c39e7f18ab0"
        },
        "item": {
          "id": "36d3a0db-83fd-496d-946d-3211c485c702",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "01a6b3b7-b34f-496c-a4b4-0eb13272d753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93a73c3-2c52-49a3-a850-a1b4dc81653b",
        "cursor": {
          "ref": "bf184cec-5565-451c-a6c2-17c367cbb928",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8a9b7a6e-d4f3-41b2-9eda-5aa42ef264c3"
        },
        "item": {
          "id": "e93a73c3-2c52-49a3-a850-a1b4dc81653b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9dab9e8a-29c5-444d-98b3-f3699147e064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1062,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d886c729-99ca-458a-801e-b7b293454afc",
        "cursor": {
          "ref": "857ae89a-37e4-43b5-a70c-7aae0997f764",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "279a1522-ca6b-456b-ba6b-b57215ee8e3a"
        },
        "item": {
          "id": "d886c729-99ca-458a-801e-b7b293454afc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d07f8a87-80d1-449f-9439-a80d9a50c0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f48218-b7ea-46ca-b2e9-628b6d10f2f6",
        "cursor": {
          "ref": "1596ed3f-bf25-48b0-8bae-77805061ca98",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "34072b9d-cc9d-4284-9a6e-e5232114bfd9"
        },
        "item": {
          "id": "c3f48218-b7ea-46ca-b2e9-628b6d10f2f6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c7c543eb-2d69-4aa4-bca6-89452e133d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 949,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35568db1-7897-4797-b4b5-4843223dbcb1",
        "cursor": {
          "ref": "cceee6a5-e0e4-4646-9b21-a9019e2d71fb",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "10a89293-2abc-4e92-ae80-ed5ee8770d2a"
        },
        "item": {
          "id": "35568db1-7897-4797-b4b5-4843223dbcb1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "851a486b-4b43-4072-836b-4c85e36a9268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c9bf2b-4561-4d45-bbf7-f4b320ab8770",
        "cursor": {
          "ref": "654c1396-ab3f-4907-9dbe-ff5fe9a4acc6",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0fdd7129-4efe-4db5-ba6e-74fbfd9763ae"
        },
        "item": {
          "id": "96c9bf2b-4561-4d45-bbf7-f4b320ab8770",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3a101d4e-3327-43eb-8605-d48ba1761c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460058b3-098b-4ef6-96c8-405b91c7a49a",
        "cursor": {
          "ref": "cfd5ab25-c919-49f8-8b93-8fdeaec49c90",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eb207442-e4a0-43ea-8027-75e1928cc29f"
        },
        "item": {
          "id": "460058b3-098b-4ef6-96c8-405b91c7a49a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8144e592-c365-46d4-9550-646f4c44799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b1d588-f739-4c79-852d-a05ac9b7f51b",
        "cursor": {
          "ref": "2d94f01e-81fb-466d-933a-536804ff31f7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c68cd466-39da-4aa2-b78d-21f0547acba6"
        },
        "item": {
          "id": "70b1d588-f739-4c79-852d-a05ac9b7f51b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ef8d0ec1-3975-4a34-be06-adfd34cd7491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d55bce-e0ed-4695-b7b9-b9b670ff51d5",
        "cursor": {
          "ref": "a9ece2b9-a0d4-495d-bf2c-8d2bff523c02",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c41a5cde-859f-470e-8f16-72460dc127ef"
        },
        "item": {
          "id": "d6d55bce-e0ed-4695-b7b9-b9b670ff51d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d45e4be8-a1e0-424f-81e1-2c741366799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292a058e-7161-4dd2-aa3f-b638f0aabca4",
        "cursor": {
          "ref": "9f69bd19-b2a0-418b-95f5-26ce3679372a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "adadaa10-4d39-4666-8ff7-45850d8ec371"
        },
        "item": {
          "id": "292a058e-7161-4dd2-aa3f-b638f0aabca4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "16b948ce-3e77-4248-9767-be94e9f1ce67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68cac6e-88fe-43f7-b5a0-76b37e377d87",
        "cursor": {
          "ref": "555cb1e2-2d8f-4bda-bfc7-1640501a9e56",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cf965528-5d37-436a-9697-5a0878ee08bd"
        },
        "item": {
          "id": "a68cac6e-88fe-43f7-b5a0-76b37e377d87",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7693cdb3-7339-4237-a1b4-254fc12ad4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8749bb-65c8-4845-98b1-20b569a79a6f",
        "cursor": {
          "ref": "66318fa1-64c6-4fda-98e6-b9186977e537",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1e4290e9-552b-4862-8971-a5a500471e1a"
        },
        "item": {
          "id": "4b8749bb-65c8-4845-98b1-20b569a79a6f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "034a4b11-ded3-43df-9c29-efccfe273e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa214a8-79ec-40a7-aba3-91f0003a9a42",
        "cursor": {
          "ref": "565aa514-278d-4aa2-9d16-ac1d72e8518d",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "831fd7cb-0b84-49de-9d61-a73808ac8e35"
        },
        "item": {
          "id": "2fa214a8-79ec-40a7-aba3-91f0003a9a42",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "82b89671-ef0c-4ddf-b779-54d5ceb20828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6901b33d-d6ce-47c3-ab50-21fad4fdfc06",
        "cursor": {
          "ref": "5869c946-73f5-4d63-8730-dafaaaeb6ecc",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a1cb8232-c2f9-46a8-a485-ee2358af044d"
        },
        "item": {
          "id": "6901b33d-d6ce-47c3-ab50-21fad4fdfc06",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "97a4cb19-4036-41c0-84e3-06135f8c0f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c80032-69e9-43ff-98f1-f509ba1ecc39",
        "cursor": {
          "ref": "be817ace-ef32-4aab-b59c-ffc9dc442c59",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bbc786a3-1809-4410-9a73-5cffb9a3b40f"
        },
        "item": {
          "id": "13c80032-69e9-43ff-98f1-f509ba1ecc39",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b33e19ab-53c2-43e2-bcdc-0a71cd4302b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f22590-c8d3-45b9-895d-ee455080694e",
        "cursor": {
          "ref": "84feccc2-c2cb-4c3c-8cd1-fceb2541f56e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "666e8923-2b95-4b4e-8c8a-b17cb08c5300"
        },
        "item": {
          "id": "e6f22590-c8d3-45b9-895d-ee455080694e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c1608038-b7da-4414-8b93-b75fc628cb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702fc291-3e8b-49bc-ae72-93e749aef255",
        "cursor": {
          "ref": "06e3bdaa-a3e7-4cd9-8cdc-2fafcc283bdf",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7417b5c5-3767-435c-b6d6-b19a4e0069a6"
        },
        "item": {
          "id": "702fc291-3e8b-49bc-ae72-93e749aef255",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fa095751-ab7e-4357-a051-ac208376dbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aba8937-4c3b-48e2-a12c-70f99c8340e1",
        "cursor": {
          "ref": "571ed3be-8674-4aec-961b-69b269891497",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c84b7ae2-381c-43ce-8e13-880eb7dc57f6"
        },
        "item": {
          "id": "1aba8937-4c3b-48e2-a12c-70f99c8340e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b55221c5-a981-4867-98cf-4e7531ea0460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49ba8d8-8339-492b-bdd6-61c1bd6db8e9",
        "cursor": {
          "ref": "59766703-faef-4ac0-a3e5-fdf3f6e4fa09",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "62977498-1a80-4aa5-85f0-e424b8b20f4c"
        },
        "item": {
          "id": "b49ba8d8-8339-492b-bdd6-61c1bd6db8e9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1c6b0ee7-f0a0-4f76-aa87-9e8e6fbe4711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c00be9-eefc-4ca6-9720-12d5290b9707",
        "cursor": {
          "ref": "62d8da48-a9a7-4b7d-a128-2d0970bd17b1",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d55170a7-2b2d-4165-a08d-94eacc06f3ad"
        },
        "item": {
          "id": "18c00be9-eefc-4ca6-9720-12d5290b9707",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6ca5d04c-8bb1-4ba7-b06a-7cfcc2f03fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb476d4-5337-4d85-8857-5066fa18e8f1",
        "cursor": {
          "ref": "2f34e8e8-15b6-4c55-bd9e-838e1450750d",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d03980cf-72ba-4a50-b45f-97b774703f1c"
        },
        "item": {
          "id": "aeb476d4-5337-4d85-8857-5066fa18e8f1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f87507fe-1045-49e6-a0c6-9ffb9ed76210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbc7470-2543-4d4b-bea8-6050a27e2d9e",
        "cursor": {
          "ref": "9ca6cb0f-914c-4b6d-aac1-3d734fe1b6be",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0975b78d-2f39-4f6c-b325-5e0e78d7a5d1"
        },
        "item": {
          "id": "cdbc7470-2543-4d4b-bea8-6050a27e2d9e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a9507904-98ef-4e46-845e-f62fa3bd8db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17806ced-c864-4a00-a830-a469a1cf7ea3",
        "cursor": {
          "ref": "5a23befe-5d77-4bbf-84d4-b609919c092d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "127391e8-0bf5-4e5b-b06f-3821a2fc1b38"
        },
        "item": {
          "id": "17806ced-c864-4a00-a830-a469a1cf7ea3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c5e1808b-eb73-4973-aa37-79588bf0efac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8a8f5-1d84-4da1-ba70-970b33e9eb76",
        "cursor": {
          "ref": "3b31a0da-d954-4219-b8a4-98d31928c150",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c3f922ac-a2c8-42c1-91b2-969521660714"
        },
        "item": {
          "id": "97a8a8f5-1d84-4da1-ba70-970b33e9eb76",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b87936cb-ac74-4a5b-9cce-eb65bead22a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 944,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659c12d3-5895-4bbd-9ab3-644b5b078a24",
        "cursor": {
          "ref": "a772b39c-661b-4628-8c56-eec6e6de8591",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c00c5e82-957a-4404-a931-1b3f78ebe159"
        },
        "item": {
          "id": "659c12d3-5895-4bbd-9ab3-644b5b078a24",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "323d2852-4200-4199-8ef1-4ee83a17e8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bd7e4c-1157-464d-905b-28a617581a90",
        "cursor": {
          "ref": "813fa9d9-1ed3-4fa7-bb59-e9caecaf8e35",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "48cd0e62-f34b-4ffa-b6bc-98e573086170"
        },
        "item": {
          "id": "94bd7e4c-1157-464d-905b-28a617581a90",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a3196d64-f580-49a7-9452-3da90d706f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8e77ba-b75e-46a7-8098-33dd14418383",
        "cursor": {
          "ref": "25f1d1e1-9788-4631-84a6-e409f18ac39e",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3fd93de8-e6ef-4bef-8b5b-f09a00a53278"
        },
        "item": {
          "id": "7e8e77ba-b75e-46a7-8098-33dd14418383",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "af8d255c-f781-4e2d-8079-a3485b79aff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32812b8-6cfa-464c-9f49-b83119e18035",
        "cursor": {
          "ref": "0248e7a1-bf39-4d8c-89b4-dd496fb25da6",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7012a612-cfc9-4455-93bf-b8e68f619883"
        },
        "item": {
          "id": "e32812b8-6cfa-464c-9f49-b83119e18035",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7893ff0b-f833-4503-a41a-7da2a2c45398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24132ec9-bc94-4a5a-adfa-9c701047c98c",
        "cursor": {
          "ref": "50b08bcb-9f88-456a-9a70-675058f361d6",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e782c2f1-5e68-46a4-8947-3a3d38389f68"
        },
        "item": {
          "id": "24132ec9-bc94-4a5a-adfa-9c701047c98c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "58dbc625-d7d8-4edd-99cf-ea4aa95ebf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828df7f8-bc53-446c-9cb9-12504b34dfc2",
        "cursor": {
          "ref": "f2fca4e1-8d55-4d4b-b451-921d504a34df",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5e90c972-eaf4-4cdd-b965-1226068057b4"
        },
        "item": {
          "id": "828df7f8-bc53-446c-9cb9-12504b34dfc2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1e616f8b-25b0-4d4e-a80d-5ef2e4dc3cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed4a390-69f4-4049-a16a-3f32f52baacd",
        "cursor": {
          "ref": "8fcf607a-7b8b-4e42-810a-a404b4266c69",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cd8f1265-68a5-4fde-9fe5-e497fdb4cf5a"
        },
        "item": {
          "id": "aed4a390-69f4-4049-a16a-3f32f52baacd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "95c88d22-251d-4630-8313-b7b33c6e031a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5da2cc-ab8c-40ad-a940-f1da36e28e43",
        "cursor": {
          "ref": "b7572bd5-d742-49cc-8d05-46ffee043e6b",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3d0cd0c1-2b09-4654-a5b3-caac2ee907f1"
        },
        "item": {
          "id": "4b5da2cc-ab8c-40ad-a940-f1da36e28e43",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d7507c62-62fc-447b-9ad2-19ef21071a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ae3d88-75a6-4541-9e80-a0a91dd887a8",
        "cursor": {
          "ref": "2b1fb9f9-1861-48b7-97a8-96fae4bca8cc",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "06d9f388-de45-4bb9-be14-c6a1580d62bd"
        },
        "item": {
          "id": "f3ae3d88-75a6-4541-9e80-a0a91dd887a8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3416b660-1110-498b-b8d8-e9c2ef445f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ae46d5-90ac-4e2c-8f19-05ff841b77a1",
        "cursor": {
          "ref": "c8394026-6a9d-4066-8b37-aa9d3d6909fa",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5e92f56e-22a8-41ae-9fde-b98d2489f54f"
        },
        "item": {
          "id": "15ae46d5-90ac-4e2c-8f19-05ff841b77a1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dd435f9a-0fe3-4065-a20e-72f6fc2894a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0048f4-7a0e-485e-928f-0ea7b2a3ace0",
        "cursor": {
          "ref": "2d945307-e309-424e-a7ff-73791638847c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8e23f2fc-7083-4de0-ab84-fb532195c8dc"
        },
        "item": {
          "id": "ff0048f4-7a0e-485e-928f-0ea7b2a3ace0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2cff0005-b208-4b3f-92fa-98cf239ee817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dcff94-56bf-45e9-a4e1-3fb4041e6280",
        "cursor": {
          "ref": "98230cfa-a7af-4b76-91d7-601becdc4c5f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e70c2f36-ad01-4774-89b9-f4ca1add538a"
        },
        "item": {
          "id": "d2dcff94-56bf-45e9-a4e1-3fb4041e6280",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4bc7980e-f426-44b5-aff6-31d27d332f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73900f31-18b3-42d8-9297-8287f6c034f5",
        "cursor": {
          "ref": "68d59749-68bf-4020-a093-17a326e71ca5",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c721fabe-0ffb-4ecb-b28b-9095c2fc07f9"
        },
        "item": {
          "id": "73900f31-18b3-42d8-9297-8287f6c034f5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0dabb32a-4fba-4444-8d47-5b26474258ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb010a9-8484-4fa7-b2b7-8386b8c274f7",
        "cursor": {
          "ref": "29d996cd-3ba9-48e1-8caa-f098bf525744",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "87cf04e0-956a-4028-b682-472dea2c440c"
        },
        "item": {
          "id": "4eb010a9-8484-4fa7-b2b7-8386b8c274f7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5a7c205e-bbf2-41f0-bb1e-eb6453e233c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58f75e6-7451-410f-9377-2979f623bed0",
        "cursor": {
          "ref": "5a008730-7bbe-4ca8-972d-7fda312aba28",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "42689695-861b-4f7d-ba74-dd298460f891"
        },
        "item": {
          "id": "b58f75e6-7451-410f-9377-2979f623bed0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ce64717c-0fb2-4721-a5d2-57385ad3f168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f2be5-1459-46eb-8281-cdad16c16862",
        "cursor": {
          "ref": "6bdc82b3-358e-4b05-b529-6146006bee54",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8cfce23b-e3f2-433d-ac9c-d5b6c0fbcacc"
        },
        "item": {
          "id": "5f0f2be5-1459-46eb-8281-cdad16c16862",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1f4dbde3-6a42-4886-aa21-f05fb103c668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3415230c-91ed-4af2-8393-e09274d0f156",
        "cursor": {
          "ref": "4a440822-1b86-43e2-8b88-10fede1ae950",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f25f9770-6ee6-44ba-850d-f1df8b0f93d1"
        },
        "item": {
          "id": "3415230c-91ed-4af2-8393-e09274d0f156",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "37fedf38-c794-45c0-b065-cf81a895d089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a064b653-f58b-4799-95f0-343194b1afbb",
        "cursor": {
          "ref": "9808fa6d-c799-4836-b034-95c7895ea9c5",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "78d33db9-6d86-4004-a098-34236a05b18d"
        },
        "item": {
          "id": "a064b653-f58b-4799-95f0-343194b1afbb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "633a5254-ee3d-41f6-b3b2-b1e347e0746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305901ff-436b-4324-8d26-c2485bacbcac",
        "cursor": {
          "ref": "728d565a-e11e-40af-8b77-8d5b2024245d",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0aff11fc-8e53-4b7a-8203-4d4c124840a2"
        },
        "item": {
          "id": "305901ff-436b-4324-8d26-c2485bacbcac",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3c4abe83-9149-469a-87bf-dff697423331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48410e93-b2b2-4f29-9ebc-f89b055e0521",
        "cursor": {
          "ref": "08d22fb5-efda-4e47-8181-570dd01c5a85",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b40f4207-e760-4db3-8bdd-54fde366dcc3"
        },
        "item": {
          "id": "48410e93-b2b2-4f29-9ebc-f89b055e0521",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "703d9951-04a1-4bd4-bbcb-c96ce3666dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c74502-c868-4c57-a20e-468fa4a421fb",
        "cursor": {
          "ref": "16a611d6-b799-4af3-a181-0aeab0692906",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0f02be09-05f7-46d4-8f9d-9bea0fff2081"
        },
        "item": {
          "id": "16c74502-c868-4c57-a20e-468fa4a421fb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5f5e2653-e6d0-4c7c-99e0-15a41bce34ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f9d78-1109-41e4-97e5-90b971daca45",
        "cursor": {
          "ref": "4e0a77af-1e1a-403b-9d09-ed4a7b0d0e14",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3b0936dd-69c5-4d34-9fb4-7c77927f3e3f"
        },
        "item": {
          "id": "dd6f9d78-1109-41e4-97e5-90b971daca45",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "08aab3cf-cf31-47d7-a545-b62334fb82ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9cf11e-d532-4df7-a219-f0a19257193c",
        "cursor": {
          "ref": "3b404710-8d4e-4eff-9721-0c292a6f5abb",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "230cef35-8901-4249-bd79-d7ff35e420b0"
        },
        "item": {
          "id": "fc9cf11e-d532-4df7-a219-f0a19257193c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "54d294cc-2c16-4cb7-a497-4e1646cb835c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fbb9b1-5f75-4ac4-be4d-9972ef924acf",
        "cursor": {
          "ref": "a1c2a8ca-f512-448f-8b4a-3ee5f27f697f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0dc2c5b-92e6-4cd2-94c1-e07ecadab715"
        },
        "item": {
          "id": "88fbb9b1-5f75-4ac4-be4d-9972ef924acf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fffbc13f-3752-4a90-9c52-cc68ec4ac6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b93cab-03ac-4928-996b-a3d0b02e883c",
        "cursor": {
          "ref": "036a8fcd-25bc-4efb-84fd-567fea56997f",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a94deb75-8feb-4336-bf1f-c6ff7a4ace41"
        },
        "item": {
          "id": "25b93cab-03ac-4928-996b-a3d0b02e883c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3391d366-73ce-4e1c-88bd-75d44ec42902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110adfbc-aec3-46ca-aab4-3b5575070750",
        "cursor": {
          "ref": "796f25b9-e0eb-4d9a-87d2-885e3aa0a163",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a65052b8-f10a-421f-8700-36bcc5c1f759"
        },
        "item": {
          "id": "110adfbc-aec3-46ca-aab4-3b5575070750",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d2ae60aa-a089-4e51-8204-21efefc92b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be200898-f91e-4559-bd67-185c6d8cdb50",
        "cursor": {
          "ref": "8f4da2d3-407f-43df-93f1-c00335254cfb",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4f62205e-d4e9-46e7-8d2e-133eb711cb43"
        },
        "item": {
          "id": "be200898-f91e-4559-bd67-185c6d8cdb50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fd310bc1-af10-4cbb-992d-f80442df4fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b813cb7d-38b6-4baf-9176-f3d24ceeb81c",
        "cursor": {
          "ref": "7f814862-3f31-44a6-9a39-476c12910ee0",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "96bde606-0f57-41ae-862f-84a92e374f0d"
        },
        "item": {
          "id": "b813cb7d-38b6-4baf-9176-f3d24ceeb81c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3a9e3aa3-4089-4927-9d65-06d8e9ab8c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9256388d-7804-4945-9048-03cfbbb243bf",
        "cursor": {
          "ref": "1b711da6-c219-41c6-8e7a-9e57eaf7bc31",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "14a1edbd-7f06-4ed7-9863-c3fc75068431"
        },
        "item": {
          "id": "9256388d-7804-4945-9048-03cfbbb243bf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6bb57463-843f-4702-baa8-65eeffad72fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab4530d-dc00-4cfe-a1ac-55dcca52898a",
        "cursor": {
          "ref": "88b882c5-1ad9-4caa-ab7e-63c41da1a273",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8a1716f4-a8c2-4f38-a24d-e3988091834b"
        },
        "item": {
          "id": "eab4530d-dc00-4cfe-a1ac-55dcca52898a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "43729605-3933-42ef-80f0-2b0b322088f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3123051e-97a4-4bcf-ac74-f6cdbd0b9223",
        "cursor": {
          "ref": "b22b63cb-fecb-42cf-b8f7-311501dde135",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "be688fae-297e-403d-8bcc-25454f9750b4"
        },
        "item": {
          "id": "3123051e-97a4-4bcf-ac74-f6cdbd0b9223",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "722e2cc9-8a18-4c82-96ac-1f62c51f4a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0361f863-7122-4ece-86d7-0736e0a6e9b1",
        "cursor": {
          "ref": "a8cc6a76-0ac7-4b97-a1d8-a99c668c4525",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1c1670ca-de81-4104-b1aa-952a12e44c43"
        },
        "item": {
          "id": "0361f863-7122-4ece-86d7-0736e0a6e9b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0b89ff43-b897-439e-8f67-aeb039000392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ac6ef4-4c38-483c-8b80-f39bce62c78a",
        "cursor": {
          "ref": "9ecd385e-c355-41d2-bea2-d03b2c7734c4",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9596c2a4-2169-4a3f-9d89-35f1f8cfc14b"
        },
        "item": {
          "id": "62ac6ef4-4c38-483c-8b80-f39bce62c78a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "159a876c-a38c-4c87-9534-7080b2bfa7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc7f146-be1e-4012-9b06-f36d7baaba2d",
        "cursor": {
          "ref": "c4c84648-5a98-4bad-854b-edcf404aa82b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d15ac14d-981e-4205-905f-d6c506d6cde0"
        },
        "item": {
          "id": "7cc7f146-be1e-4012-9b06-f36d7baaba2d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5c599722-7937-4425-a51b-bc35043550d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e448944-ae93-475d-ace9-eb8740d93df3",
        "cursor": {
          "ref": "6e30a0da-1bef-499a-8288-148e9d3ca75f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bc0ba7f5-c459-4f2d-8a65-dfd2943e2329"
        },
        "item": {
          "id": "5e448944-ae93-475d-ace9-eb8740d93df3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "aa621e29-f39f-4268-be7a-65eddb3ffb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e5e3b6-35ec-45da-90ca-b591d9aea02b",
        "cursor": {
          "ref": "9df1e693-a2c8-43ec-9a44-192b645ce142",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7c062578-1421-484f-87e3-83fbe103ec2a"
        },
        "item": {
          "id": "e1e5e3b6-35ec-45da-90ca-b591d9aea02b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fff0dc80-e792-4ed0-ac41-ed14d0535829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3704bf9b-0b36-4ba3-937a-07db02fd119f",
        "cursor": {
          "ref": "5fc83d3a-22e5-4eea-8676-4901c8f7e596",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d6510136-6545-47bc-bf47-6ccaffe33c85"
        },
        "item": {
          "id": "3704bf9b-0b36-4ba3-937a-07db02fd119f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9975ecd4-4e95-4e4f-a6b5-184e45216ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6567be39-5fa5-4a09-82a2-972a6ea3b3d2",
        "cursor": {
          "ref": "6b0920d8-ac86-448e-88d9-1e2c42b91125",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f6958f44-3f41-4adb-958f-409c01027a9a"
        },
        "item": {
          "id": "6567be39-5fa5-4a09-82a2-972a6ea3b3d2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a9b6cee3-3f9d-44db-bf6e-54be00eb957e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aa387a-e58e-4020-b4ce-1300d1019b25",
        "cursor": {
          "ref": "7bca0f7a-ce0f-4f61-bb46-88459aa738b3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7398b95f-676f-4dc7-9943-8e16c19a1c2e"
        },
        "item": {
          "id": "42aa387a-e58e-4020-b4ce-1300d1019b25",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f18eb666-3568-4cdd-8b55-2529f180913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb100baf-0190-4b33-8602-bf3f3e3d08cd",
        "cursor": {
          "ref": "238c5c0c-7a36-4b80-b91e-d6cf9001d37c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a1f6276b-77b9-46e7-b6ca-e499de5c79d7"
        },
        "item": {
          "id": "fb100baf-0190-4b33-8602-bf3f3e3d08cd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "123ab983-abc9-4a5b-a1f4-17fac6a933b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be50bf47-5e7b-44c7-88ae-d8ca12704567",
        "cursor": {
          "ref": "751cc043-53d8-4360-8e5e-4701597082b2",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb14bfb3-9af2-4ff1-ab2d-97feb0f4e8a7"
        },
        "item": {
          "id": "be50bf47-5e7b-44c7-88ae-d8ca12704567",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "95e56820-364f-4c1b-9331-0607c1f04916",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 472,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353efe17-a68f-4b7d-85d0-8b903e55bf01",
        "cursor": {
          "ref": "d546602b-35f8-4055-85a1-3aa9191e0526",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9c9d9ffd-8c7b-4e65-a419-5c6db06c1771"
        },
        "item": {
          "id": "353efe17-a68f-4b7d-85d0-8b903e55bf01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cdde2c6f-064f-49f6-9ac5-e928a7522bed",
          "status": "OK",
          "code": 200,
          "responseTime": 528,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3abdaf-10ae-4968-b3b7-4a190b33d3c1",
        "cursor": {
          "ref": "86bd958f-8e4d-45b0-ab98-d432e14cf570",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "81ea6558-708a-42f4-b0d4-38218c252630"
        },
        "item": {
          "id": "eb3abdaf-10ae-4968-b3b7-4a190b33d3c1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "37d19509-4d5b-4747-9c8a-b32eaa3268bb",
          "status": "OK",
          "code": 200,
          "responseTime": 1963,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "48260b9a-f637-4fd8-a265-21351ffda7ea",
        "cursor": {
          "ref": "f70d1e8d-f957-4026-be80-e1e59d03886d",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "aaa87cd6-e651-47e6-a6a1-6684593dedbe"
        },
        "item": {
          "id": "48260b9a-f637-4fd8-a265-21351ffda7ea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "65c652a7-704a-443a-a2db-9dbd5d4695ac",
          "status": "OK",
          "code": 200,
          "responseTime": 1731,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa7ffc-cdb5-463b-bee5-6fb2c7edd369",
        "cursor": {
          "ref": "66dba54a-c119-4511-b326-ae94ea461ff4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d73068a0-17e5-4cd9-be58-0f023b93d787"
        },
        "item": {
          "id": "59aa7ffc-cdb5-463b-bee5-6fb2c7edd369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3174ccc0-6ad1-48a2-8211-03d6eef8bcf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa7ffc-cdb5-463b-bee5-6fb2c7edd369",
        "cursor": {
          "ref": "66dba54a-c119-4511-b326-ae94ea461ff4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d73068a0-17e5-4cd9-be58-0f023b93d787"
        },
        "item": {
          "id": "59aa7ffc-cdb5-463b-bee5-6fb2c7edd369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3174ccc0-6ad1-48a2-8211-03d6eef8bcf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa7ffc-cdb5-463b-bee5-6fb2c7edd369",
        "cursor": {
          "ref": "66dba54a-c119-4511-b326-ae94ea461ff4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d73068a0-17e5-4cd9-be58-0f023b93d787"
        },
        "item": {
          "id": "59aa7ffc-cdb5-463b-bee5-6fb2c7edd369",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3174ccc0-6ad1-48a2-8211-03d6eef8bcf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f76333-ed85-49e6-abe9-e2004c316662",
        "cursor": {
          "ref": "fe57a93b-eace-477b-8f70-d756cf20935c",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "04f31c37-b87d-470b-9e58-2c48693b4efc"
        },
        "item": {
          "id": "63f76333-ed85-49e6-abe9-e2004c316662",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "705e5e26-1744-4d34-873f-b5957a25384c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 473,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242192b2-e746-4c20-ae2c-0f9af6704317",
        "cursor": {
          "ref": "cd1763c2-ff3f-4c64-916b-1425dee3fec6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f4d3f316-5831-4e13-9dd5-fd9f09f6d1d1"
        },
        "item": {
          "id": "242192b2-e746-4c20-ae2c-0f9af6704317",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "08244bc8-d764-43ea-84ae-27776e274be3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242192b2-e746-4c20-ae2c-0f9af6704317",
        "cursor": {
          "ref": "cd1763c2-ff3f-4c64-916b-1425dee3fec6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f4d3f316-5831-4e13-9dd5-fd9f09f6d1d1"
        },
        "item": {
          "id": "242192b2-e746-4c20-ae2c-0f9af6704317",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "08244bc8-d764-43ea-84ae-27776e274be3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea43c5b-065a-4a7e-9a1b-53586bb5d5e1",
        "cursor": {
          "ref": "7cf2573a-9ab8-4e40-9b91-da7c60c23dcf",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3e9b0960-e98f-4a31-aa03-fd83844d06d6"
        },
        "item": {
          "id": "6ea43c5b-065a-4a7e-9a1b-53586bb5d5e1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ec57444c-15e8-493d-b528-c997cc710899",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 684,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f909f9c-655f-46c3-9b1a-f9aed48b491e",
        "cursor": {
          "ref": "ac152440-e7fd-4b92-9a10-764bd579d9be",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b0e15270-2242-435f-a626-ac25c6f401e8"
        },
        "item": {
          "id": "7f909f9c-655f-46c3-9b1a-f9aed48b491e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1dbde233-6b5c-4806-8746-cc468eae85d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f909f9c-655f-46c3-9b1a-f9aed48b491e",
        "cursor": {
          "ref": "ac152440-e7fd-4b92-9a10-764bd579d9be",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b0e15270-2242-435f-a626-ac25c6f401e8"
        },
        "item": {
          "id": "7f909f9c-655f-46c3-9b1a-f9aed48b491e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1dbde233-6b5c-4806-8746-cc468eae85d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2f8c43-4c1a-4fb1-8fc5-7aa4b3313082",
        "cursor": {
          "ref": "d3a1b5bb-a21b-4260-aab0-ec1a0e0ca3a5",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "541f0f5a-6f5e-40b5-804d-7691e2195fd1"
        },
        "item": {
          "id": "9a2f8c43-4c1a-4fb1-8fc5-7aa4b3313082",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2072ffdb-c5d7-48bc-bd7c-b38abcd4eb32",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 679,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}