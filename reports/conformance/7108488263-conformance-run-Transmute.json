{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "169e7398-735d-467e-95ff-5dca01346ec2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3a58a045-9c65-4862-8146-1b01ac840919",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0be4fc6b-ee77-4936-a728-d907ce908b38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "34446d69-1d78-4dd8-bc8c-a2ddd912b21c"
                }
              }
            ]
          },
          {
            "id": "61e14b09-0c48-4d97-a7b8-09d6a3f977c4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0014c135-5691-44ac-a3d3-5987d1ffc6bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f86272c-62de-4c17-a6b1-b6927ba8ea1b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2b49958b-fc28-48e2-9ea0-589758de450e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d6fa8675-1d4e-412f-91f2-82adfb64d509",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd43f038-4d75-40a9-9555-419d578d2015",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45afe4a-1538-4b01-a102-ca4c85317ba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ceccbd05-c170-414d-ad01-16dfb53f8c95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21565fd7-1068-473d-904d-389923455788",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e8751ef-0bbe-406d-bc1b-db57c0dde247"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "114db431-ee48-4d28-900e-831ad7e56478",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1919ed50-07be-403d-8190-2d8eb704d703"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "312cdf79-86d7-483e-8bb4-1fca3dbf74ce",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "db1eaa0b-bb2b-4ccc-a8e9-7f99c3c931e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ad43ca3-8b29-496c-aee8-5babcb6f984e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "405a3dbe-a4c2-4323-8e10-290359c015c9"
            }
          }
        ]
      },
      {
        "id": "2ef5155a-03e2-425d-93f5-ed567bf405a0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4a589724-7de4-4c51-a3da-8f87f7ca150f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7317c01-5fa3-4e96-9f26-8c444992b4fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98302905-87c8-4f95-b71d-f118e3f8b747",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad294b9e-cc43-4acf-8427-d65dfcd4d80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f964df7-361f-42ac-8558-6a0f4837e3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f88c30-6111-474f-8bca-c416383a373a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b701714d-5eed-4a2e-b337-11f9cbaad9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc55ceb1-bd39-4674-971c-c3a9527f74b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c50ed76-5e7b-4ff8-9538-376f9e8d1625",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa1d9f3-e3a6-4cb4-850a-c6459a663dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58be2185-a148-48a7-9785-6e1249676edd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8458361c-12e1-47ba-93ad-57bc3caf90d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a5246bf-f497-45d9-920e-625b92cc95d9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e30a84a-28e9-44e8-9394-39e8ab168d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9157acd2-5d91-4562-9fe2-5bfd5ba9095b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5688159-2a49-4cd2-8a86-5957188b33c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c15ef3-5847-4f5f-9862-fa9cfc67bf83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e6a414bc-5f92-487b-8ceb-7fb682e0b204",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fc3dd8d6-af21-45ba-ab39-18cec1a4ad87",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65c185e2-b2f8-4a0a-ac0f-1f2f91c44afd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b054b092-2c52-42d8-bff8-65aa44b1ed21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b30c1842-96ab-4b5a-9733-a468f0b05ceb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "60780a0d-2d09-455c-9f3b-be34af9c3b11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1030943b-01e7-4b37-b09b-1462060683d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "351f17e8-94b8-4068-85d6-d1dec7627e99"
            }
          }
        ]
      },
      {
        "id": "8f365e4a-d187-4f63-b5ea-e0ad5c9cf948",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "34f1a74a-5df7-40fd-a9c6-1c229bb7623b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9babdd34-5b25-4a57-a747-47bf63567d38",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f0e4350b-bcb8-4358-ac11-9232f8d30f6c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164ec924-217f-47fb-a4fe-1d65cb09ab31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8e28bd-47e6-472f-92f0-79a157b2d6d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a04e958-993a-4bd9-aac6-31609ec6b02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70efd653-2bfe-439b-b9c5-005e409e8563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef17b49-fa92-4b28-8cc0-5347317eb1f7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444bd445-5a18-46b7-8ae0-61c77f8e68de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c01aa29-d061-434d-9fa2-888874bcd6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc3d45b-d475-4568-8cfc-3396fb1a19bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5efb346c-5e5f-4cee-a61a-c306c43a1f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1e7846-2157-4af4-8fbb-af1f6e47e289",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e928b48-ce96-4f09-895a-10cc7637aa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ba7dc1-b250-4194-baa0-cf8d7cb9f152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d2ba93-957d-4d3b-ae25-fb4483493169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91fff5f0-db19-4fea-9798-a83da431e1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d7f9b0-aae2-462e-a2cf-a6a35fc68114",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f91887e-15eb-43ed-9a90-f7a875bc988f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5755db7-9724-4379-8ca2-5b7df072de87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0e3f12-cc9f-42a9-ba7d-cdc376d44897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "325c90b5-6b06-4a21-a145-822d71f16e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940168e3-1055-405b-9c98-baf854c16491",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589b5fac-c9cb-4457-b656-81ea7138e944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc36df8-277e-4dc3-bc30-c7e28a5639ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cc1670-68b9-444f-bcb1-a38dbba00804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a847fce-6eed-4d17-a4c9-18e935a8e27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8544ae-e45f-4632-9ddc-2a720c80a929",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc1b925-7f09-4a02-8524-86c5ba88ee14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6d6202-a722-47a8-95b7-eb520694d655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9f92cb-2c4f-48da-bbff-587fc2c1cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c222ecc3-8d35-4a46-bfc4-37813dc3c232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2a6fbc-f119-47ae-89dc-7081a6c266b0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efe3dcf-594f-4f26-b254-f581e99fbd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1561cf-4b5e-4d2b-a1a3-34083b4ea453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60eb05c2-9a9d-4067-a0e7-07f90b7a2a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9848421-c4c6-44db-9106-0397a811ea66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d22d43a-59e3-404f-aef7-a967b866d46e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec4b04-7e2a-4de7-81d2-e88a69905f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c6ca1d-9d76-4c33-930e-e6583a09bef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17688628-7fa8-44f0-8014-6a0b5aeaa407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c1712a6-b0c1-47ee-aa5c-2fe38e8c61f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acc9228-0985-475e-af88-62ce6c3f5dd7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64d5616-8c9e-4ed4-85ea-4f122a8298b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35273e7-7ffc-4574-9277-a5689e3bc754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd933cf-2563-4f5c-a890-e660adfe91fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a3a8505-16bf-48a6-aa54-d15af47d34cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2606fd-3172-4869-ab25-c95192074018",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe0b79-110b-4275-a4ce-0a28d160205a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79200f2-75b5-41c9-af2d-a9eb27a3509f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ce4dfc-ed71-41b6-9255-e4edc4a9bbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f634002e-8dc9-4ad2-bdb0-252818169b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169f9efc-0dbb-46a4-a46c-72af364efd63",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94037df4-2374-44bd-ba34-2dd29ebcbc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f947405c-d63f-4c0d-b436-9f8254392190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184e2402-ab9e-415c-ae83-204c8c799a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d73f5c48-64f1-476b-a0c2-73bf04c603f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67087c31-fd86-4d33-a27e-5f3c20db42ab",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716988f8-af42-4176-93b4-fa921b5e9ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b434994b-ff76-4113-bf08-866a3408dd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d1df11-1b64-416f-90cb-be93fa4ca8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2714b7de-3c8b-4dcd-993c-a84ebdd90f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbb417c-e109-450d-952c-be29b280bc50",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e533fa-26b5-4649-9063-44d64b75c614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ea6ba8-dcfd-4141-8a5e-7e96594effa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7262e27-e931-4efe-8527-dc0a6225ef82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d4e3703-a444-4b3b-96bf-d9f1e5632ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396e9dc9-8e51-4d3b-abf4-d368e375911d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a0a6ab-69f9-4bde-ac9d-631a31433bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc18794-0ddd-4aab-96f4-9fd4c348891d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00e555d-d9c3-4e1b-82c9-f44c48904c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ae8851d-154f-4fc4-9413-5dc94adacc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9525718-4336-4b7a-95c8-677be03f1c17",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf834445-3f07-44d1-ad9c-bf53c3c11748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c61a2c-ff20-484c-8f2d-de7f82ec9db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f92f800-71d6-4de5-898c-a5e8978c56b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee093915-2cab-4446-acde-83b07c1ce34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c2034a-a020-428e-80e8-5c7c4a254fe2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc7b3ff-f2c2-454d-af8e-ed22ed160b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8dbd1e-2184-45e5-8084-cecf58e0d93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a739a62-6ac0-438e-8a8c-57ae044f10e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e6ed65e-7bf8-4cae-a9fd-9f892ed1cf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7217f7-f7b1-4e6d-99f9-f6bb4698a418",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf96863-5d5d-47a0-bcb6-289b78979532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd2a75f-4d3b-4e3c-b1b8-cf4dcfbbb174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6223cc7-0424-4403-ab3a-1f7e1b3c1587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb86d5dd-2b4e-4131-bd5b-cc1b9148612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805176f8-a7e6-4d40-b00d-4a344a2af940",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144d55d4-699c-41a5-9e1c-720d311a0726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23b3c7fb-2c31-41a6-a8a4-5b24d9dc9a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7398c2-f89e-475a-ba34-665b6a8549c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de44dce-edc7-4683-bb76-2e3fcf27aa7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c446436d-08fd-4f7f-98ae-a471378d375e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eaa682-afb1-42ce-bee0-2306ee3fbd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48241f18-ffb5-4c4b-a13e-cb006784973e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e697a0-748a-46c6-a2ac-bc1b46205a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9eb62f7-6fa4-42f1-8384-7886e14aae9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4187f3-7ca7-4c3a-a994-c37a3ed7938d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07866a5-d296-44f4-b1f7-9d0bd5b50fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8054514d-cca0-4f8e-9be8-815070ff31d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5add6c43-fe06-4369-a03e-31e9b33013a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5168d75f-dee2-4fd5-b985-be99c99348f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb1240d-9ec4-440d-9733-a009edfd2a5e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbf3b0a-edbe-4af8-a10a-cc3112daa5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e153ced6-3d2d-4992-8e3c-3ca3b03ad097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72902dd9-a7e7-460f-adc7-80f7b358f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54451eb5-bdff-4ad8-8227-d3bda8f28e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ca1adf-5227-4855-89de-a16559ffe683",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74799f2a-0fdc-4c03-8c73-c95813554253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d777fce0-bf5d-4a21-becc-5bd4de5fb8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08526ce-0c97-485b-af74-0ac4de8532b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8670dd93-38eb-432d-bb61-b536e676279b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdd1e34-819a-4089-bfde-9c4dfdd30c60",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae660d8-ed9c-4000-bd91-b4df7747f372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3338fc78-0d6f-4b21-a70f-733f0ad9dc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e5e583-8915-4dac-8e49-14a68172b2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e472aa6-66ce-485c-95fe-89403f5a010d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7f5752-9ba0-4f35-a0c6-ca76b337b39f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b2dffb-7f41-4564-a3a5-1dae9d963bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d03a73c-33b3-47fb-b14b-447675938efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1784107-dde0-4364-a311-34b9663ca119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc7fe7b-6514-49c9-b143-7fc4b33529f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e86454-624f-4f10-819c-04dbbf2d4395",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e104e0-1b8a-4dc6-a690-4ab219de437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dbb318-6efe-4c9a-ae1c-fce3333d0ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed12b81-7edb-45e5-8006-92a46cbef514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58087487-6f4b-4881-b2ed-e5704046c6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b284469d-8ce4-4f4b-96f2-3ab22af25824",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfa8d31-38f3-4470-99b6-3b12e263bab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9664ca6f-b0e2-4a2c-af5e-ec64a04b6dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde057e7-70f3-4059-ba5c-903030194246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c020f1ee-dbed-465f-bb47-69e8c7d36b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3a0a8c-b1c4-4f0b-85bf-1e31d6d74bc3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adab4f0d-034d-4068-890a-fb81a78e1581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439c1075-978e-4c22-ae3f-0997bb672f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4789b4-ec57-41a7-8ea5-c38ddde21f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4b023d-3b78-483b-a489-3eca01e41de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08083806-8099-42e2-b352-def1ebf80ea5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80457671-34ca-4486-9093-f05a2f7fa2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e4e676-caa1-4214-9170-abe266f406dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48613ffb-92c0-42de-ac6e-2260741a216a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "481de6df-9603-43df-8ebd-03350ade5948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6188c3-243e-4307-a254-a30397eeffe9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab888509-a058-49e9-8cb9-8c7595ff414e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a510f7d-c5d3-47da-9f56-6bbd2a441fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61ca2f1-1e8b-4b36-82cd-7a65023cf80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2acf31b7-0f1f-4c80-a2f0-8266ff67852b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb74bffe-0f69-475c-a03d-242f3f712c10",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c063bce-9d58-4abf-aed0-e1956b536b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371fd99d-ad98-4d48-afe4-b1d26934c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dfff9f-d84d-4814-88bf-a05e746f3fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cabe3fca-1884-4779-a1a4-2a3e6a5b03ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b0bc95-c850-40d0-927f-2b261103d390",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17e80ec-c4a4-48fb-acd8-56701a3feeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b970dc55-771f-4cc0-a191-49172cf65e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f24adfc-9395-4489-a0b9-74f06e78ab53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48c6866c-86eb-4de7-a5e0-f647078685dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e6afce-38cc-4d8d-84e4-98a5453e7d6d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6469cfb-3033-4933-9fa6-5cce90019325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16b4a7b-5b90-45df-a93a-a17c2a3d99fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f792c-2642-40d3-af46-4ab7c2397aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "037c643f-807f-4fb7-812a-8c682c0bc777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3364bce1-8fa8-4207-970a-01e06659a2f3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f882a3-17ca-42e7-932a-3e71c8edb3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a14aa27-a70d-4740-b609-cef71491c6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de8fc5c-1679-4d12-95ae-11ca5a118dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98b958b7-683c-42e9-8932-30f614bf3adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72127688-7e08-49d6-a160-b8811992901c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a95246b-54a7-4be0-8fe3-5372a305af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9522b7-58db-40e9-822b-6bdff394db9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3556d806-fc28-47b9-9d4d-e1b044680274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c706ab8-23c0-42bc-ad45-aeb427875499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f73cef0-7055-461c-98c0-3baf48299348",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504ac2c1-1a94-4523-a25a-a94ce175eac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fe805e-3ce2-4bce-9acf-fec27f730e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcdbeec-858a-4026-8b1d-a82e383c4ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4cad48-d49f-42a1-966a-6d95debc084e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ce384f-e9fa-48f3-86a7-0aa4f6c7b391",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d542c-abab-4498-8467-4143f8abac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49c40703-c637-4b86-a864-52593bb14017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f65ff4-237c-4018-b159-ffad6a2117b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be8323ec-1605-450f-aac0-0d825c0ca596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed13ee38-a498-41b0-abc1-65cbfed92df4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3f3712-02db-4cf7-b180-dbf863689368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf21383-5fc6-4ecd-8550-cd6d7f2c980c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8391077e-3eba-43e5-b87f-b4dd4f3127c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ae16d1-6dc9-4f02-9f05-f3c3b6569fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a305997f-4827-4db3-8e8c-efef8acfee91",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba39237-5390-4a20-9a4b-9090eb0d23c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd5c3d7-7061-4712-b86a-a6c4d9639e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328263ae-9cb6-4f9d-9871-c5a379c80708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92fc236e-b5ff-4126-a6c7-5b180847c996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15498230-9805-4dc2-8aab-50b4995e8227",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dd4374-bf6a-4100-8e61-5274d41add44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09c2ee2-1af4-4513-b344-bfbe76e90fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0d3b36-914b-496f-b675-60ca40b5e6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e67d367f-5207-46bd-b05b-17dd1fb25b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb2c0d6-036a-4150-a5fd-c497d0eefa0f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cc7d1e-8e68-4d20-9813-6dc6f207f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f2e78e-cc5c-4772-8ce7-a8e2b8dc13d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f304d2-0aef-4a6c-be56-c530b117ab5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b68ffc48-b955-4f09-a883-00c05d475d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10d614a-a795-4531-bc4c-a7371fe2daa2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f838c5-7283-48c2-81d0-7e44360353ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed056859-f416-4160-9380-b7c727452b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4ae894-08fa-4669-8c0e-16b7054ef2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc843cb-ba63-4d5f-b407-77b283848cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185d1b69-15db-4c68-bcb6-d383e9367148",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a746f85-dfa6-4e97-a671-71edad4003dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ab91e6-3ae3-4f21-9717-b3de474b19d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f873e0-b2f9-49d7-956e-4dd8c4d2ba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "798d6be8-d9aa-44df-b282-8c4768e77fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef95fc4-1f3c-43f2-9c31-5f1d9309a238",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d675886-f618-43a0-9c96-f0c2a15af87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b54e999-1a2e-4e7d-a899-a54a1957ae3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90892050-12d2-4afa-b01a-63dbe869fe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b96d9af-be0e-4b1c-94ca-807ca75a78e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c2937d-fc42-465a-92e9-5ef9982d527a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873bd164-128c-426f-b380-4b1056a54b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3179ce-a205-482d-bf47-13128f9e0c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1a6137-64ba-49ad-a57f-4ebeb2b75c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "02fb26e5-244b-498f-a1e1-f7bb63fc1b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e419c8f-5d79-480d-af93-9afd0cd034df",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1099d2ed-8cfd-496f-9d2f-8822f934d0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af83b23-31a7-4c27-938a-96537cf5f196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcad427c-affd-41e0-ab91-d11114455714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2969fc82-9be2-45ef-89c7-2fe82fe430d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d331566f-d4e3-49f2-93fd-019fe4be310d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3257cfd-ecea-4baa-ba4b-826957eed606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f52d38-0a73-416f-8191-1deced84c68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9284728f-d64d-4a83-9f24-9a23a0066f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83cc81ef-5cd7-458e-8ecb-0231316dd655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789644fa-1399-47cd-9a61-934e814ea29b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36519ce-a28b-4965-b1b5-033a1b98a09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bba1409-f41b-4eae-a6df-3f72480ed12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398e5cfb-3289-47e2-9718-0104f9aa5502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdefa418-8935-492c-b2e5-409bd7decf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03538cba-b378-4449-a30c-7dc0755981b8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694e77c8-a39d-4816-8985-f3cb5b8d7efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254f0b64-9cb0-48c3-909f-dd8bf570b1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc04334-bff3-49de-8812-a4195cc1ea4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15a3b9dc-7c2f-4c75-b6ac-d3f85fbfb882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1276f7-66eb-4a32-9988-3c1df1e1a80d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069d16a6-1fad-42c5-959e-5311ea64f21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99f3c15-45f0-4355-83a8-6863383630c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52e0fc0-8ff4-4c5e-8221-58ccac24e0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fef896d1-ea7e-4b25-be32-5949b6b93536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576aa6dd-69b5-432a-a970-5e86a059115a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f001f5-4819-4e50-9e6b-f95378e2e382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f47a18-25ab-410b-a6e3-73be62a21495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0850c4e0-4fce-4bed-9f58-2d97311aac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01615d30-1f1f-4461-bb3f-d35d738b87b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecc0328-9c74-4a9e-ae0d-e35a71b3b080",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61dd473-1c42-4f9f-8962-da5647922d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb050006-1496-4f2e-a6c3-0b0f80afa196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4a8cf0-b968-413d-bdc7-0a41ca7fbd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b95883d1-aff2-448d-b8df-7bea562ff9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ea8e12-15f5-4f1d-bb4d-a11d5fe8ff32",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39cc175-5637-4d3a-9664-fdda7b581a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f097124a-45b1-42ba-8a88-475e634ae9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ba1f0d-8b9e-48b3-8204-0938eb547603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "037d1810-ff3e-4e15-b52f-6f5e9fa567f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4586f5e-1471-420b-8bdc-bcc5186612ae",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853648c-e57b-4321-aea9-3981bb770120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12edbc0-ce5a-41e8-8789-e027209cb1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f928f89-835e-4bdf-a9c0-587b5e0550a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb199960-be1f-4a65-812a-c73bf3b89dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f86a3b-b6e2-485d-af8b-16cfa1ff12fb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6884bbc-422a-4d85-9479-7a41ef622804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f8a231-752b-48d4-81b5-03a2d14fbfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f43f87-e85c-404a-b99a-2efda00882a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a90d72-409c-4de3-9886-bdb899957e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c77e530-8bd1-409a-b3d4-20fa0e4c9479",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab082231-a6c5-46be-afe0-0896f3d8ff91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e4d344-5eb3-4367-88b4-625a06c9e933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d218d397-4fe6-49e0-b7cc-4bb3330bff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beac54ef-cc9b-4388-a8a4-3c5c388f0752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1397536f-a341-473a-9f42-21f93f9653bc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffea10d5-8cd1-45be-9a37-15edcdd91105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cecb24-6c23-4abf-97de-a6ca6095c162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9a3592-306c-494a-82cd-84ee7c83ebe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7f251f-da9c-4424-8c0c-e55ec0fa1381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1920b34b-1e43-4d93-8d98-851d8966fa9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5267f3-ab49-48ea-a92c-48f30c9559c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3a0bf9-88a1-497f-939b-06496c28c9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01bb5af-11ae-4b02-8176-b25640cde7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "20ddcbf1-639d-4717-a1b2-4bcc96690c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f132009-e3e1-4d2f-91e5-6f3828054489",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189cc847-2c17-4175-9711-00ffa5cc3ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12ef654-4f67-4d7c-81cd-33175c2a0b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfffb41-e644-4b0f-9f79-d089eb513043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0edd40-8523-4c99-9d86-f27bdfa55293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0846572-8791-4fa8-b79e-57c904caa63e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8992c86-0c2a-4288-bcce-9ccafba4713a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1952ead8-2946-4791-8cef-4dbec730e1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0f15a5-c434-42e6-a4c0-23f9c41136b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e1e2cf-75b7-413f-9181-0a2c68367a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1775ae4b-a7e6-4a96-8c51-b741b0dd43f9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41755e6b-0396-44b3-a03f-4675bf4df6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d944d9-4f1e-40bd-a0cd-5fbbaf122ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d08c5d2-9245-4114-8c6b-eb1d00506bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef2c85e-e6b1-4304-aa91-ee418f3c6a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0371c4d-7873-44eb-b6e7-a40ba3377a56",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6788daa7-933c-430b-960f-1e7765697ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baae1afb-5a0d-4437-8f76-a8124383948b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7959df31-c3db-4493-8d9a-996a7464ee80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "048d1cb9-38b3-4f76-8803-8b734d5e5f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6419281c-fb05-46c3-a7d8-e697bf254f07",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86d8121-c2a1-4183-90a8-fe4beb9292bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "021fdf0b-c736-4174-b109-51b3e0fef60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8367bb3-858a-438e-ae2e-2d436157fc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f31ff39-d9d4-4d96-839e-849bf247dd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c53495-c0e4-4861-9fe0-da8c73412c9a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0245a588-eb7e-4dba-bfa9-b0c7465ba04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa1f6fe-3ed2-47a4-9968-3b7f5f7c68a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94456a81-e825-4c43-a63d-6f1999e3db4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f90ca8-a356-46b8-bb6a-677cb0aaab6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1066d3a-b257-4f28-af81-e5b8e7007b7b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e68ee08-942f-49c9-9f0a-e4d91599abe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e636283-0501-4861-b3e8-42b1ae6ffae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf593e7-f3f2-47fe-8e4d-6e72c0f3b91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b4e3da-8024-46f4-9fd3-309d1fe0d24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee8c2b8-8d50-44f3-8046-102e67e608f5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8f705c-821a-4876-8f0f-c54d55f11bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b9d096-9aec-4566-883e-af3f2358c27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858ab1b9-abe5-4508-8184-75d5f39ff171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fdce52-9106-4386-ba7e-0b5a07e83dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5ef7bd-d1f0-4571-b6d4-0a807fbd2657",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c244349-bd01-4740-8ee7-3954fc642f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b530c57-9c4a-4164-8c29-9ef447a5ea97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70f9738-d02d-45aa-8533-d6ef7a43c682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e21392fd-2858-4142-aa78-1e7dcbe88dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f7a546-a43e-4ecc-89f0-253c8a8ae621",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2662113-5f7a-4ac3-8f83-fdc72e366553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b198c01-916e-44c1-b26b-2d5553adccae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f411814-8a02-444c-90cd-18a37282afa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90066643-7179-482b-9772-008ba667bfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba26b51-5dc6-41b2-836d-2dca68a5b95b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2b2ba0-569c-49db-9e9c-6205f9d4d930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca40467-c275-4e6d-8a22-665c770a8aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a32b78-9a30-418a-92c8-1b1df313f5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "90415f28-72c0-4811-a21d-df16ddeb35e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c338f2f-7996-4ae4-b08a-b9a0eb5609ea",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88424238-fd11-4389-b5b7-f91bf4217778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff41651e-08f0-452c-9f47-3ba40a74cf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb83951-722c-4253-aac2-a073966bb5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "faca7848-b51b-452b-8be6-c9567c14fbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a559395-2bfe-4906-88fd-cf70b7a29d0c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a71769e-f325-4875-8e82-a8fdadcf6b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8adc56-a726-4877-8035-4ad3013c3a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa34242d-d7e6-4107-a0d0-687c18c99995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f557dc4-ceaf-4ec3-877d-5765befe8a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc12d9cf-23ae-4ad9-88f4-599944dff2c6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b58147e-4e95-4760-be1e-cb4ebfa067cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "404c36c7-ce80-4cd8-b2b4-7171074fe9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5317e532-bd6f-49c9-a484-5f3b8b153d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da4c6b63-6cb9-4711-b86d-bc31937b28a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54288eb-9c15-4e01-b193-55259247d1a7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af15a965-92ea-4b0b-a433-ec45c3a094ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54949657-a876-43f3-b930-008ccdd32354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9149ee06-186e-42e6-8c5a-2966c6d56052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a4c409-2b32-4902-b2bf-66a4b4811266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbb6b95-aa25-42e5-9d2b-7acc6bb369a6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdc0492-c7de-4288-9667-15cd4dabf607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b79e60-1451-4095-8507-5a31ef8aa340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280b1b74-887f-40b4-8c48-3a6a3d6efaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13dcd086-6417-473f-ad65-a791955fccd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dc7392-4d38-4f2c-a347-da77c058ec5d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ee7f80-0f10-4c26-a855-493be0c2946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901aa07d-ef63-4835-8766-945bdf37c0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee46f40-a95e-495b-b775-d596063a09fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "215ab73e-88bc-4893-a74f-9f405e67b326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31541592-b440-48d3-abc7-3c989593d123",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7300c061-467f-4555-968b-cb11bf9e4c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2edbe2-3d97-41b6-b43c-9b6498a76a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c87116d-a1c0-4525-8eef-e4ba2f2b91e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af4da920-98bc-4c7b-99ef-3fd0daa51169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b21c5b-52d1-44f4-bca5-e939b20cad60",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724e88a8-2ae8-4dd0-a6b6-a4614419902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296ec86c-0631-4427-aa78-ea13dd290d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f81a20-c7d5-4b86-8caf-d7d6ae131e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e10cea-038f-4c00-82e4-e8958f291511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910e5beb-ef7c-4bbf-a52a-a4cacb036051",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b97c08-d2cb-47a3-b745-a17948ddef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc1d08c-2ae5-4d2c-9899-6633c3cecc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7696817e-6744-4733-9527-d9c2faac7a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f6525a-7cf0-4329-b6d8-a5a3b97e32ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3eda50-0a13-4431-b173-b7ac6df0a5e0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d558d1c6-a8e1-4f19-ab47-3852fb39e60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e68c2ba-c2a3-49c8-9931-012cd7fb33f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e555e80b-0993-4e28-b6c0-0c514959cd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "427538bb-1370-4c90-8e31-9ba400cc833f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfef3b31-d8dd-4dbd-b6e8-06a230470506",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630d5883-f244-426d-8bfb-a2c1d006004b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15e60a8-73f7-49ee-8c77-6e2052d2398d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec02af9d-8ff3-42f7-b9a7-e1240769644a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b402dd2-96da-484d-91ac-c208acfb4e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d803e746-66a0-4901-928b-89592d7d2328",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9979400-2efd-4c95-8cfd-46aa43d64e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26765058-51a6-4ff2-ba9d-e0a21cfe1e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f0dea5-ee70-4714-a2a3-82936ff9d06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbf5f30-a20f-4334-a5a0-b3f34c208fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87b6a7c-6692-47ee-ac96-7fd718b7a99c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a2e81e-f5d8-45d8-b6ea-3ba3e28762da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542d2d95-7e61-4e96-a1a6-9d5c987cd9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffaa364-0756-4092-9bae-cb53915b688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aaef490-c3af-485a-9ffd-e8dac14cc8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e94b7c7-e6f7-48db-b32b-aaf3aea30a4a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80098330-bf08-41d7-94d2-064a835b8785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfec067d-042e-452e-918d-7ce5d9d10c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ca9518-2f09-46dc-a4cd-f9ab329150a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbef33a6-4787-4a2e-b18c-7fa6d4e04367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce944071-5110-4740-893f-87a0fb96eb8f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c43eeb8-8f1f-4ad6-85f6-07db450470d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955650f8-a38f-4e00-bd0e-7a8e38078dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d88f97-c438-41dc-b467-0a26ebd9a834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df12ddd2-04af-4afb-a064-b707227cc999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f258ee5-47d6-4bcb-a818-ac2bd245919c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240ee9f4-128d-4ccd-9823-a9975e09653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ab5cd1-4144-4a2b-957b-82c3b3ed6015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2418494-fb2c-400e-a62c-900dd83c2216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63716ed-a2c7-470a-863e-c0911dfa1f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d94afd7-4fbc-4de3-bc6a-55949cef7a62",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3645ebf1-6598-4101-a8e5-0d4cb7c20950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8006c03e-10b0-4e22-a533-295f65bc7500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54fc77c-a070-41ec-8eb9-af3bcc61b0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32108559-a601-40c6-8f76-290821b81753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e737807-d020-4f10-a9d3-b444182704ac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8586a9-f21e-4e65-807e-3c4b86ffc6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11019582-1a6f-492a-ba43-7bdaf57112a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6645ebfc-cb05-48b1-97b1-010c1afe6680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbe94b8-aa9f-47f0-99d6-3c9dbe860a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2827a-69c5-4777-834b-e3933a4c67ba",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a79702-82f0-42ad-902b-24ae9330a1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2db366c-b3ba-4f2f-b8e3-5f0ad770aa2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f93b74-f0fe-4144-9b1e-8b9a1d051ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6fa49d-5d0d-4cc3-ba90-447231dcb178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000ead06-dbba-493a-a121-4e4d35611a31",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef83f17-654e-4b3e-b338-127bac924c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a59803-c71d-4b32-9eaf-680e13ab7b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e065c19-5540-4c9d-8fe6-bb7f62d4c23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "deabe0b5-4b56-41ab-b572-6db05f7d2174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16cd4f5f-6403-4e63-9dd2-8684808eace7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddbadff-c46a-4499-8383-453d4633e376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b4fd35-8b70-4604-ab74-1e94f4a5c98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15678c3b-9e9b-4f0b-a1c1-f5a7a98c5053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5670b10-6dc8-46e9-96f7-295c34e9c349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d63973-2ef3-4edc-aefb-718e1e210f81",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4a6f5c-bdea-4577-8eae-57f9f2f42cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cc4b25-4041-413e-9de6-45c56f8a6943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760636d3-78bc-431b-bec4-6bcb7cfd5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d294d90-2ce0-4cfc-b930-ea0181aa64fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a004b7c-3085-4757-973e-e84d99bf459f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd58199-4f21-415e-b766-82d4adfdce96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d635eb9f-1bd2-4f91-bae6-8a27b1421629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f65249-5752-41f8-8f8c-41ff3920bcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "90555b54-46bd-4bd8-b0eb-75d6154ce5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8885426-6fc2-4344-99b3-b09d9a0e1886",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd1423e-9250-44e7-a1b9-e74da518ac05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e1bc703e-b48f-440a-b121-d260d859ab71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1f6bdb-14a2-47e6-b070-48f960f81e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "96e9e325-db25-4dfe-9f93-a409805183f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7911c9eb-d895-4355-b2ca-31799d82b568",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c93d311-1ac3-4b53-ae74-d5d9d084b164",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc82793-2bcd-4758-8bd1-20a66dab7f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2f22b92-8f1d-47e5-9211-e10e98d7bee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd65c224-c0b1-4800-8bd7-fe2f3c6cc259",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "664d529c-b64a-4677-9396-452ba515bc87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "251e9058-5120-4d13-b4fc-8ddec7ffa0f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eaedff5-e7ce-4632-983e-f558ffd2b20f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22312a1e-95eb-4f98-8020-59480a70af81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73737cba-22f1-467e-bb30-2f29e670a198"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6bec1421-1e21-495c-94c4-af516c3e173d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19f3f220-3baa-418b-a9cc-cbf11ad43879"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4afd8bfb-5621-4cd3-adb2-5c83a73e9761",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f732b8c-3b84-4dce-bbb0-33cfddf25e4d"
                }
              }
            ]
          },
          {
            "id": "1042af37-1ca4-4329-a1cf-4cfecd25e979",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f524c3fa-5b00-4a42-a1e9-4ca2899e60a1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a0ba495c-e2fe-4232-890d-e5da076674a8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7033f1f-aa39-4a7c-9ad2-0633f722a47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fb46e609-d030-4bab-9008-83e7b4e34f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9fa1fe-338b-4640-be5d-7429163f39e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d653b0f2-6869-4033-ac5e-a939259a011b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "430a0044-7590-4171-989f-eba360607dc0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "076a5a24-37ba-4521-84b6-484ae9724706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b93c594-dbbf-4058-ac4f-744be6075975"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2244f400-6651-439c-9b2a-8de07012a339",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a91d2b46-c73c-422b-9c50-77e4a198cd81"
                    }
                  }
                ]
              },
              {
                "id": "548bcbaf-b942-46fe-8511-f6478e8009bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b740371-8e27-4343-8d60-88ae31f85f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed34ffad-b2f9-4e55-a252-5fe2eb95de3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1cede89-5a19-4633-a06e-30ac3226f70a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7bc93753-b564-4a65-8ec0-3c921aae2ab2"
                    }
                  }
                ]
              },
              {
                "id": "623d0348-238f-47f7-ab64-f38b996f49d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "106874f4-bdc3-4b70-a42b-cd2bc91beb86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d25ebfd1-c431-4ce3-9c9e-4c27a44e19f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09225845-47e9-4739-bf47-0e7816b7753d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8794bba7-aa55-4e86-9943-2402977894f5"
                    }
                  }
                ]
              },
              {
                "id": "3d35a750-92d0-4a0b-b89d-bac881ab9899",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "724ce748-e244-4ab1-9534-b0f14d3af0af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcee3be3-2abc-45bd-ab83-9e6433a0b3ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b903c08a-f510-416d-ae04-08cbd8d9d228",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8be0301d-4403-4110-a44e-58c844dca9a4"
                    }
                  }
                ]
              },
              {
                "id": "ad2fc7bc-77e6-4568-ab27-c69db3265f79",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebabc890-c76d-4a85-af52-328f1a24d457",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94c7089d-19f7-44ad-9433-ad8b632d3671"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6cac337-7070-402a-9e93-289f3bcd144d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fbd34b5a-6409-4840-b215-e0a7d8d48be5"
                    }
                  }
                ]
              },
              {
                "id": "631e4e8c-4a32-4052-bc7b-da93986c154e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9fe90fc-33ac-43b8-91d8-e42a77439080",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbeb322f-63ef-432e-8844-89f071268389"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2421d35-9e1e-408a-ba48-c34af80eff60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2053df71-8770-403e-b2af-a3863c83f2ed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc273580-e151-4bf8-9254-6d3fb0bc64fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be71428f-13b6-4dec-8341-100723f67bc7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "201fd383-05f0-47f1-8074-40798ab8be77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b973225-48c6-4e76-b9d1-2b408f34fc34"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbe70d3e-8fb3-44b5-b034-9c6d100702f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "843b787f-154f-4790-92fe-0ee1a55f21fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efebcdbc-8171-4751-a278-093fa28e4035",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e21cb75d-8693-45cf-8bf0-f08650438938"
            }
          }
        ]
      },
      {
        "id": "75b0f9a8-d283-4bf5-82e6-c50a623c11d0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "79a79bdf-73d2-4040-abc6-f60427df1244",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7428a0ff-56b3-43b2-ba18-549a511e3f93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76488e86-2058-48bc-a5ca-2f4387b78286",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2d1ba7-88cb-4e71-a5d2-41671c201a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52b9aa1-023a-427e-8808-c6a52dea71ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6480e7-81d4-4d3d-9e3a-0feb13e368fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b4199b-d0d0-42ce-a54e-0d255fbfcad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7775ab-355c-4abb-a9cf-1fa3da51b96d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24af4314-c230-4b25-9044-fce53496d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a24708-9d4f-4954-bbf4-0d1d61b6e972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab54b31c-8f87-44b0-a944-a00fb3398a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c54b945-59b8-4a7f-9473-4e06e2228e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1776eb8a-de07-4bae-a817-d57aedc5a6e1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e46e85-2128-4f54-837a-7eede4abc47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6316a933-720f-4572-bed1-7c017fdaa495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ad5580-cef8-4b50-a08d-0aa1fc278fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe275ac6-9e68-4c4d-b4cd-1ea4ee51b22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0dd4d1-cd77-4b3f-8791-524d790af4d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c55f066-2ef3-458e-9b8f-86913b0cfac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00865898-ad6d-4fc0-b9ff-f46a3cc2bda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a582d36c-09fc-47e3-8ecf-b0db50955918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ce4e2b-174c-40e0-9f4b-5fb87fa13745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228554c7-9eac-497e-a6b5-2cfe58f05109",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91db0bb4-3b5a-41a2-97b0-44fa6dd871e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440ee3e3-353a-47ab-90c4-ad2808927e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d917ad-8521-4955-9d05-f188997616a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be8d5d57-bcc9-404c-ba26-63e5a6c94aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416e66f5-c6dd-48d9-99ea-0138968a8d4e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73824db6-339a-4371-bec8-e15898053b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fbac16-09c1-46e7-9955-5a96a86e321b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8d7cdc-3434-4503-9bb5-b0cb533e4e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3be1751-0ceb-428d-a32b-d0a593e4267a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43362a3-59cb-4aac-bc1c-b964c2b9d60a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1182910-5765-4af6-ae02-4f910ba8c3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0ee662-fdf7-4960-9b0c-cee3cca2b619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a667e0c0-7d6d-4be8-b8d9-1762470f614a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af5b4bb-ab20-4b47-babe-5a20429faa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7b20aa-7e33-451f-aa63-4dfbb5d62727",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a91137-e45a-49a0-b654-7094be9498f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f443a764-8b6a-48a8-85f2-e3c0a1e16922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b9e897-4af6-488f-ac81-c668b75c9015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0823f1e-ebf8-4544-9288-157146c27830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22db451-337f-4d49-869c-b33fac062048",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caf1738-80ce-4892-896b-4212d711b344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25a4a6c-72e5-4d36-a048-bfae6f07cf8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac2e3c3-d4fa-432b-b608-8cbba65a1790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1075bb6-4c22-463b-b2fb-3ecda1b18bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ca45b0-5d02-42bd-92ca-fa2db82a9363",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d079e-87d2-4cf1-b389-17235eea4236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ce9b0c-87b8-4a4c-b4a0-e238bf12d627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257c8cf7-c8b1-49de-952c-9443475f8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "526307b5-71ea-41b5-8d84-a7e686114681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa4c210-0379-48ce-9cdf-945550096ebd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d04018-cc9e-4380-b548-044ba04e36a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86518b3-2af3-4216-96bb-5782bf695eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c88db5-5ddc-49b3-86ff-687d39869f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1799ab41-17a2-46bc-8cb1-c2ba4ff01857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7593a42d-aa93-4eb1-95ec-358c40cbc2ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea594276-ad5d-432b-b0cb-392e633e3781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e76afd0-1ebb-4926-9cc6-8ecb16e93fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7016dac4-823d-4749-9a8d-89cc29bfcc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f18fefa5-d2a3-43b4-ae72-fce6b60a25a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb2750-b8e4-430a-a4f0-de3efb7e4bcd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493953c0-74ba-4201-856a-116864220b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce36d06-9478-4678-9d9a-56ab5b397c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bae8699-2018-462b-9f99-b8e6525d2bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e295db7-bc94-4fbe-85d7-584dd0d12a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8ac087-6e4f-403a-b457-6f62921f8ae2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd771b3-c7d0-4b02-ad4d-ab8d0750c7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1179a8c5-8eeb-45ab-865c-83e4f15b42a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ee0c5a-8148-4fc9-bb11-eba2dc00d4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6027fe-d168-4dd6-96ab-aafaa2dc1dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2731810-e309-4417-9662-c2cd36f34550",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444bfb63-5dee-4961-9a6a-e924aca05ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1869e59-3845-4975-8dbc-93e4fb041633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6a1d40-5d2f-4c02-a925-74bd2cb1f10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cf3afe-0c28-4d2a-89f4-3e79663d2664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0a55bf-feb7-4054-b441-249a4fd127a3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b4eaec-caba-489a-9dc1-2bfcbbd79b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8cb381-9d86-4dc2-aecf-2a3d9e0872fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcb6a92-a2f2-41c9-9aba-aaa1904a3e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "83fe24c3-c002-4683-96c0-228dc3ebeca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0eee56-6d2e-45f8-8308-dfb6aa962a22",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2729b72f-103d-4807-a6ef-b1bb61e6fbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb29778-88b2-4a2c-8751-afb3479f24e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1ef724-dcea-40cd-9160-72daa641211f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbfd99a-d03d-4498-99bc-deb5c38e70d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381ee62c-1cee-4e8e-a00e-046f7d3b9be0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15afbde-25bc-484e-9495-6e9189f5308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf80a631-4af6-4e45-ac65-737d24241d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3b370c-02e3-41c8-844e-c0b6e210c21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f160d1-98b7-43b6-a047-aa82c1b90480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824cde4b-4e1b-4e74-af7b-98eb056daaff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a180bda1-3872-4bb0-929b-f1d26734407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c852f8d1-fc7f-4fbc-87b7-582fcf8694fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b15bbf6-88c3-4aec-836c-41b5cc3e7e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "981326ef-f876-46c3-b99a-358259a22c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e320371-8647-4f86-8049-a1fb6416a8d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62832485-6a00-426c-82c2-9dcfe9fcc725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cf2c1e-d082-4bbb-a2c7-11daf00060fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1efa68-dbf8-461c-a0e4-090fc884b612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b48f3d-1efd-4110-a8bd-e662f16c2e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aacf88-f72f-44b5-84e5-dc979f021b11",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b564af-7301-4bbb-af1e-52b6ab22a44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d322a51-c973-49df-93ee-40070deaefdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7e30a3-4c6f-4d98-84b7-709c1274d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cab7bc59-e6cb-4d26-9961-020fffdf0849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62085e4-c44e-4af6-9261-e8024e84d8b6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d16230-bc5e-410d-b31a-73e8237f08ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679066f4-5e5a-45e3-888d-6b17f1892021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b4069a-da1c-4d19-a0df-7d35c7e16cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a82957a-0ed0-4b53-92f1-3b57a76ca195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1a6d1d-2896-46fe-b263-30624c7b67a8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d03e73-6a39-4c82-a92e-84d9528a899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cdbf7d-3348-4693-b959-dd7aefe29267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43294d3-8eda-42e6-a968-949684ca9673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd952606-6409-4497-aef7-67253e02c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b804d-e7f7-4fa8-a4d8-b689c8b65a72",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5bd488-1b81-4b72-a4f7-77df4682c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736ab16e-2b77-4328-908a-e190251aa79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f624f2c-dbb4-4392-a495-885f4362630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd21b769-9169-4702-b434-da711d132f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05beb1f0-2c82-40ff-ae87-64228338a15a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b89c531-fcfb-4491-bca1-7000da3fa56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cdd0b0-deb9-4c62-8fa7-ff5d2e84e4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d791c611-c16f-41be-b714-591891c67bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68c285e-11be-475b-9318-96a21aba640b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75129312-1d4d-4a6b-9c09-fdf526058770",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54c2a7f-b0fe-4d15-b816-df17bcf61d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81610ed-072b-4d3d-a0ff-bf3d01eda7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad22726-019c-4149-a593-2c5ebe4a49a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18dc1f13-ec39-42e1-ac8e-1f61b837f3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd55605-5723-43f9-a6bf-024d4fbddd14",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84624545-0068-4967-b99f-3a9a1d31067f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544d6364-dc67-4abc-94c7-dfccf1b65f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafc06ce-66c6-4129-b710-fd86a954dcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec40d2b-4240-4eb0-a7de-e95ea3e919e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3ec143-edc7-44c5-9f8f-912b50307c51",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63eae28d-64de-4c3c-b21a-24f6b689e88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74fd935-964c-401f-8154-5d98de292fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2309e449-a67a-43e7-b9e2-2736a42d255b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d29be4-7483-4200-94c4-0b960999971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e003009-4b78-4d93-b34a-c4568b2a95bf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37f1261-a574-4b22-8380-0e0c6b3aede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa1bd4a-efab-43e5-96e2-ab58dd4696e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd792bbd-a0f2-47a0-9d67-c35ade5550d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbe2e89-3d2e-46c3-b18c-b37bbee003ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027f694f-a52f-4624-9eb9-c6ff488969e1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d8082c-8e57-4b25-a5fd-c5713913e7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7742ed-426d-4e8a-a24c-52f6a54b61c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f60c97-667d-4c75-8fdc-8d1a4d7d345c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9bd3a2-892d-418c-8a86-ec2f4c496da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42821b89-20fd-4064-8fad-b466f820f0ff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f47a6f9-cea6-4dee-a27a-9bb92dddaa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac8f479-dd55-4119-8500-4d1f7d7da882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e6bebe-ecb0-43bf-b6b4-2d2c628965f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6b56ce-8cd7-48e9-b555-a7d528a77f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c100ee51-548d-4edc-95bc-0dad59a77d25",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a1733a-8efa-4bfa-92f5-768838c1981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4e2108-e394-4f21-8e3a-10df12a705c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6af7ffd-05cd-4d02-8acf-c7ff867b6b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf59f801-bda1-4093-8e17-af8288bb837a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6b791ff-4107-46eb-a007-a01e1bcba140",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "928c20fc-61a3-463b-b33f-f529cb563af0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a133c24c-c49b-4b90-9193-b4d3466a6539",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "74015142-18fa-4eef-9abd-da1a8af2d75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e1b84a-2aba-46e7-a133-b32a68e855fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2043022-5693-4aee-84a8-73beb7e3a663"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f94ea3f5-9518-486a-8d39-e9f2f7061454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbc4d9e8-8b1c-4569-b223-193ffbfeda32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "faa8deed-4c66-4c66-980f-030a6b814929",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f51c621-394a-4302-a492-bc56a7cce4c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d39c38e9-3e73-4839-a717-897ec7a987bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6cfcae7f-1d38-4f10-9902-da5eb01ab89f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8003c4c-09f5-4d5c-96ce-0bdc4ba41597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bf6978e-41dc-4f4e-955c-66e148d783c1"
            }
          }
        ]
      },
      {
        "id": "a761bec7-a2d2-4f69-909f-e52d37bad4d8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b23c1280-d4d7-458a-992d-bc4c2c35affa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edc1f2c2-721c-4cd8-bf4a-e47be6972777",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cdc46d1-b72c-488d-8e96-dbe90c028d9a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38623ca-7646-4bc6-8ae2-1676e81cc771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081b6f06-42a0-4a40-89e3-6c3deacb886a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1925f8b0-41c3-4c61-99c3-562a6122c76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d79f235-a37a-40cb-a476-d530ccca79d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ea401f-9eba-42f6-9a2b-b47fefbefb6a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb87441-32e5-4abe-9b8b-d2ec8f1ec29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50520aac-ef1b-4583-afa3-76c2fc3e862f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bdd17d-3ff2-4e60-a0b0-59c94e59be2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8514877-d006-46d8-8348-b8f9fcb465c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5f394d-74a9-4d24-8d01-47974ca93707",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054a58ba-93ed-48b8-838c-abb9107089fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b703edf-9be3-4e9f-b7a2-0a8424b165ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e88beb-8fa4-434f-84d2-e181efb2ec9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6daefa54-ba7e-4db4-b382-3a4c3de56792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d03e7d-34b5-49dc-9967-b701effdc837",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902c5dcd-5597-450d-9b31-67352f6fc480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e79dbe-a576-4689-b853-2419113cee1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27aa237-f76f-4c20-978a-f5ededaacf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c96e1ea-886d-427b-b340-36d90f034a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3277ae8-e000-4e59-a615-35b46685140e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7898e66-9365-4f12-9c93-fa9ff37aac11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db52bf62-c7ca-4954-b48a-13f1bbbaf4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f6db02-0231-443e-8456-a13f7e6d62e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e88503-f3e2-4ccd-9e89-7b5ca886824a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3985b8d-97bb-41f4-9bd1-f20da0ea7818",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d97364-85a6-4d83-8013-99010d1b6ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3eeed1d-7b2f-466f-b907-c530573d06ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aa4b81-b606-4e20-b6e1-4c7fa73e2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27973183-b710-49ce-bc17-d146ecdc6271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7dcb77-17d6-48e3-91fe-ddba2bfeb7b6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46eb3b9a-b385-489d-92ad-d3fe7d9e0003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebabcac-e5c2-42b6-9410-9cd8797a54e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5947907d-81bb-4dd2-b9e9-8d5c2b3c546d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8408ed-ede4-42ea-b7ab-851871fab57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f1fefd-621a-43b8-ab3f-b510dfc7f99a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3c94f3-0b9d-40e3-a5e8-2d34a6185d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dadfa5-1b2f-4222-af85-6dce95a1a6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83651dc8-0844-4c36-a2bb-c83aa05d96d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2490ce23-9c96-46a3-bd7f-ae7d24f8c002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7e17c5-741d-4d55-a4ed-e93f4a135710",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d979b3c-6834-4c36-bb78-67549e0214da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efffb66f-7867-461a-a45a-f35216df6510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820c5651-d9d2-4938-887d-742e146c58cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63cf95fa-ec99-48bb-ac9d-5841f33651d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8ad0ba-fa8f-4b83-ad51-15ede4ddbf5b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe3beac-3075-45fe-a14e-03f0f4560036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e78cae-8b6a-452b-9406-6031c3db91d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddafd94-05e0-4250-adf9-5520218c38c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f64ea0-654d-472e-bfc4-0ede55cfe97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ede3637-5286-4c5d-b4f8-4988dc74d4d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea164741-5963-460e-850d-0ec4dd0a3c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afaeb84-72fd-42d2-8924-614d191638f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ee2662-ef19-4d7b-9519-600f13cb1281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e11498-9f7e-4240-abca-d97577d966fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b934cc-de8a-46cb-8041-2533a241b997",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639f7627-6f69-42a6-9384-a0eb798e8f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbf00eb-acd5-409f-a99c-3411ff0ad6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe483b6-ec76-484c-bb2b-42559cf0cdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90a79daf-8bbe-498f-b8f4-2487ee6ed913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca377bd-5d98-4f42-af67-de5dc25d4fdd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0899249c-a961-437f-a899-e924f79a73fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf4f9c3-3c6e-4b45-aa9d-277eff4a9a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cd7cd4-0128-4eef-b98d-6d2106d653df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "554695bc-0965-4158-9573-8d3048147493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a447088-7bf1-4c22-8186-03d727a86c1e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b366a7-ed32-4c78-88ef-652290efb65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e68102a-1016-4201-b1dd-7ebcf4419ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97aca503-3147-4e28-a2d7-ea9064b0d7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5ad532-c08a-4548-aed4-38a16577539d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813d4cda-c402-4e84-93a2-7e4b1091a9fc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25680ed7-77e2-48dc-8c55-e54c97201eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84527d22-a112-4191-9939-60504fb593c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c9ac68-a31c-41ff-b9cc-d97b7a774a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1232a81c-7fbc-4155-8892-770d1df1af05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da215e4b-4ae9-4ad9-a8f0-839032bc6221",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae80c665-84ae-4fc5-85e2-738f17bc5108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8810c51f-497c-4090-bffb-6f5e15a60dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96b764d-52c9-4a66-84e7-48c558f99b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf54eda-24a1-4672-b448-4431cdc88c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e184f1-07a4-4ef6-b939-654b9d92a2e7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9d7e29-9834-470d-8291-8edf777f8245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856545e2-f871-4587-8100-a531b338a913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4497244-f907-4c57-93b4-377ba6db6ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0adf1488-6501-42e0-9220-71f2c905ca01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23adac4c-1584-4136-96ab-6aea73c3bff7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5969f6f2-b8b8-41e9-8960-e9c19fb96903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa08533-fda7-419b-9cab-131301f57767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa27116-3290-45dc-881b-7a37b54e3d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0823e68-3072-4c00-a61c-9ef856f26a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b237d0a-9530-4b6e-afb5-4d0efb75e6af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c53b8f-65a3-4248-8d79-23877f70f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cad570-b208-4bf0-b08b-462bce1026db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf787dc1-2ca3-457c-9bef-fa7732dc1536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a43e6c1b-0ea4-4ce2-b11d-526ae3910640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181b0de6-90ea-4bc7-9b0c-e7147aeda889",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8836551c-a06d-4926-bbb5-2ac41dc95bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f63eee-f0c0-4cf2-b1b9-245b00769c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0634b0ee-d4ec-42c1-bdd1-19f5cc60f4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4906b7bf-a24b-4c81-b57d-26820f064532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ffec7c-2bbf-47a4-9d6a-ad2566ef3214",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b339bcac-32d6-4ecc-b4e0-bba91287fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b632f2-8c35-4825-b4d9-bc77b70ccdd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c9ec0f-7a22-4116-ab81-f8550be0bc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f6cb36-cd6e-452e-b39b-084b69e1b798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b21bea1-c13a-4828-b782-1e78d9705e8f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42550245-ae5d-4510-a1bd-730e526f538b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51fd50d-49ad-4b39-bae6-79b42e269726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a52653f-2392-4133-9a95-1913047c5b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f880fda7-3848-47af-ba96-ced5718448e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c98f34-de46-4a2a-b08e-833feb48807a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5a849c-5454-4b14-9422-025a01d81406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d59dfd-7a30-49cd-8466-f25affbef594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aafd2ae-ab34-48a3-93bc-13cee2a5286e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ec215c-673f-4f2f-8919-924c9d7aa3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c63159-2cd1-4225-b62d-7bb807d5c74c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ac5da4-2caf-45af-8a85-163dc22286e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2e5373-5986-4d53-81c5-283384e050b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1066872-853d-46dd-95c6-fc5a10db5d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6808e2e0-701a-4a10-9fba-ed8280ced41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa078cdb-5644-4d91-9274-ff2943269c0e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d39796-efbf-4787-882a-10f90cfd4b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cb3185-7218-44fe-9822-f35f9e9bae38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23a2e63-e9a3-4990-bf17-3cd9536d38ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ca6cc8-1a40-41e3-a6df-a296a074b922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d5ab24-5162-4c7e-ba04-c9e117635c79",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bf1dba-b676-40d3-b04d-99e0cf8b4208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3149016-d530-4da8-9c55-c24f0933aae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6370ea5c-7b63-4a82-83e5-b8048976dc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f542e01-bf89-42d5-8d4d-532fec18edb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a995bf28-9072-4b43-a97d-98d816823060",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf2cfb8-7f9c-42c6-b3d3-aa38d400a737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3184e0-b65f-4699-951a-01673e9f39a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c4d9d-e9be-4ea3-9698-b41e031f1650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7389af9-f9dd-4f90-9bcc-afe10d2092a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b18f5a-580e-4473-8a07-ddcc6b060275",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12571c6-3ef2-4f64-84b1-af0806b2b3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9cbb02-9c30-4c35-8f9b-7313bee77442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be25e1c7-c177-49b1-8320-1dc4ff8b00b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb59b70-5ead-4bc5-825b-0f0615635967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e66b49-bfc8-4b6b-aaa9-53c1dfb5a0bd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bd8fc1-baa9-420d-a1d2-19388d7da22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73872eb-461e-4f6a-b618-f99d39f42497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659b28b3-fba6-46a2-846e-3d6a6aed9439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d27721-417a-425d-bf60-c3567653fc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d52f424-3ea0-465f-b8ba-8becbeccd375",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17635f3-d131-4d4f-bfc6-55b11e300cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a68693d-0578-4ad9-b35f-26b28eeda0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5647e76a-0164-4d40-a907-87d72415bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f2605c-66f3-438b-8581-dad402af967c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c7ea96-e7dc-4a92-be5c-26d1be3b98f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64547662-f80f-4513-bd1d-f0b2bc22bb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3767e0e-6006-472e-916d-c1e31d6d3281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bd4cec-5da0-4ca9-8a79-c67c9bf20f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fce1d78-6927-45a4-81ce-106797368a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6584b806-2fc4-4886-941c-c6188a46892d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1303293f-fa6e-44e1-a509-955f7fc6ba55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca598b4-4090-4d44-af70-dcf691d74601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfa2b53-b026-4e62-b1e0-bd780f9e36ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff71c15-b08f-444c-a3f5-e3c4b30dfd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3eac4d-53bd-4f37-be76-0f915c348011",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caacbd60-f919-4962-a250-e63fdbc71be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953c6e15-4e02-4b25-8631-9cb1b3766d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee2edb8-d928-482f-b4e1-7101e4825cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cacdef4-7b77-4b0f-9147-cded8b1ff5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb32cde-7e61-4ec8-9f93-bb20c12e2310",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b039f74-c2af-4793-98a5-48c1f813569b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b7b6f1-6fe9-4a9f-a07d-83fc2b2839de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2e5cfc-7a8c-4adc-811f-b7357f2f0353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b815c659-b329-403b-83a0-ed949ee7c14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9937d804-3baa-4fb7-9f02-01f213225ae8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ace457-90a5-44d7-b62b-46538d14b4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa3f07a-f894-4822-a876-068d4e3704ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba17d648-e179-4e3a-b117-24b4c4a2263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0277e7f-1713-4c83-a417-61cc7dccd4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee2c05e-4263-4ad8-8342-4cc6db3a1853",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc6a8f5-9dc2-4753-bb52-93e1ce523cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df8e49c-64bd-4c79-aeb7-52dbdeaa2b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428a2da0-f1e1-4c76-b26d-76b53ab54ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbdad92-aa50-4657-82b0-c07ec5fb0209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f741c5-48d4-41a3-a817-6aab16b7b748",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8954d3f0-e2a9-46fb-b9dc-4ec40f6f834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b67e6a-5c98-4c1c-9c38-093c09b1b123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ab003a-08bc-4aff-86ad-47f2fb2f6d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133d5857-4dad-43b6-8122-7b807fd28efd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5af67d87-0ce9-4d04-ba6b-789b486aff1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d659ea57-9b44-4a44-9fc3-d66536718f82",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b88a21-509b-4a85-b056-16957dbf12a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "33cfabfa-f885-4a8f-8252-3fdf8497859b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ecf29d-9b97-4195-89fe-8b0f30b7335d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "369a2868-cc35-4ea0-b9bf-7b3f062e597a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6343886f-cb88-4ed7-abfb-34c15764f318",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14ef0dc9-db76-41b5-bdc1-03b6326a4fb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82b84b72-ab29-49ed-83d2-daf6b6de7e46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13323b96-604d-458b-9ef3-fd2755adad81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6952b9c1-cef4-4309-a3b6-7dfbb96de43c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7357f72b-c133-4cc6-ae20-9adfcecc51f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3322519a-219d-47fc-8ba1-4fde57b95335",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6426d3e-3e8c-4515-87bf-6b52c8928abb"
            }
          }
        ]
      },
      {
        "id": "9cf36e54-a520-427e-90e1-851731671f0c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "645e8181-32b4-40ba-ac81-0f76fa256719",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b4d77fe-0a4c-4c32-b690-10c83da4fb75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "269f52e3-26ec-47ad-89cf-7d907c96553e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2517e476-408b-4a5c-9845-466b5cec7030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b9ee15-2622-4018-be97-00eed163d5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eecaf5-8c7a-4892-8df1-be4bcea21e8c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e67ba2-af6d-49dd-9c92-89f70150800f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889a0210-22ed-4d2f-bc11-dc854e0a83f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1ce580-9c24-4ee2-8408-4d574867344a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8b238d-61ca-41f3-83af-653e42f86f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adfb734-3f82-4c6f-97e2-3a2fe56a7792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b666a0-92b6-4d96-88a0-3be0975e0a88",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458731aa-b31a-421f-a038-793dec22e216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a06c424-0ffc-4c17-b526-63aeefd78ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2dafaa-c1d3-4294-a931-7cfbe06148cc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74d4386-7324-434a-a007-ee186d4bf9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b947a0ee-e35e-48e2-ba43-45b91a78ccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64246827-84ee-433c-906d-f183c993517a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14118507-297a-4dab-be5e-dde9b2d541df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c950dcfb-1b32-4988-b91e-122d7cd57b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa30b67e-5010-43e9-8567-58d505fd7213",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbb9c42-6632-4d73-b253-e543b1b5643a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7c7e58-8135-458c-b66b-7ceebae39764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612f9a63-4f7d-4cf0-bf36-19bdd383b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e84c259-9126-4063-974b-eb0e3c9525f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2513fa47-09cd-4fcd-8156-0bc15a6ff0ec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c46dc9-50b0-486f-80e7-a220879318ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61fd87f7-9134-4b60-b54e-5a9be5317962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a6f157-f08c-4373-86a1-1a900bc4d8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35acbee-e9c6-492e-b818-18db1c450aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10c6421-a493-4cb0-9699-b50b30beb8c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe86143-3be5-41fa-afca-6eabd100b7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c104e6d-d31f-4209-9c37-690c8824acbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8d6bc9-d2b1-4fae-8810-7fc6d54acdea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096a04b8-8e11-48b2-b3dc-79f67fd54a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d75b16f-e001-4197-b855-9d053d520bda",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5c6177-38fa-4001-938b-d94c03aedd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29893e15-0f1a-40f6-9bdf-c92cd0cb735e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e1cfb5-3352-40dd-b67c-0178899851da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b940db5-0443-4e12-9380-cb82ea859910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c1090d-39c5-41a8-b29e-20f04779c909",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4f9bb2-b240-464b-a11d-8efcb61ad6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f842d23-2000-4480-aa8a-5558099be026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5785ffd-bcac-42f0-97fa-6cc997eb9bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d603db3c-5c77-4987-b945-0afde69ffbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1574ca-0e11-4d63-8369-e267f42c133e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dfbf8d-c458-4699-aafe-18bc02929d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd452e02-9420-4483-a9ab-e2368507051d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cded1f-2674-455f-ac8a-20dd1fbc8155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d8f575-c9bd-47e0-b69b-e893b0d76184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba86c39-08c5-490d-913d-2a145257c478",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ba3787-9713-4143-81ed-2a2a9265d5e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a210654b-59eb-4452-9cc9-0d651a6cb09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb42ff6-aca1-49d2-a949-943c7e740700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af58b9cf-9d55-4e71-9bd2-477215a936ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911c2b4c-74f6-4eaf-9504-d1a17f847e05",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fcaf14-19f4-4068-9ffa-8aae0c4649ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0491e4f3-1980-4f59-9f5a-432f5de9c571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91514d1-c6a7-45b9-8df6-47664bd054b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f692d81-5af6-456b-b057-c394efebe3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3070eec-f1fe-43bc-80d3-6c131057c8f3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0870e5-002d-45b6-a5d7-754724f73be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f87faaa8-4225-465f-a82b-31d2928fc6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6705c928-34da-44de-8deb-7af59146d156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3021d304-b07e-4997-939b-9dc85949e9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a8822c-ea9e-4b2a-904a-8bb4cbf6f2b8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da83ecc0-de6f-4075-87d8-acca8390d77d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c283c34a-cf09-47b7-a225-acbb2c4d5725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9bdb66-e887-4ea0-b68b-334ef43d7607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f782960-52ed-4f17-bf7c-d9a809e52414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f779185-88fe-4998-8b55-ec8f41af6d08",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdabe1fa-4991-479c-a580-e4fd5eaadf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98172402-9c60-4223-9ecc-5119a0a13752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458d528e-6cf4-4dec-bc90-677a65030e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a52fbe7-7a71-4f1a-a41c-ce9bdcd15c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3b57e2-a1c3-420e-bb1c-d59ed8735f95",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fe1397-2959-4eae-b79f-6c048809ea6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8a942c-841b-4405-9011-a132c839de52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f66de4-9d53-4f35-80ee-7f193833531c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7025ab83-1c1e-488c-b926-fe80172222e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0f95d7-0e3b-47d4-8db1-ebf0d115309e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fabe5e-3a80-4e59-ac5f-4b27f52cbf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de984dff-34b8-4f0f-9b56-4affe918b318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5364c337-7499-4963-b46e-b4571289f8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cd5ab2-21dc-43ed-9d00-09de28ab756d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfa9319-0a70-4fc2-9291-635a08029183",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0467bf82-b8af-434c-a947-24923af56437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e090c306-47b5-44ed-be12-8bd400a5ff02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4af1ad-5685-4815-ab1b-0a11aa9a9d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddac54d-cff1-4c63-8064-62c4557e06c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e162a05-58e4-4a65-9004-5a4ccc3e589a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8d004f-6fc6-4688-95a5-9a05f26df4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7698664c-6831-4205-8b28-da4ac1fd6a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1544031-07eb-4984-abbd-3d2239aba8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f704903-81a6-466d-872c-adb7c3a49117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28272cd-2d61-4edb-8bec-c83e280d5981",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd3bd2e-2285-4ab7-bc0e-0a0535315787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a93d0aa-30e1-4388-bb1f-334c18e2c6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d76596e-6898-4252-8037-e650562c5f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e8eb3a-bc9a-400f-8b2a-5d2a61c2cc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ebfbd7-d4d1-4d46-87cc-4c720682d184",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15043bb-6fd7-4816-9e1a-d7e4a828af47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669715ed-a388-46b0-958f-51be438dd645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6149776-09e0-4ca8-8dc7-b68af030e844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186b4fd7-8cb5-46b5-a104-535e5c0e588d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e684e36d-c309-422c-b4d4-8713764feb5c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98073cb-341b-41bd-90ae-92a87e42421c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed68bf0-4689-4b53-9ba4-a0d78d611a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4351029a-92a4-4041-a0c5-71069b3c31a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe51af14-9b5e-4f71-b80c-648679124c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019ed828-27e0-4cf4-9c0d-eabad6a0eb44",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2057cdd-05a5-4b3e-a5c6-7e94ac5f0b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbeddbbe-6063-4ee9-918f-3f0ef898ce34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5192fa6d-1523-48aa-8c60-eac7143f2007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db09a58-4e56-480b-8267-69712ccb8b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fae8f32-cadb-4e62-834c-b2c7f1c83847",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb56a2-e168-4fea-9769-02714caaf385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7faaa1a1-5e52-4f65-82f9-a34095cbdcc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec58f4f-c804-4189-9c05-ac747fc91ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cec358-1996-4279-9c7b-f8a2a6603e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6318996-3479-40dc-b181-dcd73158db91",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064a494e-2e64-42a5-85bb-554d005bdcc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5f07dd-446c-4f75-af59-cf76b1c2f27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3def3ff-80f9-424e-b33b-263a45511bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3722c9e-0083-4a00-b4da-a4be854a2bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e4d228-dae4-443b-9110-774d5eaa5d86",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175938c8-b611-4c7c-9e8a-c7676ee7e71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac56088-0023-4ada-9a6f-1f86fa2a9fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7f21a2-cfe7-4969-b238-839a3b26468f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5d2034-61b3-4b05-bc02-15bf814b11ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b9beb3-309c-4e5a-91aa-36cabdb8df19",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86caf46-b133-498b-9ce3-4edbe1c87086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c92aae7-618a-4cef-a833-270ee426967b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef87bb07-aae1-4fa0-ad0e-2dba74a9a6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59cf235c-24ac-43b3-8720-061fcb377090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455ac1a3-8def-4a81-b56f-a3a0dcffcf7f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eccc55a-6b0f-471e-936c-c0dcde5aa072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f713069c-4a82-473b-b1e4-0bc3c2bc7ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaabc20-0954-4d70-a149-c20754a91f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e9b121-a75c-413d-b511-e35414eabd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5d1264-2de8-45d7-9a43-08e7ee99bc82",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c218f400-1f01-4a69-9783-2198b85ead59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e8cdac-e571-47cc-8d10-d4dbbff695ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f7c56b-a967-4406-9621-8bcd988057a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc24af9-20e7-4849-bf81-f01a1740ab75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc473cd6-5299-4d8c-8944-78ed91db5505",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287abc48-0d91-401c-9362-a40b2c460db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d285965-d133-44e1-82a6-cc48d6483b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7af89a5-ac2c-418c-bf13-6cc3bce5b4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9790d873-1e5f-45b6-9f5c-98855c6199d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cea0171-814a-40da-8130-7e00d8c83af1",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145e035c-e003-469f-8f8e-a17fce159bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b56bfb-2eab-4ed6-8332-6eecde0136c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb4c7ea-8597-457d-ac77-b8277efe6d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0335a908-8e08-40f9-97f4-6fb24f311fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81198e6-249e-4e7f-8974-7d0d487b7889",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b75a66-f7df-44e7-be17-7464a4d8cb9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101fdfbe-72a5-4350-8fce-92ed90f8a7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08afbbb-63d7-449a-b659-0a9ecdf525ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9000a50d-3ca8-4c28-a389-b1a9311a8279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74098ff4-b1e4-43ef-92ed-b63dbefebca5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2cff79-6925-456a-8927-4217097611ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfec7061-3124-421b-aac0-24e12d51aedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c812b4-584b-409f-9876-17e3c5c16949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6479ad8-6eed-4856-a966-b6d7c4c7e839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa01d14-35d9-477d-9475-84933a0ec214",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5962b2f6-559e-4ee8-87fa-d2c18bdddf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f92520-dc56-4bc1-b6a1-fc2f566b9979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05abe34-2d27-4bd1-a57d-3b28a5d17314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f20c62e-bb58-4c36-aafc-37dc0662e3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d2ea96-0195-4439-b2e2-9fa513bebde8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c06b330-3599-4682-9bff-9d7930779d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88030c8-da78-4306-9237-63e3ea962f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbf110e-f9d9-4968-911a-752c138759ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9744260d-74d6-43ac-8c50-f7d5d9a80989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95beed8e-19b1-4f95-a890-e8ef1e9f080b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e5ed8d-7d1a-4a5f-92ce-3dbc0565a5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83370b32-16f0-4a21-aae7-88aa13d5562e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70639455-ea2b-4cc7-a629-8062eb185818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eb1695-8400-4503-808f-3e054b733572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6f977c-2f48-47e2-b0f6-9ab1e2684224",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f6196-5aa4-498d-ab5c-056a4a7e5dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd47ed18-4751-4a39-b3ad-47ae8cea917b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a7b92c-089b-4fd0-b8cd-ee0190d0a859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b491e75-f524-43b8-81dd-6843eb274a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d780f250-be8f-4f31-8177-418ebb4d8df2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7664c5d-35b7-4236-8062-2500bc5f7049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40845c43-5edd-4a83-84c0-f5e11ffcf74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5e171e-d411-4629-9f00-4eae7820d929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b207f2-e266-494b-8d3e-bea73b3a2531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb87a33-0ffa-4e09-be90-0d8bf37eebca",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a959fbc-13bb-4fe7-abfc-2b2497f30b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe950b-8a39-4da8-9d57-edff18d28b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d9bf04-3779-4fe6-879e-0114f5282654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134cefaa-dc2a-4208-85ae-46ec7e7f64e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bde01b8-da76-4c20-b8d2-26bf5846d59b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dde94f5-6930-41c4-a273-127cdb2b194f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049884d1-f946-4cf3-be92-abfc93708712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b337925-2190-431c-a2b1-5960e5907a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b59b952-09ea-422e-b7b0-4373a0dfec80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638f6ce2-db99-4d85-965c-675d9929edb0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20337c05-6adf-4e96-b1e6-73cee7bd5432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d64828-c639-4087-818e-a268a22d5636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a046f0-37cd-498c-99e3-57909196c785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4be27e-6251-4f0b-9db2-01093afa3cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c08c35-7af2-4bfe-b5c2-956d6c428be7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b531d1f-9c52-47e9-99d3-17f48d9436bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec2ed99-f0ca-482d-a7c4-7110fdba7c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f87e14-2588-4a54-8208-344268fdb948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e943b010-47ac-4599-9772-8de310878ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf7fc79-605a-4819-952c-7fa45171c215",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22e1ede-0436-4584-b0f0-3884fa1d4cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e361a4dd-a857-4292-9c64-95a2f9da7ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec4118b-f924-4ef7-9854-00b88c43b3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b54d1e-e235-4d56-a771-72c4acdd75cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c3eb89-4cc2-4ed3-8173-4471a4d00edc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc50c73-129f-4b9b-acdc-685957486251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277a576a-68b1-4b80-a16e-e7ee18820de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6595f0-9004-420d-ad3b-eefb5e1c0cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1892efa6-4de1-434c-adc9-64c6a8a5b8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bec22b0-3f9f-431c-9429-aa215f22bc40",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e179b9-60ab-40ee-bbb1-c65791469024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008cde7c-f8bd-4fae-aa4c-2cb3e7731e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e94f887-3c32-4812-8c89-50c3b3225dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0657459d-6b2e-413c-9dcf-4141d1af32e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7830e7-a511-483c-81bd-efe6463a54dd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0e9164-2e25-4279-a81b-ad94df69a074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd217233-9127-4363-a2d9-ee4d404a4143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6f0732-179c-4038-a8e7-9a75fb306141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a0a93b-e96c-48d9-8d20-b0c09b85a5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9917ddee-08e1-421a-8462-1793a7b2d0b5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbe761b-0863-4a58-b9d8-e3de3b9f0502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10db9763-446d-4731-a3d8-49938c63e052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bdba07-f95c-48a3-b27b-befae9e41583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe16ffcc-fa0b-4b26-954b-293f01ad36c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4cc250-e883-435f-9301-9e6e61dbbe8c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ea1456-0fb2-4014-ba8b-dcd6ad9eb72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cfb458c-a9a4-4d77-81e4-cf4da7190400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08b43e7-065d-476b-a435-2765676f27f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b25437-e0ef-4198-8a99-186e2278b593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9cf0a1-e001-4699-beee-72a4296d5dac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab97980-925c-4cfd-ab7a-efe824676c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8124d93d-eccc-4362-84ab-8da21095cf37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c547769-4eba-4d0f-8747-05e703a57b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ef8f68-1f95-40e3-acb7-813e50911540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df9414d-07d7-459c-a510-cf585c3fffe5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf19e89-8608-4385-b002-f8019a1bff12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aac30eb-ce10-4a53-b74d-b7937c73f6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99090ada-2bdb-4061-a413-6877af7a739f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "657b0ca0-ae18-4b8c-8508-3c7434143fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073bdc7c-1023-405f-bb8d-d0a914f7d70d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcc4eb5-d1e8-46d8-90ad-cf92a1a566f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58382b10-4ad4-44fe-9f11-899fdd1dc20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd64082-f0a4-4b85-8673-165ab8850356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf11cd5e-fb81-4f48-985d-d70d7e14debf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c54420-a5c2-48fd-be78-e50f6db92fe0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70d86db-833a-4376-8784-5534d30fea5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814d6d72-e528-4193-a106-0e1aabd4950b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b627c42-ae96-4ccb-8c66-9e14c1f9b1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6586d2f9-cb9e-4780-b315-45b2b9281447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f58710f-6f9d-46d9-9115-c0b242c48631",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f412a5ab-33ef-4e37-8cbc-6c27921c9fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabcb633-382a-44f5-a0f0-2c842e4561d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb34579-6b05-42b1-8a6e-f295461fa447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b02154d-12a2-4f34-addd-4f6e9f6520fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e6a599-44dc-4000-bd4b-adbabd7a7a87",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8951249-dcbf-4413-90d7-93dd033f3042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da494fa9-74a0-4a65-8ebb-8d3e6e3a6de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cddd95-97f8-48fb-8c11-b6f08c4840c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b15d638-0529-445c-86c2-39be21eade8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ad0021-be8d-4de9-bc03-089a4c058acf",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55816639-8520-40bc-92ba-2e763644ad5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f054867-35be-4253-be16-bc8c30b177bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ddbef0-5ef0-4876-8589-d903d53b4ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3dd369-48ea-4ea4-be0f-0a718c0aece6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c28945b-3078-4c5b-80eb-6c2a798eb456",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c10216-77c4-4504-9000-326b2f3559d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8aeb45e-7c1e-4c3a-a0df-90bb95e03f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2569b4cc-19fb-465d-9ae2-57a14ab01cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202a24ca-1afd-4e18-8926-a3ce18ff3cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3885e678-f68d-483f-951d-4cb6da3924ef",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a8a73a-f95e-4547-9fa4-4436c4551d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c08f0f9-d04c-4a02-adab-1bc1a2b60172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff46abf-a67f-4950-b95f-835ec9038aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1336b980-29b7-4520-a9fd-b9b4f3f65045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2de60b-5647-41ca-b647-e2663522714c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc412b3f-7ebc-4aab-8ae6-99e7ca36d35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ec7d94-f9c4-4f31-8f62-7fc71dc61156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9270ae-1506-4329-97b4-8e70e24ebe91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5db631-939f-4926-82b7-457e764f364b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c64349-01f7-42a2-b593-8b025cf0b0a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e25aed-665d-453a-9be1-c95ceb790281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf5708c-1b19-4eea-892c-08e055c9797b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6470261-6ce5-4325-879c-ed1d35439f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b61b90-f2a2-4b4a-9683-c45523ec06c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1e2599-fbea-4869-8648-5b031743f219",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0050f297-bb2b-4a46-b459-6d9dbbcc01dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ef7794-2a46-4144-993d-e7c48ea9f21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfecd04-db4d-4de2-9e81-afab20d1996b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715144f1-5c18-4bb7-930f-4efdf453bd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b74ac9b-e4c1-4447-8837-9a1ed365bd78",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235d3880-bd9a-4703-a54e-7f18911fd146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d77088d-f773-4703-9c2f-65f2748e9b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d339d813-9120-4e29-8568-a58911231243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc27b168-9fd2-4095-960d-1b0b6ed00f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ddf065-225c-416e-a879-dadb8be4d8ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac970de2-1ed0-4911-a752-cee13d1111ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6318e7-10c7-45e2-bd48-9783a9c7d174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676ee750-a7df-4cd2-8642-5f1375219fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc259c5-c7aa-4f26-bafb-64f213d8810b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a4ec75-e6fe-4479-b0ed-fc473c211dc8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c007aed1-bd8d-4ec5-a8fa-85f656a0858b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7ee257-7368-4381-92f7-9bd2a980522c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8588185a-4159-461f-aa72-86613cce168b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3829e0e7-0894-4ab2-9b3c-44926dba7b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d485066-7534-4427-8949-4735aaff9aa7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cec117-7783-464b-a6b0-4b724f4cfb01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e29a604b-d94f-4331-8490-6f9876ba25a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6da39d-c278-4702-b391-767dc8b3dbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "086deef9-1ebf-4308-b748-853109ae7bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7579ce95-19fd-434b-8c8a-40cc7c8f174e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8eaaa8b-3416-436d-ba40-5b5e8a431def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b67553f-2d3b-4c9d-8272-ba2e487a2338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dace68-c306-4e59-89f4-d5798e4733c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e134b6-2448-4aa5-ad64-6210967211a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db690c6-8df4-417e-b395-6b442644adba",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f013bd4e-6708-4eaa-9dc3-a96642897369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c609da60-a0e6-4c8c-a96d-4e23ff38c6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07089408-86ea-4d09-a2c5-7ce26b1b4a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c9ceda-ec56-4b2d-a3ec-41a89618d05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07482208-f70a-4fb4-8ade-20afa7e1a596",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd058c63-0912-40a6-9d29-fb7966e9546f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e48e90d-b0a5-4ba1-911e-deea49f0e7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf10e44-c4a4-406a-a970-fe82fc5bf466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfdd394-37e1-4afc-999b-e96bb383d85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01972c88-e7bf-4dbb-a7fb-43f0eccd3adf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f9821c-3347-4143-a1cb-03c3cb9d4fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee88ff8-81fb-40e5-8fca-2b67f1000262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09cef38-de65-4566-86fd-c40178449432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7f33ac-d02d-49f3-a3c7-0b984992d499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f29db3-e06e-4285-be15-3c997476e7af",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8a95a0-9226-462c-b1e6-efb363e20ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e911346a-9c30-4bf9-b5ac-541e4592eec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4deb09d-e746-4fe8-ab62-eca7b65bd149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ecf0f3-735f-4abd-8459-62dc761c6fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16bde3d-7061-4ed8-993e-3e164f2797b0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868ad137-7d59-48b9-a9cb-4238f68d766d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2970ae14-ba78-47a9-9c7b-0ee705a9db76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d83946-72f8-459b-bb6b-e569799e7398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec319e1-4c46-491c-899f-e5f6a86ab6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c816d8-420f-424f-a4b9-a2509e30c1fe",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed01eb6-da65-489e-b47f-4dc8bff058d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8d3841-ed75-428c-bd36-4aab5cd65d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007dd18e-6729-42b7-8cf9-9db873b21e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149fdf32-191f-4bc8-a32f-160775153f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5578d8-028c-4936-96a9-1a039b38dc61",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0d98b2-a2b4-4a95-b07c-9a267b8ef04d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf19b99-7efc-45dc-9e1d-5419d8f6f761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52471a9f-f246-4dd9-acf2-c39424e7e04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd51d9ba-4f3e-4c0f-82fb-37dc2ebe9755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170dee6d-b187-415b-b481-ec285d684a67",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e657ba50-bad8-4d1d-b646-28323c6f255f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa2b589-6f30-4e98-a29d-3d792fbdeff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d24646b-e0f1-4fcc-9e22-3a7268e3fd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a85fc72-fc69-469b-b657-1c94d9abbe9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275166c8-b0ce-42b2-8f43-5a8c99ff417d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8d12bb-248c-440b-9440-db3e6c8e003c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8079dc9b-f3d5-4c7e-97fa-e39d2d8f0535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac1daa7-2077-4e34-b300-aec634b16a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d38d9e3-01af-426b-adc2-f10d247f4a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a4f0c-80db-492d-9dcf-73a3a7157d95",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af1f9e9-75f2-485c-ba9c-416be26d1be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885f5cb1-aa90-441a-b88a-426da34d741d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ee208-922f-43d3-8189-fe5a0a711854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee67cc1-bcc2-4ba4-a287-e7bf8705cbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7b42df-7198-4e27-87c6-20860164feb7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ec750d-ce8f-4b33-bbe9-ce7407f1c73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "918e76a2-0879-488a-9b5e-c472dec3bd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0a0adc-f618-4d7b-a231-9bc5b4405ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52363aed-5339-47a3-b1a9-1a3502ef9997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06733e8b-961d-4f6d-984b-969c0ad9b3d8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b1777a-6529-4142-8fd4-76af7cf01b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5def01b-3c1e-43fb-aa7d-38578dac5b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9acb89d-7a2c-4396-93c3-f5f933660e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97fa78e-809b-4951-878d-15786f63fb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ea7bcd-59de-4531-92c4-28c34b9574f4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e1cc68-5fee-4de0-9f58-42d7e5e972f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b9fe370-6539-41c9-8062-9b9ba56405eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a3b9f9-f8a4-477e-bf4d-19ff00785b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d7e1d6b-3751-4ab6-8a57-d85eebb42ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6592cafa-14b3-4746-a978-89f3c5c7a7d9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b794a051-2eaf-4a01-bc6c-eb44ef6e0cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311b7203-8b66-45df-8df8-9ed823885a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7abbf1d-fcbc-410c-ae36-f77f494c9c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c18f9e-a521-40f3-b367-f9935a9ec40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b521fd98-4c98-4b2b-ba3a-330c8432e7ba",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5a6ab9-2f6a-478e-8078-c303361169fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f494b80-78c9-44e1-90fb-066e2b2d1372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6122131d-fbb8-45e8-8151-0e9fe82cc5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa76c914-d70c-42fd-8bcc-f9711b9160a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11eebed-352b-407a-92f7-222a8f05b83c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd90f31-9e2b-4a56-b505-ecf4250a62bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee22e4e8-0ef5-43fe-9d98-2cf8f8bc6e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934bd23-a792-4aee-b3fe-705d92a3cf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f3bb5e-1d6e-4dd8-a892-012015b2d02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b694dad0-e8f8-4a81-9ec1-c5b901847dd0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bc6188-bc96-496d-a206-83220dc7c884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4f8355-5c2a-4a67-af22-3d77a448b59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061a814c-55ab-40fb-9a8d-ca0340feded5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab55b641-7422-4e3a-b277-4119d365b8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45b3c6b-ee97-451a-8077-5c85784f7575",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b03926-7875-4d08-a497-5528e9f1143d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad61e134-9775-4994-a946-a9d3118b72de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b29b589-43dd-48fc-b52f-ef76b8f44323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6af6423-b829-45df-85d5-d64d0d1fb274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941350f1-0d90-4c2e-aab9-40527f5839dc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c942990-0257-4916-897a-2edec4b5b081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a13946bb-e460-4930-8747-6bcd3ea5cdef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237f9ef7-020b-48eb-8edd-ce91154a6cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2038230-ba68-49d4-9246-48136d7240d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec4aff8-b6c5-4a06-8432-8d9a4a690d53",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a7afa7-c0ad-4b20-88e0-30dcd98b637c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c1f14e-2d91-4732-9616-55cab80e97a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cadc054-b703-4d40-b93f-0837d7ac8f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebaf0208-5655-408b-93e6-3afbdf221072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f81527-fe49-4494-a74e-786e8ff1ffd6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ee835f-891a-4467-9682-db78cdd3df08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b1cb0e3-c201-4cb6-9a70-f7c6c9691191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d98552e-6a07-41df-a64d-93bfdfbbff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711c96b8-4df8-4244-818a-5614e6e097ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8e5d3d-72d4-48f2-8fb4-32dfaf9dbc92",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ef73e1-bc40-4fd8-b355-d14dad5bbe58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19e9d9d7-fa93-4c76-8deb-bf41f91f869e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffebcf8-3317-458c-8ab7-cbde0b735cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d394f5-7152-480c-bf30-466fedf0c66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5588164-07d9-463a-936a-6b96aedb3948",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d18268c-0f4e-425c-b694-f90fa839144d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387b6487-46e9-4f05-9097-74b461466d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b1fc2c-9f34-49cf-a6f2-d22e11b0799b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473c7901-b282-4aab-9667-b42a7363f502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b770fb-82a0-451d-b170-7bc455854eda",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3593caea-aac8-4491-a06b-97fb43647188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55705e6f-186d-4810-917e-c54b30d720fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919af333-7b10-45ac-b61b-222e2c2bb4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398a044e-0dab-4477-953f-c7c7cc15bd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d14ae1-0dc9-41c6-99c9-665f010ee6ba",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99724e59-dfd8-422e-813d-5c7919120dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4f086b-92b6-47d7-8bf6-2c5a6640418c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60658daf-7417-4c40-beb1-e6e76b48ed87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b0337a-c404-4060-84c6-e436b0b0746a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342370cd-7143-4592-b1f2-3259151a3dc4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9203688-910e-4767-bd44-fb4073b1ef90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9cb884f-a80d-407a-8610-43f09f7cf414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad43776-287a-4762-92f8-0ee6297b7c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52a9a97-7bc2-4f1e-8feb-51533be5e143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d912bb23-7b2f-40ba-b8bd-48ef565efe4e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca947d3e-175d-46a4-b03a-e422f0da1ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "068e4596-ba4d-42e4-a91b-b7bcef8dede6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0b0dab-10e7-4d18-89e3-fc5bd0c3e60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b6cac4-572e-4762-abe8-a15761048cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d07c5-963a-4136-a14e-5ed1dd2d88b7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d6727c-a3bd-459c-a420-e0ccbf448b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae0a4ec-33c0-488e-926e-4e4601f0754e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbe4c95-7c17-4adb-8ee4-9d74965262b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea35cb7-3652-44c5-9d25-aacadb714813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5758eca9-5fde-489b-80a2-0fa0ca923556",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6259a91e-8502-49ba-8c69-afffa9a7856c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8f376b-4e01-4d9d-9f44-bbf5950c48d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f524e1c3-ba80-4516-8a3c-2e56f31fdef1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697cb47e-538d-43be-90ae-4f68ad789ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee8fb37-467b-4d2d-bb74-c2a5f03b9441",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b0d413-b798-412d-ab85-927667910d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "071d3497-8b3c-434d-955f-109d434a99df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a6458a-6cd3-4409-94c5-da6e2f254599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f966b556-3c9e-46a5-80c2-cd29b7aa7911"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ece856f-4329-44bd-a3d1-1247662e7785",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb38ef39-0315-4735-9a52-23f0c1e9d0e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d9c361-eb64-474f-91da-4993e8293260",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a35a50e-582c-4d38-92c2-170a7f7670b6"
                    }
                  }
                ]
              },
              {
                "id": "46fce1ce-94a4-4ed8-8921-9b839c2124ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bbcfff4-bc9a-42f1-8440-880f4199f39d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb43b26-f254-4902-a0d9-69b52d96c2cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68638ff6-2bad-45f9-9847-e1fe34f5169e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1771f874-3d17-4ebc-a187-3eec7e2d118e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "339300f4-7b59-4bba-8610-34019e6a3637"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b5c822f-ee79-4ab0-81b7-d0f3aa7a8ce0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdb1e7f1-d2dc-416c-a0c1-0650f8dba685"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "315401e8-81c5-47c9-afd5-20aa8f4d6024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12ace371-66ed-4400-a760-577b84122c59"
                    }
                  }
                ]
              },
              {
                "id": "c5ba376c-a160-418d-af39-2049541fcd74",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9f575179-c658-47a6-91e0-86f21dd6070e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1198482-1cfc-44e0-b7e8-6c8eb46f4d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "db69f26f-ba17-41dc-8ae0-aeb30e8fc5f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e891fa5c-d53e-4102-9c75-4d814a28908c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1cf5b7-13a4-46f9-b2c3-e76e2d669186"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80db4847-f389-448a-ba62-9fc16dd91a83",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0bf4101e-ef32-4d2e-be65-26c98382ecf9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69b36729-1efe-4183-b6b8-1000327568d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "98df35c5-c59e-4183-9538-d106a833e0e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b719940-6a55-433e-9ee6-27f38c033d44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c7708ee-3cc5-49f3-8ce7-34be8ca27406"
                    }
                  }
                ]
              },
              {
                "id": "90a4e790-fc08-45cc-88c9-b9857f330ad5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4af8d306-7d8c-4f37-83ff-e9d2024671ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "573cf6f2-7b19-4311-b69a-b040972edd14"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04937be6-cf90-487f-abc6-3190b21a9e16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fafb38bf-df8f-4c32-81bc-6a6904f47214"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97e58877-f8ec-472a-baa4-d8789512adfc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "36999011-85a2-4c92-8c4a-ee3c2fd216bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fd48447-952a-4401-a1ed-102e323a9146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35880df4-af56-478c-86fd-36e83eaeb466"
            }
          }
        ]
      },
      {
        "id": "0de101df-ed2a-43a0-a8a7-dffc8b86aaa3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6af7eab4-113e-4ee1-bc9f-1ff69e39ddae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab883ba5-9a3f-473d-956a-f5e4782dadba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6682628c-34bf-43d0-a601-cef1faa5f01b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49dcfa6-2a00-4505-b809-485c2dc5d65d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b60a19b3-be37-4d91-b1dc-7be80c2a6a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01664096-6f6f-4522-80ff-8b4db257e6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d7bebc4-6b07-461a-9322-c0e3e49e278b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bd831d2-4839-4be4-8764-68c06abfe29b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ceb775d-2b4c-43fc-96e7-380aeb84553e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22d490e0-85e4-491e-8bd9-f50bde26868b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54ee5e37-273e-4203-a233-e5c29a3848a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8351147-42f8-4063-9a0d-502f022924e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "33969b21-e94c-474c-bb6f-a5248aee9fb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7afca9d5-224b-4504-b441-4be302d25daa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f8693cc-0cbe-47e1-a338-270aa8feb9a0"
            }
          }
        ]
      },
      {
        "id": "f559f447-4796-4779-b544-c2aba2f4651e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ad3f694a-b2b2-4a34-812d-cad0cccb9c9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a270a88-4010-49d5-8fd5-49ecc352dbb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d269269-6cfb-41b6-be69-a2047e80eae5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759944b9-86f9-4842-af7e-b04335350997",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7082064-1251-423f-b9ff-51275fd2d569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ae1347-fe01-4adc-b336-80a610cbab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72ef649c-bd60-4077-b664-ed7cda0c7766"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06dbdf35-f6f4-4bd4-998b-26dec5895ffb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3dd95a60-fa52-4755-8004-bc9513fb3a6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae6c4023-9349-4105-92f2-a1eb8a84d44c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3a096bb-01fb-4804-9edb-6ee0b10e7b6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "116482ec-f55a-40c6-b41e-dd1aa5ff4c0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88979faf-15e8-4715-8a5b-6f789607fc3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0882a059-0579-47c3-95fb-f8dc7cd0a655",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15d9ea1a-415b-4c5a-a0e7-fe8bd336c514"
            }
          }
        ]
      },
      {
        "id": "564b5cab-a0cb-4fa5-bf25-65ff14a7b45f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "da6512e8-47cb-4841-95cb-d0d1c0a0cc67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac2a120c-3ef2-4cf9-b08c-d30257491bf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9de941ea-1018-4bea-a6d3-ef31061aacf3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0c9027-4329-4d77-9ecd-52bd5be45182",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af3f84a1-5a80-4581-af30-a884c2f6fe48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3150ce29-487f-4812-af40-cb08d568a3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ed267a5-c869-4d01-8c4b-83b599323a5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "068c8db6-cd13-4315-ab15-2d661cc91e86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9146a51-dbb8-436a-aaa1-76cd4220451a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8305fba7-8e77-4518-8375-8c723c1c8784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca2b9b4a-cc83-4837-a3e6-b8ed62a567e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2785fd2-8ab6-4eb0-920d-811c40c42427",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e80de7a-336a-4569-b513-8408552f1fd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27ea1ab9-8c1a-4345-9301-74d0a497cd8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "052465be-3e8a-4927-9eae-6c5175e45047"
            }
          }
        ]
      },
      {
        "id": "1f8b0cdf-a3e0-4d2a-9690-54879f984f71",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0650a202-ff65-41c6-9716-1bf972a7d3c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ff35a14-9fbe-40cb-93bb-1e9adee42917",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "97bea1fb-60ad-4a71-a3a5-66b93cff2897",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2d8fce5-85e5-4faf-bb76-dfdf8ec511af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f752cb10-b81d-4d52-86ca-f00db6f92ffb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 143.3403508771931,
      "responseMin": 21,
      "responseMax": 3106,
      "responseSd": 344.1819693431507,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701822984497,
      "completed": 1701823034794
    },
    "executions": [
      {
        "id": "3a58a045-9c65-4862-8146-1b01ac840919",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8c50052f-99b9-4987-9cb8-0ab928786798",
          "httpRequestId": "8ec2738d-d5e8-4c43-a09c-3f6c012bf117"
        },
        "item": {
          "id": "3a58a045-9c65-4862-8146-1b01ac840919",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b647bba1-882d-475b-a5da-995b553a6f16",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 0
        }
      },
      {
        "id": "61e14b09-0c48-4d97-a7b8-09d6a3f977c4",
        "cursor": {
          "ref": "d9e103df-56b4-42c0-b50f-2f8b0f81a8c3",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "df31c332-78c5-4be1-9721-3441142db3dc"
        },
        "item": {
          "id": "61e14b09-0c48-4d97-a7b8-09d6a3f977c4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6918afdc-4309-4404-83e1-25c95f88710b",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "bd43f038-4d75-40a9-9555-419d578d2015",
        "cursor": {
          "ref": "7b7b77e0-a5aa-42cf-8e34-c063744fe9dc",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0638b098-2fcc-4fcf-b00e-68a4833ed5ee"
        },
        "item": {
          "id": "bd43f038-4d75-40a9-9555-419d578d2015",
          "name": "did_json"
        },
        "response": {
          "id": "fa8264ba-d472-4ba0-bfc6-cbf1e89a3f03",
          "status": "OK",
          "code": 200,
          "responseTime": 689,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98302905-87c8-4f95-b71d-f118e3f8b747",
        "cursor": {
          "ref": "c45118e0-095a-4e4c-a97c-aa4c1be0dbd1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "17049fb2-fb2d-4da3-ada8-4b5f3057edbe"
        },
        "item": {
          "id": "98302905-87c8-4f95-b71d-f118e3f8b747",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee70ee79-b79c-442c-99ba-6fb7e8f569b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98302905-87c8-4f95-b71d-f118e3f8b747",
        "cursor": {
          "ref": "c45118e0-095a-4e4c-a97c-aa4c1be0dbd1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "17049fb2-fb2d-4da3-ada8-4b5f3057edbe"
        },
        "item": {
          "id": "98302905-87c8-4f95-b71d-f118e3f8b747",
          "name": "did:invalid"
        },
        "response": {
          "id": "ee70ee79-b79c-442c-99ba-6fb7e8f569b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f88c30-6111-474f-8bca-c416383a373a",
        "cursor": {
          "ref": "da3dc6ae-2171-498f-a419-329f0c77422a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5fc4293e-be01-4052-ad1a-f566e34225ec"
        },
        "item": {
          "id": "74f88c30-6111-474f-8bca-c416383a373a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "86b43dd4-873b-4d10-bec1-898ef504157c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 189,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c50ed76-5e7b-4ff8-9538-376f9e8d1625",
        "cursor": {
          "ref": "981d4463-e8b1-4207-b994-aae3176335dc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "27459c1a-b32e-4758-97cd-165d7e4d9f0a"
        },
        "item": {
          "id": "8c50ed76-5e7b-4ff8-9538-376f9e8d1625",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "40ad6676-9066-403b-9725-c44175af7029",
          "status": "Not Found",
          "code": 404,
          "responseTime": 84,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5246bf-f497-45d9-920e-625b92cc95d9",
        "cursor": {
          "ref": "d4ed07a8-bfe6-4cd8-b845-58df31a87aa8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d77a5af7-a410-4727-a6af-58ef2f4df1b9"
        },
        "item": {
          "id": "4a5246bf-f497-45d9-920e-625b92cc95d9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "028c4b76-cac1-49ee-8684-9aa31860b92a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3dd8d6-af21-45ba-ab39-18cec1a4ad87",
        "cursor": {
          "ref": "ff20e28b-373a-46fc-9587-42b6b7076eb3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7491d0b0-31f4-4260-b4a8-2638880270cc"
        },
        "item": {
          "id": "fc3dd8d6-af21-45ba-ab39-18cec1a4ad87",
          "name": "identifiers"
        },
        "response": {
          "id": "0cce7b1a-a2a5-43dd-a124-0b38b49fcbc7",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e4350b-bcb8-4358-ac11-9232f8d30f6c",
        "cursor": {
          "ref": "963d3bea-96c6-45e7-b3ca-84ee75f6b110",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1089ee27-e6e0-417c-88e9-08b7e76706e3"
        },
        "item": {
          "id": "f0e4350b-bcb8-4358-ac11-9232f8d30f6c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0a71225e-a13d-4775-88d2-bfc5b0a4d71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef17b49-fa92-4b28-8cc0-5347317eb1f7",
        "cursor": {
          "ref": "c3e65b2e-8ed8-4b99-ac8f-f701662888ac",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "85091b62-4370-4dbe-85a1-98f775e6a850"
        },
        "item": {
          "id": "6ef17b49-fa92-4b28-8cc0-5347317eb1f7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8d5197ad-6412-4324-a0a1-05a455a2d681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1e7846-2157-4af4-8fbb-af1f6e47e289",
        "cursor": {
          "ref": "a790a561-be44-44d9-948a-88837a9be0b4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2d73a4c8-0b75-479e-959d-f24f27c23fc9"
        },
        "item": {
          "id": "7b1e7846-2157-4af4-8fbb-af1f6e47e289",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7d4e4aab-db90-4122-a2ac-88e61dfa29b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d7f9b0-aae2-462e-a2cf-a6a35fc68114",
        "cursor": {
          "ref": "6020c737-1f1e-4d0d-a826-5964664fa273",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0fca9040-4b4f-49aa-87da-fbfdd79bef34"
        },
        "item": {
          "id": "c8d7f9b0-aae2-462e-a2cf-a6a35fc68114",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "606009d9-644e-4964-b15a-4091fd69eb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940168e3-1055-405b-9c98-baf854c16491",
        "cursor": {
          "ref": "633763ba-4064-4d5d-b074-9ffa75ab4af0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8022b62e-8029-440d-a08d-b95c8dbb5e8e"
        },
        "item": {
          "id": "940168e3-1055-405b-9c98-baf854c16491",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "226a10e9-80f5-4147-97ab-090ffe8f31fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8544ae-e45f-4632-9ddc-2a720c80a929",
        "cursor": {
          "ref": "9f554522-e59b-4243-8e3d-e784409ff128",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d7a5d665-7fe2-4588-92cf-2ec7d70679fa"
        },
        "item": {
          "id": "ba8544ae-e45f-4632-9ddc-2a720c80a929",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "44ba7bcf-49bb-4c37-82bb-fa91332c284b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2a6fbc-f119-47ae-89dc-7081a6c266b0",
        "cursor": {
          "ref": "6dde3f2c-a59b-4627-9487-68198abc164c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ebde289c-8652-4e20-9eb9-0dcced646224"
        },
        "item": {
          "id": "7c2a6fbc-f119-47ae-89dc-7081a6c266b0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "afe827cc-9964-408a-bf94-aa32c4e314c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d22d43a-59e3-404f-aef7-a967b866d46e",
        "cursor": {
          "ref": "0b280928-caba-48e6-963d-d7e0c5c7fdb4",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8fa2eff4-5e27-4d6e-b98c-f1a69265d9cf"
        },
        "item": {
          "id": "4d22d43a-59e3-404f-aef7-a967b866d46e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d48279f3-3292-401e-ae65-19f48a058946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acc9228-0985-475e-af88-62ce6c3f5dd7",
        "cursor": {
          "ref": "87ea4e0b-7c4c-4879-92de-7f895addfe89",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d81d5cc8-22ee-498a-ab26-ca91eece7e89"
        },
        "item": {
          "id": "7acc9228-0985-475e-af88-62ce6c3f5dd7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8a63257c-8d75-4ce6-90c1-1450af2ae998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2606fd-3172-4869-ab25-c95192074018",
        "cursor": {
          "ref": "523280e7-1881-430f-a8d9-bc2231525db4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c003cfe0-1ade-4064-8895-0f5f27a9d2ca"
        },
        "item": {
          "id": "5f2606fd-3172-4869-ab25-c95192074018",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "add999d5-6d59-4546-8615-de255b96cf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169f9efc-0dbb-46a4-a46c-72af364efd63",
        "cursor": {
          "ref": "2be4e479-ab13-43c9-b709-ec0d413e2902",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ddc45913-931d-4295-9dfb-9b83bf338051"
        },
        "item": {
          "id": "169f9efc-0dbb-46a4-a46c-72af364efd63",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "28f19307-e816-4e68-9c1b-f90a3264a339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67087c31-fd86-4d33-a27e-5f3c20db42ab",
        "cursor": {
          "ref": "8a6244a0-f517-479f-bade-5af2caab2abe",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f5a5312f-ff05-4c7c-bee3-7751fca9cd3a"
        },
        "item": {
          "id": "67087c31-fd86-4d33-a27e-5f3c20db42ab",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "896302a6-92a4-4609-89d2-1164dc9f9173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbb417c-e109-450d-952c-be29b280bc50",
        "cursor": {
          "ref": "4a2e4ec3-315b-47b7-920f-8044e197bb2e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cf95d464-fc9e-426a-b35f-d9a03d7971e1"
        },
        "item": {
          "id": "0dbb417c-e109-450d-952c-be29b280bc50",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "121e54b5-a876-4b13-a226-e60fb07e6fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396e9dc9-8e51-4d3b-abf4-d368e375911d",
        "cursor": {
          "ref": "9ca1f845-e5fc-4116-81c0-fd27622c05d8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cda804de-9093-4388-ac1b-069f082d4684"
        },
        "item": {
          "id": "396e9dc9-8e51-4d3b-abf4-d368e375911d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7f5cc98b-27cd-48a5-9c8d-06b8d741cb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9525718-4336-4b7a-95c8-677be03f1c17",
        "cursor": {
          "ref": "56499730-8a25-4781-87c9-f3e7af6d026b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "14fb0ccb-d6e4-4a59-8fe6-4041d4316c68"
        },
        "item": {
          "id": "a9525718-4336-4b7a-95c8-677be03f1c17",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8dcff22c-9532-4b76-b72f-90bc9f8c507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c2034a-a020-428e-80e8-5c7c4a254fe2",
        "cursor": {
          "ref": "1ef7a6a8-368e-41ba-8550-77b55baafdfb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dabc7b55-e6be-4476-a83a-fa79339751f1"
        },
        "item": {
          "id": "b2c2034a-a020-428e-80e8-5c7c4a254fe2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4b115dbe-152f-46bf-80c8-13227d9ae859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7217f7-f7b1-4e6d-99f9-f6bb4698a418",
        "cursor": {
          "ref": "9db4e66c-4d97-40d4-9e17-0875869d62d2",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "414c1995-db65-4069-805c-269d3cd441d3"
        },
        "item": {
          "id": "3d7217f7-f7b1-4e6d-99f9-f6bb4698a418",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ad51350f-a86a-4402-a808-9a1cfc8901a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805176f8-a7e6-4d40-b00d-4a344a2af940",
        "cursor": {
          "ref": "5d78c01c-37db-4974-9ca9-71b4be6d518b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c7e1a8a9-20fe-4e8c-a4a2-0f412ea1c901"
        },
        "item": {
          "id": "805176f8-a7e6-4d40-b00d-4a344a2af940",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "87c659fd-a5b6-4a9f-be36-2bdc43683fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c446436d-08fd-4f7f-98ae-a471378d375e",
        "cursor": {
          "ref": "a7292ae8-96c6-4145-9317-0104fd280c34",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e3745180-21c2-47a8-8bad-8be848cffc01"
        },
        "item": {
          "id": "c446436d-08fd-4f7f-98ae-a471378d375e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "761af12e-f4be-447a-bc43-5c36cf94977b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4187f3-7ca7-4c3a-a994-c37a3ed7938d",
        "cursor": {
          "ref": "c7996c36-d08a-472a-8a78-97863946dd9a",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3169a65c-7f82-4615-8a9b-e3142c00b63e"
        },
        "item": {
          "id": "4f4187f3-7ca7-4c3a-a994-c37a3ed7938d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "44032aad-25c0-437a-a57a-7e66b8bc851e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb1240d-9ec4-440d-9733-a009edfd2a5e",
        "cursor": {
          "ref": "2aa7d340-a971-4390-8c57-402f498f8ce5",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "53153ed4-f835-4f6b-8091-9e8fefabaa61"
        },
        "item": {
          "id": "cbb1240d-9ec4-440d-9733-a009edfd2a5e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f9d9e07c-71b7-45d5-8ddb-01dc8c2aa36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ca1adf-5227-4855-89de-a16559ffe683",
        "cursor": {
          "ref": "253488e3-8cc5-4f00-9bb1-25c9424849e7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "efc4c4c6-24cc-4206-94c9-06a8b03c4845"
        },
        "item": {
          "id": "e2ca1adf-5227-4855-89de-a16559ffe683",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "299a6a52-e70b-473d-9d9e-4f71d7bf9b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdd1e34-819a-4089-bfde-9c4dfdd30c60",
        "cursor": {
          "ref": "627b9362-99d6-450b-ade8-e59a08d53f4b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "25ad9753-cb98-4d4b-b43a-80e3715b7f5d"
        },
        "item": {
          "id": "cbdd1e34-819a-4089-bfde-9c4dfdd30c60",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "158082ff-f0a0-47f6-98d1-a0fe8fe3d398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7f5752-9ba0-4f35-a0c6-ca76b337b39f",
        "cursor": {
          "ref": "ac8dca8f-b221-47a7-aed7-b47004390ca0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "48ddc0ad-d297-4f64-80a1-03def0c74ddd"
        },
        "item": {
          "id": "ea7f5752-9ba0-4f35-a0c6-ca76b337b39f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0bae7a69-839d-48c1-b445-ffd4ffc7e3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e86454-624f-4f10-819c-04dbbf2d4395",
        "cursor": {
          "ref": "ccd04815-2fdd-4a60-8cfd-d158030e8237",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7312b005-7b1c-43e9-8730-51d44e76b17f"
        },
        "item": {
          "id": "00e86454-624f-4f10-819c-04dbbf2d4395",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ca8edbcb-5e64-4166-9b4c-972f0ead5f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b284469d-8ce4-4f4b-96f2-3ab22af25824",
        "cursor": {
          "ref": "8e7ec9fd-c2e3-4d19-9311-2ea5877afb7a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d9f74e4a-8914-40ef-a81c-a4bcd517bdde"
        },
        "item": {
          "id": "b284469d-8ce4-4f4b-96f2-3ab22af25824",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "30b4de40-dd3a-47fa-b29d-9f72c02e1a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3a0a8c-b1c4-4f0b-85bf-1e31d6d74bc3",
        "cursor": {
          "ref": "d0d6bbaf-a047-45a9-8f42-c37d83f0629d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a354be4c-3123-4d59-8452-2971e1074cc2"
        },
        "item": {
          "id": "ef3a0a8c-b1c4-4f0b-85bf-1e31d6d74bc3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "78a8715e-b1f6-4855-8aa1-838535ba9ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08083806-8099-42e2-b352-def1ebf80ea5",
        "cursor": {
          "ref": "ae6b94a8-3e2c-453a-8c2c-8ab094ac5c2e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6a36179-3951-4b79-abdc-f05741d5f634"
        },
        "item": {
          "id": "08083806-8099-42e2-b352-def1ebf80ea5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f7da73e5-de56-479b-93e0-f72c249eb63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6188c3-243e-4307-a254-a30397eeffe9",
        "cursor": {
          "ref": "dd7d59d8-0838-4d7a-af9b-1a6c5f25ff14",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "57c6faf0-6451-485c-b00b-91ca2e48c5b8"
        },
        "item": {
          "id": "7e6188c3-243e-4307-a254-a30397eeffe9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "50fc3eae-b9ff-4547-b6cc-365aa70e3fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb74bffe-0f69-475c-a03d-242f3f712c10",
        "cursor": {
          "ref": "18b0fdff-b2ca-481c-ad0c-b556d8684f87",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c08c6706-f34f-4ff7-b46b-eb3c4023e173"
        },
        "item": {
          "id": "eb74bffe-0f69-475c-a03d-242f3f712c10",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c3c2ffc3-6b20-410a-a571-ff2adcb15f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b0bc95-c850-40d0-927f-2b261103d390",
        "cursor": {
          "ref": "06923955-4091-46f4-9726-3fa93f2a66a1",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5cc9c377-022f-46fe-b8a3-4dd266956a57"
        },
        "item": {
          "id": "91b0bc95-c850-40d0-927f-2b261103d390",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "205dfa5a-4573-4ef7-beea-df74a6c46907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e6afce-38cc-4d8d-84e4-98a5453e7d6d",
        "cursor": {
          "ref": "74e6b918-0e4a-4610-9b9f-74061ca611e0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "97688156-f058-4509-a3b6-e40371e26c23"
        },
        "item": {
          "id": "70e6afce-38cc-4d8d-84e4-98a5453e7d6d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "698d9fb1-e4a0-4ca1-b4f1-725623235cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3364bce1-8fa8-4207-970a-01e06659a2f3",
        "cursor": {
          "ref": "7cd0355f-fe76-4ed0-8605-45cfb21a1353",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e503419f-a8e3-4d5c-8fb5-1e7f1e2a0d26"
        },
        "item": {
          "id": "3364bce1-8fa8-4207-970a-01e06659a2f3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6e7fc4df-d793-47e3-a1df-1f5df62ae0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72127688-7e08-49d6-a160-b8811992901c",
        "cursor": {
          "ref": "529a767e-1644-40ea-8b70-3b807513f33c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3cbd3299-62dc-436f-875a-78d52557ae93"
        },
        "item": {
          "id": "72127688-7e08-49d6-a160-b8811992901c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "77806edd-f060-46f7-aac6-09b2cc6e7fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f73cef0-7055-461c-98c0-3baf48299348",
        "cursor": {
          "ref": "4d95244c-6699-4151-aa3b-6db1a31bca36",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c02c3793-1099-4c92-9876-d5903cf56d27"
        },
        "item": {
          "id": "9f73cef0-7055-461c-98c0-3baf48299348",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "87f16930-1253-4737-81df-175b4d802218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ce384f-e9fa-48f3-86a7-0aa4f6c7b391",
        "cursor": {
          "ref": "cee73140-a3f3-4bd3-9e96-b7ca031c0088",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bc0800f3-2e94-41a0-94c7-8f855960f67e"
        },
        "item": {
          "id": "95ce384f-e9fa-48f3-86a7-0aa4f6c7b391",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "429ade07-962f-4415-b5ef-b0ffad6338aa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 351,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed13ee38-a498-41b0-abc1-65cbfed92df4",
        "cursor": {
          "ref": "9d66283f-9e34-4e32-bf5e-ee1713c40a86",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ebf9928f-2838-46aa-852e-f12d915f9cb6"
        },
        "item": {
          "id": "ed13ee38-a498-41b0-abc1-65cbfed92df4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4a996896-1941-435c-b150-60498997b34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a305997f-4827-4db3-8e8c-efef8acfee91",
        "cursor": {
          "ref": "8f97c196-7888-4466-bcc6-625162f77a71",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2b7bf77f-7faf-42e0-bd8b-60ad88c5d374"
        },
        "item": {
          "id": "a305997f-4827-4db3-8e8c-efef8acfee91",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ec97eeef-b777-47bc-966b-2cce330578c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15498230-9805-4dc2-8aab-50b4995e8227",
        "cursor": {
          "ref": "9d3589fe-8d2b-4712-b84f-7c3324c6a4d5",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1297ecef-7e45-4869-a62b-10a78ced2f16"
        },
        "item": {
          "id": "15498230-9805-4dc2-8aab-50b4995e8227",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1e13f597-ba9b-4916-8939-7f2ecc04a25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb2c0d6-036a-4150-a5fd-c497d0eefa0f",
        "cursor": {
          "ref": "b536b1e4-ac2b-4644-8d67-26e11c5121b5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2b15e553-b2b8-4ba4-a9ea-c0dc0409e58c"
        },
        "item": {
          "id": "acb2c0d6-036a-4150-a5fd-c497d0eefa0f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "440cfbed-95cd-4d46-96b7-92f83957ba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10d614a-a795-4531-bc4c-a7371fe2daa2",
        "cursor": {
          "ref": "f229539b-f664-4d03-8097-2b68e9d31fd4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "310ea4bc-1a78-49bb-a31c-4181e3769032"
        },
        "item": {
          "id": "e10d614a-a795-4531-bc4c-a7371fe2daa2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1c66eced-1284-4931-8d15-c17c67b7d474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185d1b69-15db-4c68-bcb6-d383e9367148",
        "cursor": {
          "ref": "b0b442f9-38a2-4930-a946-581b6200fd9f",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6da0e86a-0430-4eba-aab9-1d5f9af4f9b9"
        },
        "item": {
          "id": "185d1b69-15db-4c68-bcb6-d383e9367148",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0f84359a-9cf4-4a6c-9e89-f0ef74fb6294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef95fc4-1f3c-43f2-9c31-5f1d9309a238",
        "cursor": {
          "ref": "2b172e3b-7f8a-4100-a28d-44cfbad8d178",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5f1fde91-0bf8-4986-a3f3-038a56c64d96"
        },
        "item": {
          "id": "4ef95fc4-1f3c-43f2-9c31-5f1d9309a238",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7ccbd6aa-282f-470b-8f33-dd7165590cd8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 346,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c2937d-fc42-465a-92e9-5ef9982d527a",
        "cursor": {
          "ref": "29d9b4b1-4e1a-4b27-84ea-b2887e8a0054",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "27a6fa0b-2bff-48e6-ad33-792d1aa2b040"
        },
        "item": {
          "id": "30c2937d-fc42-465a-92e9-5ef9982d527a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d8332b9-d461-411e-a2ff-fdedb20c9ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e419c8f-5d79-480d-af93-9afd0cd034df",
        "cursor": {
          "ref": "02c299f4-3002-4c4c-b023-fc797d89042c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "aea9961f-a586-403a-be1c-dbb6161bea4a"
        },
        "item": {
          "id": "3e419c8f-5d79-480d-af93-9afd0cd034df",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4c71d832-a14f-416c-b2b2-a180787eb166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d331566f-d4e3-49f2-93fd-019fe4be310d",
        "cursor": {
          "ref": "68d506bd-12e0-4289-914a-3e535ec9b8b8",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d1957bf0-1c78-4a62-b5dc-ee4722d52e70"
        },
        "item": {
          "id": "d331566f-d4e3-49f2-93fd-019fe4be310d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "73ed6f40-904b-42e6-ad12-56e4390e291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789644fa-1399-47cd-9a61-934e814ea29b",
        "cursor": {
          "ref": "583ddc30-e30a-45da-bd51-c50fca750c59",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "be743d36-a231-483e-bd61-265240f00fd0"
        },
        "item": {
          "id": "789644fa-1399-47cd-9a61-934e814ea29b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6e3597de-1c88-4478-94ec-7df7430e1611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03538cba-b378-4449-a30c-7dc0755981b8",
        "cursor": {
          "ref": "9718e676-68d3-463b-a673-7cf0b41c8570",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "728897ed-c823-44c7-81c2-639c38de5b6f"
        },
        "item": {
          "id": "03538cba-b378-4449-a30c-7dc0755981b8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0db7df0e-5996-4a72-9bbd-1491b5489efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1276f7-66eb-4a32-9988-3c1df1e1a80d",
        "cursor": {
          "ref": "b7802ff6-b626-43e6-93f1-a77bbed13c53",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "05acaf12-14df-46d9-ad8d-f3a6cb4b46e6"
        },
        "item": {
          "id": "7e1276f7-66eb-4a32-9988-3c1df1e1a80d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f80c0e54-ef0d-467c-a500-977277b38123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576aa6dd-69b5-432a-a970-5e86a059115a",
        "cursor": {
          "ref": "97fb2536-e6ee-4e8f-90e7-7678e51482ed",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "74d7d42f-a669-4a3f-9b5b-71558581ab38"
        },
        "item": {
          "id": "576aa6dd-69b5-432a-a970-5e86a059115a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2e866b59-1745-419c-bfac-4803b0f55104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecc0328-9c74-4a9e-ae0d-e35a71b3b080",
        "cursor": {
          "ref": "6d71435f-660d-40dd-a851-fa89985d8cb5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a91cd483-28cd-4f63-94ab-a430358549b6"
        },
        "item": {
          "id": "3ecc0328-9c74-4a9e-ae0d-e35a71b3b080",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "dbf5e0a8-f6d0-4466-8895-47599df798ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ea8e12-15f5-4f1d-bb4d-a11d5fe8ff32",
        "cursor": {
          "ref": "d781428e-12cd-4f80-883d-bd9c5d3c3e41",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "44b7827e-73f5-43f5-beda-fcd50e53c33b"
        },
        "item": {
          "id": "a1ea8e12-15f5-4f1d-bb4d-a11d5fe8ff32",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5ada3202-25d1-45ab-85fe-8a58e6721c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4586f5e-1471-420b-8bdc-bcc5186612ae",
        "cursor": {
          "ref": "a22471d7-c894-4e9d-990a-4aa055c524ef",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7f9b2c94-2820-49bf-a0f8-c6c428bd249f"
        },
        "item": {
          "id": "c4586f5e-1471-420b-8bdc-bcc5186612ae",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9a8b22b5-7747-4ee4-b77f-79168e8df5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f86a3b-b6e2-485d-af8b-16cfa1ff12fb",
        "cursor": {
          "ref": "b8525df3-7664-4f4b-bca4-a1f95b676372",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a7f3c6d2-aaa3-4c5e-83dc-f13d31744a68"
        },
        "item": {
          "id": "e4f86a3b-b6e2-485d-af8b-16cfa1ff12fb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a0cb99d0-9c52-4139-bcd4-9dd327fb6ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c77e530-8bd1-409a-b3d4-20fa0e4c9479",
        "cursor": {
          "ref": "da4764ed-f16b-4ead-8ff5-5c459fa23dbb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e69be600-29c2-4b86-bb2b-a858f8ecd5f9"
        },
        "item": {
          "id": "8c77e530-8bd1-409a-b3d4-20fa0e4c9479",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6419d9e0-41a5-467d-b2ce-6ad2dbf6f484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1397536f-a341-473a-9f42-21f93f9653bc",
        "cursor": {
          "ref": "421dcc43-7aaf-422a-800c-1c2dda637d0f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8c0fc4de-939d-491b-b17e-ca27c840c85d"
        },
        "item": {
          "id": "1397536f-a341-473a-9f42-21f93f9653bc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5015e6b6-bc09-43a4-8569-90d353738704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1920b34b-1e43-4d93-8d98-851d8966fa9e",
        "cursor": {
          "ref": "84cdb8b1-30b3-45a7-a6ba-1119d9ed520f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d21295df-5a63-4c20-9c3d-5ffeeb2d7375"
        },
        "item": {
          "id": "1920b34b-1e43-4d93-8d98-851d8966fa9e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "225631ab-50f9-416e-af4b-5dd8e2ae4603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f132009-e3e1-4d2f-91e5-6f3828054489",
        "cursor": {
          "ref": "20382dd5-057d-450e-9caf-e50ada11ddd6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "85ad7086-17b5-4c3c-a29e-310d1ccc96ae"
        },
        "item": {
          "id": "3f132009-e3e1-4d2f-91e5-6f3828054489",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2787b777-6a6d-4f00-a63f-468303ac85d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0846572-8791-4fa8-b79e-57c904caa63e",
        "cursor": {
          "ref": "1292dc50-5a97-4592-8964-d28a82b3c04a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8f8a1e4f-d952-474d-8909-6ce7ed6439f4"
        },
        "item": {
          "id": "f0846572-8791-4fa8-b79e-57c904caa63e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ccda3471-ab6b-4b2d-a7af-ad47aefada8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1775ae4b-a7e6-4a96-8c51-b741b0dd43f9",
        "cursor": {
          "ref": "b30b9069-07a8-47a4-a637-b6a4f70a6ba2",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2cb88bdc-202e-46d2-a478-9279542dec48"
        },
        "item": {
          "id": "1775ae4b-a7e6-4a96-8c51-b741b0dd43f9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e7d9cae7-0b74-4f2a-840e-b7b231a29853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0371c4d-7873-44eb-b6e7-a40ba3377a56",
        "cursor": {
          "ref": "d7fbb02e-5bdf-41d1-bb3c-7c15b8030ce0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "34f1d7f7-ec7c-490b-ade8-d3ee7a44efc8"
        },
        "item": {
          "id": "b0371c4d-7873-44eb-b6e7-a40ba3377a56",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f132e037-ac3c-43ab-b73c-1fc91115b0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6419281c-fb05-46c3-a7d8-e697bf254f07",
        "cursor": {
          "ref": "ad05cbec-2bfb-44fd-82d2-e09001795f0d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "931e2465-2e22-43f4-8f2c-91ccdca65109"
        },
        "item": {
          "id": "6419281c-fb05-46c3-a7d8-e697bf254f07",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6c7bbe08-7b29-44a1-8363-9d60a02fe23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c53495-c0e4-4861-9fe0-da8c73412c9a",
        "cursor": {
          "ref": "b4134363-3dde-4ee3-8145-d8069999a22d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3ef34256-1b62-48c1-b30a-16c5175ba3ea"
        },
        "item": {
          "id": "63c53495-c0e4-4861-9fe0-da8c73412c9a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "38e1178c-3706-479b-882b-bda2617f96c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1066d3a-b257-4f28-af81-e5b8e7007b7b",
        "cursor": {
          "ref": "6229cdc1-e85a-4f25-83c9-70e0c981f2ba",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6101a6cf-07c9-4241-8fe8-45c442a2d9ce"
        },
        "item": {
          "id": "a1066d3a-b257-4f28-af81-e5b8e7007b7b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b273874f-12e3-4ce3-978a-170c53db5bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee8c2b8-8d50-44f3-8046-102e67e608f5",
        "cursor": {
          "ref": "48b1fccf-9dc8-465a-9e72-db4dd7852a91",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3728467d-3629-473e-a838-2938f40b98f6"
        },
        "item": {
          "id": "fee8c2b8-8d50-44f3-8046-102e67e608f5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c39cc9ad-acbe-409b-80b2-6eea5e75e7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5ef7bd-d1f0-4571-b6d4-0a807fbd2657",
        "cursor": {
          "ref": "58c65a85-b26b-4066-bdde-6a6dbd3bf00d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ec664535-8784-417b-9ef0-9433ba349385"
        },
        "item": {
          "id": "4e5ef7bd-d1f0-4571-b6d4-0a807fbd2657",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "03042612-1042-4986-ab26-eb9de9fc71d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f7a546-a43e-4ecc-89f0-253c8a8ae621",
        "cursor": {
          "ref": "fe84a92f-8b8d-40dd-b347-b0f89a67af66",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "054f4cd7-0146-4269-9452-3ff54345982d"
        },
        "item": {
          "id": "54f7a546-a43e-4ecc-89f0-253c8a8ae621",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6309b7eb-61aa-4dc9-b1c7-63d8be5b73fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba26b51-5dc6-41b2-836d-2dca68a5b95b",
        "cursor": {
          "ref": "e1600d22-7d5b-4cb3-93d5-34e4da71454b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1edc56c6-5481-422e-9b28-cd4bea3c5a98"
        },
        "item": {
          "id": "1ba26b51-5dc6-41b2-836d-2dca68a5b95b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "95857a8b-8c1b-450b-bc8f-2dc0a5c9e214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c338f2f-7996-4ae4-b08a-b9a0eb5609ea",
        "cursor": {
          "ref": "6a398057-a245-4f94-a659-644bfc1044bc",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4434f3ed-675f-4bfa-956c-88fc1dc3648f"
        },
        "item": {
          "id": "7c338f2f-7996-4ae4-b08a-b9a0eb5609ea",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "10f88cbe-b878-4490-8b8d-af25d348f8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a559395-2bfe-4906-88fd-cf70b7a29d0c",
        "cursor": {
          "ref": "e98a4338-8e64-40d9-bd7e-befda18d9c2e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b6cfc638-c39d-442e-9f06-e804dffd6243"
        },
        "item": {
          "id": "3a559395-2bfe-4906-88fd-cf70b7a29d0c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8aaf7c56-84d5-41f8-a317-79d34ca5c258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc12d9cf-23ae-4ad9-88f4-599944dff2c6",
        "cursor": {
          "ref": "cbc7cac7-a20e-4500-8152-0691a7030a7d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0859c122-b3af-43d2-98f7-771a54f69efd"
        },
        "item": {
          "id": "fc12d9cf-23ae-4ad9-88f4-599944dff2c6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "550e26f3-938e-4432-9f31-43aca112d06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54288eb-9c15-4e01-b193-55259247d1a7",
        "cursor": {
          "ref": "82e1eec2-838e-49e2-babe-c4803793f526",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e7a574f8-f48c-4c36-ab58-f2327b0aa6a6"
        },
        "item": {
          "id": "d54288eb-9c15-4e01-b193-55259247d1a7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ec071026-7230-44c9-b094-59a6022a2d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbb6b95-aa25-42e5-9d2b-7acc6bb369a6",
        "cursor": {
          "ref": "70b9ad32-6d24-48f0-941a-06f72d487d21",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "608a1fff-23b5-4af7-859c-51b0ddc9bbb3"
        },
        "item": {
          "id": "4bbb6b95-aa25-42e5-9d2b-7acc6bb369a6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cb516365-bcfd-48d0-b952-363bf024e8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dc7392-4d38-4f2c-a347-da77c058ec5d",
        "cursor": {
          "ref": "73334484-d7e7-4aaa-b4a0-b404a8d71f8e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9700858b-62c8-41d3-83bc-b5fecdda19b1"
        },
        "item": {
          "id": "a9dc7392-4d38-4f2c-a347-da77c058ec5d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "30ce11bc-f45d-4cc3-89a0-074eb0c42086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31541592-b440-48d3-abc7-3c989593d123",
        "cursor": {
          "ref": "a36a52bc-4cff-4162-83e5-7428bac6faf4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e6dc8b36-5269-4f78-a7be-198063e4f828"
        },
        "item": {
          "id": "31541592-b440-48d3-abc7-3c989593d123",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f37d3bad-3a10-4f36-b417-a318272a6862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b21c5b-52d1-44f4-bca5-e939b20cad60",
        "cursor": {
          "ref": "73e19ab1-8dbc-4a25-a225-bdb590b7fef7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1683548b-f784-4f03-99f0-cf11d24c08dc"
        },
        "item": {
          "id": "03b21c5b-52d1-44f4-bca5-e939b20cad60",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "55e3e8d5-82c9-4c4c-a51e-dc3a9b3e9da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910e5beb-ef7c-4bbf-a52a-a4cacb036051",
        "cursor": {
          "ref": "70715243-afdc-4890-8ca6-19268cd4698b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b7318be9-8bb9-4f8d-ae78-89e0497a6d64"
        },
        "item": {
          "id": "910e5beb-ef7c-4bbf-a52a-a4cacb036051",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9899cb19-0baa-47ea-8652-a180b5e54d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3eda50-0a13-4431-b173-b7ac6df0a5e0",
        "cursor": {
          "ref": "22e76016-6ab8-4dad-90e3-3ff4a424e7c1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "79a51bc0-a4ff-41a7-8926-9f3131287543"
        },
        "item": {
          "id": "4f3eda50-0a13-4431-b173-b7ac6df0a5e0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "140e324d-6f51-410e-9b73-d622bd48d53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfef3b31-d8dd-4dbd-b6e8-06a230470506",
        "cursor": {
          "ref": "259766b4-6df1-4b97-ad0e-3e759175778d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f61fb5cf-f162-4099-9621-6dfcc3fa2a95"
        },
        "item": {
          "id": "dfef3b31-d8dd-4dbd-b6e8-06a230470506",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cc77e888-f88f-4b5e-b196-af4f8d5a3016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d803e746-66a0-4901-928b-89592d7d2328",
        "cursor": {
          "ref": "a1650142-3811-45da-b689-9a0c88b890a7",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "52bb82e3-b872-4ca6-9c5d-417c5662eb17"
        },
        "item": {
          "id": "d803e746-66a0-4901-928b-89592d7d2328",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "de8c4779-9432-44c5-8d32-fe2cd484ec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87b6a7c-6692-47ee-ac96-7fd718b7a99c",
        "cursor": {
          "ref": "0c79d57c-6cbe-46e6-b8a1-60d1324dd15f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4a2d7f12-c332-4675-8169-1d6c959530ff"
        },
        "item": {
          "id": "c87b6a7c-6692-47ee-ac96-7fd718b7a99c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "69e9ee2a-2916-4f37-9326-70684c6dd7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e94b7c7-e6f7-48db-b32b-aaf3aea30a4a",
        "cursor": {
          "ref": "2fa28cf5-50cb-4859-be45-14938400020f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a0d01c84-1e7a-42ca-80b1-8348f07ec469"
        },
        "item": {
          "id": "4e94b7c7-e6f7-48db-b32b-aaf3aea30a4a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "69e54762-6880-4f89-a9f0-e50e8da58ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce944071-5110-4740-893f-87a0fb96eb8f",
        "cursor": {
          "ref": "4db56861-8a59-45b7-96a6-d7559ef42b15",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6a4d0d49-7044-4eb4-a331-dbf3aa44ed3e"
        },
        "item": {
          "id": "ce944071-5110-4740-893f-87a0fb96eb8f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "86f94d97-0faf-4a97-b926-7128517188a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f258ee5-47d6-4bcb-a818-ac2bd245919c",
        "cursor": {
          "ref": "066bc267-5cea-486a-b1a1-27a0eaecd310",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0572fd37-5435-4ac3-a82d-8a8e130f04dc"
        },
        "item": {
          "id": "7f258ee5-47d6-4bcb-a818-ac2bd245919c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "202a7918-d786-40e2-b63a-fda286d6b963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d94afd7-4fbc-4de3-bc6a-55949cef7a62",
        "cursor": {
          "ref": "44d8c2aa-647e-4e95-a4e0-b8494b641625",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f37d7b67-4211-4c66-b42a-f8d709439857"
        },
        "item": {
          "id": "7d94afd7-4fbc-4de3-bc6a-55949cef7a62",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "387dea38-566a-4ba8-b299-b7e173f0c756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e737807-d020-4f10-a9d3-b444182704ac",
        "cursor": {
          "ref": "8cac6fd0-5760-4ac9-ad16-be5c7410b8b4",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c351f83-38f1-4ef5-9289-2fe3b693f534"
        },
        "item": {
          "id": "3e737807-d020-4f10-a9d3-b444182704ac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "82a7d2af-8730-48a8-b94e-47d92d498a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2827a-69c5-4777-834b-e3933a4c67ba",
        "cursor": {
          "ref": "f968a64e-df7e-4264-b5d9-acd45ef5f4c4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "abf9f5bf-a509-4b60-8007-82759a7fb3b5"
        },
        "item": {
          "id": "48b2827a-69c5-4777-834b-e3933a4c67ba",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cc1d12bb-5eae-4611-87de-6975aa329772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000ead06-dbba-493a-a121-4e4d35611a31",
        "cursor": {
          "ref": "e12ce954-ca2a-40b6-9494-05841dbea471",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "16c3db83-424f-473c-9c88-41efc9ac0af4"
        },
        "item": {
          "id": "000ead06-dbba-493a-a121-4e4d35611a31",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d749a07f-a8b2-4551-84ee-50041c7a75e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16cd4f5f-6403-4e63-9dd2-8684808eace7",
        "cursor": {
          "ref": "d100d2cb-5528-4989-a5cd-0a4fb12b71e8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "785c4b59-6ec8-41ce-8d7f-e84d7f83ebf5"
        },
        "item": {
          "id": "16cd4f5f-6403-4e63-9dd2-8684808eace7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9e42b197-206a-4860-a389-ab0887ab9974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d63973-2ef3-4edc-aefb-718e1e210f81",
        "cursor": {
          "ref": "0f368e8a-1880-4543-8cbe-41ccd52e6b54",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "33f1dda3-61aa-4dae-a219-013e953d2a84"
        },
        "item": {
          "id": "74d63973-2ef3-4edc-aefb-718e1e210f81",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "57d17ae5-01e2-4ea9-be93-137da7b07875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a004b7c-3085-4757-973e-e84d99bf459f",
        "cursor": {
          "ref": "c1e5e127-f820-4ce3-a625-09db2aacf89c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8d58aa3e-9bd5-42c3-9da5-2cd35884bacc"
        },
        "item": {
          "id": "5a004b7c-3085-4757-973e-e84d99bf459f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "65447d3b-ca68-437d-955f-23501a58e812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8885426-6fc2-4344-99b3-b09d9a0e1886",
        "cursor": {
          "ref": "62ecfc68-69b9-4252-afa1-1d693c0e36f9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0541ba74-b15a-4a71-921a-9b6147dffd7d"
        },
        "item": {
          "id": "a8885426-6fc2-4344-99b3-b09d9a0e1886",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "76793bdd-cfb1-4e5d-80cd-3aac46a156db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c93d311-1ac3-4b53-ae74-d5d9d084b164",
        "cursor": {
          "ref": "0fbf7b58-d35e-4cd4-bf47-82fadc075587",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "09800152-6e28-4193-91e4-0d3c26e8a7dd"
        },
        "item": {
          "id": "1c93d311-1ac3-4b53-ae74-d5d9d084b164",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "686659a1-1d13-4a85-9921-534af4d7fd86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ba495c-e2fe-4232-890d-e5da076674a8",
        "cursor": {
          "ref": "7b8b52da-0d4c-442d-a66c-78ebb491be83",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac415624-c69c-4550-8e18-982c31ef95a5"
        },
        "item": {
          "id": "a0ba495c-e2fe-4232-890d-e5da076674a8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e4debb70-c49d-4b31-a750-2f1cb12cc0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "430a0044-7590-4171-989f-eba360607dc0",
        "cursor": {
          "ref": "04affb9b-9fb5-4c7c-bdfc-25ed4342b221",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fa9467a6-f09d-494a-9280-e503c5461c09"
        },
        "item": {
          "id": "430a0044-7590-4171-989f-eba360607dc0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7023a9a7-2c40-40e4-89de-17a66069ce58",
          "status": "Created",
          "code": 201,
          "responseTime": 3106,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "548bcbaf-b942-46fe-8511-f6478e8009bc",
        "cursor": {
          "ref": "756fb666-a480-49df-98a5-d53572e2de1f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a5d95c3b-e2c6-420b-b313-578a3071a2e1"
        },
        "item": {
          "id": "548bcbaf-b942-46fe-8511-f6478e8009bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f5af026f-d1ce-4867-a262-944ea7c30ecd",
          "status": "Created",
          "code": 201,
          "responseTime": 2768,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "623d0348-238f-47f7-ab64-f38b996f49d9",
        "cursor": {
          "ref": "114a3c74-116f-460c-849d-95440d91f95b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1ee9c18e-acef-4ac2-bb40-6621e35bc99e"
        },
        "item": {
          "id": "623d0348-238f-47f7-ab64-f38b996f49d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cd0f8cd4-b89c-4b18-a30f-da57608041ef",
          "status": "Created",
          "code": 201,
          "responseTime": 2241,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d35a750-92d0-4a0b-b89d-bac881ab9899",
        "cursor": {
          "ref": "e477d5d8-17f7-44b5-9191-48ac814b2244",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "767fc4d5-644f-4685-ae69-5c44d65cb54d"
        },
        "item": {
          "id": "3d35a750-92d0-4a0b-b89d-bac881ab9899",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d386bcac-457d-4109-8708-ff0a0518e3f8",
          "status": "Created",
          "code": 201,
          "responseTime": 2319,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2fc7bc-77e6-4568-ab27-c69db3265f79",
        "cursor": {
          "ref": "980e522d-bc22-4868-85ba-74d513cce944",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "15276b9d-f28a-4026-92e7-cbde0ffba61a"
        },
        "item": {
          "id": "ad2fc7bc-77e6-4568-ab27-c69db3265f79",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "67e639b0-c436-4b6e-9a70-3624d7c22922",
          "status": "Created",
          "code": 201,
          "responseTime": 2163,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "631e4e8c-4a32-4052-bc7b-da93986c154e",
        "cursor": {
          "ref": "14b25c30-b968-44a2-9a99-559c28d3aa8c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b165980e-1f3a-4e2a-aaca-530faceba9e8"
        },
        "item": {
          "id": "631e4e8c-4a32-4052-bc7b-da93986c154e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "660a07b0-b64d-47af-a1aa-a5a0d3c52939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "76488e86-2058-48bc-a5ca-2f4387b78286",
        "cursor": {
          "ref": "e33d1b77-2523-4912-9993-6687564038e9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3241115f-bac3-416c-913c-fa1759a33ab5"
        },
        "item": {
          "id": "76488e86-2058-48bc-a5ca-2f4387b78286",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6bbc87e0-5b89-48f5-9a71-49017f5cb3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7775ab-355c-4abb-a9cf-1fa3da51b96d",
        "cursor": {
          "ref": "9d5dc5e1-029d-4693-80a6-5c38172b3544",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b059b495-4998-4697-9666-ea6c32edaabc"
        },
        "item": {
          "id": "ab7775ab-355c-4abb-a9cf-1fa3da51b96d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "511aef94-f98f-44e4-8ec1-ae4dd875486e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1776eb8a-de07-4bae-a817-d57aedc5a6e1",
        "cursor": {
          "ref": "0c53e267-0b5e-4f13-8253-b0bcdf2d13e3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "723f3038-7088-4a84-8b33-66df896d55bf"
        },
        "item": {
          "id": "1776eb8a-de07-4bae-a817-d57aedc5a6e1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "53df28c6-f34a-4a10-9af4-9045d1b83c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0dd4d1-cd77-4b3f-8791-524d790af4d1",
        "cursor": {
          "ref": "3114da12-bdfb-4fec-b865-011655c497f8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d800e21b-06ab-4711-9d68-e86cd4df7e9b"
        },
        "item": {
          "id": "dd0dd4d1-cd77-4b3f-8791-524d790af4d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "11189704-80ca-44e6-87cd-2b5609f33325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228554c7-9eac-497e-a6b5-2cfe58f05109",
        "cursor": {
          "ref": "53a5f755-8b13-4ed1-b026-99726450d1db",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ac9453a-8ac0-46dd-b23c-b735731209cb"
        },
        "item": {
          "id": "228554c7-9eac-497e-a6b5-2cfe58f05109",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "82293779-c5a9-4652-a54b-f6de78d8edd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416e66f5-c6dd-48d9-99ea-0138968a8d4e",
        "cursor": {
          "ref": "e5491116-7495-40ee-8958-f6bad151c789",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "43844e27-1893-4de1-82c9-573b33e9ecef"
        },
        "item": {
          "id": "416e66f5-c6dd-48d9-99ea-0138968a8d4e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9f6387b5-22d2-4d2e-a8a3-86e9ead814b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43362a3-59cb-4aac-bc1c-b964c2b9d60a",
        "cursor": {
          "ref": "3bd26b1d-c396-438e-8da8-0cf2c576e9c6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b155c84d-8407-4b2b-8b67-bfeeed589ce6"
        },
        "item": {
          "id": "a43362a3-59cb-4aac-bc1c-b964c2b9d60a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "55197ed7-e602-49ec-8007-e9aa842e2080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7b20aa-7e33-451f-aa63-4dfbb5d62727",
        "cursor": {
          "ref": "70c3e1be-6752-45fc-9ed0-611a8f0a4fc3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fd57404a-5c66-4f68-95a7-cf2a299c618f"
        },
        "item": {
          "id": "3f7b20aa-7e33-451f-aa63-4dfbb5d62727",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8bc74451-34ef-4351-96bc-1f98dcb2ed27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22db451-337f-4d49-869c-b33fac062048",
        "cursor": {
          "ref": "7608bb00-f464-4bf5-920f-d0054a68f681",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1c282083-d962-40a6-8b22-ab39c9063f9c"
        },
        "item": {
          "id": "d22db451-337f-4d49-869c-b33fac062048",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d2191bb0-4aa6-402c-8a87-2126402fc2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ca45b0-5d02-42bd-92ca-fa2db82a9363",
        "cursor": {
          "ref": "7598b85a-1714-44f9-aed0-f46cec0a3f59",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6910ea86-dd1e-43ee-b634-c07f30cd5e9f"
        },
        "item": {
          "id": "49ca45b0-5d02-42bd-92ca-fa2db82a9363",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c28efbf4-bea3-4a39-8e27-413fff936c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa4c210-0379-48ce-9cdf-945550096ebd",
        "cursor": {
          "ref": "d18d438c-9e04-4a5d-887f-bbda1fde429c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "20772dc6-7bc7-49b7-b77d-4efcc6ed916c"
        },
        "item": {
          "id": "8aa4c210-0379-48ce-9cdf-945550096ebd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "95cef4f7-e27e-4834-abe2-07dcbbf480ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7593a42d-aa93-4eb1-95ec-358c40cbc2ee",
        "cursor": {
          "ref": "740d7441-edda-4f60-bc2f-33c0d673ea1c",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "08ad2279-41eb-4e4c-96f9-dd445a81bbcd"
        },
        "item": {
          "id": "7593a42d-aa93-4eb1-95ec-358c40cbc2ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5539df2f-bde9-4587-b9f8-b1ec182bdd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb2750-b8e4-430a-a4f0-de3efb7e4bcd",
        "cursor": {
          "ref": "69eaf747-4472-4de5-94ac-300cece1e3d5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5e7f26e1-20f4-48c1-8aab-51c13d76ef04"
        },
        "item": {
          "id": "a2fb2750-b8e4-430a-a4f0-de3efb7e4bcd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bc4505d4-9951-4898-b684-e87340900889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8ac087-6e4f-403a-b457-6f62921f8ae2",
        "cursor": {
          "ref": "e4fb971a-6b87-482c-9d58-bc67f5b5cfa4",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e45f50ae-0884-454a-8447-353e3acb95f7"
        },
        "item": {
          "id": "cd8ac087-6e4f-403a-b457-6f62921f8ae2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6a6f2f1c-04b7-4546-bf2a-0303f66d8031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2731810-e309-4417-9662-c2cd36f34550",
        "cursor": {
          "ref": "a01553e5-8a3f-4b0d-9657-1a4900cec528",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a513e414-61bf-486b-b5b3-b57e278a4d00"
        },
        "item": {
          "id": "f2731810-e309-4417-9662-c2cd36f34550",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "54a3ee66-dc72-4695-853d-3d97741513b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0a55bf-feb7-4054-b441-249a4fd127a3",
        "cursor": {
          "ref": "bf911cd3-a35b-41e1-b03d-dde8798e3121",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2bf26fa6-0680-4928-9606-b31c128e6731"
        },
        "item": {
          "id": "2e0a55bf-feb7-4054-b441-249a4fd127a3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9e922f25-bcb5-44cf-bbc5-4ee830ad5644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0eee56-6d2e-45f8-8308-dfb6aa962a22",
        "cursor": {
          "ref": "89390e0d-37a6-4870-ae56-e290a426c7d5",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "db401bbc-2aa2-467a-a568-da3353e528f9"
        },
        "item": {
          "id": "2f0eee56-6d2e-45f8-8308-dfb6aa962a22",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "21db5ab6-2ac9-4080-9e38-9f58055c2f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ee62c-1cee-4e8e-a00e-046f7d3b9be0",
        "cursor": {
          "ref": "33be5076-6fc8-442a-8a28-018c7f0ccf68",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b1c54c48-5c2f-4ed8-88b4-d7d3eda1f9fd"
        },
        "item": {
          "id": "381ee62c-1cee-4e8e-a00e-046f7d3b9be0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "97ba1151-1dd1-40ac-87bd-a82812594445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824cde4b-4e1b-4e74-af7b-98eb056daaff",
        "cursor": {
          "ref": "3bc50e3f-52ed-47af-b4ff-17d038647fef",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fd44ef9d-3b1c-4171-8bc8-9895840241e2"
        },
        "item": {
          "id": "824cde4b-4e1b-4e74-af7b-98eb056daaff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3d74c198-71d3-49ae-b294-a4decb60412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e320371-8647-4f86-8049-a1fb6416a8d5",
        "cursor": {
          "ref": "2441488e-30b2-4931-9411-e193b333ad95",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d4497ad3-02ac-4da3-93e2-afbefd2a6c15"
        },
        "item": {
          "id": "7e320371-8647-4f86-8049-a1fb6416a8d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3fe5a327-0326-4940-838e-d322ca3d14c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aacf88-f72f-44b5-84e5-dc979f021b11",
        "cursor": {
          "ref": "5c08d527-66ae-4df9-9cec-cd30399ffc2a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "15cdf808-08d2-4e5c-b3d9-1d463eb25b7c"
        },
        "item": {
          "id": "f6aacf88-f72f-44b5-84e5-dc979f021b11",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6afcbd6b-d6f1-4e07-9e64-faf5c3cb49da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62085e4-c44e-4af6-9261-e8024e84d8b6",
        "cursor": {
          "ref": "5d34f310-ff94-4eb3-94bf-e1aa1441fb20",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e5226bed-0403-4065-b277-190da5181a16"
        },
        "item": {
          "id": "c62085e4-c44e-4af6-9261-e8024e84d8b6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4b643e59-10c0-49f8-96ab-2edf924c997b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1a6d1d-2896-46fe-b263-30624c7b67a8",
        "cursor": {
          "ref": "2db014ad-b737-4f47-ab4a-39ad3deaa0d7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a4a52117-f722-4d59-9ad7-89f15e060bc6"
        },
        "item": {
          "id": "ae1a6d1d-2896-46fe-b263-30624c7b67a8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d846bf71-4518-4d3f-8dc6-2fb2cf3f790c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b804d-e7f7-4fa8-a4d8-b689c8b65a72",
        "cursor": {
          "ref": "9da5217b-0c69-4cad-b951-6cfce066041b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ea02a048-242f-409d-886e-e4d3fa969eb3"
        },
        "item": {
          "id": "e25b804d-e7f7-4fa8-a4d8-b689c8b65a72",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3c657c78-e1c2-422d-a545-e959e9a455cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05beb1f0-2c82-40ff-ae87-64228338a15a",
        "cursor": {
          "ref": "ef977396-9fd1-400d-9ef5-2cc8f0d6d86e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c3145218-c9b3-405c-8c16-640cc1621087"
        },
        "item": {
          "id": "05beb1f0-2c82-40ff-ae87-64228338a15a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c14c092-f675-4d3d-a5a6-ccf8bdd5b3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75129312-1d4d-4a6b-9c09-fdf526058770",
        "cursor": {
          "ref": "6263937f-4d03-4da6-a5d7-d3434022d1db",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "10960b0a-acf6-43fe-9f88-7d4ae818617c"
        },
        "item": {
          "id": "75129312-1d4d-4a6b-9c09-fdf526058770",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9660590b-aba0-4e2c-a9cc-b00ab2e41a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd55605-5723-43f9-a6bf-024d4fbddd14",
        "cursor": {
          "ref": "915eadd8-797a-4e2d-ba1b-b33aaf849de9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b4b549c5-32d8-4e5e-b9dd-0da5dd987ad8"
        },
        "item": {
          "id": "8fd55605-5723-43f9-a6bf-024d4fbddd14",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7235d4b9-9957-4156-a6a4-24f73272da83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3ec143-edc7-44c5-9f8f-912b50307c51",
        "cursor": {
          "ref": "b4955eb9-b839-454a-a553-c0390c3aaa55",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "11785f8d-9850-4c4f-844f-84e7de85b1b3"
        },
        "item": {
          "id": "fc3ec143-edc7-44c5-9f8f-912b50307c51",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f307c029-3131-4987-8bf2-7e6a34b93c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e003009-4b78-4d93-b34a-c4568b2a95bf",
        "cursor": {
          "ref": "60a399f1-2367-4bbd-8886-b7c43f9dcf00",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d0875c85-789e-467c-ae7e-05551e10c629"
        },
        "item": {
          "id": "8e003009-4b78-4d93-b34a-c4568b2a95bf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66742013-15ca-4788-b057-06c8239933d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027f694f-a52f-4624-9eb9-c6ff488969e1",
        "cursor": {
          "ref": "3e7ed9e6-7ef7-4d65-ac17-30e1a4c905f9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b3ee840-25e0-4dde-90fb-b148b9a31d5f"
        },
        "item": {
          "id": "027f694f-a52f-4624-9eb9-c6ff488969e1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9f2f1808-d23f-4027-a46b-f94e5bd99a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42821b89-20fd-4064-8fad-b466f820f0ff",
        "cursor": {
          "ref": "3882f7e3-ec8b-455f-bf0a-cf71a4ada2e1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "644e5ba8-f6a4-4c1c-90be-02fad672cb22"
        },
        "item": {
          "id": "42821b89-20fd-4064-8fad-b466f820f0ff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "edbfbd7b-0e7d-44ca-9b45-0db837a8ce4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c100ee51-548d-4edc-95bc-0dad59a77d25",
        "cursor": {
          "ref": "3c5d5e0c-3a20-4a89-a27b-dc777a65a205",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0fbeb131-3595-4947-b4be-f86db0deac26"
        },
        "item": {
          "id": "c100ee51-548d-4edc-95bc-0dad59a77d25",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6af66f74-302b-4a3f-81da-e65740489558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928c20fc-61a3-463b-b33f-f529cb563af0",
        "cursor": {
          "ref": "dc646a0b-fd0a-40f8-9c25-9080a9139e0a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e986bf7e-0c9b-49b3-835a-41fced955b27"
        },
        "item": {
          "id": "928c20fc-61a3-463b-b33f-f529cb563af0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c5a32368-a848-4ab3-916b-c9d28f87a0a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdc46d1-b72c-488d-8e96-dbe90c028d9a",
        "cursor": {
          "ref": "c2b9fee0-5e47-48e3-8870-05fe117bb324",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "126df98a-3b9e-4967-8a6a-c478f7b412c0"
        },
        "item": {
          "id": "5cdc46d1-b72c-488d-8e96-dbe90c028d9a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "508e2ddc-23c4-4172-bd28-c35cdb310207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ea401f-9eba-42f6-9a2b-b47fefbefb6a",
        "cursor": {
          "ref": "ecec53c4-0e03-48b2-8e2e-28dba6add0f5",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9f09637a-28bf-4e20-b2e6-f75bf6653e3d"
        },
        "item": {
          "id": "18ea401f-9eba-42f6-9a2b-b47fefbefb6a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f7500193-9a4a-4c85-a994-c2c861984c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5f394d-74a9-4d24-8d01-47974ca93707",
        "cursor": {
          "ref": "d6029940-bc1c-4619-8b46-477e5803d786",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e878bf66-b064-4931-a0f9-36f0380da16e"
        },
        "item": {
          "id": "9d5f394d-74a9-4d24-8d01-47974ca93707",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "741e1f4c-29f8-480a-8acf-396bbc90f980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d03e7d-34b5-49dc-9967-b701effdc837",
        "cursor": {
          "ref": "35949771-aa43-4690-8cb3-0c6eecf7fe19",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d331619f-f3eb-48f0-b229-1171023e7270"
        },
        "item": {
          "id": "34d03e7d-34b5-49dc-9967-b701effdc837",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "616e4c96-122e-4edb-8dd0-b4cdeb3517fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3277ae8-e000-4e59-a615-35b46685140e",
        "cursor": {
          "ref": "5174b8c3-f9f7-45b0-b584-79eb257affcc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "34446b68-b1f1-4e91-8e67-ea1a92ac01b3"
        },
        "item": {
          "id": "d3277ae8-e000-4e59-a615-35b46685140e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd32af98-9611-4755-ae4e-ed78896c4ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3985b8d-97bb-41f4-9bd1-f20da0ea7818",
        "cursor": {
          "ref": "61b84c58-c5d9-40ef-b47d-857e38f6825c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "15b6f653-7805-4cb7-98b0-c4a583396dd3"
        },
        "item": {
          "id": "f3985b8d-97bb-41f4-9bd1-f20da0ea7818",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab19aae8-4324-4cf7-80c4-3f5b7f0443ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7dcb77-17d6-48e3-91fe-ddba2bfeb7b6",
        "cursor": {
          "ref": "585662c4-efaa-48e4-9e89-548e3c267893",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "853d96f1-bc59-465a-9a87-1fa7ffbd1309"
        },
        "item": {
          "id": "1b7dcb77-17d6-48e3-91fe-ddba2bfeb7b6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1edadfe6-971b-46bb-98dd-37208686ca24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f1fefd-621a-43b8-ab3f-b510dfc7f99a",
        "cursor": {
          "ref": "23b95f0b-61d7-40ab-9664-384550b7839b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "944d9c1b-1bc4-4d78-847b-9ce5e3b63362"
        },
        "item": {
          "id": "d5f1fefd-621a-43b8-ab3f-b510dfc7f99a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d54043ca-dd1b-4a6c-876a-8afd2e0dd886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7e17c5-741d-4d55-a4ed-e93f4a135710",
        "cursor": {
          "ref": "d4995bf2-4922-4f00-8851-c7c74a1ea31b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3a6c39ef-d905-4247-8759-4ba048dcf731"
        },
        "item": {
          "id": "7f7e17c5-741d-4d55-a4ed-e93f4a135710",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d288023a-d349-4ca0-b82e-7f2c3548b7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8ad0ba-fa8f-4b83-ad51-15ede4ddbf5b",
        "cursor": {
          "ref": "a33d56f4-2046-46af-a482-1c3396a95e10",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e4315c3c-67b3-4478-8381-f070459f85e6"
        },
        "item": {
          "id": "bb8ad0ba-fa8f-4b83-ad51-15ede4ddbf5b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2a5881ff-9238-428c-9307-72eef036ae6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ede3637-5286-4c5d-b4f8-4988dc74d4d9",
        "cursor": {
          "ref": "63d8dcf5-c8e5-4df3-9b5d-d16517895bab",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aca1697d-6eec-48e4-9325-709eaab13a1f"
        },
        "item": {
          "id": "1ede3637-5286-4c5d-b4f8-4988dc74d4d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3fda45a3-596e-47e5-9015-7ce88cda9863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b934cc-de8a-46cb-8041-2533a241b997",
        "cursor": {
          "ref": "73b85762-e42f-4caf-a20d-81a19ef1805a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e5a64b18-b5d9-4147-85dc-0f548b4b201e"
        },
        "item": {
          "id": "82b934cc-de8a-46cb-8041-2533a241b997",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ac3dd0f2-03db-4d86-a5f1-74448d4fe1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca377bd-5d98-4f42-af67-de5dc25d4fdd",
        "cursor": {
          "ref": "ebc13cf2-40eb-497f-bb74-fa42519bc745",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2f2257b4-56af-4685-8ddd-dd83e2287e8c"
        },
        "item": {
          "id": "4ca377bd-5d98-4f42-af67-de5dc25d4fdd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2f0a806f-60b8-4aba-a547-a4582bbc3d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a447088-7bf1-4c22-8186-03d727a86c1e",
        "cursor": {
          "ref": "81ca50c4-e19b-4af8-82e0-410b51f31c1d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c3c09e89-a57c-4030-b468-62fbb3ddc9ac"
        },
        "item": {
          "id": "3a447088-7bf1-4c22-8186-03d727a86c1e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "131d3dc8-17b0-4f8f-ad9f-bbf2e14598ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813d4cda-c402-4e84-93a2-7e4b1091a9fc",
        "cursor": {
          "ref": "41b5f4ee-bde6-4da6-a6c5-23d5d4dca48b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6b8220ff-a0f3-4607-948b-279283a77de9"
        },
        "item": {
          "id": "813d4cda-c402-4e84-93a2-7e4b1091a9fc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "403b27c0-55ab-498e-a73e-be15bab3067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da215e4b-4ae9-4ad9-a8f0-839032bc6221",
        "cursor": {
          "ref": "02a2744c-0ae3-4aa8-8a7c-e13c4c147462",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3fd5c43b-0c9a-4477-87c0-b59f23e613a3"
        },
        "item": {
          "id": "da215e4b-4ae9-4ad9-a8f0-839032bc6221",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b5bf3627-a127-4534-9a2d-7c5907966582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e184f1-07a4-4ef6-b939-654b9d92a2e7",
        "cursor": {
          "ref": "e3bcb548-56cc-47d4-bc83-493cbcb47f24",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "23f44520-30d1-48d7-aa35-3a0f8fbcbd95"
        },
        "item": {
          "id": "56e184f1-07a4-4ef6-b939-654b9d92a2e7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b04cd78b-5650-4f58-996f-3b9e67adc0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23adac4c-1584-4136-96ab-6aea73c3bff7",
        "cursor": {
          "ref": "32f6ab00-cd90-4829-94ec-cd42fc26258f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "556063d8-4dc9-4124-9bea-586f0d2093fa"
        },
        "item": {
          "id": "23adac4c-1584-4136-96ab-6aea73c3bff7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "698fcfd4-e401-438e-ae04-56851c744b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b237d0a-9530-4b6e-afb5-4d0efb75e6af",
        "cursor": {
          "ref": "b30af563-c4b1-48b6-b6b1-0a077e99ca74",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a7715cb6-71ff-4872-9c7f-0132c5cb4240"
        },
        "item": {
          "id": "9b237d0a-9530-4b6e-afb5-4d0efb75e6af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "77cdca0a-b9e0-43b1-bfc3-e2c372242e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181b0de6-90ea-4bc7-9b0c-e7147aeda889",
        "cursor": {
          "ref": "1c782d8f-56a4-48f6-b107-1fa4524c0652",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "690740ed-3191-429a-8a23-88b39f8c6324"
        },
        "item": {
          "id": "181b0de6-90ea-4bc7-9b0c-e7147aeda889",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e971dfe7-6c5f-403d-b877-4af388deab28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ffec7c-2bbf-47a4-9d6a-ad2566ef3214",
        "cursor": {
          "ref": "da075723-a1b7-41a0-ab74-faec8504dae6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2b2c1e44-3e72-4a97-8508-4af111ccffab"
        },
        "item": {
          "id": "e0ffec7c-2bbf-47a4-9d6a-ad2566ef3214",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2c3b972-b3b3-4d70-ad8f-fa53a9873a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b21bea1-c13a-4828-b782-1e78d9705e8f",
        "cursor": {
          "ref": "1435d2bc-df27-4b8a-878a-04bf988cce59",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "259d2a95-3bec-48a6-af1b-e8c4d7df1008"
        },
        "item": {
          "id": "1b21bea1-c13a-4828-b782-1e78d9705e8f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cefa3d60-1aba-48cd-b99c-0ca1e7e428ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c98f34-de46-4a2a-b08e-833feb48807a",
        "cursor": {
          "ref": "c20005da-4a6c-4813-a24a-bc85302b98b0",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0cf89683-155e-4e23-a56d-f5cb7e3e5c5a"
        },
        "item": {
          "id": "b8c98f34-de46-4a2a-b08e-833feb48807a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ad9d4c4e-3992-4613-ae6a-7f4f68b88309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c63159-2cd1-4225-b62d-7bb807d5c74c",
        "cursor": {
          "ref": "ea55d4f4-415e-42fd-93c0-524244c323ae",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a64e4793-c6a7-466d-8eb2-853c7f69f6ba"
        },
        "item": {
          "id": "75c63159-2cd1-4225-b62d-7bb807d5c74c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "883b85e1-6369-4ccc-b973-7ae1489be653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa078cdb-5644-4d91-9274-ff2943269c0e",
        "cursor": {
          "ref": "c3ca05d7-c52a-40a9-b1cd-c23e30c9f5c1",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1d0bcf62-b4af-4fe5-85fa-ad4a1ae550da"
        },
        "item": {
          "id": "fa078cdb-5644-4d91-9274-ff2943269c0e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dcb9ac57-9140-4a96-96a2-c82da735ea7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d5ab24-5162-4c7e-ba04-c9e117635c79",
        "cursor": {
          "ref": "866a08e8-e606-476d-8060-53cfcc5f26b7",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cbf8853b-8323-4e36-8f44-3adddd63faa2"
        },
        "item": {
          "id": "e4d5ab24-5162-4c7e-ba04-c9e117635c79",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "021c0d7a-cd57-4f5e-8bf0-6cd772decafa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a995bf28-9072-4b43-a97d-98d816823060",
        "cursor": {
          "ref": "760e3b21-f3cd-4953-9300-36abde9d1b40",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "43236763-65a8-40a6-8c46-11165877785d"
        },
        "item": {
          "id": "a995bf28-9072-4b43-a97d-98d816823060",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2baa9327-bb01-4c2c-b613-60d08b6d95a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b18f5a-580e-4473-8a07-ddcc6b060275",
        "cursor": {
          "ref": "617dc76b-d568-4cb5-8400-52dfc0417b07",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9e7602a6-4087-48e8-af30-b3ff2f1165d0"
        },
        "item": {
          "id": "30b18f5a-580e-4473-8a07-ddcc6b060275",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f25a7d00-b134-451e-9cd6-bc0443d9f060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e66b49-bfc8-4b6b-aaa9-53c1dfb5a0bd",
        "cursor": {
          "ref": "b34f6b20-d1e3-4ac1-9fb9-4ee5cfce1339",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0dc9deda-c0b7-4398-9d06-8aab3573a93c"
        },
        "item": {
          "id": "80e66b49-bfc8-4b6b-aaa9-53c1dfb5a0bd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fd17c826-7852-4a8a-8426-837c35e91b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d52f424-3ea0-465f-b8ba-8becbeccd375",
        "cursor": {
          "ref": "e12b8b01-83bd-4660-990e-fed70e5a51d0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d239c8a1-531c-4c7f-b090-4a75ea779ade"
        },
        "item": {
          "id": "6d52f424-3ea0-465f-b8ba-8becbeccd375",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "29d42fbd-5289-4082-9412-d227a971c719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c7ea96-e7dc-4a92-be5c-26d1be3b98f3",
        "cursor": {
          "ref": "a701c2d4-0404-45bb-8565-b7af227d25fb",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1d1d1c80-5521-4b4f-8923-dba6eed47e40"
        },
        "item": {
          "id": "44c7ea96-e7dc-4a92-be5c-26d1be3b98f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2774f7bd-95c4-467c-9684-32d4266ee8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6584b806-2fc4-4886-941c-c6188a46892d",
        "cursor": {
          "ref": "b3a5dfd8-792a-4536-a4ca-435272e4368a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cacb57b6-8f2b-456c-b24e-604808f4d110"
        },
        "item": {
          "id": "6584b806-2fc4-4886-941c-c6188a46892d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8e83caea-dc23-452c-8803-f19637113a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3eac4d-53bd-4f37-be76-0f915c348011",
        "cursor": {
          "ref": "0400f011-80f2-4170-855c-cacda6362e1c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b2de97d6-33ef-422e-b93d-30eb2d662760"
        },
        "item": {
          "id": "ee3eac4d-53bd-4f37-be76-0f915c348011",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d12f13fb-6d3b-4293-aca7-8da9979fac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb32cde-7e61-4ec8-9f93-bb20c12e2310",
        "cursor": {
          "ref": "c4ef00d3-04eb-4f15-a10d-a3853df3472b",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "80cb7533-6cea-4777-ad69-29e1bdcceea4"
        },
        "item": {
          "id": "beb32cde-7e61-4ec8-9f93-bb20c12e2310",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0ec3f7dd-711d-4aaa-b75c-0a4899750c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9937d804-3baa-4fb7-9f02-01f213225ae8",
        "cursor": {
          "ref": "4bc6a83e-f088-4491-b2c5-caef31e093e1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "90191b4a-54f7-46c0-b717-acba345d26e4"
        },
        "item": {
          "id": "9937d804-3baa-4fb7-9f02-01f213225ae8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "738587d4-187f-4824-bacc-f826dd12cc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee2c05e-4263-4ad8-8342-4cc6db3a1853",
        "cursor": {
          "ref": "af2557f4-2cf6-4b7d-834b-c37a7d00df8e",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7788e9aa-7b74-477d-be6c-0dcb68495b3b"
        },
        "item": {
          "id": "0ee2c05e-4263-4ad8-8342-4cc6db3a1853",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "16cec6b4-e7ec-423a-9b5a-b05e8970af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f741c5-48d4-41a3-a817-6aab16b7b748",
        "cursor": {
          "ref": "383e6eb7-37ea-42b5-983b-8bb4321ad3fc",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9ff379c4-a35e-4a2f-8f07-c1f8a79ea107"
        },
        "item": {
          "id": "e9f741c5-48d4-41a3-a817-6aab16b7b748",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3dbb18f4-622b-49fd-a0e4-67b8c06a5505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d659ea57-9b44-4a44-9fc3-d66536718f82",
        "cursor": {
          "ref": "32041abb-3274-4e65-b59c-398d2cc6df7e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "54833069-85c7-4887-8d40-0811bd4fba65"
        },
        "item": {
          "id": "d659ea57-9b44-4a44-9fc3-d66536718f82",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8ef9770b-a2f5-4ede-99f3-4771b62da958",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269f52e3-26ec-47ad-89cf-7d907c96553e",
        "cursor": {
          "ref": "ee2fc2ef-d6c6-4a74-a8fc-5f00fab4a463",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3b62b7a1-1cb2-448d-a717-aead54e7ff82"
        },
        "item": {
          "id": "269f52e3-26ec-47ad-89cf-7d907c96553e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f1f9b5fa-3035-4279-86d5-a950a7e2cf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eecaf5-8c7a-4892-8df1-be4bcea21e8c",
        "cursor": {
          "ref": "d288e378-06ac-4d2f-af0c-dfea166e7312",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "781bd365-fbfa-40a2-8e20-8badc7f07248"
        },
        "item": {
          "id": "a5eecaf5-8c7a-4892-8df1-be4bcea21e8c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "69fa99cd-a6e5-443f-8542-3ce13f702e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1ce580-9c24-4ee2-8408-4d574867344a",
        "cursor": {
          "ref": "dc83ca1d-8b43-4532-8fb5-41bc381b2a26",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8c0630b7-f6dc-4fa8-bb97-20ade1c886c4"
        },
        "item": {
          "id": "8d1ce580-9c24-4ee2-8408-4d574867344a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f00b6c40-5d74-43c0-b7be-fc5c2276c351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b666a0-92b6-4d96-88a0-3be0975e0a88",
        "cursor": {
          "ref": "d1c294fc-8fab-47e4-a1fa-ddbef0a1667f",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c38e8474-3508-4f2e-bea1-97b0798b92e4"
        },
        "item": {
          "id": "e5b666a0-92b6-4d96-88a0-3be0975e0a88",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ef3a5ced-d762-4f20-8cea-f125883daa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2dafaa-c1d3-4294-a931-7cfbe06148cc",
        "cursor": {
          "ref": "79e70ef5-c412-4e44-9cb0-594befc1e43f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e2e272ef-7b01-4458-ae68-161bc8750f1b"
        },
        "item": {
          "id": "0e2dafaa-c1d3-4294-a931-7cfbe06148cc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "63670ac6-3c86-4512-9c0a-459bc01cd97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64246827-84ee-433c-906d-f183c993517a",
        "cursor": {
          "ref": "90640ce8-6068-468f-be2f-772447cdcb8e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4ce693ef-867f-4d92-9d88-4c0953580d5f"
        },
        "item": {
          "id": "64246827-84ee-433c-906d-f183c993517a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "27b6bbb3-c7ac-441c-9c76-3e8990a7fe2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa30b67e-5010-43e9-8567-58d505fd7213",
        "cursor": {
          "ref": "2d1c8a0f-35c2-4b25-8ea7-41c3fb08aa60",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "48d0c1aa-6a10-4973-8828-f2ec2bf40985"
        },
        "item": {
          "id": "fa30b67e-5010-43e9-8567-58d505fd7213",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5060e909-e9bb-4d65-afc1-959a7b006104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2513fa47-09cd-4fcd-8156-0bc15a6ff0ec",
        "cursor": {
          "ref": "15b535ee-5eed-4a49-bc67-d06efb3ea116",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ce14a39e-a57f-4fbc-ba7b-073146fbb9cb"
        },
        "item": {
          "id": "2513fa47-09cd-4fcd-8156-0bc15a6ff0ec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8220d174-e563-418a-ba71-99d6a5d060c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10c6421-a493-4cb0-9699-b50b30beb8c6",
        "cursor": {
          "ref": "6864a940-8b5d-4158-a20a-fd735bfa75ba",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6d0c6311-b457-43f5-b00b-01467d28c60d"
        },
        "item": {
          "id": "a10c6421-a493-4cb0-9699-b50b30beb8c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b4a719e8-2ddd-4bd9-9fce-a191e93eaf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d75b16f-e001-4197-b855-9d053d520bda",
        "cursor": {
          "ref": "2108d30a-a91b-4177-b83e-64f9086b1655",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c734c4f3-1173-4f5c-ac0a-9454e1007973"
        },
        "item": {
          "id": "9d75b16f-e001-4197-b855-9d053d520bda",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "325bb329-08cf-4d18-979c-b6f0190529bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c1090d-39c5-41a8-b29e-20f04779c909",
        "cursor": {
          "ref": "277a245b-a776-4bd8-a046-1de4b1c64132",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6853c802-688d-464a-ac8c-cbf23fb22df1"
        },
        "item": {
          "id": "a6c1090d-39c5-41a8-b29e-20f04779c909",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e3c8c935-93b7-4529-b5d3-42474b56fec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1574ca-0e11-4d63-8369-e267f42c133e",
        "cursor": {
          "ref": "16997c96-1b2d-4844-9189-0d1efd52b162",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cc5f1f9b-1e13-4a59-995b-f530930ecec5"
        },
        "item": {
          "id": "7f1574ca-0e11-4d63-8369-e267f42c133e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c328e720-e702-44cc-bfc7-3d9336cf4cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba86c39-08c5-490d-913d-2a145257c478",
        "cursor": {
          "ref": "67623106-1484-4ed8-80bb-e71f3de21257",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ab72e243-bb75-4842-ad06-762ca9ff0dc3"
        },
        "item": {
          "id": "dba86c39-08c5-490d-913d-2a145257c478",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1afe644f-b98a-45cb-9880-126ece47c502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911c2b4c-74f6-4eaf-9504-d1a17f847e05",
        "cursor": {
          "ref": "652e9be3-11e3-4740-a029-633a498d654f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9b3350b9-6614-4116-a870-0f4de6782cf2"
        },
        "item": {
          "id": "911c2b4c-74f6-4eaf-9504-d1a17f847e05",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "27ce1726-6138-446e-a4c9-30912fa10cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3070eec-f1fe-43bc-80d3-6c131057c8f3",
        "cursor": {
          "ref": "e7a10593-4fff-442a-b11f-71e92b0958db",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "06afde88-9d46-4be0-aec6-498b9de6720f"
        },
        "item": {
          "id": "a3070eec-f1fe-43bc-80d3-6c131057c8f3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2c9e7f9a-7f1e-4574-a297-412c1fa508b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a8822c-ea9e-4b2a-904a-8bb4cbf6f2b8",
        "cursor": {
          "ref": "e1e4b9cd-9100-45b9-8dad-9c9163e81f47",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d4d26f63-07f7-485f-af13-39456683a11e"
        },
        "item": {
          "id": "03a8822c-ea9e-4b2a-904a-8bb4cbf6f2b8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "152956be-791c-4cf6-9f87-ac34f1a1e62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f779185-88fe-4998-8b55-ec8f41af6d08",
        "cursor": {
          "ref": "00e82a86-ce3b-403f-8c61-5dcaaae025f7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "652b3ed4-5ae1-48d1-9e23-a464e595dff7"
        },
        "item": {
          "id": "5f779185-88fe-4998-8b55-ec8f41af6d08",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0c986de9-7d52-4cb9-8706-b28a1fe48a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b57e2-a1c3-420e-bb1c-d59ed8735f95",
        "cursor": {
          "ref": "71696a09-1754-43de-8fb7-d03d13a9754d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "303067c5-1440-401a-8848-eb2670df6c2b"
        },
        "item": {
          "id": "aa3b57e2-a1c3-420e-bb1c-d59ed8735f95",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3c5b8dd0-1f6f-4cbf-922a-ca2a0fe40cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0f95d7-0e3b-47d4-8db1-ebf0d115309e",
        "cursor": {
          "ref": "57e6d011-bc8a-46df-952c-3a40397e1a0e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2d69df3b-1a5a-4846-83c4-8a6149c7c14d"
        },
        "item": {
          "id": "ff0f95d7-0e3b-47d4-8db1-ebf0d115309e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bd936efd-84b7-45f6-9ac3-70c8817a9117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfa9319-0a70-4fc2-9291-635a08029183",
        "cursor": {
          "ref": "c4d3983d-b57c-4550-a99d-cb85ee165b31",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5a1cf9ca-c135-4eb3-a1cb-fc23b71261d1"
        },
        "item": {
          "id": "edfa9319-0a70-4fc2-9291-635a08029183",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6a9f3ef6-b660-41fb-9743-a86591aab79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e162a05-58e4-4a65-9004-5a4ccc3e589a",
        "cursor": {
          "ref": "4a6bbd06-69c7-4254-af20-eb83ae122090",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "831b64da-1d5a-456e-a650-48fa7177d260"
        },
        "item": {
          "id": "8e162a05-58e4-4a65-9004-5a4ccc3e589a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "002b0f03-bb96-47e4-a924-822a42fef0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28272cd-2d61-4edb-8bec-c83e280d5981",
        "cursor": {
          "ref": "00aa7d76-d798-4630-85b9-30d3dcb3808b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "168a998a-6936-4cb6-bca0-9b46003a4a99"
        },
        "item": {
          "id": "a28272cd-2d61-4edb-8bec-c83e280d5981",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "35692fe1-387b-40a1-9e97-4622ea0fd063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ebfbd7-d4d1-4d46-87cc-4c720682d184",
        "cursor": {
          "ref": "8e962588-ad86-4030-ba9e-9f7624db2c0c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2a48d93f-a2be-4efe-92ef-f51430d4b7d0"
        },
        "item": {
          "id": "d4ebfbd7-d4d1-4d46-87cc-4c720682d184",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "169f45c5-0a98-4aeb-a6c2-1aa21a18d105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684e36d-c309-422c-b4d4-8713764feb5c",
        "cursor": {
          "ref": "1d540c6d-7f2a-4488-96b2-af2af2c4bd25",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1d3f7162-4ba9-48fc-8aa9-29e4112c2930"
        },
        "item": {
          "id": "e684e36d-c309-422c-b4d4-8713764feb5c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5cb3117e-a4ef-4769-8527-d268065f0179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019ed828-27e0-4cf4-9c0d-eabad6a0eb44",
        "cursor": {
          "ref": "94c6421c-d315-4655-a16e-771cad7551e4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3daaab1c-9d05-44b1-a56e-7ac1ca652b3d"
        },
        "item": {
          "id": "019ed828-27e0-4cf4-9c0d-eabad6a0eb44",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f682b44d-62a2-462d-9011-ba64119de1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fae8f32-cadb-4e62-834c-b2c7f1c83847",
        "cursor": {
          "ref": "a5788ae3-fcc5-4423-8983-8ef73d1ab937",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a824af1f-a290-498c-a08e-b2e623cdb3d3"
        },
        "item": {
          "id": "1fae8f32-cadb-4e62-834c-b2c7f1c83847",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e5051a9c-265b-47db-b189-1f96d2b66b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6318996-3479-40dc-b181-dcd73158db91",
        "cursor": {
          "ref": "7e21e9d1-0cae-4083-b3ea-029b23159f7a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3c7d0c5a-fc7a-4fed-a737-50192eca4fb0"
        },
        "item": {
          "id": "b6318996-3479-40dc-b181-dcd73158db91",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1841dbd3-4661-4b60-a40d-0fb5b8a1d99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e4d228-dae4-443b-9110-774d5eaa5d86",
        "cursor": {
          "ref": "c52950d3-e789-433a-8eac-f783c698e685",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "431d3067-5ac3-44fb-9188-91ce871e3e0a"
        },
        "item": {
          "id": "b7e4d228-dae4-443b-9110-774d5eaa5d86",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ff67545-3ec7-4232-8ff5-10974ad6a600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b9beb3-309c-4e5a-91aa-36cabdb8df19",
        "cursor": {
          "ref": "855800c4-81d7-4162-9aa8-35476ab50f47",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "157ff0f4-6a2d-427b-82aa-c557ed3a6330"
        },
        "item": {
          "id": "88b9beb3-309c-4e5a-91aa-36cabdb8df19",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4f793f0d-1086-425e-9618-12a6d31479cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455ac1a3-8def-4a81-b56f-a3a0dcffcf7f",
        "cursor": {
          "ref": "70b61b62-cea4-4a9f-8f75-732ace74863b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "74940458-24ae-405d-b405-54f4d6b2ec50"
        },
        "item": {
          "id": "455ac1a3-8def-4a81-b56f-a3a0dcffcf7f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3758b7cd-153a-4a7a-9cbc-885631f41db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5d1264-2de8-45d7-9a43-08e7ee99bc82",
        "cursor": {
          "ref": "83d7743d-e972-4cc2-8b58-716d29bde572",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d88ba9f9-651a-4437-a641-5d6131261881"
        },
        "item": {
          "id": "fe5d1264-2de8-45d7-9a43-08e7ee99bc82",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4a38ceab-ddfd-498e-8cf6-3aba0cbf212c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc473cd6-5299-4d8c-8944-78ed91db5505",
        "cursor": {
          "ref": "ee2f5710-88bc-4cd3-856e-2d7bf5fab30a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6f1c8f8e-bcd0-4e26-af7d-919f0bafde27"
        },
        "item": {
          "id": "cc473cd6-5299-4d8c-8944-78ed91db5505",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fc8a2b39-5407-483f-a3a0-39e3c0424e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cea0171-814a-40da-8130-7e00d8c83af1",
        "cursor": {
          "ref": "51106df8-a66a-4239-bebe-91ea876a19cf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cd0216cf-6e50-4c13-a006-9c0d45b090a0"
        },
        "item": {
          "id": "4cea0171-814a-40da-8130-7e00d8c83af1",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b82b91eb-3c3e-46a9-970b-58c5af728ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81198e6-249e-4e7f-8974-7d0d487b7889",
        "cursor": {
          "ref": "1048d5ac-bac6-4980-8a8b-8faa758de309",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1edc5f35-d42d-4c3a-b1fb-9f7ea9c73199"
        },
        "item": {
          "id": "d81198e6-249e-4e7f-8974-7d0d487b7889",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3fec132b-8a06-4b41-9157-f2fca232e038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74098ff4-b1e4-43ef-92ed-b63dbefebca5",
        "cursor": {
          "ref": "2b8bed89-7a8b-45dd-96db-c3347968765c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4760865e-8c65-4490-b1ae-c826b6327e22"
        },
        "item": {
          "id": "74098ff4-b1e4-43ef-92ed-b63dbefebca5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "381e3deb-ffca-45ec-8df5-9638c6376179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa01d14-35d9-477d-9475-84933a0ec214",
        "cursor": {
          "ref": "a7f25dfd-2525-4fcc-9e61-2aa634e9024b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "24e7bffc-8f87-4a9a-90d7-7c80794cc876"
        },
        "item": {
          "id": "8fa01d14-35d9-477d-9475-84933a0ec214",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "de229fd6-2874-4fcf-9805-272afb14fd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d2ea96-0195-4439-b2e2-9fa513bebde8",
        "cursor": {
          "ref": "1a9d0a2c-01ef-43dc-9bea-45b7a4df4b22",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "19b8cbc2-273c-4780-bd32-8b2e08aa587a"
        },
        "item": {
          "id": "63d2ea96-0195-4439-b2e2-9fa513bebde8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b5be0ecc-c264-4900-acab-3884d4649624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95beed8e-19b1-4f95-a890-e8ef1e9f080b",
        "cursor": {
          "ref": "49bbb9da-57dd-4c31-9ae2-6222a5b78cea",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1da29f92-a903-42f3-bbe3-525a1d3e94e6"
        },
        "item": {
          "id": "95beed8e-19b1-4f95-a890-e8ef1e9f080b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "24c17cef-c6ca-4fd9-ab96-8dba9f5b883c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6f977c-2f48-47e2-b0f6-9ab1e2684224",
        "cursor": {
          "ref": "3a8b903f-2fd0-4c05-8fb2-43f9b3c7c6fb",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "add0bcba-551f-477c-8d51-fc0683e54cd3"
        },
        "item": {
          "id": "fa6f977c-2f48-47e2-b0f6-9ab1e2684224",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "444ca93b-10e1-4de2-9458-3dc2917eb0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d780f250-be8f-4f31-8177-418ebb4d8df2",
        "cursor": {
          "ref": "7e125fa2-9027-4156-b427-55f473a66bf7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7d115bbe-cc77-4c38-80be-b1a559f1f1a5"
        },
        "item": {
          "id": "d780f250-be8f-4f31-8177-418ebb4d8df2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d95cfadd-33f0-4d52-8717-5acacf6d0613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb87a33-0ffa-4e09-be90-0d8bf37eebca",
        "cursor": {
          "ref": "0e71b69b-4a6b-44d4-b593-36ee6a81a977",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8500267d-d89b-4266-a329-225811110b53"
        },
        "item": {
          "id": "bcb87a33-0ffa-4e09-be90-0d8bf37eebca",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "01e4b8d6-b634-49ed-a3a7-f50942e06da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bde01b8-da76-4c20-b8d2-26bf5846d59b",
        "cursor": {
          "ref": "17a46439-0c17-4011-9fa0-a51dddd7546a",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab6e1f8a-5359-4762-be6a-04bd24bf4884"
        },
        "item": {
          "id": "6bde01b8-da76-4c20-b8d2-26bf5846d59b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a24d75ab-3ad2-4cf6-9407-b109e9b125d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638f6ce2-db99-4d85-965c-675d9929edb0",
        "cursor": {
          "ref": "995b7de8-b2c0-48e4-b595-da5cd1db838b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e786fcee-07f1-4646-9f80-1cee08a705d5"
        },
        "item": {
          "id": "638f6ce2-db99-4d85-965c-675d9929edb0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "98d5dd24-21b5-406e-a3d2-417d05767948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c08c35-7af2-4bfe-b5c2-956d6c428be7",
        "cursor": {
          "ref": "1d2dd40f-b5f1-41ff-afed-7ba2299935fa",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "de890d4f-5f0b-41c1-b4df-328e4f54d8e0"
        },
        "item": {
          "id": "a9c08c35-7af2-4bfe-b5c2-956d6c428be7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "93dd00a4-53d6-440a-93e1-098fede13975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf7fc79-605a-4819-952c-7fa45171c215",
        "cursor": {
          "ref": "7ce5f062-9b15-4119-9ffc-6bc2b34d8d27",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e48e9bd9-01ea-49bc-8db0-f5c906da2d2c"
        },
        "item": {
          "id": "7cf7fc79-605a-4819-952c-7fa45171c215",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ce6e5cfe-4b71-49b6-8879-2772412fea5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c3eb89-4cc2-4ed3-8173-4471a4d00edc",
        "cursor": {
          "ref": "4078de3b-9836-48b4-97d5-330dd7ff0064",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "25e1df69-c653-4540-bdcd-a3640be757b6"
        },
        "item": {
          "id": "17c3eb89-4cc2-4ed3-8173-4471a4d00edc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4e3f7c7b-63fe-460c-b3ce-68f46ed3b488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bec22b0-3f9f-431c-9429-aa215f22bc40",
        "cursor": {
          "ref": "402ccc7d-16f7-4c66-a1cc-3a78438ab152",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dc66dba6-7b77-460f-8c18-9629df14c372"
        },
        "item": {
          "id": "1bec22b0-3f9f-431c-9429-aa215f22bc40",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f78dbdd6-2181-4484-936d-4ee0568c3559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7830e7-a511-483c-81bd-efe6463a54dd",
        "cursor": {
          "ref": "7476670f-5a93-4272-b43c-0730a8a5ffbf",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a5744e54-3f3a-4603-a395-8314675636f3"
        },
        "item": {
          "id": "ab7830e7-a511-483c-81bd-efe6463a54dd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "64e6e1af-e386-4c08-a960-aa198fd64d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9917ddee-08e1-421a-8462-1793a7b2d0b5",
        "cursor": {
          "ref": "21896f6c-2e57-4d3e-b236-450a1a033e69",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2a5cf084-4a33-4d7e-a5ac-2f41d93ab489"
        },
        "item": {
          "id": "9917ddee-08e1-421a-8462-1793a7b2d0b5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "37d21bbe-361e-4dac-923f-811ab09d3633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4cc250-e883-435f-9301-9e6e61dbbe8c",
        "cursor": {
          "ref": "281b70d9-d6c4-4ee0-a836-0730d44766ec",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ea0173de-5bf8-4479-ada9-7cac0517b6a7"
        },
        "item": {
          "id": "7b4cc250-e883-435f-9301-9e6e61dbbe8c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "474f15e7-4ebc-4ae4-bfca-f343a0647c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9cf0a1-e001-4699-beee-72a4296d5dac",
        "cursor": {
          "ref": "9cb80f1c-4392-4953-bfe3-a64db1879cdc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "abb8ede3-9f5c-4fb4-8924-24bc05973e94"
        },
        "item": {
          "id": "ab9cf0a1-e001-4699-beee-72a4296d5dac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fc07ef96-558a-4308-98ab-c8c15db6b341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df9414d-07d7-459c-a510-cf585c3fffe5",
        "cursor": {
          "ref": "1503c9a2-3fb3-4e60-a95f-bc17310d81d3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a34359d9-0a4f-485d-ba7b-5fb21a3a9a76"
        },
        "item": {
          "id": "7df9414d-07d7-459c-a510-cf585c3fffe5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "85b05bc0-2388-48a1-8416-4ec5b311aca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073bdc7c-1023-405f-bb8d-d0a914f7d70d",
        "cursor": {
          "ref": "fb084522-56ce-46af-bcae-e31976145cd7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "494fe9e3-a782-4db3-94a0-b9389862cefd"
        },
        "item": {
          "id": "073bdc7c-1023-405f-bb8d-d0a914f7d70d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "baa65414-e147-445f-81ac-9c5fba8ab871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c54420-a5c2-48fd-be78-e50f6db92fe0",
        "cursor": {
          "ref": "a2257e42-384c-47c5-beb1-bcb10980ec64",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2a0e813e-6532-45dd-b42a-e783cc08b2a7"
        },
        "item": {
          "id": "d6c54420-a5c2-48fd-be78-e50f6db92fe0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d3df35ca-96b4-4efb-92fb-1e58faa0945e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f58710f-6f9d-46d9-9115-c0b242c48631",
        "cursor": {
          "ref": "2cad0881-0fd7-449c-a819-bcb13dd3ff0d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b285813e-bca8-4823-8001-1c51981e50f3"
        },
        "item": {
          "id": "0f58710f-6f9d-46d9-9115-c0b242c48631",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6f8854a5-6b5b-43ba-9af3-149ccf643d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e6a599-44dc-4000-bd4b-adbabd7a7a87",
        "cursor": {
          "ref": "c803b66f-fed6-4f4f-b8a3-5cdaf969b1ec",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "25017c79-0b00-458a-854f-3021677d666b"
        },
        "item": {
          "id": "f9e6a599-44dc-4000-bd4b-adbabd7a7a87",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e077cd44-2739-48d4-a8e7-6dadfc61b44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ad0021-be8d-4de9-bc03-089a4c058acf",
        "cursor": {
          "ref": "4c05d2d5-18c4-4aeb-a2f1-c7a438634873",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5d33e36-089c-4646-921a-e2a6ed354803"
        },
        "item": {
          "id": "f7ad0021-be8d-4de9-bc03-089a4c058acf",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "67a69ddf-a02d-4d41-8416-3140438721fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c28945b-3078-4c5b-80eb-6c2a798eb456",
        "cursor": {
          "ref": "8783f918-97c5-4fe0-b85f-9ae35280ac69",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "02a6ac2c-3927-4f25-8b1a-85385a5f7f14"
        },
        "item": {
          "id": "7c28945b-3078-4c5b-80eb-6c2a798eb456",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "563e6a5e-4212-489b-b35b-e3f79f891f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3885e678-f68d-483f-951d-4cb6da3924ef",
        "cursor": {
          "ref": "2db1f78f-aecb-400e-837a-2caec239aa31",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b52c6bd5-c6ff-4540-9507-bae277e8536a"
        },
        "item": {
          "id": "3885e678-f68d-483f-951d-4cb6da3924ef",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "69daf954-cf81-46d4-a045-db4285dbcb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2de60b-5647-41ca-b647-e2663522714c",
        "cursor": {
          "ref": "3a8fa3fd-afb8-47f4-b150-57edee9ff366",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c86d6a13-b42f-4294-b51d-3528f4551403"
        },
        "item": {
          "id": "5c2de60b-5647-41ca-b647-e2663522714c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9d3f592d-eb67-4b29-85fc-4f831707857e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c64349-01f7-42a2-b593-8b025cf0b0a0",
        "cursor": {
          "ref": "070020eb-1518-43a7-a82c-e1b5e9e9dcd1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a49d5ffe-d9ba-4c0c-a70e-8c9031ba2571"
        },
        "item": {
          "id": "49c64349-01f7-42a2-b593-8b025cf0b0a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a83d3345-2c94-4835-9bdc-c6a772d19382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1e2599-fbea-4869-8648-5b031743f219",
        "cursor": {
          "ref": "18a29335-8e23-4c01-8a3b-f2acac6c23e0",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1d1db35a-a205-40ce-ad4e-1d759963bc26"
        },
        "item": {
          "id": "0b1e2599-fbea-4869-8648-5b031743f219",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "54125248-59fe-41c4-83af-f522b63d622a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b74ac9b-e4c1-4447-8837-9a1ed365bd78",
        "cursor": {
          "ref": "ddad0409-f2cf-47d0-909c-8c5bdb11f94f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb265b22-5e94-420f-8c54-6618af235164"
        },
        "item": {
          "id": "0b74ac9b-e4c1-4447-8837-9a1ed365bd78",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f4980dc0-8ebd-4aaa-9dda-653b5a639620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ddf065-225c-416e-a879-dadb8be4d8ea",
        "cursor": {
          "ref": "b7091ca7-f2c5-4c74-a317-ee91f03cbfa9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3364eded-32af-4ff6-82c6-1cc03f9218b2"
        },
        "item": {
          "id": "d2ddf065-225c-416e-a879-dadb8be4d8ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b71a3b3e-44c8-4e13-9ea5-95530df18a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a4ec75-e6fe-4479-b0ed-fc473c211dc8",
        "cursor": {
          "ref": "06900f91-6f2f-485f-bb62-88eb2d8a6b40",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "90a8cc6e-2cb3-4b4c-a1bf-a3bd1136a2ab"
        },
        "item": {
          "id": "55a4ec75-e6fe-4479-b0ed-fc473c211dc8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9cdc9ec0-84cf-47fd-9439-92fd01ab2ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d485066-7534-4427-8949-4735aaff9aa7",
        "cursor": {
          "ref": "6909e213-ec9f-4d0e-b668-6e9a7364b459",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ab3a4add-a558-420c-892b-265e4f1cfd9b"
        },
        "item": {
          "id": "9d485066-7534-4427-8949-4735aaff9aa7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "25958a92-134a-4b8a-9e5d-05dd1a95bb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7579ce95-19fd-434b-8c8a-40cc7c8f174e",
        "cursor": {
          "ref": "19d7a4c5-b86f-4422-a3d6-2a27a73e4a77",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c5135cf-40f3-4a15-af64-78c9e1cd1f59"
        },
        "item": {
          "id": "7579ce95-19fd-434b-8c8a-40cc7c8f174e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "392e009a-44cb-405e-8efc-c80078905e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db690c6-8df4-417e-b395-6b442644adba",
        "cursor": {
          "ref": "9c05456f-a15b-4983-b354-a0735a88dc3e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "922d77bd-d934-420a-9a4c-a651cbaaf795"
        },
        "item": {
          "id": "6db690c6-8df4-417e-b395-6b442644adba",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c1a4422-7714-4d47-befd-8ec66af3c26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07482208-f70a-4fb4-8ade-20afa7e1a596",
        "cursor": {
          "ref": "b44a131f-2b88-446f-adfc-e37ea422ab02",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8ea5ee66-6ba3-426f-8d45-76ddac98c4c2"
        },
        "item": {
          "id": "07482208-f70a-4fb4-8ade-20afa7e1a596",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f8cd703-7970-4c76-8b6c-e3df752985aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01972c88-e7bf-4dbb-a7fb-43f0eccd3adf",
        "cursor": {
          "ref": "c5de9ad2-359e-4f92-90bf-924ce5ac7e95",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8e8f28ce-e457-452e-928d-86aab0b54e62"
        },
        "item": {
          "id": "01972c88-e7bf-4dbb-a7fb-43f0eccd3adf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "067de305-c210-4415-be3a-391a1009efb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f29db3-e06e-4285-be15-3c997476e7af",
        "cursor": {
          "ref": "91b0d9d4-b7af-4283-bc53-2d2d4d6f9e5a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a43a9948-aeb7-48a9-bec4-da5330dca574"
        },
        "item": {
          "id": "e5f29db3-e06e-4285-be15-3c997476e7af",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bcacd77f-618b-4587-9568-b5c78155e2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16bde3d-7061-4ed8-993e-3e164f2797b0",
        "cursor": {
          "ref": "d31fa087-1b3b-4c68-aecc-d9ab2b7a0a9a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "94ee91be-abba-4965-aca0-3b4e4ded509e"
        },
        "item": {
          "id": "d16bde3d-7061-4ed8-993e-3e164f2797b0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "54f39d05-1414-49af-b093-f8bc3d2b4af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c816d8-420f-424f-a4b9-a2509e30c1fe",
        "cursor": {
          "ref": "bc1b49e9-d37e-4c24-934b-bf8018b81ce9",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "70e5a09e-e64b-4461-9453-ac96e7753c15"
        },
        "item": {
          "id": "13c816d8-420f-424f-a4b9-a2509e30c1fe",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "09900e68-6009-470e-948e-059c1f3ff33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5578d8-028c-4936-96a9-1a039b38dc61",
        "cursor": {
          "ref": "f85c71e5-9ee2-4e3f-8d83-be300db8a441",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fe52f884-ac4e-4752-b772-832b1ae829f0"
        },
        "item": {
          "id": "5b5578d8-028c-4936-96a9-1a039b38dc61",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "520365de-dd7e-485e-b37d-a99f37aec977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170dee6d-b187-415b-b481-ec285d684a67",
        "cursor": {
          "ref": "1b0cadae-fbb1-4831-8df0-31a3c3e75c06",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1fdc66d4-9d2c-4a70-b036-699568c0ec9f"
        },
        "item": {
          "id": "170dee6d-b187-415b-b481-ec285d684a67",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "930f9312-5b00-4867-847e-9337705ff656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275166c8-b0ce-42b2-8f43-5a8c99ff417d",
        "cursor": {
          "ref": "ea393aab-77f6-4db0-8fb9-02779b61dc3e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3059ce95-7eb6-43ea-a491-382415cdb181"
        },
        "item": {
          "id": "275166c8-b0ce-42b2-8f43-5a8c99ff417d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66e69f4a-e1c2-45ad-98c2-674780c3e8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a4f0c-80db-492d-9dcf-73a3a7157d95",
        "cursor": {
          "ref": "b09d31e5-6be5-4594-adf2-54eb12dfeac8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "730836f5-8577-4fe6-9c9f-8b5cfbcbef89"
        },
        "item": {
          "id": "979a4f0c-80db-492d-9dcf-73a3a7157d95",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dfa5a8b3-218c-4d90-8635-abcb52c497d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7b42df-7198-4e27-87c6-20860164feb7",
        "cursor": {
          "ref": "2efc8bd5-98f8-4639-b0ef-c13350e45a99",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3caf112d-713c-4493-bb4e-bf65a19484be"
        },
        "item": {
          "id": "ad7b42df-7198-4e27-87c6-20860164feb7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ecb8e051-3af7-4d35-a508-13bd1d986bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06733e8b-961d-4f6d-984b-969c0ad9b3d8",
        "cursor": {
          "ref": "c0923918-161c-4945-a771-e9a4b1ef549b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5e5977b5-a250-4b00-b6ff-bdd741c0b19a"
        },
        "item": {
          "id": "06733e8b-961d-4f6d-984b-969c0ad9b3d8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0dd52a4b-c5e5-4351-8706-2981efc5b3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ea7bcd-59de-4531-92c4-28c34b9574f4",
        "cursor": {
          "ref": "82146364-1670-46e1-9410-2ea012dd4d28",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "699f7bce-c3c0-4689-b467-d71a4a41ebc6"
        },
        "item": {
          "id": "70ea7bcd-59de-4531-92c4-28c34b9574f4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cfc2e3e8-40ae-4713-825e-2c07ac2a3d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6592cafa-14b3-4746-a978-89f3c5c7a7d9",
        "cursor": {
          "ref": "8c5c8c32-4e89-4be0-a5ff-c39e46a48351",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "978617c9-c832-4ea4-a851-d50889aafc73"
        },
        "item": {
          "id": "6592cafa-14b3-4746-a978-89f3c5c7a7d9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "47d2b25d-40ce-41f3-828a-ef481dd1b019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b521fd98-4c98-4b2b-ba3a-330c8432e7ba",
        "cursor": {
          "ref": "7b09c485-5332-40e2-a80e-97f5ab6e9be7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7b28f52e-1c91-4a85-a17e-c1d63435cb2d"
        },
        "item": {
          "id": "b521fd98-4c98-4b2b-ba3a-330c8432e7ba",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2098058a-8551-455c-a985-ac782de61851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11eebed-352b-407a-92f7-222a8f05b83c",
        "cursor": {
          "ref": "4dd33e2a-75dd-430d-ab75-eca6db56b24c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "45678632-415d-463f-b944-675d89a98663"
        },
        "item": {
          "id": "c11eebed-352b-407a-92f7-222a8f05b83c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "92bcfa8b-62f2-4792-a81d-b5a7bdca089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b694dad0-e8f8-4a81-9ec1-c5b901847dd0",
        "cursor": {
          "ref": "b70cdde0-1d40-4820-985c-877cc47d65e6",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5483ddeb-048e-4941-aa27-f00fbfcd1a57"
        },
        "item": {
          "id": "b694dad0-e8f8-4a81-9ec1-c5b901847dd0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "402df3c2-d0a4-44bc-bfff-baea7fddbe30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45b3c6b-ee97-451a-8077-5c85784f7575",
        "cursor": {
          "ref": "7ca0d1ea-ffb7-4dfa-8f18-2711868e414c",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fed360b6-04c1-4440-9340-9529308ab4c1"
        },
        "item": {
          "id": "d45b3c6b-ee97-451a-8077-5c85784f7575",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f18c65d1-a37d-45f4-9e4b-a62ce790a789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941350f1-0d90-4c2e-aab9-40527f5839dc",
        "cursor": {
          "ref": "ecb6e7a6-bc30-4e7a-bd5e-85a739ed7769",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "14cc6ea1-0a79-4332-ae79-59f64bc38253"
        },
        "item": {
          "id": "941350f1-0d90-4c2e-aab9-40527f5839dc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6e3ac147-82ea-4f97-a8b5-f06dfa838052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec4aff8-b6c5-4a06-8432-8d9a4a690d53",
        "cursor": {
          "ref": "6cfe3a33-d4c4-4f83-8be6-3380d4f47c70",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "404844c8-a9f4-41dd-ac3f-41159b7f5e16"
        },
        "item": {
          "id": "7ec4aff8-b6c5-4a06-8432-8d9a4a690d53",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6ef2b4e5-0831-40e8-b89b-7653a9294701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f81527-fe49-4494-a74e-786e8ff1ffd6",
        "cursor": {
          "ref": "e423cddb-e052-4253-ae1b-840d747eace1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "156efb62-796b-4431-8cdb-28776a3852c0"
        },
        "item": {
          "id": "f5f81527-fe49-4494-a74e-786e8ff1ffd6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5edd8b03-f407-447f-a664-889095cfdeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8e5d3d-72d4-48f2-8fb4-32dfaf9dbc92",
        "cursor": {
          "ref": "dc807d38-b2e7-448b-a7b3-0423003711bb",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "95518fd8-1cef-4416-b0ec-74fec1b6f34b"
        },
        "item": {
          "id": "cb8e5d3d-72d4-48f2-8fb4-32dfaf9dbc92",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "046295ea-4b61-487e-8553-d8ac23e3b92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5588164-07d9-463a-936a-6b96aedb3948",
        "cursor": {
          "ref": "5a1ca9fb-f5c5-4a10-9875-1651bd8c70e5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c8b15172-0136-4f69-a985-e8e1d86144c0"
        },
        "item": {
          "id": "f5588164-07d9-463a-936a-6b96aedb3948",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "28f1985b-7dba-440f-9b4d-cbf7481bb94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b770fb-82a0-451d-b170-7bc455854eda",
        "cursor": {
          "ref": "5c225573-79ec-4ad0-acfe-6aeeeddc6fc7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "71e116a8-32f0-4e69-b546-f29c077867cb"
        },
        "item": {
          "id": "29b770fb-82a0-451d-b170-7bc455854eda",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "401cbe8b-12e9-407e-b037-aa929a7cff22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d14ae1-0dc9-41c6-99c9-665f010ee6ba",
        "cursor": {
          "ref": "c6046720-67eb-4516-a691-e1f03e3cbf11",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "715a4481-04ae-4e86-a8cb-cfd5e6154de9"
        },
        "item": {
          "id": "03d14ae1-0dc9-41c6-99c9-665f010ee6ba",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "076080af-7d51-4e1c-9ed2-d87c80e2428c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342370cd-7143-4592-b1f2-3259151a3dc4",
        "cursor": {
          "ref": "e1210873-2555-4a82-843f-0a88a3810429",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "34b25dfb-360b-42dd-b39f-0e3e0c3e183a"
        },
        "item": {
          "id": "342370cd-7143-4592-b1f2-3259151a3dc4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "15ffffcf-9ecf-4bed-8db6-23f511002b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d912bb23-7b2f-40ba-b8bd-48ef565efe4e",
        "cursor": {
          "ref": "86d338b9-5229-4a3b-9765-143fe3397870",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a4cf7121-dccb-4f09-85b9-7ca2f6f1c85c"
        },
        "item": {
          "id": "d912bb23-7b2f-40ba-b8bd-48ef565efe4e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ab7db503-2620-48cf-8fc4-3b888a5812f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d07c5-963a-4136-a14e-5ed1dd2d88b7",
        "cursor": {
          "ref": "5d33966f-c528-4387-a663-ea2d679f183f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d85a4295-9e75-4b9f-acf5-ee1bbb153139"
        },
        "item": {
          "id": "088d07c5-963a-4136-a14e-5ed1dd2d88b7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bbb10633-f307-4f7b-bac0-77f7cdc7b195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5758eca9-5fde-489b-80a2-0fa0ca923556",
        "cursor": {
          "ref": "50961f4d-e150-4128-8e66-7143b8dbd29e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e6338899-efcc-47f0-a28e-44f8b5d7db3e"
        },
        "item": {
          "id": "5758eca9-5fde-489b-80a2-0fa0ca923556",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8e26513d-e4df-4dd3-a6d0-56c3f552e884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee8fb37-467b-4d2d-bb74-c2a5f03b9441",
        "cursor": {
          "ref": "7acdaecb-a435-41bf-8278-9c880442560c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "dfc3419d-b2d4-4989-821b-1a52c6af4dca"
        },
        "item": {
          "id": "8ee8fb37-467b-4d2d-bb74-c2a5f03b9441",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "783ea0c0-7d2f-4b36-8216-e8c920fa5eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbcfff4-bc9a-42f1-8440-880f4199f39d",
        "cursor": {
          "ref": "4a1edaf4-b020-44cb-a603-129258b11658",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8b9d56ef-1e8c-4d27-977b-71a0e4e5d59f"
        },
        "item": {
          "id": "4bbcfff4-bc9a-42f1-8440-880f4199f39d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "012cd97e-0f9c-437a-a243-cc6c48f074bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f575179-c658-47a6-91e0-86f21dd6070e",
        "cursor": {
          "ref": "69dc3143-87af-499a-a9bb-c60d25ac5c8e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8d3097e7-9aa4-4cbf-9775-d36c4aac6b4e"
        },
        "item": {
          "id": "9f575179-c658-47a6-91e0-86f21dd6070e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1e424148-8d78-4217-854c-75106a6304b9",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf4101e-ef32-4d2e-be65-26c98382ecf9",
        "cursor": {
          "ref": "d64d78fd-66e9-4b8e-b450-0784df1e3304",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "944ca39d-ba1d-4d65-897d-0e5ec080ba2b"
        },
        "item": {
          "id": "0bf4101e-ef32-4d2e-be65-26c98382ecf9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4d24cab7-f9c7-46df-a939-fd40af512b46",
          "status": "OK",
          "code": 200,
          "responseTime": 1395,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a4e790-fc08-45cc-88c9-b9857f330ad5",
        "cursor": {
          "ref": "7ce3063d-9190-4f5a-9ad5-97f1b19dc7cd",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "07e0d606-45c4-45b6-91cc-086335b1734d"
        },
        "item": {
          "id": "90a4e790-fc08-45cc-88c9-b9857f330ad5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c8cf0989-0887-4aad-9893-f764d769325b",
          "status": "OK",
          "code": 200,
          "responseTime": 1438,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682628c-34bf-43d0-a601-cef1faa5f01b",
        "cursor": {
          "ref": "5b47490f-db5e-44fe-9b34-3a48e08a4a23",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2f908ab4-78e2-4698-887e-484d8c0aaf61"
        },
        "item": {
          "id": "6682628c-34bf-43d0-a601-cef1faa5f01b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aeb23a4e-041d-4c30-a95b-2dfab2e76a70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682628c-34bf-43d0-a601-cef1faa5f01b",
        "cursor": {
          "ref": "5b47490f-db5e-44fe-9b34-3a48e08a4a23",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2f908ab4-78e2-4698-887e-484d8c0aaf61"
        },
        "item": {
          "id": "6682628c-34bf-43d0-a601-cef1faa5f01b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aeb23a4e-041d-4c30-a95b-2dfab2e76a70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d269269-6cfb-41b6-be69-a2047e80eae5",
        "cursor": {
          "ref": "d741a59c-dacb-46d5-859e-432494ac7c51",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4084a610-3488-4c95-a089-500f2bf3560b"
        },
        "item": {
          "id": "9d269269-6cfb-41b6-be69-a2047e80eae5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3e6ffce4-5b00-4d00-bb0a-8c0ff50cabbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de941ea-1018-4bea-a6d3-ef31061aacf3",
        "cursor": {
          "ref": "0aeb9128-92bc-4db9-a27b-6d0555d12dbb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f3fbd28c-444f-46da-8bbf-8b8566a9aaf5"
        },
        "item": {
          "id": "9de941ea-1018-4bea-a6d3-ef31061aacf3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a12deb62-5861-4928-8ff8-cdb85f217b49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}